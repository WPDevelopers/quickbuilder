import React, {
	useState,
	useEffect,
	createElement,
	useContext,
	createContext,
	useRef,
	useReducer,
	useCallback,
	useLayoutEffect,
	Fragment,
	forwardRef,
	Component,
	useMemo,
} from "react";
import {
	isPlainObject as isPlainObject$1,
	isString as isString$1,
	map,
	get as get$1,
	has as has$2,
	omit,
	flowRight,
	mapValues,
	without,
	isObject as isObject$1,
	defaults,
	pick,
	castArray,
} from "lodash";
import { toPath, clone } from "lodash-es";
import momentLib from "moment";
import {
	Dropdown,
	Button as Button$2,
	DateTimePicker,
	Icon,
	RangeControl,
	ColorPicker as ColorPicker$2,
} from "@wordpress/components";
import { Editor as Editor$2 } from "react-draft-wysiwyg";
import require$$1$1, {
	EditorState,
	ContentState,
	convertToRaw,
	Modifier,
} from "draft-js";
import { createPortal } from "react-dom";

var commonjsGlobal =
	typeof globalThis !== "undefined"
		? globalThis
		: typeof window !== "undefined"
		? window
		: typeof global !== "undefined"
		? global
		: typeof self !== "undefined"
		? self
		: {};

function getDefaultExportFromCjs(x) {
	return x &&
		x.__esModule &&
		Object.prototype.hasOwnProperty.call(x, "default")
		? x["default"]
		: x;
}

var classnames$1 = { exports: {} };

/*!
  Copyright (c) 2018 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/

(function (module) {
	/* global define */

	(function () {
		var hasOwn = {}.hasOwnProperty;

		function classNames() {
			var classes = [];

			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i];
				if (!arg) continue;

				var argType = typeof arg;

				if (argType === "string" || argType === "number") {
					classes.push(arg);
				} else if (Array.isArray(arg)) {
					if (arg.length) {
						var inner = classNames.apply(null, arg);
						if (inner) {
							classes.push(inner);
						}
					}
				} else if (argType === "object") {
					if (arg.toString === Object.prototype.toString) {
						for (var key in arg) {
							if (hasOwn.call(arg, key) && arg[key]) {
								classes.push(key);
							}
						}
					} else {
						classes.push(arg.toString());
					}
				}
			}

			return classes.join(" ");
		}

		if (module.exports) {
			classNames.default = classNames;
			module.exports = classNames;
		} else {
			window.classNames = classNames;
		}
	})();
})(classnames$1);

var classNames$1 = classnames$1.exports;

function combineReducers(reducers) {
	var keys = Object.keys(reducers),
		getNextState;

	getNextState = (function () {
		var fn, i, key;

		fn = "return {";
		for (i = 0; i < keys.length; i++) {
			// Rely on Quoted escaping of JSON.stringify with guarantee that
			// each member of Object.keys is a string.
			//
			// "If Type(value) is String, then return the result of calling the
			// abstract operation Quote with argument value. [...] The abstract
			// operation Quote(value) wraps a String value in double quotes and
			// escapes characters within it."
			//
			// https://www.ecma-international.org/ecma-262/5.1/#sec-15.12.3
			key = JSON.stringify(keys[i]);

			fn += key + ":r[" + key + "](s[" + key + "],a),";
		}
		fn += "}";

		return new Function("r,s,a", fn);
	})();

	return function combinedReducer(state, action) {
		var nextState, i, key;

		// Assumed changed if initial state.
		if (state === undefined) {
			return getNextState(reducers, {}, action);
		}

		nextState = getNextState(reducers, state, action);

		// Determine whether state has changed.
		i = keys.length;
		while (i--) {
			key = keys[i];
			if (state[key] !== nextState[key]) {
				// Return immediately if a changed value is encountered.
				return nextState;
			}
		}

		return state;
	};
}

var turboCombineReducers = combineReducers;

function _arrayWithHoles(arr) {
	if (Array.isArray(arr)) return arr;
}

function _iterableToArrayLimit(arr, i) {
	var _i =
		arr == null
			? null
			: (typeof Symbol !== "undefined" && arr[Symbol.iterator]) ||
			  arr["@@iterator"];

	if (_i == null) return;
	var _arr = [];
	var _n = true;
	var _d = false;

	var _s, _e;

	try {
		for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
			_arr.push(_s.value);

			if (i && _arr.length === i) break;
		}
	} catch (err) {
		_d = true;
		_e = err;
	} finally {
		try {
			if (!_n && _i["return"] != null) _i["return"]();
		} finally {
			if (_d) throw _e;
		}
	}

	return _arr;
}

function _arrayLikeToArray$1(arr, len) {
	if (len == null || len > arr.length) len = arr.length;

	for (var i = 0, arr2 = new Array(len); i < len; i++) {
		arr2[i] = arr[i];
	}

	return arr2;
}

function _unsupportedIterableToArray$1(o, minLen) {
	if (!o) return;
	if (typeof o === "string") return _arrayLikeToArray$1(o, minLen);
	var n = Object.prototype.toString.call(o).slice(8, -1);
	if (n === "Object" && o.constructor) n = o.constructor.name;
	if (n === "Map" || n === "Set") return Array.from(o);
	if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
		return _arrayLikeToArray$1(o, minLen);
}

function _nonIterableRest() {
	throw new TypeError(
		"Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."
	);
}

function _slicedToArray(arr, i) {
	return (
		_arrayWithHoles(arr) ||
		_iterableToArrayLimit(arr, i) ||
		_unsupportedIterableToArray$1(arr, i) ||
		_nonIterableRest()
	);
}

function _defineProperty$1(obj, key, value) {
	if (key in obj) {
		Object.defineProperty(obj, key, {
			value: value,
			enumerable: true,
			configurable: true,
			writable: true,
		});
	} else {
		obj[key] = value;
	}

	return obj;
}

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
	try {
		var info = gen[key](arg);
		var value = info.value;
	} catch (error) {
		reject(error);
		return;
	}

	if (info.done) {
		resolve(value);
	} else {
		Promise.resolve(value).then(_next, _throw);
	}
}

function _asyncToGenerator(fn) {
	return function () {
		var self = this,
			args = arguments;
		return new Promise(function (resolve, reject) {
			var gen = fn.apply(self, args);

			function _next(value) {
				asyncGeneratorStep(
					gen,
					resolve,
					reject,
					_next,
					_throw,
					"next",
					value
				);
			}

			function _throw(err) {
				asyncGeneratorStep(
					gen,
					resolve,
					reject,
					_next,
					_throw,
					"throw",
					err
				);
			}

			_next(undefined);
		});
	};
}

var runtime = { exports: {} };

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

(function (module) {
	var runtime = (function (exports) {
		var Op = Object.prototype;
		var hasOwn = Op.hasOwnProperty;
		var undefined$1; // More compressible than void 0.
		var $Symbol = typeof Symbol === "function" ? Symbol : {};
		var iteratorSymbol = $Symbol.iterator || "@@iterator";
		var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
		var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

		function define(obj, key, value) {
			Object.defineProperty(obj, key, {
				value: value,
				enumerable: true,
				configurable: true,
				writable: true,
			});
			return obj[key];
		}
		try {
			// IE 8 has a broken Object.defineProperty that only works on DOM objects.
			define({}, "");
		} catch (err) {
			define = function (obj, key, value) {
				return (obj[key] = value);
			};
		}

		function wrap(innerFn, outerFn, self, tryLocsList) {
			// If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
			var protoGenerator =
				outerFn && outerFn.prototype instanceof Generator
					? outerFn
					: Generator;
			var generator = Object.create(protoGenerator.prototype);
			var context = new Context(tryLocsList || []);

			// The ._invoke method unifies the implementations of the .next,
			// .throw, and .return methods.
			generator._invoke = makeInvokeMethod(innerFn, self, context);

			return generator;
		}
		exports.wrap = wrap;

		// Try/catch helper to minimize deoptimizations. Returns a completion
		// record like context.tryEntries[i].completion. This interface could
		// have been (and was previously) designed to take a closure to be
		// invoked without arguments, but in all the cases we care about we
		// already have an existing method we want to call, so there's no need
		// to create a new function object. We can even get away with assuming
		// the method takes exactly one argument, since that happens to be true
		// in every case, so we don't have to touch the arguments object. The
		// only additional allocation required is the completion record, which
		// has a stable shape and so hopefully should be cheap to allocate.
		function tryCatch(fn, obj, arg) {
			try {
				return { type: "normal", arg: fn.call(obj, arg) };
			} catch (err) {
				return { type: "throw", arg: err };
			}
		}

		var GenStateSuspendedStart = "suspendedStart";
		var GenStateSuspendedYield = "suspendedYield";
		var GenStateExecuting = "executing";
		var GenStateCompleted = "completed";

		// Returning this object from the innerFn has the same effect as
		// breaking out of the dispatch switch statement.
		var ContinueSentinel = {};

		// Dummy constructor functions that we use as the .constructor and
		// .constructor.prototype properties for functions that return Generator
		// objects. For full spec compliance, you may wish to configure your
		// minifier not to mangle the names of these two functions.
		function Generator() {}
		function GeneratorFunction() {}
		function GeneratorFunctionPrototype() {}

		// This is a polyfill for %IteratorPrototype% for environments that
		// don't natively support it.
		var IteratorPrototype = {};
		define(IteratorPrototype, iteratorSymbol, function () {
			return this;
		});

		var getProto = Object.getPrototypeOf;
		var NativeIteratorPrototype =
			getProto && getProto(getProto(values([])));
		if (
			NativeIteratorPrototype &&
			NativeIteratorPrototype !== Op &&
			hasOwn.call(NativeIteratorPrototype, iteratorSymbol)
		) {
			// This environment has a native %IteratorPrototype%; use it instead
			// of the polyfill.
			IteratorPrototype = NativeIteratorPrototype;
		}

		var Gp =
			(GeneratorFunctionPrototype.prototype =
			Generator.prototype =
				Object.create(IteratorPrototype));
		GeneratorFunction.prototype = GeneratorFunctionPrototype;
		define(Gp, "constructor", GeneratorFunctionPrototype);
		define(GeneratorFunctionPrototype, "constructor", GeneratorFunction);
		GeneratorFunction.displayName = define(
			GeneratorFunctionPrototype,
			toStringTagSymbol,
			"GeneratorFunction"
		);

		// Helper for defining the .next, .throw, and .return methods of the
		// Iterator interface in terms of a single ._invoke method.
		function defineIteratorMethods(prototype) {
			["next", "throw", "return"].forEach(function (method) {
				define(prototype, method, function (arg) {
					return this._invoke(method, arg);
				});
			});
		}

		exports.isGeneratorFunction = function (genFun) {
			var ctor = typeof genFun === "function" && genFun.constructor;
			return ctor
				? ctor === GeneratorFunction ||
						// For the native GeneratorFunction constructor, the best we can
						// do is to check its .name property.
						(ctor.displayName || ctor.name) === "GeneratorFunction"
				: false;
		};

		exports.mark = function (genFun) {
			if (Object.setPrototypeOf) {
				Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
			} else {
				genFun.__proto__ = GeneratorFunctionPrototype;
				define(genFun, toStringTagSymbol, "GeneratorFunction");
			}
			genFun.prototype = Object.create(Gp);
			return genFun;
		};

		// Within the body of any async function, `await x` is transformed to
		// `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
		// `hasOwn.call(value, "__await")` to determine if the yielded value is
		// meant to be awaited.
		exports.awrap = function (arg) {
			return { __await: arg };
		};

		function AsyncIterator(generator, PromiseImpl) {
			function invoke(method, arg, resolve, reject) {
				var record = tryCatch(generator[method], generator, arg);
				if (record.type === "throw") {
					reject(record.arg);
				} else {
					var result = record.arg;
					var value = result.value;
					if (
						value &&
						typeof value === "object" &&
						hasOwn.call(value, "__await")
					) {
						return PromiseImpl.resolve(value.__await).then(
							function (value) {
								invoke("next", value, resolve, reject);
							},
							function (err) {
								invoke("throw", err, resolve, reject);
							}
						);
					}

					return PromiseImpl.resolve(value).then(
						function (unwrapped) {
							// When a yielded Promise is resolved, its final value becomes
							// the .value of the Promise<{value,done}> result for the
							// current iteration.
							result.value = unwrapped;
							resolve(result);
						},
						function (error) {
							// If a rejected Promise was yielded, throw the rejection back
							// into the async generator function so it can be handled there.
							return invoke("throw", error, resolve, reject);
						}
					);
				}
			}

			var previousPromise;

			function enqueue(method, arg) {
				function callInvokeWithMethodAndArg() {
					return new PromiseImpl(function (resolve, reject) {
						invoke(method, arg, resolve, reject);
					});
				}

				return (previousPromise =
					// If enqueue has been called before, then we want to wait until
					// all previous Promises have been resolved before calling invoke,
					// so that results are always delivered in the correct order. If
					// enqueue has not been called before, then it is important to
					// call invoke immediately, without waiting on a callback to fire,
					// so that the async generator function has the opportunity to do
					// any necessary setup in a predictable way. This predictability
					// is why the Promise constructor synchronously invokes its
					// executor callback, and why async functions synchronously
					// execute code before the first await. Since we implement simple
					// async functions in terms of async generators, it is especially
					// important to get this right, even though it requires care.
					previousPromise
						? previousPromise.then(
								callInvokeWithMethodAndArg,
								// Avoid propagating failures to Promises returned by later
								// invocations of the iterator.
								callInvokeWithMethodAndArg
						  )
						: callInvokeWithMethodAndArg());
			}

			// Define the unified helper method that is used to implement .next,
			// .throw, and .return (see defineIteratorMethods).
			this._invoke = enqueue;
		}

		defineIteratorMethods(AsyncIterator.prototype);
		define(AsyncIterator.prototype, asyncIteratorSymbol, function () {
			return this;
		});
		exports.AsyncIterator = AsyncIterator;

		// Note that simple async functions are implemented on top of
		// AsyncIterator objects; they just return a Promise for the value of
		// the final result produced by the iterator.
		exports.async = function (
			innerFn,
			outerFn,
			self,
			tryLocsList,
			PromiseImpl
		) {
			if (PromiseImpl === void 0) PromiseImpl = Promise;

			var iter = new AsyncIterator(
				wrap(innerFn, outerFn, self, tryLocsList),
				PromiseImpl
			);

			return exports.isGeneratorFunction(outerFn)
				? iter // If outerFn is a generator, return the full iterator.
				: iter.next().then(function (result) {
						return result.done ? result.value : iter.next();
				  });
		};

		function makeInvokeMethod(innerFn, self, context) {
			var state = GenStateSuspendedStart;

			return function invoke(method, arg) {
				if (state === GenStateExecuting) {
					throw new Error("Generator is already running");
				}

				if (state === GenStateCompleted) {
					if (method === "throw") {
						throw arg;
					}

					// Be forgiving, per 25.3.3.3.3 of the spec:
					// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
					return doneResult();
				}

				context.method = method;
				context.arg = arg;

				while (true) {
					var delegate = context.delegate;
					if (delegate) {
						var delegateResult = maybeInvokeDelegate(
							delegate,
							context
						);
						if (delegateResult) {
							if (delegateResult === ContinueSentinel) continue;
							return delegateResult;
						}
					}

					if (context.method === "next") {
						// Setting context._sent for legacy support of Babel's
						// function.sent implementation.
						context.sent = context._sent = context.arg;
					} else if (context.method === "throw") {
						if (state === GenStateSuspendedStart) {
							state = GenStateCompleted;
							throw context.arg;
						}

						context.dispatchException(context.arg);
					} else if (context.method === "return") {
						context.abrupt("return", context.arg);
					}

					state = GenStateExecuting;

					var record = tryCatch(innerFn, self, context);
					if (record.type === "normal") {
						// If an exception is thrown from innerFn, we leave state ===
						// GenStateExecuting and loop back for another invocation.
						state = context.done
							? GenStateCompleted
							: GenStateSuspendedYield;

						if (record.arg === ContinueSentinel) {
							continue;
						}

						return {
							value: record.arg,
							done: context.done,
						};
					} else if (record.type === "throw") {
						state = GenStateCompleted;
						// Dispatch the exception by looping back around to the
						// context.dispatchException(context.arg) call above.
						context.method = "throw";
						context.arg = record.arg;
					}
				}
			};
		}

		// Call delegate.iterator[context.method](context.arg) and handle the
		// result, either by returning a { value, done } result from the
		// delegate iterator, or by modifying context.method and context.arg,
		// setting context.delegate to null, and returning the ContinueSentinel.
		function maybeInvokeDelegate(delegate, context) {
			var method = delegate.iterator[context.method];
			if (method === undefined$1) {
				// A .throw or .return when the delegate iterator has no .throw
				// method always terminates the yield* loop.
				context.delegate = null;

				if (context.method === "throw") {
					// Note: ["return"] must be used for ES3 parsing compatibility.
					if (delegate.iterator["return"]) {
						// If the delegate iterator has a return method, give it a
						// chance to clean up.
						context.method = "return";
						context.arg = undefined$1;
						maybeInvokeDelegate(delegate, context);

						if (context.method === "throw") {
							// If maybeInvokeDelegate(context) changed context.method from
							// "return" to "throw", let that override the TypeError below.
							return ContinueSentinel;
						}
					}

					context.method = "throw";
					context.arg = new TypeError(
						"The iterator does not provide a 'throw' method"
					);
				}

				return ContinueSentinel;
			}

			var record = tryCatch(method, delegate.iterator, context.arg);

			if (record.type === "throw") {
				context.method = "throw";
				context.arg = record.arg;
				context.delegate = null;
				return ContinueSentinel;
			}

			var info = record.arg;

			if (!info) {
				context.method = "throw";
				context.arg = new TypeError("iterator result is not an object");
				context.delegate = null;
				return ContinueSentinel;
			}

			if (info.done) {
				// Assign the result of the finished delegate to the temporary
				// variable specified by delegate.resultName (see delegateYield).
				context[delegate.resultName] = info.value;

				// Resume execution at the desired location (see delegateYield).
				context.next = delegate.nextLoc;

				// If context.method was "throw" but the delegate handled the
				// exception, let the outer generator proceed normally. If
				// context.method was "next", forget context.arg since it has been
				// "consumed" by the delegate iterator. If context.method was
				// "return", allow the original .return call to continue in the
				// outer generator.
				if (context.method !== "return") {
					context.method = "next";
					context.arg = undefined$1;
				}
			} else {
				// Re-yield the result returned by the delegate method.
				return info;
			}

			// The delegate iterator is finished, so forget it and continue with
			// the outer generator.
			context.delegate = null;
			return ContinueSentinel;
		}

		// Define Generator.prototype.{next,throw,return} in terms of the
		// unified ._invoke helper method.
		defineIteratorMethods(Gp);

		define(Gp, toStringTagSymbol, "Generator");

		// A Generator should always return itself as the iterator object when the
		// @@iterator function is called on it. Some browsers' implementations of the
		// iterator prototype chain incorrectly implement this, causing the Generator
		// object to not be returned from this call. This ensures that doesn't happen.
		// See https://github.com/facebook/regenerator/issues/274 for more details.
		define(Gp, iteratorSymbol, function () {
			return this;
		});

		define(Gp, "toString", function () {
			return "[object Generator]";
		});

		function pushTryEntry(locs) {
			var entry = { tryLoc: locs[0] };

			if (1 in locs) {
				entry.catchLoc = locs[1];
			}

			if (2 in locs) {
				entry.finallyLoc = locs[2];
				entry.afterLoc = locs[3];
			}

			this.tryEntries.push(entry);
		}

		function resetTryEntry(entry) {
			var record = entry.completion || {};
			record.type = "normal";
			delete record.arg;
			entry.completion = record;
		}

		function Context(tryLocsList) {
			// The root entry object (effectively a try statement without a catch
			// or a finally block) gives us a place to store values thrown from
			// locations where there is no enclosing try statement.
			this.tryEntries = [{ tryLoc: "root" }];
			tryLocsList.forEach(pushTryEntry, this);
			this.reset(true);
		}

		exports.keys = function (object) {
			var keys = [];
			for (var key in object) {
				keys.push(key);
			}
			keys.reverse();

			// Rather than returning an object with a next method, we keep
			// things simple and return the next function itself.
			return function next() {
				while (keys.length) {
					var key = keys.pop();
					if (key in object) {
						next.value = key;
						next.done = false;
						return next;
					}
				}

				// To avoid creating an additional object, we just hang the .value
				// and .done properties off the next function object itself. This
				// also ensures that the minifier will not anonymize the function.
				next.done = true;
				return next;
			};
		};

		function values(iterable) {
			if (iterable) {
				var iteratorMethod = iterable[iteratorSymbol];
				if (iteratorMethod) {
					return iteratorMethod.call(iterable);
				}

				if (typeof iterable.next === "function") {
					return iterable;
				}

				if (!isNaN(iterable.length)) {
					var i = -1,
						next = function next() {
							while (++i < iterable.length) {
								if (hasOwn.call(iterable, i)) {
									next.value = iterable[i];
									next.done = false;
									return next;
								}
							}

							next.value = undefined$1;
							next.done = true;

							return next;
						};

					return (next.next = next);
				}
			}

			// Return an iterator with no values.
			return { next: doneResult };
		}
		exports.values = values;

		function doneResult() {
			return { value: undefined$1, done: true };
		}

		Context.prototype = {
			constructor: Context,

			reset: function (skipTempReset) {
				this.prev = 0;
				this.next = 0;
				// Resetting context._sent for legacy support of Babel's
				// function.sent implementation.
				this.sent = this._sent = undefined$1;
				this.done = false;
				this.delegate = null;

				this.method = "next";
				this.arg = undefined$1;

				this.tryEntries.forEach(resetTryEntry);

				if (!skipTempReset) {
					for (var name in this) {
						// Not sure about the optimal order of these conditions:
						if (
							name.charAt(0) === "t" &&
							hasOwn.call(this, name) &&
							!isNaN(+name.slice(1))
						) {
							this[name] = undefined$1;
						}
					}
				}
			},

			stop: function () {
				this.done = true;

				var rootEntry = this.tryEntries[0];
				var rootRecord = rootEntry.completion;
				if (rootRecord.type === "throw") {
					throw rootRecord.arg;
				}

				return this.rval;
			},

			dispatchException: function (exception) {
				if (this.done) {
					throw exception;
				}

				var context = this;
				function handle(loc, caught) {
					record.type = "throw";
					record.arg = exception;
					context.next = loc;

					if (caught) {
						// If the dispatched exception was caught by a catch block,
						// then let that catch block handle the exception normally.
						context.method = "next";
						context.arg = undefined$1;
					}

					return !!caught;
				}

				for (var i = this.tryEntries.length - 1; i >= 0; --i) {
					var entry = this.tryEntries[i];
					var record = entry.completion;

					if (entry.tryLoc === "root") {
						// Exception thrown outside of any try block that could handle
						// it, so set the completion value of the entire function to
						// throw the exception.
						return handle("end");
					}

					if (entry.tryLoc <= this.prev) {
						var hasCatch = hasOwn.call(entry, "catchLoc");
						var hasFinally = hasOwn.call(entry, "finallyLoc");

						if (hasCatch && hasFinally) {
							if (this.prev < entry.catchLoc) {
								return handle(entry.catchLoc, true);
							} else if (this.prev < entry.finallyLoc) {
								return handle(entry.finallyLoc);
							}
						} else if (hasCatch) {
							if (this.prev < entry.catchLoc) {
								return handle(entry.catchLoc, true);
							}
						} else if (hasFinally) {
							if (this.prev < entry.finallyLoc) {
								return handle(entry.finallyLoc);
							}
						} else {
							throw new Error(
								"try statement without catch or finally"
							);
						}
					}
				}
			},

			abrupt: function (type, arg) {
				for (var i = this.tryEntries.length - 1; i >= 0; --i) {
					var entry = this.tryEntries[i];
					if (
						entry.tryLoc <= this.prev &&
						hasOwn.call(entry, "finallyLoc") &&
						this.prev < entry.finallyLoc
					) {
						var finallyEntry = entry;
						break;
					}
				}

				if (
					finallyEntry &&
					(type === "break" || type === "continue") &&
					finallyEntry.tryLoc <= arg &&
					arg <= finallyEntry.finallyLoc
				) {
					// Ignore the finally entry if control is not jumping to a
					// location outside the try/catch block.
					finallyEntry = null;
				}

				var record = finallyEntry ? finallyEntry.completion : {};
				record.type = type;
				record.arg = arg;

				if (finallyEntry) {
					this.method = "next";
					this.next = finallyEntry.finallyLoc;
					return ContinueSentinel;
				}

				return this.complete(record);
			},

			complete: function (record, afterLoc) {
				if (record.type === "throw") {
					throw record.arg;
				}

				if (record.type === "break" || record.type === "continue") {
					this.next = record.arg;
				} else if (record.type === "return") {
					this.rval = this.arg = record.arg;
					this.method = "return";
					this.next = "end";
				} else if (record.type === "normal" && afterLoc) {
					this.next = afterLoc;
				}

				return ContinueSentinel;
			},

			finish: function (finallyLoc) {
				for (var i = this.tryEntries.length - 1; i >= 0; --i) {
					var entry = this.tryEntries[i];
					if (entry.finallyLoc === finallyLoc) {
						this.complete(entry.completion, entry.afterLoc);
						resetTryEntry(entry);
						return ContinueSentinel;
					}
				}
			},

			catch: function (tryLoc) {
				for (var i = this.tryEntries.length - 1; i >= 0; --i) {
					var entry = this.tryEntries[i];
					if (entry.tryLoc === tryLoc) {
						var record = entry.completion;
						if (record.type === "throw") {
							var thrown = record.arg;
							resetTryEntry(entry);
						}
						return thrown;
					}
				}

				// The context.catch method must only be called with a location
				// argument that corresponds to a known catch block.
				throw new Error("illegal catch attempt");
			},

			delegateYield: function (iterable, resultName, nextLoc) {
				this.delegate = {
					iterator: values(iterable),
					resultName: resultName,
					nextLoc: nextLoc,
				};

				if (this.method === "next") {
					// Deliberately forget the last sent value so that we don't
					// accidentally pass it on to the delegate.
					this.arg = undefined$1;
				}

				return ContinueSentinel;
			},
		};

		// Regardless of whether this script is executing as a CommonJS module
		// or not, return the runtime object so that we can declare the variable
		// regeneratorRuntime in the outer scope, which allows this module to be
		// injected easily by `bin/regenerator --include-runtime script.js`.
		return exports;
	})(
		// If this script is executing as a CommonJS module, use module.exports
		// as the regeneratorRuntime namespace. Otherwise create a new empty
		// object. Either way, the resulting object will be used to initialize
		// the regeneratorRuntime variable at the top of this file.
		module.exports
	);

	try {
		regeneratorRuntime = runtime;
	} catch (accidentalStrictMode) {
		// This module should not be running in strict mode, so the above
		// assignment should always work unless something is misconfigured. Just
		// in case runtime.js accidentally runs in strict mode, in modern engines
		// we can explicitly access globalThis. In older engines we can escape
		// strict mode using a global Function call. This could conceivably fail
		// if a Content Security Policy forbids using Function, but in that case
		// the proper solution is to fix the accidental strict mode problem. If
		// you've misconfigured your bundler to force strict mode and applied a
		// CSP to forbid Function, and you're not willing to fix either of those
		// problems, please detail your unique predicament in a GitHub issue.
		if (typeof globalThis === "object") {
			globalThis.regeneratorRuntime = runtime;
		} else {
			Function("r", "regeneratorRuntime = r")(runtime);
		}
	}
})(runtime);

var regenerator = runtime.exports;

function ownKeys$g(object, enumerableOnly) {
	var keys = Object.keys(object);

	if (Object.getOwnPropertySymbols) {
		var symbols = Object.getOwnPropertySymbols(object);

		if (enumerableOnly) {
			symbols = symbols.filter(function (sym) {
				return Object.getOwnPropertyDescriptor(object, sym).enumerable;
			});
		}

		keys.push.apply(keys, symbols);
	}

	return keys;
}

function _objectSpread2$1(target) {
	for (var i = 1; i < arguments.length; i++) {
		var source = arguments[i] != null ? arguments[i] : {};

		if (i % 2) {
			ownKeys$g(Object(source), true).forEach(function (key) {
				_defineProperty$1(target, key, source[key]);
			});
		} else if (Object.getOwnPropertyDescriptors) {
			Object.defineProperties(
				target,
				Object.getOwnPropertyDescriptors(source)
			);
		} else {
			ownKeys$g(Object(source)).forEach(function (key) {
				Object.defineProperty(
					target,
					key,
					Object.getOwnPropertyDescriptor(source, key)
				);
			});
		}
	}

	return target;
}

/**
 * Adapted from React: https://github.com/facebook/react/blob/master/packages/shared/formatProdErrorMessage.js
 *
 * Do not require this module directly! Use normal throw error calls. These messages will be replaced with error codes
 * during build.
 * @param {number} code
 */
function formatProdErrorMessage(code) {
	return (
		"Minified Redux error #" +
		code +
		"; visit https://redux.js.org/Errors?code=" +
		code +
		" for the full message or " +
		"use the non-minified dev environment for full errors. "
	);
}

// Inlined version of the `symbol-observable` polyfill
var $$observable = (function () {
	return (
		(typeof Symbol === "function" && Symbol.observable) || "@@observable"
	);
})();

/**
 * These are private action types reserved by Redux.
 * For any unknown actions, you must return the current state.
 * If the current state is undefined, you must return the initial state.
 * Do not reference these action types directly in your code.
 */
var randomString = function randomString() {
	return Math.random().toString(36).substring(7).split("").join(".");
};

var ActionTypes = {
	INIT: "@@redux/INIT" + randomString(),
	REPLACE: "@@redux/REPLACE" + randomString(),
	PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {
		return "@@redux/PROBE_UNKNOWN_ACTION" + randomString();
	},
};

/**
 * @param {any} obj The object to inspect.
 * @returns {boolean} True if the argument appears to be a plain object.
 */
function isPlainObject(obj) {
	if (typeof obj !== "object" || obj === null) return false;
	var proto = obj;

	while (Object.getPrototypeOf(proto) !== null) {
		proto = Object.getPrototypeOf(proto);
	}

	return Object.getPrototypeOf(obj) === proto;
}

// Inlined / shortened version of `kindOf` from https://github.com/jonschlinkert/kind-of
function miniKindOf(val) {
	if (val === void 0) return "undefined";
	if (val === null) return "null";
	var type = typeof val;

	switch (type) {
		case "boolean":
		case "string":
		case "number":
		case "symbol":
		case "function": {
			return type;
		}
	}

	if (Array.isArray(val)) return "array";
	if (isDate(val)) return "date";
	if (isError(val)) return "error";
	var constructorName = ctorName(val);

	switch (constructorName) {
		case "Symbol":
		case "Promise":
		case "WeakMap":
		case "WeakSet":
		case "Map":
		case "Set":
			return constructorName;
	} // other

	return type.slice(8, -1).toLowerCase().replace(/\s/g, "");
}

function ctorName(val) {
	return typeof val.constructor === "function" ? val.constructor.name : null;
}

function isError(val) {
	return (
		val instanceof Error ||
		(typeof val.message === "string" &&
			val.constructor &&
			typeof val.constructor.stackTraceLimit === "number")
	);
}

function isDate(val) {
	if (val instanceof Date) return true;
	return (
		typeof val.toDateString === "function" &&
		typeof val.getDate === "function" &&
		typeof val.setDate === "function"
	);
}

function kindOf(val) {
	var typeOfVal = typeof val;

	if (process.env.NODE_ENV !== "production") {
		typeOfVal = miniKindOf(val);
	}

	return typeOfVal;
}

/**
 * Creates a Redux store that holds the state tree.
 * The only way to change the data in the store is to call `dispatch()` on it.
 *
 * There should only be a single store in your app. To specify how different
 * parts of the state tree respond to actions, you may combine several reducers
 * into a single reducer function by using `combineReducers`.
 *
 * @param {Function} reducer A function that returns the next state tree, given
 * the current state tree and the action to handle.
 *
 * @param {any} [preloadedState] The initial state. You may optionally specify it
 * to hydrate the state from the server in universal apps, or to restore a
 * previously serialized user session.
 * If you use `combineReducers` to produce the root reducer function, this must be
 * an object with the same shape as `combineReducers` keys.
 *
 * @param {Function} [enhancer] The store enhancer. You may optionally specify it
 * to enhance the store with third-party capabilities such as middleware,
 * time travel, persistence, etc. The only store enhancer that ships with Redux
 * is `applyMiddleware()`.
 *
 * @returns {Store} A Redux store that lets you read the state, dispatch actions
 * and subscribe to changes.
 */

function createStore(reducer, preloadedState, enhancer) {
	var _ref2;

	if (
		(typeof preloadedState === "function" &&
			typeof enhancer === "function") ||
		(typeof enhancer === "function" && typeof arguments[3] === "function")
	) {
		throw new Error(
			process.env.NODE_ENV === "production"
				? formatProdErrorMessage(0)
				: "It looks like you are passing several store enhancers to " +
				  "createStore(). This is not supported. Instead, compose them " +
				  "together to a single function. See https://redux.js.org/tutorials/fundamentals/part-4-store#creating-a-store-with-enhancers for an example."
		);
	}

	if (
		typeof preloadedState === "function" &&
		typeof enhancer === "undefined"
	) {
		enhancer = preloadedState;
		preloadedState = undefined;
	}

	if (typeof enhancer !== "undefined") {
		if (typeof enhancer !== "function") {
			throw new Error(
				process.env.NODE_ENV === "production"
					? formatProdErrorMessage(1)
					: "Expected the enhancer to be a function. Instead, received: '" +
					  kindOf(enhancer) +
					  "'"
			);
		}

		return enhancer(createStore)(reducer, preloadedState);
	}

	if (typeof reducer !== "function") {
		throw new Error(
			process.env.NODE_ENV === "production"
				? formatProdErrorMessage(2)
				: "Expected the root reducer to be a function. Instead, received: '" +
				  kindOf(reducer) +
				  "'"
		);
	}

	var currentReducer = reducer;
	var currentState = preloadedState;
	var currentListeners = [];
	var nextListeners = currentListeners;
	var isDispatching = false;
	/**
	 * This makes a shallow copy of currentListeners so we can use
	 * nextListeners as a temporary list while dispatching.
	 *
	 * This prevents any bugs around consumers calling
	 * subscribe/unsubscribe in the middle of a dispatch.
	 */

	function ensureCanMutateNextListeners() {
		if (nextListeners === currentListeners) {
			nextListeners = currentListeners.slice();
		}
	}
	/**
	 * Reads the state tree managed by the store.
	 *
	 * @returns {any} The current state tree of your application.
	 */

	function getState() {
		if (isDispatching) {
			throw new Error(
				process.env.NODE_ENV === "production"
					? formatProdErrorMessage(3)
					: "You may not call store.getState() while the reducer is executing. " +
					  "The reducer has already received the state as an argument. " +
					  "Pass it down from the top reducer instead of reading it from the store."
			);
		}

		return currentState;
	}
	/**
	 * Adds a change listener. It will be called any time an action is dispatched,
	 * and some part of the state tree may potentially have changed. You may then
	 * call `getState()` to read the current state tree inside the callback.
	 *
	 * You may call `dispatch()` from a change listener, with the following
	 * caveats:
	 *
	 * 1. The subscriptions are snapshotted just before every `dispatch()` call.
	 * If you subscribe or unsubscribe while the listeners are being invoked, this
	 * will not have any effect on the `dispatch()` that is currently in progress.
	 * However, the next `dispatch()` call, whether nested or not, will use a more
	 * recent snapshot of the subscription list.
	 *
	 * 2. The listener should not expect to see all state changes, as the state
	 * might have been updated multiple times during a nested `dispatch()` before
	 * the listener is called. It is, however, guaranteed that all subscribers
	 * registered before the `dispatch()` started will be called with the latest
	 * state by the time it exits.
	 *
	 * @param {Function} listener A callback to be invoked on every dispatch.
	 * @returns {Function} A function to remove this change listener.
	 */

	function subscribe(listener) {
		if (typeof listener !== "function") {
			throw new Error(
				process.env.NODE_ENV === "production"
					? formatProdErrorMessage(4)
					: "Expected the listener to be a function. Instead, received: '" +
					  kindOf(listener) +
					  "'"
			);
		}

		if (isDispatching) {
			throw new Error(
				process.env.NODE_ENV === "production"
					? formatProdErrorMessage(5)
					: "You may not call store.subscribe() while the reducer is executing. " +
					  "If you would like to be notified after the store has been updated, subscribe from a " +
					  "component and invoke store.getState() in the callback to access the latest state. " +
					  "See https://redux.js.org/api/store#subscribelistener for more details."
			);
		}

		var isSubscribed = true;
		ensureCanMutateNextListeners();
		nextListeners.push(listener);
		return function unsubscribe() {
			if (!isSubscribed) {
				return;
			}

			if (isDispatching) {
				throw new Error(
					process.env.NODE_ENV === "production"
						? formatProdErrorMessage(6)
						: "You may not unsubscribe from a store listener while the reducer is executing. " +
						  "See https://redux.js.org/api/store#subscribelistener for more details."
				);
			}

			isSubscribed = false;
			ensureCanMutateNextListeners();
			var index = nextListeners.indexOf(listener);
			nextListeners.splice(index, 1);
			currentListeners = null;
		};
	}
	/**
	 * Dispatches an action. It is the only way to trigger a state change.
	 *
	 * The `reducer` function, used to create the store, will be called with the
	 * current state tree and the given `action`. Its return value will
	 * be considered the **next** state of the tree, and the change listeners
	 * will be notified.
	 *
	 * The base implementation only supports plain object actions. If you want to
	 * dispatch a Promise, an Observable, a thunk, or something else, you need to
	 * wrap your store creating function into the corresponding middleware. For
	 * example, see the documentation for the `redux-thunk` package. Even the
	 * middleware will eventually dispatch plain object actions using this method.
	 *
	 * @param {Object} action A plain object representing “what changed”. It is
	 * a good idea to keep actions serializable so you can record and replay user
	 * sessions, or use the time travelling `redux-devtools`. An action must have
	 * a `type` property which may not be `undefined`. It is a good idea to use
	 * string constants for action types.
	 *
	 * @returns {Object} For convenience, the same action object you dispatched.
	 *
	 * Note that, if you use a custom middleware, it may wrap `dispatch()` to
	 * return something else (for example, a Promise you can await).
	 */

	function dispatch(action) {
		if (!isPlainObject(action)) {
			throw new Error(
				process.env.NODE_ENV === "production"
					? formatProdErrorMessage(7)
					: "Actions must be plain objects. Instead, the actual type was: '" +
					  kindOf(action) +
					  "'. You may need to add middleware to your store setup to handle dispatching other values, such as 'redux-thunk' to handle dispatching functions. See https://redux.js.org/tutorials/fundamentals/part-4-store#middleware and https://redux.js.org/tutorials/fundamentals/part-6-async-logic#using-the-redux-thunk-middleware for examples."
			);
		}

		if (typeof action.type === "undefined") {
			throw new Error(
				process.env.NODE_ENV === "production"
					? formatProdErrorMessage(8)
					: 'Actions may not have an undefined "type" property. You may have misspelled an action type string constant.'
			);
		}

		if (isDispatching) {
			throw new Error(
				process.env.NODE_ENV === "production"
					? formatProdErrorMessage(9)
					: "Reducers may not dispatch actions."
			);
		}

		try {
			isDispatching = true;
			currentState = currentReducer(currentState, action);
		} finally {
			isDispatching = false;
		}

		var listeners = (currentListeners = nextListeners);

		for (var i = 0; i < listeners.length; i++) {
			var listener = listeners[i];
			listener();
		}

		return action;
	}
	/**
	 * Replaces the reducer currently used by the store to calculate the state.
	 *
	 * You might need this if your app implements code splitting and you want to
	 * load some of the reducers dynamically. You might also need this if you
	 * implement a hot reloading mechanism for Redux.
	 *
	 * @param {Function} nextReducer The reducer for the store to use instead.
	 * @returns {void}
	 */

	function replaceReducer(nextReducer) {
		if (typeof nextReducer !== "function") {
			throw new Error(
				process.env.NODE_ENV === "production"
					? formatProdErrorMessage(10)
					: "Expected the nextReducer to be a function. Instead, received: '" +
					  kindOf(nextReducer)
			);
		}

		currentReducer = nextReducer; // This action has a similiar effect to ActionTypes.INIT.
		// Any reducers that existed in both the new and old rootReducer
		// will receive the previous state. This effectively populates
		// the new state tree with any relevant data from the old one.

		dispatch({
			type: ActionTypes.REPLACE,
		});
	}
	/**
	 * Interoperability point for observable/reactive libraries.
	 * @returns {observable} A minimal observable of state changes.
	 * For more information, see the observable proposal:
	 * https://github.com/tc39/proposal-observable
	 */

	function observable() {
		var _ref;

		var outerSubscribe = subscribe;
		return (
			(_ref = {
				/**
				 * The minimal observable subscription method.
				 * @param {Object} observer Any object that can be used as an observer.
				 * The observer object should have a `next` method.
				 * @returns {subscription} An object with an `unsubscribe` method that can
				 * be used to unsubscribe the observable from the store, and prevent further
				 * emission of values from the observable.
				 */
				subscribe: function subscribe(observer) {
					if (typeof observer !== "object" || observer === null) {
						throw new Error(
							process.env.NODE_ENV === "production"
								? formatProdErrorMessage(11)
								: "Expected the observer to be an object. Instead, received: '" +
								  kindOf(observer) +
								  "'"
						);
					}

					function observeState() {
						if (observer.next) {
							observer.next(getState());
						}
					}

					observeState();
					var unsubscribe = outerSubscribe(observeState);
					return {
						unsubscribe: unsubscribe,
					};
				},
			}),
			(_ref[$$observable] = function () {
				return this;
			}),
			_ref
		);
	} // When a store is created, an "INIT" action is dispatched so that every
	// reducer returns their initial state. This effectively populates
	// the initial state tree.

	dispatch({
		type: ActionTypes.INIT,
	});
	return (
		(_ref2 = {
			dispatch: dispatch,
			subscribe: subscribe,
			getState: getState,
			replaceReducer: replaceReducer,
		}),
		(_ref2[$$observable] = observable),
		_ref2
	);
}

/**
 * Prints a warning in the console if it exists.
 *
 * @param {String} message The warning message.
 * @returns {void}
 */
function warning(message) {
	/* eslint-disable no-console */
	if (typeof console !== "undefined" && typeof console.error === "function") {
		console.error(message);
	}
	/* eslint-enable no-console */

	try {
		// This error was thrown as a convenience so that if you enable
		// "break on all exceptions" in your console,
		// it would pause the execution at this line.
		throw new Error(message);
	} catch (e) {} // eslint-disable-line no-empty
}

/**
 * Composes single-argument functions from right to left. The rightmost
 * function can take multiple arguments as it provides the signature for
 * the resulting composite function.
 *
 * @param {...Function} funcs The functions to compose.
 * @returns {Function} A function obtained by composing the argument functions
 * from right to left. For example, compose(f, g, h) is identical to doing
 * (...args) => f(g(h(...args))).
 */
function compose() {
	for (
		var _len = arguments.length, funcs = new Array(_len), _key = 0;
		_key < _len;
		_key++
	) {
		funcs[_key] = arguments[_key];
	}

	if (funcs.length === 0) {
		return function (arg) {
			return arg;
		};
	}

	if (funcs.length === 1) {
		return funcs[0];
	}

	return funcs.reduce(function (a, b) {
		return function () {
			return a(b.apply(void 0, arguments));
		};
	});
}

/**
 * Creates a store enhancer that applies middleware to the dispatch method
 * of the Redux store. This is handy for a variety of tasks, such as expressing
 * asynchronous actions in a concise manner, or logging every action payload.
 *
 * See `redux-thunk` package as an example of the Redux middleware.
 *
 * Because middleware is potentially asynchronous, this should be the first
 * store enhancer in the composition chain.
 *
 * Note that each middleware will be given the `dispatch` and `getState` functions
 * as named arguments.
 *
 * @param {...Function} middlewares The middleware chain to be applied.
 * @returns {Function} A store enhancer applying the middleware.
 */

function applyMiddleware() {
	for (
		var _len = arguments.length, middlewares = new Array(_len), _key = 0;
		_key < _len;
		_key++
	) {
		middlewares[_key] = arguments[_key];
	}

	return function (createStore) {
		return function () {
			var store = createStore.apply(void 0, arguments);

			var _dispatch = function dispatch() {
				throw new Error(
					process.env.NODE_ENV === "production"
						? formatProdErrorMessage(15)
						: "Dispatching while constructing your middleware is not allowed. " +
						  "Other middleware would not be applied to this dispatch."
				);
			};

			var middlewareAPI = {
				getState: store.getState,
				dispatch: function dispatch() {
					return _dispatch.apply(void 0, arguments);
				},
			};
			var chain = middlewares.map(function (middleware) {
				return middleware(middlewareAPI);
			});
			_dispatch = compose.apply(void 0, chain)(store.dispatch);
			return _objectSpread2$1(
				_objectSpread2$1({}, store),
				{},
				{
					dispatch: _dispatch,
				}
			);
		};
	};
}

/*
 * This is a dummy function to check if the function name has been altered by minification.
 * If the function has been minified and NODE_ENV !== 'production', warn the user.
 */

function isCrushed() {}

if (
	process.env.NODE_ENV !== "production" &&
	typeof isCrushed.name === "string" &&
	isCrushed.name !== "isCrushed"
) {
	warning(
		'You are currently using minified code outside of NODE_ENV === "production". ' +
			"This means that you are running a slower development build of Redux. " +
			"You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify " +
			"or setting mode to production in webpack (https://webpack.js.org/concepts/mode/) " +
			"to ensure you have the correct code for your production build."
	);
}

function _typeof$3(obj) {
	if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
		_typeof$3 = function (obj) {
			return typeof obj;
		};
	} else {
		_typeof$3 = function (obj) {
			return obj &&
				typeof Symbol === "function" &&
				obj.constructor === Symbol &&
				obj !== Symbol.prototype
				? "symbol"
				: typeof obj;
		};
	}

	return _typeof$3(obj);
}

function _classCallCheck$2(instance, Constructor) {
	if (!(instance instanceof Constructor)) {
		throw new TypeError("Cannot call a class as a function");
	}
}

function _defineProperties$1(target, props) {
	for (var i = 0; i < props.length; i++) {
		var descriptor = props[i];
		descriptor.enumerable = descriptor.enumerable || false;
		descriptor.configurable = true;
		if ("value" in descriptor) descriptor.writable = true;
		Object.defineProperty(target, descriptor.key, descriptor);
	}
}

function _createClass$2(Constructor, protoProps, staticProps) {
	if (protoProps) _defineProperties$1(Constructor.prototype, protoProps);
	if (staticProps) _defineProperties$1(Constructor, staticProps);
	return Constructor;
}

/**
 * Given an instance of EquivalentKeyMap, returns its internal value pair tuple
 * for a key, if one exists. The tuple members consist of the last reference
 * value for the key (used in efficient subsequent lookups) and the value
 * assigned for the key at the leaf node.
 *
 * @param {EquivalentKeyMap} instance EquivalentKeyMap instance.
 * @param {*} key                     The key for which to return value pair.
 *
 * @return {?Array} Value pair, if exists.
 */
function getValuePair(instance, key) {
	var _map = instance._map,
		_arrayTreeMap = instance._arrayTreeMap,
		_objectTreeMap = instance._objectTreeMap; // Map keeps a reference to the last object-like key used to set the
	// value, which can be used to shortcut immediately to the value.

	if (_map.has(key)) {
		return _map.get(key);
	} // Sort keys to ensure stable retrieval from tree.

	var properties = Object.keys(key).sort(); // Tree by type to avoid conflicts on numeric object keys, empty value.

	var map = Array.isArray(key) ? _arrayTreeMap : _objectTreeMap;

	for (var i = 0; i < properties.length; i++) {
		var property = properties[i];
		map = map.get(property);

		if (map === undefined) {
			return;
		}

		var propertyValue = key[property];
		map = map.get(propertyValue);

		if (map === undefined) {
			return;
		}
	}

	var valuePair = map.get("_ekm_value");

	if (!valuePair) {
		return;
	} // If reached, it implies that an object-like key was set with another
	// reference, so delete the reference and replace with the current.

	_map.delete(valuePair[0]);

	valuePair[0] = key;
	map.set("_ekm_value", valuePair);

	_map.set(key, valuePair);

	return valuePair;
}
/**
 * Variant of a Map object which enables lookup by equivalent (deeply equal)
 * object and array keys.
 */

var EquivalentKeyMap =
	/*#__PURE__*/
	(function () {
		/**
		 * Constructs a new instance of EquivalentKeyMap.
		 *
		 * @param {Iterable.<*>} iterable Initial pair of key, value for map.
		 */
		function EquivalentKeyMap(iterable) {
			_classCallCheck$2(this, EquivalentKeyMap);

			this.clear();

			if (iterable instanceof EquivalentKeyMap) {
				// Map#forEach is only means of iterating with support for IE11.
				var iterablePairs = [];
				iterable.forEach(function (value, key) {
					iterablePairs.push([key, value]);
				});
				iterable = iterablePairs;
			}

			if (iterable != null) {
				for (var i = 0; i < iterable.length; i++) {
					this.set(iterable[i][0], iterable[i][1]);
				}
			}
		}
		/**
		 * Accessor property returning the number of elements.
		 *
		 * @return {number} Number of elements.
		 */

		_createClass$2(EquivalentKeyMap, [
			{
				key: "set",

				/**
				 * Add or update an element with a specified key and value.
				 *
				 * @param {*} key   The key of the element to add.
				 * @param {*} value The value of the element to add.
				 *
				 * @return {EquivalentKeyMap} Map instance.
				 */
				value: function set(key, value) {
					// Shortcut non-object-like to set on internal Map.
					if (key === null || _typeof$3(key) !== "object") {
						this._map.set(key, value);

						return this;
					} // Sort keys to ensure stable assignment into tree.

					var properties = Object.keys(key).sort();
					var valuePair = [key, value]; // Tree by type to avoid conflicts on numeric object keys, empty value.

					var map = Array.isArray(key)
						? this._arrayTreeMap
						: this._objectTreeMap;

					for (var i = 0; i < properties.length; i++) {
						var property = properties[i];

						if (!map.has(property)) {
							map.set(property, new EquivalentKeyMap());
						}

						map = map.get(property);
						var propertyValue = key[property];

						if (!map.has(propertyValue)) {
							map.set(propertyValue, new EquivalentKeyMap());
						}

						map = map.get(propertyValue);
					} // If an _ekm_value exists, there was already an equivalent key. Before
					// overriding, ensure that the old key reference is removed from map to
					// avoid memory leak of accumulating equivalent keys. This is, in a
					// sense, a poor man's WeakMap, while still enabling iterability.

					var previousValuePair = map.get("_ekm_value");

					if (previousValuePair) {
						this._map.delete(previousValuePair[0]);
					}

					map.set("_ekm_value", valuePair);

					this._map.set(key, valuePair);

					return this;
				},
				/**
				 * Returns a specified element.
				 *
				 * @param {*} key The key of the element to return.
				 *
				 * @return {?*} The element associated with the specified key or undefined
				 *              if the key can't be found.
				 */
			},
			{
				key: "get",
				value: function get(key) {
					// Shortcut non-object-like to get from internal Map.
					if (key === null || _typeof$3(key) !== "object") {
						return this._map.get(key);
					}

					var valuePair = getValuePair(this, key);

					if (valuePair) {
						return valuePair[1];
					}
				},
				/**
				 * Returns a boolean indicating whether an element with the specified key
				 * exists or not.
				 *
				 * @param {*} key The key of the element to test for presence.
				 *
				 * @return {boolean} Whether an element with the specified key exists.
				 */
			},
			{
				key: "has",
				value: function has(key) {
					if (key === null || _typeof$3(key) !== "object") {
						return this._map.has(key);
					} // Test on the _presence_ of the pair, not its value, as even undefined
					// can be a valid member value for a key.

					return getValuePair(this, key) !== undefined;
				},
				/**
				 * Removes the specified element.
				 *
				 * @param {*} key The key of the element to remove.
				 *
				 * @return {boolean} Returns true if an element existed and has been
				 *                   removed, or false if the element does not exist.
				 */
			},
			{
				key: "delete",
				value: function _delete(key) {
					if (!this.has(key)) {
						return false;
					} // This naive implementation will leave orphaned child trees. A better
					// implementation should traverse and remove orphans.

					this.set(key, undefined);
					return true;
				},
				/**
				 * Executes a provided function once per each key/value pair, in insertion
				 * order.
				 *
				 * @param {Function} callback Function to execute for each element.
				 * @param {*}        thisArg  Value to use as `this` when executing
				 *                            `callback`.
				 */
			},
			{
				key: "forEach",
				value: function forEach(callback) {
					var _this = this;

					var thisArg =
						arguments.length > 1 && arguments[1] !== undefined
							? arguments[1]
							: this;

					this._map.forEach(function (value, key) {
						// Unwrap value from object-like value pair.
						if (key !== null && _typeof$3(key) === "object") {
							value = value[1];
						}

						callback.call(thisArg, value, key, _this);
					});
				},
				/**
				 * Removes all elements.
				 */
			},
			{
				key: "clear",
				value: function clear() {
					this._map = new Map();
					this._arrayTreeMap = new Map();
					this._objectTreeMap = new Map();
				},
			},
			{
				key: "size",
				get: function get() {
					return this._map.size;
				},
			},
		]);

		return EquivalentKeyMap;
	})();

var equivalentKeyMap = EquivalentKeyMap;

/**
 * Returns true if the given object is a generator, or false otherwise.
 *
 * @see https://www.ecma-international.org/ecma-262/6.0/#sec-generator-objects
 *
 * @param {*} object Object to test.
 *
 * @return {boolean} Whether object is a generator.
 */
function isGenerator(object) {
	// Check that iterator (next) and iterable (Symbol.iterator) interfaces are satisfied.
	// These checks seem to be compatible with several generator helpers as well as the native implementation.
	return (
		!!object &&
		typeof object[Symbol.iterator] === "function" &&
		typeof object.next === "function"
	);
}

var dist$1 = {};

var helpers = {};

var keys$1 = {};

Object.defineProperty(keys$1, "__esModule", {
	value: true,
});
var keys = {
	all: Symbol("all"),
	error: Symbol("error"),
	fork: Symbol("fork"),
	join: Symbol("join"),
	race: Symbol("race"),
	call: Symbol("call"),
	cps: Symbol("cps"),
	subscribe: Symbol("subscribe"),
};

keys$1.default = keys;

Object.defineProperty(helpers, "__esModule", {
	value: true,
});
helpers.createChannel =
	helpers.subscribe =
	helpers.cps =
	helpers.apply =
	helpers.call =
	helpers.invoke =
	helpers.delay =
	helpers.race =
	helpers.join =
	helpers.fork =
	helpers.error =
	helpers.all =
		undefined;

var _keys$1 = keys$1;

var _keys2$1 = _interopRequireDefault$6(_keys$1);

function _interopRequireDefault$6(obj) {
	return obj && obj.__esModule ? obj : { default: obj };
}

helpers.all = function all(value) {
	return {
		type: _keys2$1.default.all,
		value: value,
	};
};

helpers.error = function error(err) {
	return {
		type: _keys2$1.default.error,
		error: err,
	};
};

helpers.fork = function fork(iterator) {
	for (
		var _len = arguments.length,
			args = Array(_len > 1 ? _len - 1 : 0),
			_key = 1;
		_key < _len;
		_key++
	) {
		args[_key - 1] = arguments[_key];
	}

	return {
		type: _keys2$1.default.fork,
		iterator: iterator,
		args: args,
	};
};

helpers.join = function join(task) {
	return {
		type: _keys2$1.default.join,
		task: task,
	};
};

helpers.race = function race(competitors) {
	return {
		type: _keys2$1.default.race,
		competitors: competitors,
	};
};

helpers.delay = function delay(timeout) {
	return new Promise(function (resolve) {
		setTimeout(function () {
			return resolve(true);
		}, timeout);
	});
};

helpers.invoke = function invoke(func) {
	for (
		var _len2 = arguments.length,
			args = Array(_len2 > 1 ? _len2 - 1 : 0),
			_key2 = 1;
		_key2 < _len2;
		_key2++
	) {
		args[_key2 - 1] = arguments[_key2];
	}

	return {
		type: _keys2$1.default.call,
		func: func,
		context: null,
		args: args,
	};
};

helpers.call = function call(func, context) {
	for (
		var _len3 = arguments.length,
			args = Array(_len3 > 2 ? _len3 - 2 : 0),
			_key3 = 2;
		_key3 < _len3;
		_key3++
	) {
		args[_key3 - 2] = arguments[_key3];
	}

	return {
		type: _keys2$1.default.call,
		func: func,
		context: context,
		args: args,
	};
};

helpers.apply = function apply(func, context, args) {
	return {
		type: _keys2$1.default.call,
		func: func,
		context: context,
		args: args,
	};
};

helpers.cps = function cps(func) {
	for (
		var _len4 = arguments.length,
			args = Array(_len4 > 1 ? _len4 - 1 : 0),
			_key4 = 1;
		_key4 < _len4;
		_key4++
	) {
		args[_key4 - 1] = arguments[_key4];
	}

	return {
		type: _keys2$1.default.cps,
		func: func,
		args: args,
	};
};

helpers.subscribe = function subscribe(channel) {
	return {
		type: _keys2$1.default.subscribe,
		channel: channel,
	};
};

helpers.createChannel = function createChannel(callback) {
	var listeners = [];
	var subscribe = function subscribe(l) {
		listeners.push(l);
		return function () {
			return listeners.splice(listeners.indexOf(l), 1);
		};
	};
	var next = function next(val) {
		return listeners.forEach(function (l) {
			return l(val);
		});
	};
	callback(next);

	return {
		subscribe: subscribe,
	};
};

var create$1 = {};

var builtin = {};

var is$1 = {};

Object.defineProperty(is$1, "__esModule", {
	value: true,
});

var _typeof$2 =
	typeof Symbol === "function" && typeof Symbol.iterator === "symbol"
		? function (obj) {
				return typeof obj;
		  }
		: function (obj) {
				return obj &&
					typeof Symbol === "function" &&
					obj.constructor === Symbol
					? "symbol"
					: typeof obj;
		  };

var _keys = keys$1;

var _keys2 = _interopRequireDefault$5(_keys);

function _interopRequireDefault$5(obj) {
	return obj && obj.__esModule ? obj : { default: obj };
}

var is = {
	obj: function obj(value) {
		return (
			(typeof value === "undefined" ? "undefined" : _typeof$2(value)) ===
				"object" && !!value
		);
	},
	all: function all(value) {
		return is.obj(value) && value.type === _keys2.default.all;
	},
	error: function error(value) {
		return is.obj(value) && value.type === _keys2.default.error;
	},
	array: Array.isArray,
	func: function func(value) {
		return typeof value === "function";
	},
	promise: function promise(value) {
		return value && is.func(value.then);
	},
	iterator: function iterator(value) {
		return value && is.func(value.next) && is.func(value.throw);
	},
	fork: function fork(value) {
		return is.obj(value) && value.type === _keys2.default.fork;
	},
	join: function join(value) {
		return is.obj(value) && value.type === _keys2.default.join;
	},
	race: function race(value) {
		return is.obj(value) && value.type === _keys2.default.race;
	},
	call: function call(value) {
		return is.obj(value) && value.type === _keys2.default.call;
	},
	cps: function cps(value) {
		return is.obj(value) && value.type === _keys2.default.cps;
	},
	subscribe: function subscribe(value) {
		return is.obj(value) && value.type === _keys2.default.subscribe;
	},
	channel: function channel(value) {
		return is.obj(value) && is.func(value.subscribe);
	},
};

is$1.default = is;

Object.defineProperty(builtin, "__esModule", {
	value: true,
});
builtin.iterator =
	builtin.array =
	builtin.object =
	builtin.error =
	builtin.any =
		undefined;

var _is$3 = is$1;

var _is2$3 = _interopRequireDefault$4(_is$3);

function _interopRequireDefault$4(obj) {
	return obj && obj.__esModule ? obj : { default: obj };
}

var any = (builtin.any = function any(value, next, rungen, yieldNext) {
	yieldNext(value);
	return true;
});

var error = (builtin.error = function error(
	value,
	next,
	rungen,
	yieldNext,
	raiseNext
) {
	if (!_is2$3.default.error(value)) return false;
	raiseNext(value.error);
	return true;
});

var object = (builtin.object = function object(
	value,
	next,
	rungen,
	yieldNext,
	raiseNext
) {
	if (!_is2$3.default.all(value) || !_is2$3.default.obj(value.value))
		return false;
	var result = {};
	var keys = Object.keys(value.value);
	var count = 0;
	var hasError = false;
	var gotResultSuccess = function gotResultSuccess(key, ret) {
		if (hasError) return;
		result[key] = ret;
		count++;
		if (count === keys.length) {
			yieldNext(result);
		}
	};

	var gotResultError = function gotResultError(key, error) {
		if (hasError) return;
		hasError = true;
		raiseNext(error);
	};

	keys.map(function (key) {
		rungen(
			value.value[key],
			function (ret) {
				return gotResultSuccess(key, ret);
			},
			function (err) {
				return gotResultError(key, err);
			}
		);
	});

	return true;
});

var array = (builtin.array = function array(
	value,
	next,
	rungen,
	yieldNext,
	raiseNext
) {
	if (!_is2$3.default.all(value) || !_is2$3.default.array(value.value))
		return false;
	var result = [];
	var count = 0;
	var hasError = false;
	var gotResultSuccess = function gotResultSuccess(key, ret) {
		if (hasError) return;
		result[key] = ret;
		count++;
		if (count === value.value.length) {
			yieldNext(result);
		}
	};

	var gotResultError = function gotResultError(key, error) {
		if (hasError) return;
		hasError = true;
		raiseNext(error);
	};

	value.value.map(function (v, key) {
		rungen(
			v,
			function (ret) {
				return gotResultSuccess(key, ret);
			},
			function (err) {
				return gotResultError(key, err);
			}
		);
	});

	return true;
});

var iterator = (builtin.iterator = function iterator(
	value,
	next,
	rungen,
	yieldNext,
	raiseNext
) {
	if (!_is2$3.default.iterator(value)) return false;
	rungen(value, next, raiseNext);
	return true;
});

builtin.default = [error, iterator, array, object, any];

Object.defineProperty(create$1, "__esModule", {
	value: true,
});

var _builtin = builtin;

var _builtin2 = _interopRequireDefault$3(_builtin);

var _is$2 = is$1;

var _is2$2 = _interopRequireDefault$3(_is$2);

function _interopRequireDefault$3(obj) {
	return obj && obj.__esModule ? obj : { default: obj };
}

function _toConsumableArray$2(arr) {
	if (Array.isArray(arr)) {
		for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
			arr2[i] = arr[i];
		}
		return arr2;
	} else {
		return Array.from(arr);
	}
}

var create = function create() {
	var userControls =
		arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];

	var controls = [].concat(
		_toConsumableArray$2(userControls),
		_toConsumableArray$2(_builtin2.default)
	);

	var runtime = function runtime(input) {
		var success =
			arguments.length <= 1 || arguments[1] === undefined
				? function () {}
				: arguments[1];
		var error =
			arguments.length <= 2 || arguments[2] === undefined
				? function () {}
				: arguments[2];

		var iterate = function iterate(gen) {
			var yieldValue = function yieldValue(isError) {
				return function (ret) {
					try {
						var _ref = isError ? gen.throw(ret) : gen.next(ret);

						var value = _ref.value;
						var done = _ref.done;

						if (done) return success(value);
						next(value);
					} catch (e) {
						return error(e);
					}
				};
			};

			var next = function next(ret) {
				controls.some(function (control) {
					return control(
						ret,
						next,
						runtime,
						yieldValue(false),
						yieldValue(true)
					);
				});
			};

			yieldValue(false)();
		};

		var iterator = _is2$2.default.iterator(input)
			? input
			: regeneratorRuntime.mark(function _callee() {
					return regeneratorRuntime.wrap(
						function _callee$(_context) {
							while (1) {
								switch ((_context.prev = _context.next)) {
									case 0:
										_context.next = 2;
										return input;

									case 2:
										return _context.abrupt(
											"return",
											_context.sent
										);

									case 3:
									case "end":
										return _context.stop();
								}
							}
						},
						_callee,
						this
					);
			  })();

		iterate(iterator);
	};

	return runtime;
};

create$1.default = create;

var async = {};

var dispatcher = {};

Object.defineProperty(dispatcher, "__esModule", {
	value: true,
});
var createDispatcher = function createDispatcher() {
	var listeners = [];

	return {
		subscribe: function subscribe(listener) {
			listeners.push(listener);
			return function () {
				listeners = listeners.filter(function (l) {
					return l !== listener;
				});
			};
		},
		dispatch: function dispatch(action) {
			listeners.slice().forEach(function (listener) {
				return listener(action);
			});
		},
	};
};

dispatcher.default = createDispatcher;

Object.defineProperty(async, "__esModule", {
	value: true,
});
async.race = async.join = async.fork = async.promise = undefined;

var _is$1 = is$1;

var _is2$1 = _interopRequireDefault$2(_is$1);

var _helpers = helpers;

var _dispatcher = dispatcher;

var _dispatcher2 = _interopRequireDefault$2(_dispatcher);

function _interopRequireDefault$2(obj) {
	return obj && obj.__esModule ? obj : { default: obj };
}

var promise$1 = (async.promise = function promise(
	value,
	next,
	rungen,
	yieldNext,
	raiseNext
) {
	if (!_is2$1.default.promise(value)) return false;
	value.then(next, raiseNext);
	return true;
});

var forkedTasks = new Map();
var fork = (async.fork = function fork(value, next, rungen) {
	if (!_is2$1.default.fork(value)) return false;
	var task = Symbol("fork");
	var dispatcher = (0, _dispatcher2.default)();
	forkedTasks.set(task, dispatcher);
	rungen(
		value.iterator.apply(null, value.args),
		function (result) {
			return dispatcher.dispatch(result);
		},
		function (err) {
			return dispatcher.dispatch((0, _helpers.error)(err));
		}
	);
	var unsubscribe = dispatcher.subscribe(function () {
		unsubscribe();
		forkedTasks.delete(task);
	});
	next(task);
	return true;
});

var join = (async.join = function join(
	value,
	next,
	rungen,
	yieldNext,
	raiseNext
) {
	if (!_is2$1.default.join(value)) return false;
	var dispatcher = forkedTasks.get(value.task);
	if (!dispatcher) {
		raiseNext("join error : task not found");
	} else {
		(function () {
			var unsubscribe = dispatcher.subscribe(function (result) {
				unsubscribe();
				next(result);
			});
		})();
	}
	return true;
});

var race = (async.race = function race(
	value,
	next,
	rungen,
	yieldNext,
	raiseNext
) {
	if (!_is2$1.default.race(value)) return false;
	var finished = false;
	var success = function success(result, k, v) {
		if (finished) return;
		finished = true;
		result[k] = v;
		next(result);
	};

	var fail = function fail(err) {
		if (finished) return;
		raiseNext(err);
	};
	if (_is2$1.default.array(value.competitors)) {
		(function () {
			var result = value.competitors.map(function () {
				return false;
			});
			value.competitors.forEach(function (competitor, index) {
				rungen(
					competitor,
					function (output) {
						return success(result, index, output);
					},
					fail
				);
			});
		})();
	} else {
		(function () {
			var result = Object.keys(value.competitors).reduce(function (p, c) {
				p[c] = false;
				return p;
			}, {});
			Object.keys(value.competitors).forEach(function (index) {
				rungen(
					value.competitors[index],
					function (output) {
						return success(result, index, output);
					},
					fail
				);
			});
		})();
	}
	return true;
});

var subscribe = function subscribe(value, next) {
	if (!_is2$1.default.subscribe(value)) return false;
	if (!_is2$1.default.channel(value.channel)) {
		throw new Error(
			'the first argument of "subscribe" must be a valid channel'
		);
	}
	var unsubscribe = value.channel.subscribe(function (ret) {
		unsubscribe && unsubscribe();
		next(ret);
	});

	return true;
};

async.default = [promise$1, fork, join, race, subscribe];

var wrap = {};

Object.defineProperty(wrap, "__esModule", {
	value: true,
});
wrap.cps = wrap.call = undefined;

var _is = is$1;

var _is2 = _interopRequireDefault$1(_is);

function _interopRequireDefault$1(obj) {
	return obj && obj.__esModule ? obj : { default: obj };
}

function _toConsumableArray$1(arr) {
	if (Array.isArray(arr)) {
		for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
			arr2[i] = arr[i];
		}
		return arr2;
	} else {
		return Array.from(arr);
	}
}

var call = (wrap.call = function call(
	value,
	next,
	rungen,
	yieldNext,
	raiseNext
) {
	if (!_is2.default.call(value)) return false;
	try {
		next(value.func.apply(value.context, value.args));
	} catch (err) {
		raiseNext(err);
	}
	return true;
});

var cps = (wrap.cps = function cps(value, next, rungen, yieldNext, raiseNext) {
	var _value$func;

	if (!_is2.default.cps(value)) return false;
	(_value$func = value.func).call.apply(
		_value$func,
		[null].concat(_toConsumableArray$1(value.args), [
			function (err, result) {
				if (err) raiseNext(err);
				else next(result);
			},
		])
	);
	return true;
});

wrap.default = [call, cps];

(function (exports) {
	Object.defineProperty(exports, "__esModule", {
		value: true,
	});
	exports.wrapControls = exports.asyncControls = exports.create = undefined;

	var _helpers = helpers;

	Object.keys(_helpers).forEach(function (key) {
		if (key === "default") return;
		Object.defineProperty(exports, key, {
			enumerable: true,
			get: function get() {
				return _helpers[key];
			},
		});
	});

	var _create = create$1;

	var _create2 = _interopRequireDefault(_create);

	var _async = async;

	var _async2 = _interopRequireDefault(_async);

	var _wrap = wrap;

	var _wrap2 = _interopRequireDefault(_wrap);

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.create = _create2.default;
	exports.asyncControls = _async2.default;
	exports.wrapControls = _wrap2.default;
})(dist$1);

function isPromise(obj) {
	return (
		!!obj &&
		(typeof obj === "object" || typeof obj === "function") &&
		typeof obj.then === "function"
	);
}

/**
 * External dependencies
 */
/**
 * Returns true if the given object quacks like an action.
 *
 * @param {*} object Object to test
 *
 * @return {boolean}  Whether object is an action.
 */

function isAction(object) {
	return isPlainObject$1(object) && isString$1(object.type);
}
/**
 * Returns true if the given object quacks like an action and has a specific
 * action type
 *
 * @param {*}      object       Object to test
 * @param {string} expectedType The expected type for the action.
 *
 * @return {boolean} Whether object is an action and is of specific type.
 */

function isActionOfType(object, expectedType) {
	return isAction(object) && object.type === expectedType;
}

/**
 * External dependencies
 */
/**
 * Create a co-routine runtime.
 *
 * @param {Object}    controls Object of control handlers.
 * @param {Function}  dispatch Unhandled action dispatch.
 *
 * @return {Function} co-routine runtime
 */

function createRuntime() {
	var controls =
		arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	var dispatch = arguments.length > 1 ? arguments[1] : undefined;
	var rungenControls = map(controls, function (control, actionType) {
		return function (value, next, iterate, yieldNext, yieldError) {
			if (!isActionOfType(value, actionType)) {
				return false;
			}

			var routine = control(value);

			if (isPromise(routine)) {
				// Async control routine awaits resolution.
				routine.then(yieldNext, yieldError);
			} else {
				yieldNext(routine);
			}

			return true;
		};
	});

	var unhandledActionControl = function unhandledActionControl(value, next) {
		if (!isAction(value)) {
			return false;
		}

		dispatch(value);
		next();
		return true;
	};

	rungenControls.push(unhandledActionControl);
	var rungenRuntime = dist$1.create(rungenControls);
	return function (action) {
		return new Promise(function (resolve, reject) {
			return rungenRuntime(
				action,
				function (result) {
					if (isAction(result)) {
						dispatch(result);
					}

					resolve(result);
				},
				reject
			);
		});
	};
}

/**
 * Internal dependencies
 */
/**
 * Creates a Redux middleware, given an object of controls where each key is an
 * action type for which to act upon, the value a function which returns either
 * a promise which is to resolve when evaluation of the action should continue,
 * or a value. The value or resolved promise value is assigned on the return
 * value of the yield assignment. If the control handler returns undefined, the
 * execution is not continued.
 *
 * @param {Object} controls Object of control handlers.
 *
 * @return {Function} Co-routine runtime
 */

function createMiddleware() {
	var controls =
		arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	return function (store) {
		var runtime = createRuntime(controls, store.dispatch);
		return function (next) {
			return function (action) {
				if (!isGenerator(action)) {
					return next(action);
				}

				return runtime(action);
			};
		};
	};
}

function _arrayWithoutHoles(arr) {
	if (Array.isArray(arr)) return _arrayLikeToArray$1(arr);
}

function _iterableToArray(iter) {
	if (
		(typeof Symbol !== "undefined" && iter[Symbol.iterator] != null) ||
		iter["@@iterator"] != null
	)
		return Array.from(iter);
}

function _nonIterableSpread() {
	throw new TypeError(
		"Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."
	);
}

function _toConsumableArray(arr) {
	return (
		_arrayWithoutHoles(arr) ||
		_iterableToArray(arr) ||
		_unsupportedIterableToArray$1(arr) ||
		_nonIterableSpread()
	);
}

/**
 * Creates a selector function that takes additional curried argument with the
 * registry `select` function. While a regular selector has signature
 * ```js
 * ( state, ...selectorArgs ) => ( result )
 * ```
 * that allows to select data from the store's `state`, a registry selector
 * has signature:
 * ```js
 * ( select ) => ( state, ...selectorArgs ) => ( result )
 * ```
 * that supports also selecting from other registered stores.
 *
 * @example
 * ```js
 * const getCurrentPostId = createRegistrySelector( ( select ) => ( state ) => {
 *   return select( 'core/editor' ).getCurrentPostId();
 * } );
 *
 * const getPostEdits = createRegistrySelector( ( select ) => ( state ) => {
 *   // calling another registry selector just like any other function
 *   const postType = getCurrentPostType( state );
 *   const postId = getCurrentPostId( state );
 *	 return select( 'core' ).getEntityRecordEdits( 'postType', postType, postId );
 * } );
 * ```
 *
 * Note how the `getCurrentPostId` selector can be called just like any other function,
 * (it works even inside a regular non-registry selector) and we don't need to pass the
 * registry as argument. The registry binding happens automatically when registering the selector
 * with a store.
 *
 * @param {Function} registrySelector Function receiving a registry `select`
 * function and returning a state selector.
 *
 * @return {Function} Registry selector that can be registered with a store.
 */
/**
 * Creates a control function that takes additional curried argument with the `registry` object.
 * While a regular control has signature
 * ```js
 * ( action ) => ( iteratorOrPromise )
 * ```
 * where the control works with the `action` that it's bound to, a registry control has signature:
 * ```js
 * ( registry ) => ( action ) => ( iteratorOrPromise )
 * ```
 * A registry control is typically used to select data or dispatch an action to a registered
 * store.
 *
 * When registering a control created with `createRegistryControl` with a store, the store
 * knows which calling convention to use when executing the control.
 *
 * @param {Function} registryControl Function receiving a registry object and returning a control.
 *
 * @return {Function} Registry control that can be registered with a store.
 */

function createRegistryControl(registryControl) {
	registryControl.isRegistryControl = true;
	return registryControl;
}

var _builtinControls;
var SELECT = "@@data/SELECT";
var RESOLVE_SELECT = "@@data/RESOLVE_SELECT";
var DISPATCH = "@@data/DISPATCH";
var builtinControls =
	((_builtinControls = {}),
	_defineProperty$1(
		_builtinControls,
		SELECT,
		createRegistryControl(function (registry) {
			return function (_ref) {
				var _registry$select;

				var storeKey = _ref.storeKey,
					selectorName = _ref.selectorName,
					args = _ref.args;
				return (_registry$select = registry.select(storeKey))[
					selectorName
				].apply(_registry$select, _toConsumableArray(args));
			};
		})
	),
	_defineProperty$1(
		_builtinControls,
		RESOLVE_SELECT,
		createRegistryControl(function (registry) {
			return function (_ref2) {
				var _registry$method;

				var storeKey = _ref2.storeKey,
					selectorName = _ref2.selectorName,
					args = _ref2.args;
				var method = registry.select(storeKey)[selectorName].hasResolver
					? "resolveSelect"
					: "select";
				return (_registry$method = registry[method](storeKey))[
					selectorName
				].apply(_registry$method, _toConsumableArray(args));
			};
		})
	),
	_defineProperty$1(
		_builtinControls,
		DISPATCH,
		createRegistryControl(function (registry) {
			return function (_ref3) {
				var _registry$dispatch;

				var storeKey = _ref3.storeKey,
					actionName = _ref3.actionName,
					args = _ref3.args;
				return (_registry$dispatch = registry.dispatch(storeKey))[
					actionName
				].apply(_registry$dispatch, _toConsumableArray(args));
			};
		})
	),
	_builtinControls);

/**
 * External dependencies
 */
/**
 * Simplest possible promise redux middleware.
 *
 * @return {Function} middleware.
 */

var promiseMiddleware = function promiseMiddleware() {
	return function (next) {
		return function (action) {
			if (isPromise(action)) {
				return action.then(function (resolvedAction) {
					if (resolvedAction) {
						return next(resolvedAction);
					}
				});
			}

			return next(action);
		};
	};
};

var promise = promiseMiddleware;

/** @typedef {import('./registry').WPDataRegistry} WPDataRegistry */

/**
 * Creates a middleware handling resolvers cache invalidation.
 *
 * @param {WPDataRegistry} registry   The registry reference for which to create
 *                                    the middleware.
 * @param {string}         reducerKey The namespace for which to create the
 *                                    middleware.
 *
 * @return {Function} Middleware function.
 */

var createResolversCacheMiddleware = function createResolversCacheMiddleware(
	registry,
	reducerKey
) {
	return function () {
		return function (next) {
			return function (action) {
				var resolvers = registry
					.select("core/data")
					.getCachedResolvers(reducerKey);
				Object.entries(resolvers).forEach(function (_ref) {
					var _ref2 = _slicedToArray(_ref, 2),
						selectorName = _ref2[0],
						resolversByArgs = _ref2[1];

					var resolver = get$1(registry.stores, [
						reducerKey,
						"resolvers",
						selectorName,
					]);

					if (!resolver || !resolver.shouldInvalidate) {
						return;
					}

					resolversByArgs.forEach(function (value, args) {
						// resolversByArgs is the map Map([ args ] => boolean) storing the cache resolution status for a given selector.
						// If the value is false it means this resolver has finished its resolution which means we need to invalidate it,
						// if it's true it means it's inflight and the invalidation is not necessary.
						if (
							value !== false ||
							!resolver.shouldInvalidate.apply(
								resolver,
								[action].concat(_toConsumableArray(args))
							)
						) {
							return;
						} // Trigger cache invalidation

						registry
							.dispatch("core/data")
							.invalidateResolution(
								reducerKey,
								selectorName,
								args
							);
					});
				});
				return next(action);
			};
		};
	};
};

var createResolversCacheMiddleware$1 = createResolversCacheMiddleware;

function createThunkMiddleware(args) {
	return function () {
		return function (next) {
			return function (action) {
				if (typeof action === "function") {
					return action(args);
				}

				return next(action);
			};
		};
	};
}

function ownKeys$f(object, enumerableOnly) {
	var keys = Object.keys(object);
	if (Object.getOwnPropertySymbols) {
		var symbols = Object.getOwnPropertySymbols(object);
		if (enumerableOnly)
			symbols = symbols.filter(function (sym) {
				return Object.getOwnPropertyDescriptor(object, sym).enumerable;
			});
		keys.push.apply(keys, symbols);
	}
	return keys;
}

function _objectSpread$e(target) {
	for (var i = 1; i < arguments.length; i++) {
		var source = arguments[i] != null ? arguments[i] : {};
		if (i % 2) {
			ownKeys$f(Object(source), true).forEach(function (key) {
				_defineProperty$1(target, key, source[key]);
			});
		} else if (Object.getOwnPropertyDescriptors) {
			Object.defineProperties(
				target,
				Object.getOwnPropertyDescriptors(source)
			);
		} else {
			ownKeys$f(Object(source)).forEach(function (key) {
				Object.defineProperty(
					target,
					key,
					Object.getOwnPropertyDescriptor(source, key)
				);
			});
		}
	}
	return target;
}

/**
 * Higher-order reducer creator which creates a combined reducer object, keyed
 * by a property on the action object.
 *
 * @param {string} actionProperty Action property by which to key object.
 *
 * @return {Function} Higher-order reducer.
 */
var onSubKey = function onSubKey(actionProperty) {
	return function (reducer) {
		return function () {
			var state =
				arguments.length > 0 && arguments[0] !== undefined
					? arguments[0]
					: {};
			var action = arguments.length > 1 ? arguments[1] : undefined;
			// Retrieve subkey from action. Do not track if undefined; useful for cases
			// where reducer is scoped by action shape.
			var key = action[actionProperty];

			if (key === undefined) {
				return state;
			} // Avoid updating state if unchanged. Note that this also accounts for a
			// reducer which returns undefined on a key which is not yet tracked.

			var nextKeyState = reducer(state[key], action);

			if (nextKeyState === state[key]) {
				return state;
			}

			return _objectSpread$e(
				_objectSpread$e({}, state),
				{},
				_defineProperty$1({}, key, nextKeyState)
			);
		};
	};
};

/**
 * External dependencies
 */
/**
 * Reducer function returning next state for selector resolution of
 * subkeys, object form:
 *
 *  selectorName -> EquivalentKeyMap<Array,boolean>
 *
 * @param {Object} state  Current state.
 * @param {Object} action Dispatched action.
 *
 * @return {Object} Next state.
 */

var subKeysIsResolved = onSubKey("selectorName")(function () {
	var state =
		arguments.length > 0 && arguments[0] !== undefined
			? arguments[0]
			: new equivalentKeyMap();
	var action = arguments.length > 1 ? arguments[1] : undefined;

	switch (action.type) {
		case "START_RESOLUTION":
		case "FINISH_RESOLUTION": {
			var isStarting = action.type === "START_RESOLUTION";
			var nextState = new equivalentKeyMap(state);
			nextState.set(action.args, isStarting);
			return nextState;
		}

		case "INVALIDATE_RESOLUTION": {
			var _nextState = new equivalentKeyMap(state);

			_nextState.delete(action.args);

			return _nextState;
		}
	}

	return state;
});
/**
 * Reducer function returning next state for selector resolution, object form:
 *
 *   selectorName -> EquivalentKeyMap<Array, boolean>
 *
 * @param {Object} state   Current state.
 * @param {Object} action  Dispatched action.
 *
 * @return {Object} Next state.
 */

var isResolved = function isResolved() {
	var state =
		arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	var action = arguments.length > 1 ? arguments[1] : undefined;

	switch (action.type) {
		case "INVALIDATE_RESOLUTION_FOR_STORE":
			return {};

		case "INVALIDATE_RESOLUTION_FOR_STORE_SELECTOR":
			return has$2(state, [action.selectorName])
				? omit(state, [action.selectorName])
				: state;

		case "START_RESOLUTION":
		case "FINISH_RESOLUTION":
		case "INVALIDATE_RESOLUTION":
			return subKeysIsResolved(state, action);
	}

	return state;
};

var metadataReducer = isResolved;

/**
 * External dependencies
 */
/**
 * Returns the raw `isResolving` value for a given selector name,
 * and arguments set. May be undefined if the selector has never been resolved
 * or not resolved for the given set of arguments, otherwise true or false for
 * resolution started and completed respectively.
 *
 * @param {Object} state        Data state.
 * @param {string} selectorName Selector name.
 * @param {Array}  args         Arguments passed to selector.
 *
 * @return {?boolean} isResolving value.
 */

function getIsResolving(state, selectorName, args) {
	var map = get$1(state, [selectorName]);

	if (!map) {
		return;
	}

	return map.get(args);
}
/**
 * Returns true if resolution has already been triggered for a given
 * selector name, and arguments set.
 *
 * @param {Object} state        Data state.
 * @param {string} selectorName Selector name.
 * @param {?Array} args         Arguments passed to selector (default `[]`).
 *
 * @return {boolean} Whether resolution has been triggered.
 */

function hasStartedResolution(state, selectorName) {
	var args =
		arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];
	return getIsResolving(state, selectorName, args) !== undefined;
}
/**
 * Returns true if resolution has completed for a given selector
 * name, and arguments set.
 *
 * @param {Object} state        Data state.
 * @param {string} selectorName Selector name.
 * @param {?Array} args         Arguments passed to selector.
 *
 * @return {boolean} Whether resolution has completed.
 */

function hasFinishedResolution(state, selectorName) {
	var args =
		arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];
	return getIsResolving(state, selectorName, args) === false;
}
/**
 * Returns true if resolution has been triggered but has not yet completed for
 * a given selector name, and arguments set.
 *
 * @param {Object} state        Data state.
 * @param {string} selectorName Selector name.
 * @param {?Array} args         Arguments passed to selector.
 *
 * @return {boolean} Whether resolution is in progress.
 */

function isResolving(state, selectorName) {
	var args =
		arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];
	return getIsResolving(state, selectorName, args) === true;
}
/**
 * Returns the list of the cached resolvers.
 *
 * @param {Object} state      Data state.
 *
 * @return {Object} Resolvers mapped by args and selectorName.
 */

function getCachedResolvers(state) {
	return state;
}

var metadataSelectors = /*#__PURE__*/ Object.freeze({
	__proto__: null,
	getIsResolving: getIsResolving,
	hasStartedResolution: hasStartedResolution,
	hasFinishedResolution: hasFinishedResolution,
	isResolving: isResolving,
	getCachedResolvers: getCachedResolvers,
});

/**
 * Returns an action object used in signalling that selector resolution has
 * started.
 *
 * @param {string} selectorName Name of selector for which resolver triggered.
 * @param {...*}   args         Arguments to associate for uniqueness.
 *
 * @return {Object} Action object.
 */
function startResolution(selectorName, args) {
	return {
		type: "START_RESOLUTION",
		selectorName: selectorName,
		args: args,
	};
}
/**
 * Returns an action object used in signalling that selector resolution has
 * completed.
 *
 * @param {string} selectorName Name of selector for which resolver triggered.
 * @param {...*}   args         Arguments to associate for uniqueness.
 *
 * @return {Object} Action object.
 */

function finishResolution(selectorName, args) {
	return {
		type: "FINISH_RESOLUTION",
		selectorName: selectorName,
		args: args,
	};
}
/**
 * Returns an action object used in signalling that we should invalidate the resolution cache.
 *
 * @param {string} selectorName Name of selector for which resolver should be invalidated.
 * @param {Array}  args         Arguments to associate for uniqueness.
 *
 * @return {Object} Action object.
 */

function invalidateResolution(selectorName, args) {
	return {
		type: "INVALIDATE_RESOLUTION",
		selectorName: selectorName,
		args: args,
	};
}
/**
 * Returns an action object used in signalling that the resolution
 * should be invalidated.
 *
 * @return {Object} Action object.
 */

function invalidateResolutionForStore() {
	return {
		type: "INVALIDATE_RESOLUTION_FOR_STORE",
	};
}
/**
 * Returns an action object used in signalling that the resolution cache for a
 * given selectorName should be invalidated.
 *
 * @param {string} selectorName Name of selector for which all resolvers should
 *                              be invalidated.
 *
 * @return  {Object} Action object.
 */

function invalidateResolutionForStoreSelector(selectorName) {
	return {
		type: "INVALIDATE_RESOLUTION_FOR_STORE_SELECTOR",
		selectorName: selectorName,
	};
}

var metadataActions = /*#__PURE__*/ Object.freeze({
	__proto__: null,
	startResolution: startResolution,
	finishResolution: finishResolution,
	invalidateResolution: invalidateResolution,
	invalidateResolutionForStore: invalidateResolutionForStore,
	invalidateResolutionForStoreSelector: invalidateResolutionForStoreSelector,
});

function ownKeys$e(object, enumerableOnly) {
	var keys = Object.keys(object);
	if (Object.getOwnPropertySymbols) {
		var symbols = Object.getOwnPropertySymbols(object);
		if (enumerableOnly)
			symbols = symbols.filter(function (sym) {
				return Object.getOwnPropertyDescriptor(object, sym).enumerable;
			});
		keys.push.apply(keys, symbols);
	}
	return keys;
}

function _objectSpread$d(target) {
	for (var i = 1; i < arguments.length; i++) {
		var source = arguments[i] != null ? arguments[i] : {};
		if (i % 2) {
			ownKeys$e(Object(source), true).forEach(function (key) {
				_defineProperty$1(target, key, source[key]);
			});
		} else if (Object.getOwnPropertyDescriptors) {
			Object.defineProperties(
				target,
				Object.getOwnPropertyDescriptors(source)
			);
		} else {
			ownKeys$e(Object(source)).forEach(function (key) {
				Object.defineProperty(
					target,
					key,
					Object.getOwnPropertyDescriptor(source, key)
				);
			});
		}
	}
	return target;
}
/** @typedef {import('../types').WPDataRegistry} WPDataRegistry */

/** @typedef {import('../types').WPDataStore} WPDataStore */

/** @typedef {import('../types').WPDataReduxStoreConfig} WPDataReduxStoreConfig */

/**
 * Create a cache to track whether resolvers started running or not.
 *
 * @return {Object} Resolvers Cache.
 */

function createResolversCache() {
	var cache = {};
	return {
		isRunning: function isRunning(selectorName, args) {
			return cache[selectorName] && cache[selectorName].get(args);
		},
		clear: function clear(selectorName, args) {
			if (cache[selectorName]) {
				cache[selectorName].delete(args);
			}
		},
		markAsRunning: function markAsRunning(selectorName, args) {
			if (!cache[selectorName]) {
				cache[selectorName] = new equivalentKeyMap();
			}

			cache[selectorName].set(args, true);
		},
	};
}
/**
 * Creates a data store definition for the provided Redux store options containing
 * properties describing reducer, actions, selectors, controls and resolvers.
 *
 * @example
 * ```js
 * import { createReduxStore } from '@wordpress/data';
 *
 * const store = createReduxStore( 'demo', {
 *     reducer: ( state = 'OK' ) => state,
 *     selectors: {
 *         getValue: ( state ) => state,
 *     },
 * } );
 * ```
 *
 * @param {string}                 key      Unique namespace identifier.
 * @param {WPDataReduxStoreConfig} options  Registered store options, with properties
 *                                          describing reducer, actions, selectors,
 *                                          and resolvers.
 *
 * @return {WPDataStore} Store Object.
 */

function createReduxStore(key, options) {
	return {
		name: key,
		instantiate: function instantiate(registry) {
			var reducer = options.reducer;
			var thunkArgs = {
				registry: registry,

				get dispatch() {
					return Object.assign(function (action) {
						return store.dispatch(action);
					}, getActions());
				},

				get select() {
					return Object.assign(function (selector) {
						return selector(store.__unstableOriginalGetState());
					}, getSelectors());
				},

				get resolveSelect() {
					return getResolveSelectors();
				},
			};
			var store = instantiateReduxStore(
				key,
				options,
				registry,
				thunkArgs
			);
			var resolversCache = createResolversCache();
			var resolvers;
			var actions = mapActions(
				_objectSpread$d(
					_objectSpread$d({}, metadataActions),
					options.actions
				),
				store
			);
			var selectors = mapSelectors(
				_objectSpread$d(
					_objectSpread$d(
						{},
						mapValues(metadataSelectors, function (selector) {
							return function (state) {
								for (
									var _len = arguments.length,
										args = new Array(
											_len > 1 ? _len - 1 : 0
										),
										_key = 1;
									_key < _len;
									_key++
								) {
									args[_key - 1] = arguments[_key];
								}

								return selector.apply(
									void 0,
									[state.metadata].concat(args)
								);
							};
						})
					),
					mapValues(options.selectors, function (selector) {
						if (selector.isRegistrySelector) {
							selector.registry = registry;
						}

						return function (state) {
							for (
								var _len2 = arguments.length,
									args = new Array(_len2 > 1 ? _len2 - 1 : 0),
									_key2 = 1;
								_key2 < _len2;
								_key2++
							) {
								args[_key2 - 1] = arguments[_key2];
							}

							return selector.apply(
								void 0,
								[state.root].concat(args)
							);
						};
					})
				),
				store
			);

			if (options.resolvers) {
				var result = mapResolvers(
					options.resolvers,
					selectors,
					store,
					resolversCache
				);
				resolvers = result.resolvers;
				selectors = result.selectors;
			}

			var resolveSelectors = mapResolveSelectors(selectors, store);

			var getSelectors = function getSelectors() {
				return selectors;
			};

			var getActions = function getActions() {
				return actions;
			};

			var getResolveSelectors = function getResolveSelectors() {
				return resolveSelectors;
			}; // We have some modules monkey-patching the store object
			// It's wrong to do so but until we refactor all of our effects to controls
			// We need to keep the same "store" instance here.

			store.__unstableOriginalGetState = store.getState;

			store.getState = function () {
				return store.__unstableOriginalGetState().root;
			}; // Customize subscribe behavior to call listeners only on effective change,
			// not on every dispatch.

			var subscribe =
				store &&
				function (listener) {
					var lastState = store.__unstableOriginalGetState();

					return store.subscribe(function () {
						var state = store.__unstableOriginalGetState();

						var hasChanged = state !== lastState;
						lastState = state;

						if (hasChanged) {
							listener();
						}
					});
				}; // This can be simplified to just { subscribe, getSelectors, getActions }
			// Once we remove the use function.

			return {
				reducer: reducer,
				store: store,
				actions: actions,
				selectors: selectors,
				resolvers: resolvers,
				getSelectors: getSelectors,
				getResolveSelectors: getResolveSelectors,
				getActions: getActions,
				subscribe: subscribe,
			};
		},
	};
}
/**
 * Creates a redux store for a namespace.
 *
 * @param {string}         key      Unique namespace identifier.
 * @param {Object}         options  Registered store options, with properties
 *                                  describing reducer, actions, selectors,
 *                                  and resolvers.
 * @param {WPDataRegistry} registry Registry reference.
 * @param {Object} thunkArgs        Argument object for the thunk middleware.
 * @return {Object} Newly created redux store.
 */

function instantiateReduxStore(key, options, registry, thunkArgs) {
	var controls = _objectSpread$d(
		_objectSpread$d({}, options.controls),
		builtinControls
	);

	var normalizedControls = mapValues(controls, function (control) {
		return control.isRegistryControl ? control(registry) : control;
	});
	var middlewares = [
		createResolversCacheMiddleware$1(registry, key),
		promise,
		createMiddleware(normalizedControls),
	];

	if (options.__experimentalUseThunks) {
		middlewares.push(createThunkMiddleware(thunkArgs));
	}

	var enhancers = [applyMiddleware.apply(void 0, middlewares)];

	if (typeof window !== "undefined" && window.__REDUX_DEVTOOLS_EXTENSION__) {
		enhancers.push(
			window.__REDUX_DEVTOOLS_EXTENSION__({
				name: key,
				instanceId: key,
			})
		);
	}

	var reducer = options.reducer,
		initialState = options.initialState;
	var enhancedReducer = turboCombineReducers({
		metadata: metadataReducer,
		root: reducer,
	});
	return createStore(
		enhancedReducer,
		{
			root: initialState,
		},
		flowRight(enhancers)
	);
}
/**
 * Maps selectors to a store.
 *
 * @param {Object} selectors Selectors to register. Keys will be used as the
 *                           public facing API. Selectors will get passed the
 *                           state as first argument.
 * @param {Object} store     The store to which the selectors should be mapped.
 * @return {Object} Selectors mapped to the provided store.
 */

function mapSelectors(selectors, store) {
	var createStateSelector = function createStateSelector(registrySelector) {
		var selector = function runSelector() {
			// This function is an optimized implementation of:
			//
			//   selector( store.getState(), ...arguments )
			//
			// Where the above would incur an `Array#concat` in its application,
			// the logic here instead efficiently constructs an arguments array via
			// direct assignment.
			var argsLength = arguments.length;
			var args = new Array(argsLength + 1);
			args[0] = store.__unstableOriginalGetState();

			for (var i = 0; i < argsLength; i++) {
				args[i + 1] = arguments[i];
			}

			return registrySelector.apply(void 0, args);
		};

		selector.hasResolver = false;
		return selector;
	};

	return mapValues(selectors, createStateSelector);
}
/**
 * Maps actions to dispatch from a given store.
 *
 * @param {Object} actions    Actions to register.
 * @param {Object} store      The redux store to which the actions should be mapped.
 * @return {Object}           Actions mapped to the redux store provided.
 */

function mapActions(actions, store) {
	var createBoundAction = function createBoundAction(action) {
		return function () {
			return Promise.resolve(
				store.dispatch(action.apply(void 0, arguments))
			);
		};
	};

	return mapValues(actions, createBoundAction);
}
/**
 * Maps selectors to functions that return a resolution promise for them
 *
 * @param {Object} selectors Selectors to map.
 * @param {Object} store     The redux store the selectors select from.
 * @return {Object}          Selectors mapped to their resolution functions.
 */

function mapResolveSelectors(selectors, store) {
	return mapValues(
		omit(selectors, [
			"getIsResolving",
			"hasStartedResolution",
			"hasFinishedResolution",
			"isResolving",
			"getCachedResolvers",
		]),
		function (selector, selectorName) {
			return function () {
				for (
					var _len3 = arguments.length,
						args = new Array(_len3),
						_key3 = 0;
					_key3 < _len3;
					_key3++
				) {
					args[_key3] = arguments[_key3];
				}

				return new Promise(function (resolve) {
					var hasFinished = function hasFinished() {
						return selectors.hasFinishedResolution(
							selectorName,
							args
						);
					};

					var getResult = function getResult() {
						return selector.apply(null, args);
					}; // trigger the selector (to trigger the resolver)

					var result = getResult();

					if (hasFinished()) {
						return resolve(result);
					}

					var unsubscribe = store.subscribe(function () {
						if (hasFinished()) {
							unsubscribe();
							resolve(getResult());
						}
					});
				});
			};
		}
	);
}
/**
 * Returns resolvers with matched selectors for a given namespace.
 * Resolvers are side effects invoked once per argument set of a given selector call,
 * used in ensuring that the data needs for the selector are satisfied.
 *
 * @param {Object} resolvers      Resolvers to register.
 * @param {Object} selectors      The current selectors to be modified.
 * @param {Object} store          The redux store to which the resolvers should be mapped.
 * @param {Object} resolversCache Resolvers Cache.
 */

function mapResolvers(resolvers, selectors, store, resolversCache) {
	// The `resolver` can be either a function that does the resolution, or, in more advanced
	// cases, an object with a `fullfill` method and other optional methods like `isFulfilled`.
	// Here we normalize the `resolver` function to an object with `fulfill` method.
	var mappedResolvers = mapValues(resolvers, function (resolver) {
		if (resolver.fulfill) {
			return resolver;
		}

		return _objectSpread$d(
			_objectSpread$d({}, resolver),
			{},
			{
				// copy the enumerable properties of the resolver function
				fulfill: resolver, // add the fulfill method
			}
		);
	});

	var mapSelector = function mapSelector(selector, selectorName) {
		var resolver = resolvers[selectorName];

		if (!resolver) {
			selector.hasResolver = false;
			return selector;
		}

		var selectorResolver = function selectorResolver() {
			for (
				var _len4 = arguments.length,
					args = new Array(_len4),
					_key4 = 0;
				_key4 < _len4;
				_key4++
			) {
				args[_key4] = arguments[_key4];
			}

			function fulfillSelector() {
				return _fulfillSelector.apply(this, arguments);
			}

			function _fulfillSelector() {
				_fulfillSelector = _asyncToGenerator(
					/*#__PURE__*/ regenerator.mark(function _callee2() {
						var state, _store$__unstableOrig, metadata;

						return regenerator.wrap(function _callee2$(_context2) {
							while (1) {
								switch ((_context2.prev = _context2.next)) {
									case 0:
										state = store.getState();

										if (
											!(
												resolversCache.isRunning(
													selectorName,
													args
												) ||
												(typeof resolver.isFulfilled ===
													"function" &&
													resolver.isFulfilled.apply(
														resolver,
														[state].concat(args)
													))
											)
										) {
											_context2.next = 3;
											break;
										}

										return _context2.abrupt("return");

									case 3:
										(_store$__unstableOrig =
											store.__unstableOriginalGetState()),
											(metadata =
												_store$__unstableOrig.metadata);

										if (
											!hasStartedResolution(
												metadata,
												selectorName,
												args
											)
										) {
											_context2.next = 6;
											break;
										}

										return _context2.abrupt("return");

									case 6:
										resolversCache.markAsRunning(
											selectorName,
											args
										);
										setTimeout(
											/*#__PURE__*/ _asyncToGenerator(
												/*#__PURE__*/ regenerator.mark(
													function _callee() {
														return regenerator.wrap(
															function _callee$(
																_context
															) {
																while (1) {
																	switch (
																		(_context.prev =
																			_context.next)
																	) {
																		case 0:
																			resolversCache.clear(
																				selectorName,
																				args
																			);
																			store.dispatch(
																				startResolution(
																					selectorName,
																					args
																				)
																			);
																			_context.next = 4;
																			return fulfillResolver.apply(
																				void 0,
																				[
																					store,
																					mappedResolvers,
																					selectorName,
																				].concat(
																					args
																				)
																			);

																		case 4:
																			store.dispatch(
																				finishResolution(
																					selectorName,
																					args
																				)
																			);

																		case 5:
																		case "end":
																			return _context.stop();
																	}
																}
															},
															_callee
														);
													}
												)
											)
										);

									case 8:
									case "end":
										return _context2.stop();
								}
							}
						}, _callee2);
					})
				);
				return _fulfillSelector.apply(this, arguments);
			}

			fulfillSelector.apply(void 0, args);
			return selector.apply(void 0, args);
		};

		selectorResolver.hasResolver = true;
		return selectorResolver;
	};

	return {
		resolvers: mappedResolvers,
		selectors: mapValues(selectors, mapSelector),
	};
}
/**
 * Calls a resolver given arguments
 *
 * @param {Object} store        Store reference, for fulfilling via resolvers
 * @param {Object} resolvers    Store Resolvers
 * @param {string} selectorName Selector name to fulfill.
 * @param {Array} args          Selector Arguments.
 */

function fulfillResolver(_x, _x2, _x3) {
	return _fulfillResolver.apply(this, arguments);
}

function _fulfillResolver() {
	_fulfillResolver = _asyncToGenerator(
		/*#__PURE__*/ regenerator.mark(function _callee3(
			store,
			resolvers,
			selectorName
		) {
			var resolver,
				_len5,
				args,
				_key5,
				action,
				_args3 = arguments;

			return regenerator.wrap(function _callee3$(_context3) {
				while (1) {
					switch ((_context3.prev = _context3.next)) {
						case 0:
							resolver = get$1(resolvers, [selectorName]);

							if (resolver) {
								_context3.next = 3;
								break;
							}

							return _context3.abrupt("return");

						case 3:
							for (
								_len5 = _args3.length,
									args = new Array(_len5 > 3 ? _len5 - 3 : 0),
									_key5 = 3;
								_key5 < _len5;
								_key5++
							) {
								args[_key5 - 3] = _args3[_key5];
							}

							action = resolver.fulfill.apply(resolver, args);

							if (!action) {
								_context3.next = 8;
								break;
							}

							_context3.next = 8;
							return store.dispatch(action);

						case 8:
						case "end":
							return _context3.stop();
					}
				}
			}, _callee3);
		})
	);
	return _fulfillResolver.apply(this, arguments);
}

function ownKeys$d(object, enumerableOnly) {
	var keys = Object.keys(object);
	if (Object.getOwnPropertySymbols) {
		var symbols = Object.getOwnPropertySymbols(object);
		if (enumerableOnly)
			symbols = symbols.filter(function (sym) {
				return Object.getOwnPropertyDescriptor(object, sym).enumerable;
			});
		keys.push.apply(keys, symbols);
	}
	return keys;
}

function _objectSpread$c(target) {
	for (var i = 1; i < arguments.length; i++) {
		var source = arguments[i] != null ? arguments[i] : {};
		if (i % 2) {
			ownKeys$d(Object(source), true).forEach(function (key) {
				_defineProperty$1(target, key, source[key]);
			});
		} else if (Object.getOwnPropertyDescriptors) {
			Object.defineProperties(
				target,
				Object.getOwnPropertyDescriptors(source)
			);
		} else {
			ownKeys$d(Object(source)).forEach(function (key) {
				Object.defineProperty(
					target,
					key,
					Object.getOwnPropertyDescriptor(source, key)
				);
			});
		}
	}
	return target;
}

function createCoreDataStore(registry) {
	var getCoreDataSelector = function getCoreDataSelector(selectorName) {
		return function (key) {
			var _registry$select;

			for (
				var _len = arguments.length,
					args = new Array(_len > 1 ? _len - 1 : 0),
					_key = 1;
				_key < _len;
				_key++
			) {
				args[_key - 1] = arguments[_key];
			}

			return (_registry$select = registry.select(key))[
				selectorName
			].apply(_registry$select, args);
		};
	};

	var getCoreDataAction = function getCoreDataAction(actionName) {
		return function (key) {
			var _registry$dispatch;

			for (
				var _len2 = arguments.length,
					args = new Array(_len2 > 1 ? _len2 - 1 : 0),
					_key2 = 1;
				_key2 < _len2;
				_key2++
			) {
				args[_key2 - 1] = arguments[_key2];
			}

			return (_registry$dispatch = registry.dispatch(key))[
				actionName
			].apply(_registry$dispatch, args);
		};
	};

	return {
		getSelectors: function getSelectors() {
			return [
				"getIsResolving",
				"hasStartedResolution",
				"hasFinishedResolution",
				"isResolving",
				"getCachedResolvers",
			].reduce(function (memo, selectorName) {
				return _objectSpread$c(
					_objectSpread$c({}, memo),
					{},
					_defineProperty$1(
						{},
						selectorName,
						getCoreDataSelector(selectorName)
					)
				);
			}, {});
		},
		getActions: function getActions() {
			return [
				"startResolution",
				"finishResolution",
				"invalidateResolution",
				"invalidateResolutionForStore",
				"invalidateResolutionForStoreSelector",
			].reduce(function (memo, actionName) {
				return _objectSpread$c(
					_objectSpread$c({}, memo),
					{},
					_defineProperty$1(
						{},
						actionName,
						getCoreDataAction(actionName)
					)
				);
			}, {});
		},
		subscribe: function subscribe() {
			// There's no reasons to trigger any listener when we subscribe to this store
			// because there's no state stored in this store that need to retrigger selectors
			// if a change happens, the corresponding store where the tracking stated live
			// would have already triggered a "subscribe" call.
			return function () {};
		},
	};
}

function ownKeys$c(object, enumerableOnly) {
	var keys = Object.keys(object);
	if (Object.getOwnPropertySymbols) {
		var symbols = Object.getOwnPropertySymbols(object);
		if (enumerableOnly)
			symbols = symbols.filter(function (sym) {
				return Object.getOwnPropertyDescriptor(object, sym).enumerable;
			});
		keys.push.apply(keys, symbols);
	}
	return keys;
}

function _objectSpread$b(target) {
	for (var i = 1; i < arguments.length; i++) {
		var source = arguments[i] != null ? arguments[i] : {};
		if (i % 2) {
			ownKeys$c(Object(source), true).forEach(function (key) {
				_defineProperty$1(target, key, source[key]);
			});
		} else if (Object.getOwnPropertyDescriptors) {
			Object.defineProperties(
				target,
				Object.getOwnPropertyDescriptors(source)
			);
		} else {
			ownKeys$c(Object(source)).forEach(function (key) {
				Object.defineProperty(
					target,
					key,
					Object.getOwnPropertyDescriptor(source, key)
				);
			});
		}
	}
	return target;
}
/** @typedef {import('./types').WPDataStore} WPDataStore */

/**
 * @typedef {Object} WPDataRegistry An isolated orchestrator of store registrations.
 *
 * @property {Function} registerGenericStore Given a namespace key and settings
 *                                           object, registers a new generic
 *                                           store.
 * @property {Function} registerStore        Given a namespace key and settings
 *                                           object, registers a new namespace
 *                                           store.
 * @property {Function} subscribe            Given a function callback, invokes
 *                                           the callback on any change to state
 *                                           within any registered store.
 * @property {Function} select               Given a namespace key, returns an
 *                                           object of the  store's registered
 *                                           selectors.
 * @property {Function} dispatch             Given a namespace key, returns an
 *                                           object of the store's registered
 *                                           action dispatchers.
 */

/**
 * @typedef {Object} WPDataPlugin An object of registry function overrides.
 *
 * @property {Function} registerStore registers store.
 */

/**
 * Creates a new store registry, given an optional object of initial store
 * configurations.
 *
 * @param {Object}  storeConfigs Initial store configurations.
 * @param {Object?} parent       Parent registry.
 *
 * @return {WPDataRegistry} Data registry.
 */

function createRegistry() {
	var storeConfigs =
		arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	var parent =
		arguments.length > 1 && arguments[1] !== undefined
			? arguments[1]
			: null;
	var stores = {};
	var listeners = [];

	var __experimentalListeningStores = new Set();
	/**
	 * Global listener called for each store's update.
	 */

	function globalListener() {
		listeners.forEach(function (listener) {
			return listener();
		});
	}
	/**
	 * Subscribe to changes to any data.
	 *
	 * @param {Function}   listener Listener function.
	 *
	 * @return {Function}           Unsubscribe function.
	 */

	var subscribe = function subscribe(listener) {
		listeners.push(listener);
		return function () {
			listeners = without(listeners, listener);
		};
	};
	/**
	 * Calls a selector given the current state and extra arguments.
	 *
	 * @param {string|WPDataStore} storeNameOrDefinition Unique namespace identifier for the store
	 *                                                   or the store definition.
	 *
	 * @return {*} The selector's returned value.
	 */

	function select(storeNameOrDefinition) {
		var storeName = isObject$1(storeNameOrDefinition)
			? storeNameOrDefinition.name
			: storeNameOrDefinition;

		__experimentalListeningStores.add(storeName);

		var store = stores[storeName];

		if (store) {
			return store.getSelectors();
		}

		return parent && parent.select(storeName);
	}

	function __experimentalMarkListeningStores(callback, ref) {
		__experimentalListeningStores.clear();

		var result = callback.call(this);
		ref.current = Array.from(__experimentalListeningStores);
		return result;
	}
	/**
	 * Given the name of a registered store, returns an object containing the store's
	 * selectors pre-bound to state so that you only need to supply additional arguments,
	 * and modified so that they return promises that resolve to their eventual values,
	 * after any resolvers have ran.
	 *
	 * @param {string|WPDataStore} storeNameOrDefinition Unique namespace identifier for the store
	 *                                                   or the store definition.
	 *
	 * @return {Object} Each key of the object matches the name of a selector.
	 */

	function resolveSelect(storeNameOrDefinition) {
		var storeName = isObject$1(storeNameOrDefinition)
			? storeNameOrDefinition.name
			: storeNameOrDefinition;

		__experimentalListeningStores.add(storeName);

		var store = stores[storeName];

		if (store) {
			return store.getResolveSelectors();
		}

		return parent && parent.resolveSelect(storeName);
	}
	/**
	 * Returns the available actions for a part of the state.
	 *
	 * @param {string|WPDataStore} storeNameOrDefinition Unique namespace identifier for the store
	 *                                                   or the store definition.
	 *
	 * @return {*} The action's returned value.
	 */

	function dispatch(storeNameOrDefinition) {
		var storeName = isObject$1(storeNameOrDefinition)
			? storeNameOrDefinition.name
			: storeNameOrDefinition;
		var store = stores[storeName];

		if (store) {
			return store.getActions();
		}

		return parent && parent.dispatch(storeName);
	} //
	// Deprecated
	// TODO: Remove this after `use()` is removed.
	//

	function withPlugins(attributes) {
		return mapValues(attributes, function (attribute, key) {
			if (typeof attribute !== "function") {
				return attribute;
			}

			return function () {
				return registry[key].apply(null, arguments);
			};
		});
	}
	/**
	 * Registers a generic store.
	 *
	 * @param {string} key    Store registry key.
	 * @param {Object} config Configuration (getSelectors, getActions, subscribe).
	 */

	function registerGenericStore(key, config) {
		if (typeof config.getSelectors !== "function") {
			throw new TypeError("config.getSelectors must be a function");
		}

		if (typeof config.getActions !== "function") {
			throw new TypeError("config.getActions must be a function");
		}

		if (typeof config.subscribe !== "function") {
			throw new TypeError("config.subscribe must be a function");
		}

		stores[key] = config;
		config.subscribe(globalListener);
	}
	/**
	 * Registers a new store definition.
	 *
	 * @param {WPDataStore} store Store definition.
	 */

	function register(store) {
		registerGenericStore(store.name, store.instantiate(registry));
	}
	/**
	 * Subscribe handler to a store.
	 *
	 * @param {string[]} storeName The store name.
	 * @param {Function} handler   The function subscribed to the store.
	 * @return {Function} A function to unsubscribe the handler.
	 */

	function __experimentalSubscribeStore(storeName, handler) {
		if (storeName in stores) {
			return stores[storeName].subscribe(handler);
		} // Trying to access a store that hasn't been registered,
		// this is a pattern rarely used but seen in some places.
		// We fallback to regular `subscribe` here for backward-compatibility for now.
		// See https://github.com/WordPress/gutenberg/pull/27466 for more info.

		if (!parent) {
			return subscribe(handler);
		}

		return parent.__experimentalSubscribeStore(storeName, handler);
	}

	var registry = {
		registerGenericStore: registerGenericStore,
		stores: stores,
		namespaces: stores,
		// TODO: Deprecate/remove this.
		subscribe: subscribe,
		select: select,
		resolveSelect: resolveSelect,
		dispatch: dispatch,
		use: use,
		register: register,
		__experimentalMarkListeningStores: __experimentalMarkListeningStores,
		__experimentalSubscribeStore: __experimentalSubscribeStore,
	};
	/**
	 * Registers a standard `@wordpress/data` store.
	 *
	 * @param {string} storeName  Unique namespace identifier.
	 * @param {Object} options    Store description (reducer, actions, selectors, resolvers).
	 *
	 * @return {Object} Registered store object.
	 */

	registry.registerStore = function (storeName, options) {
		if (!options.reducer) {
			throw new TypeError("Must specify store reducer");
		}

		var store = createReduxStore(storeName, options).instantiate(registry);
		registerGenericStore(storeName, store);
		return store.store;
	}; //
	// TODO:
	// This function will be deprecated as soon as it is no longer internally referenced.
	//

	function use(plugin, options) {
		registry = _objectSpread$b(
			_objectSpread$b({}, registry),
			plugin(registry, options)
		);
		return registry;
	}

	registerGenericStore("core/data", createCoreDataStore(registry));
	Object.entries(storeConfigs).forEach(function (_ref) {
		var _ref2 = _slicedToArray(_ref, 2),
			name = _ref2[0],
			config = _ref2[1];

		return registry.registerStore(name, config);
	});

	if (parent) {
		parent.subscribe(globalListener);
	}

	return withPlugins(registry);
}

/**
 * Internal dependencies
 */
var defaultRegistry = createRegistry();

function _classCallCheck$1(instance, Constructor) {
	if (!(instance instanceof Constructor)) {
		throw new TypeError("Cannot call a class as a function");
	}
}

function _extends$2() {
	_extends$2 =
		Object.assign ||
		function (target) {
			for (var i = 1; i < arguments.length; i++) {
				var source = arguments[i];

				for (var key in source) {
					if (Object.prototype.hasOwnProperty.call(source, key)) {
						target[key] = source[key];
					}
				}
			}

			return target;
		};

	return _extends$2.apply(this, arguments);
}

function _typeof$1(obj) {
	"@babel/helpers - typeof";

	if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
		_typeof$1 = function _typeof(obj) {
			return typeof obj;
		};
	} else {
		_typeof$1 = function _typeof(obj) {
			return obj &&
				typeof Symbol === "function" &&
				obj.constructor === Symbol &&
				obj !== Symbol.prototype
				? "symbol"
				: typeof obj;
		};
	}

	return _typeof$1(obj);
}

function _objectWithoutPropertiesLoose(source, excluded) {
	if (source == null) return {};
	var target = {};
	var sourceKeys = Object.keys(source);
	var key, i;

	for (i = 0; i < sourceKeys.length; i++) {
		key = sourceKeys[i];
		if (excluded.indexOf(key) >= 0) continue;
		target[key] = source[key];
	}

	return target;
}

function _objectWithoutProperties$1(source, excluded) {
	if (source == null) return {};
	var target = _objectWithoutPropertiesLoose(source, excluded);
	var key, i;

	if (Object.getOwnPropertySymbols) {
		var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

		for (i = 0; i < sourceSymbolKeys.length; i++) {
			key = sourceSymbolKeys[i];
			if (excluded.indexOf(key) >= 0) continue;
			if (!Object.prototype.propertyIsEnumerable.call(source, key))
				continue;
			target[key] = source[key];
		}
	}

	return target;
}

function _defineProperties(target, props) {
	for (var i = 0; i < props.length; i++) {
		var descriptor = props[i];
		descriptor.enumerable = descriptor.enumerable || false;
		descriptor.configurable = true;
		if ("value" in descriptor) descriptor.writable = true;
		Object.defineProperty(target, descriptor.key, descriptor);
	}
}

function _createClass$1(Constructor, protoProps, staticProps) {
	if (protoProps) _defineProperties(Constructor.prototype, protoProps);
	if (staticProps) _defineProperties(Constructor, staticProps);
	return Constructor;
}

function _setPrototypeOf(o, p) {
	_setPrototypeOf =
		Object.setPrototypeOf ||
		function _setPrototypeOf(o, p) {
			o.__proto__ = p;
			return o;
		};

	return _setPrototypeOf(o, p);
}

function _inherits$1(subClass, superClass) {
	if (typeof superClass !== "function" && superClass !== null) {
		throw new TypeError(
			"Super expression must either be null or a function"
		);
	}

	subClass.prototype = Object.create(superClass && superClass.prototype, {
		constructor: {
			value: subClass,
			writable: true,
			configurable: true,
		},
	});
	if (superClass) _setPrototypeOf(subClass, superClass);
}

/**
 * Memize options object.
 *
 * @typedef MemizeOptions
 *
 * @property {number} [maxSize] Maximum size of the cache.
 */

/**
 * Internal cache entry.
 *
 * @typedef MemizeCacheNode
 *
 * @property {?MemizeCacheNode|undefined} [prev] Previous node.
 * @property {?MemizeCacheNode|undefined} [next] Next node.
 * @property {Array<*>}                   args   Function arguments for cache
 *                                               entry.
 * @property {*}                          val    Function result.
 */

/**
 * Properties of the enhanced function for controlling cache.
 *
 * @typedef MemizeMemoizedFunction
 *
 * @property {()=>void} clear Clear the cache.
 */

/**
 * Accepts a function to be memoized, and returns a new memoized function, with
 * optional options.
 *
 * @template {Function} F
 *
 * @param {F}             fn        Function to memoize.
 * @param {MemizeOptions} [options] Options object.
 *
 * @return {F & MemizeMemoizedFunction} Memoized function.
 */
function memize(fn, options) {
	var size = 0;

	/** @type {?MemizeCacheNode|undefined} */
	var head;

	/** @type {?MemizeCacheNode|undefined} */
	var tail;

	options = options || {};

	function memoized(/* ...args */) {
		var node = head,
			len = arguments.length,
			args,
			i;

		searchCache: while (node) {
			// Perform a shallow equality test to confirm that whether the node
			// under test is a candidate for the arguments passed. Two arrays
			// are shallowly equal if their length matches and each entry is
			// strictly equal between the two sets. Avoid abstracting to a
			// function which could incur an arguments leaking deoptimization.

			// Check whether node arguments match arguments length
			if (node.args.length !== arguments.length) {
				node = node.next;
				continue;
			}

			// Check whether node arguments match arguments values
			for (i = 0; i < len; i++) {
				if (node.args[i] !== arguments[i]) {
					node = node.next;
					continue searchCache;
				}
			}

			// At this point we can assume we've found a match

			// Surface matched node to head if not already
			if (node !== head) {
				// As tail, shift to previous. Must only shift if not also
				// head, since if both head and tail, there is no previous.
				if (node === tail) {
					tail = node.prev;
				}

				// Adjust siblings to point to each other. If node was tail,
				// this also handles new tail's empty `next` assignment.
				/** @type {MemizeCacheNode} */ (node.prev).next = node.next;
				if (node.next) {
					node.next.prev = node.prev;
				}

				node.next = head;
				node.prev = null;
				/** @type {MemizeCacheNode} */ (head).prev = node;
				head = node;
			}

			// Return immediately
			return node.val;
		}

		// No cached value found. Continue to insertion phase:

		// Create a copy of arguments (avoid leaking deoptimization)
		args = new Array(len);
		for (i = 0; i < len; i++) {
			args[i] = arguments[i];
		}

		node = {
			args: args,

			// Generate the result from original function
			val: fn.apply(null, args),
		};

		// Don't need to check whether node is already head, since it would
		// have been returned above already if it was

		// Shift existing head down list
		if (head) {
			head.prev = node;
			node.next = head;
		} else {
			// If no head, follows that there's no tail (at initial or reset)
			tail = node;
		}

		// Trim tail if we're reached max size and are pending cache insertion
		if (size === /** @type {MemizeOptions} */ (options).maxSize) {
			tail = /** @type {MemizeCacheNode} */ (tail).prev;
			/** @type {MemizeCacheNode} */ (tail).next = null;
		} else {
			size++;
		}

		head = node;

		return node.val;
	}

	memoized.clear = function () {
		head = null;
		tail = null;
		size = 0;
	};

	if (process.env.NODE_ENV === "test") {
		// Cache is not exposed in the public API, but used in tests to ensure
		// expected list progression
		memoized.getCache = function () {
			return [head, tail, size];
		};
	}

	// Ignore reason: There's not a clear solution to create an intersection of
	// the function with additional properties, where the goal is to retain the
	// function signature of the incoming argument and add control properties
	// on the return value.

	// @ts-ignore
	return memoized;
}

var memize_1 = memize;

var sprintf = {};

/* global window, exports, define */

(function (exports) {
	!(function () {
		var re = {
			not_string: /[^s]/,
			not_bool: /[^t]/,
			not_type: /[^T]/,
			not_primitive: /[^v]/,
			number: /[diefg]/,
			numeric_arg: /[bcdiefguxX]/,
			json: /[j]/,
			not_json: /[^j]/,
			text: /^[^\x25]+/,
			modulo: /^\x25{2}/,
			placeholder:
				/^\x25(?:([1-9]\d*)\$|\(([^)]+)\))?(\+)?(0|'[^$])?(-)?(\d+)?(?:\.(\d+))?([b-gijostTuvxX])/,
			key: /^([a-z_][a-z_\d]*)/i,
			key_access: /^\.([a-z_][a-z_\d]*)/i,
			index_access: /^\[(\d+)\]/,
			sign: /^[+-]/,
		};

		function sprintf(key) {
			// `arguments` is not an array, but should be fine for this call
			return sprintf_format(sprintf_parse(key), arguments);
		}

		function vsprintf(fmt, argv) {
			return sprintf.apply(null, [fmt].concat(argv || []));
		}

		function sprintf_format(parse_tree, argv) {
			var cursor = 1,
				tree_length = parse_tree.length,
				arg,
				output = "",
				i,
				k,
				ph,
				pad,
				pad_character,
				pad_length,
				is_positive,
				sign;
			for (i = 0; i < tree_length; i++) {
				if (typeof parse_tree[i] === "string") {
					output += parse_tree[i];
				} else if (typeof parse_tree[i] === "object") {
					ph = parse_tree[i]; // convenience purposes only
					if (ph.keys) {
						// keyword argument
						arg = argv[cursor];
						for (k = 0; k < ph.keys.length; k++) {
							if (arg == undefined) {
								throw new Error(
									sprintf(
										'[sprintf] Cannot access property "%s" of undefined value "%s"',
										ph.keys[k],
										ph.keys[k - 1]
									)
								);
							}
							arg = arg[ph.keys[k]];
						}
					} else if (ph.param_no) {
						// positional argument (explicit)
						arg = argv[ph.param_no];
					} else {
						// positional argument (implicit)
						arg = argv[cursor++];
					}

					if (
						re.not_type.test(ph.type) &&
						re.not_primitive.test(ph.type) &&
						arg instanceof Function
					) {
						arg = arg();
					}

					if (
						re.numeric_arg.test(ph.type) &&
						typeof arg !== "number" &&
						isNaN(arg)
					) {
						throw new TypeError(
							sprintf(
								"[sprintf] expecting number but found %T",
								arg
							)
						);
					}

					if (re.number.test(ph.type)) {
						is_positive = arg >= 0;
					}

					switch (ph.type) {
						case "b":
							arg = parseInt(arg, 10).toString(2);
							break;
						case "c":
							arg = String.fromCharCode(parseInt(arg, 10));
							break;
						case "d":
						case "i":
							arg = parseInt(arg, 10);
							break;
						case "j":
							arg = JSON.stringify(
								arg,
								null,
								ph.width ? parseInt(ph.width) : 0
							);
							break;
						case "e":
							arg = ph.precision
								? parseFloat(arg).toExponential(ph.precision)
								: parseFloat(arg).toExponential();
							break;
						case "f":
							arg = ph.precision
								? parseFloat(arg).toFixed(ph.precision)
								: parseFloat(arg);
							break;
						case "g":
							arg = ph.precision
								? String(Number(arg.toPrecision(ph.precision)))
								: parseFloat(arg);
							break;
						case "o":
							arg = (parseInt(arg, 10) >>> 0).toString(8);
							break;
						case "s":
							arg = String(arg);
							arg = ph.precision
								? arg.substring(0, ph.precision)
								: arg;
							break;
						case "t":
							arg = String(!!arg);
							arg = ph.precision
								? arg.substring(0, ph.precision)
								: arg;
							break;
						case "T":
							arg = Object.prototype.toString
								.call(arg)
								.slice(8, -1)
								.toLowerCase();
							arg = ph.precision
								? arg.substring(0, ph.precision)
								: arg;
							break;
						case "u":
							arg = parseInt(arg, 10) >>> 0;
							break;
						case "v":
							arg = arg.valueOf();
							arg = ph.precision
								? arg.substring(0, ph.precision)
								: arg;
							break;
						case "x":
							arg = (parseInt(arg, 10) >>> 0).toString(16);
							break;
						case "X":
							arg = (parseInt(arg, 10) >>> 0)
								.toString(16)
								.toUpperCase();
							break;
					}
					if (re.json.test(ph.type)) {
						output += arg;
					} else {
						if (
							re.number.test(ph.type) &&
							(!is_positive || ph.sign)
						) {
							sign = is_positive ? "+" : "-";
							arg = arg.toString().replace(re.sign, "");
						} else {
							sign = "";
						}
						pad_character = ph.pad_char
							? ph.pad_char === "0"
								? "0"
								: ph.pad_char.charAt(1)
							: " ";
						pad_length = ph.width - (sign + arg).length;
						pad = ph.width
							? pad_length > 0
								? pad_character.repeat(pad_length)
								: ""
							: "";
						output += ph.align
							? sign + arg + pad
							: pad_character === "0"
							? sign + pad + arg
							: pad + sign + arg;
					}
				}
			}
			return output;
		}

		var sprintf_cache = Object.create(null);

		function sprintf_parse(fmt) {
			if (sprintf_cache[fmt]) {
				return sprintf_cache[fmt];
			}

			var _fmt = fmt,
				match,
				parse_tree = [],
				arg_names = 0;
			while (_fmt) {
				if ((match = re.text.exec(_fmt)) !== null) {
					parse_tree.push(match[0]);
				} else if ((match = re.modulo.exec(_fmt)) !== null) {
					parse_tree.push("%");
				} else if ((match = re.placeholder.exec(_fmt)) !== null) {
					if (match[2]) {
						arg_names |= 1;
						var field_list = [],
							replacement_field = match[2],
							field_match = [];
						if (
							(field_match = re.key.exec(replacement_field)) !==
							null
						) {
							field_list.push(field_match[1]);
							while (
								(replacement_field =
									replacement_field.substring(
										field_match[0].length
									)) !== ""
							) {
								if (
									(field_match =
										re.key_access.exec(
											replacement_field
										)) !== null
								) {
									field_list.push(field_match[1]);
								} else if (
									(field_match =
										re.index_access.exec(
											replacement_field
										)) !== null
								) {
									field_list.push(field_match[1]);
								} else {
									throw new SyntaxError(
										"[sprintf] failed to parse named argument key"
									);
								}
							}
						} else {
							throw new SyntaxError(
								"[sprintf] failed to parse named argument key"
							);
						}
						match[2] = field_list;
					} else {
						arg_names |= 2;
					}
					if (arg_names === 3) {
						throw new Error(
							"[sprintf] mixing positional and named placeholders is not (yet) supported"
						);
					}

					parse_tree.push({
						placeholder: match[0],
						param_no: match[1],
						keys: match[2],
						sign: match[3],
						pad_char: match[4],
						align: match[5],
						width: match[6],
						precision: match[7],
						type: match[8],
					});
				} else {
					throw new SyntaxError("[sprintf] unexpected placeholder");
				}
				_fmt = _fmt.substring(match[0].length);
			}
			return (sprintf_cache[fmt] = parse_tree);
		}

		/**
		 * export to either browser or node.js
		 */
		/* eslint-disable quote-props */
		{
			exports["sprintf"] = sprintf;
			exports["vsprintf"] = vsprintf;
		}
		if (typeof window !== "undefined") {
			window["sprintf"] = sprintf;
			window["vsprintf"] = vsprintf;
		}
		/* eslint-enable quote-props */
	})(); // eslint-disable-line
})(sprintf);

/**
 * External dependencies
 */
/**
 * Log to console, once per message; or more precisely, per referentially equal
 * argument set. Because Jed throws errors, we log these to the console instead
 * to avoid crashing the application.
 *
 * @param {...*} args Arguments to pass to `console.error`
 */

memize_1(console.error); // eslint-disable-line no-console

var PRECEDENCE, OPENERS, TERMINATORS, PATTERN;

/**
 * Operator precedence mapping.
 *
 * @type {Object}
 */
PRECEDENCE = {
	"(": 9,
	"!": 8,
	"*": 7,
	"/": 7,
	"%": 7,
	"+": 6,
	"-": 6,
	"<": 5,
	"<=": 5,
	">": 5,
	">=": 5,
	"==": 4,
	"!=": 4,
	"&&": 3,
	"||": 2,
	"?": 1,
	"?:": 1,
};

/**
 * Characters which signal pair opening, to be terminated by terminators.
 *
 * @type {string[]}
 */
OPENERS = ["(", "?"];

/**
 * Characters which signal pair termination, the value an array with the
 * opener as its first member. The second member is an optional operator
 * replacement to push to the stack.
 *
 * @type {string[]}
 */
TERMINATORS = {
	")": ["("],
	":": ["?", "?:"],
};

/**
 * Pattern matching operators and openers.
 *
 * @type {RegExp}
 */
PATTERN = /<=|>=|==|!=|&&|\|\||\?:|\(|!|\*|\/|%|\+|-|<|>|\?|\)|:/;

/**
 * Given a C expression, returns the equivalent postfix (Reverse Polish)
 * notation terms as an array.
 *
 * If a postfix string is desired, simply `.join( ' ' )` the result.
 *
 * @example
 *
 * ```js
 * import postfix from '@tannin/postfix';
 *
 * postfix( 'n > 1' );
 * // ⇒ [ 'n', '1', '>' ]
 * ```
 *
 * @param {string} expression C expression.
 *
 * @return {string[]} Postfix terms.
 */
function postfix(expression) {
	var terms = [],
		stack = [],
		match,
		operator,
		term,
		element;

	while ((match = expression.match(PATTERN))) {
		operator = match[0];

		// Term is the string preceding the operator match. It may contain
		// whitespace, and may be empty (if operator is at beginning).
		term = expression.substr(0, match.index).trim();
		if (term) {
			terms.push(term);
		}

		while ((element = stack.pop())) {
			if (TERMINATORS[operator]) {
				if (TERMINATORS[operator][0] === element) {
					// Substitution works here under assumption that because
					// the assigned operator will no longer be a terminator, it
					// will be pushed to the stack during the condition below.
					operator = TERMINATORS[operator][1] || operator;
					break;
				}
			} else if (
				OPENERS.indexOf(element) >= 0 ||
				PRECEDENCE[element] < PRECEDENCE[operator]
			) {
				// Push to stack if either an opener or when pop reveals an
				// element of lower precedence.
				stack.push(element);
				break;
			}

			// For each popped from stack, push to terms.
			terms.push(element);
		}

		if (!TERMINATORS[operator]) {
			stack.push(operator);
		}

		// Slice matched fragment from expression to continue match.
		expression = expression.substr(match.index + operator.length);
	}

	// Push remainder of operand, if exists, to terms.
	expression = expression.trim();
	if (expression) {
		terms.push(expression);
	}

	// Pop remaining items from stack into terms.
	return terms.concat(stack.reverse());
}

/**
 * Operator callback functions.
 *
 * @type {Object}
 */
var OPERATORS = {
	"!": function (a) {
		return !a;
	},
	"*": function (a, b) {
		return a * b;
	},
	"/": function (a, b) {
		return a / b;
	},
	"%": function (a, b) {
		return a % b;
	},
	"+": function (a, b) {
		return a + b;
	},
	"-": function (a, b) {
		return a - b;
	},
	"<": function (a, b) {
		return a < b;
	},
	"<=": function (a, b) {
		return a <= b;
	},
	">": function (a, b) {
		return a > b;
	},
	">=": function (a, b) {
		return a >= b;
	},
	"==": function (a, b) {
		return a === b;
	},
	"!=": function (a, b) {
		return a !== b;
	},
	"&&": function (a, b) {
		return a && b;
	},
	"||": function (a, b) {
		return a || b;
	},
	"?:": function (a, b, c) {
		if (a) {
			throw b;
		}

		return c;
	},
};

/**
 * Given an array of postfix terms and operand variables, returns the result of
 * the postfix evaluation.
 *
 * @example
 *
 * ```js
 * import evaluate from '@tannin/evaluate';
 *
 * // 3 + 4 * 5 / 6 ⇒ '3 4 5 * 6 / +'
 * const terms = [ '3', '4', '5', '*', '6', '/', '+' ];
 *
 * evaluate( terms, {} );
 * // ⇒ 6.333333333333334
 * ```
 *
 * @param {string[]} postfix   Postfix terms.
 * @param {Object}   variables Operand variables.
 *
 * @return {*} Result of evaluation.
 */
function evaluate(postfix, variables) {
	var stack = [],
		i,
		j,
		args,
		getOperatorResult,
		term,
		value;

	for (i = 0; i < postfix.length; i++) {
		term = postfix[i];

		getOperatorResult = OPERATORS[term];
		if (getOperatorResult) {
			// Pop from stack by number of function arguments.
			j = getOperatorResult.length;
			args = Array(j);
			while (j--) {
				args[j] = stack.pop();
			}

			try {
				value = getOperatorResult.apply(null, args);
			} catch (earlyReturn) {
				return earlyReturn;
			}
		} else if (variables.hasOwnProperty(term)) {
			value = variables[term];
		} else {
			value = +term;
		}

		stack.push(value);
	}

	return stack[0];
}

/**
 * Given a C expression, returns a function which can be called to evaluate its
 * result.
 *
 * @example
 *
 * ```js
 * import compile from '@tannin/compile';
 *
 * const evaluate = compile( 'n > 1' );
 *
 * evaluate( { n: 2 } );
 * // ⇒ true
 * ```
 *
 * @param {string} expression C expression.
 *
 * @return {(variables?:{[variable:string]:*})=>*} Compiled evaluator.
 */
function compile$1(expression) {
	var terms = postfix(expression);

	return function (variables) {
		return evaluate(terms, variables);
	};
}

/**
 * Given a C expression, returns a function which, when called with a value,
 * evaluates the result with the value assumed to be the "n" variable of the
 * expression. The result will be coerced to its numeric equivalent.
 *
 * @param {string} expression C expression.
 *
 * @return {Function} Evaluator function.
 */
function pluralForms(expression) {
	var evaluate = compile$1(expression);

	return function (n) {
		return +evaluate({ n: n });
	};
}

/**
 * Tannin constructor options.
 *
 * @typedef {Object} TanninOptions
 *
 * @property {string}   [contextDelimiter] Joiner in string lookup with context.
 * @property {Function} [onMissingKey]     Callback to invoke when key missing.
 */

/**
 * Domain metadata.
 *
 * @typedef {Object} TanninDomainMetadata
 *
 * @property {string}            [domain]       Domain name.
 * @property {string}            [lang]         Language code.
 * @property {(string|Function)} [plural_forms] Plural forms expression or
 *                                              function evaluator.
 */

/**
 * Domain translation pair respectively representing the singular and plural
 * translation.
 *
 * @typedef {[string,string]} TanninTranslation
 */

/**
 * Locale data domain. The key is used as reference for lookup, the value an
 * array of two string entries respectively representing the singular and plural
 * translation.
 *
 * @typedef {{[key:string]:TanninDomainMetadata|TanninTranslation,'':TanninDomainMetadata|TanninTranslation}} TanninLocaleDomain
 */

/**
 * Jed-formatted locale data.
 *
 * @see http://messageformat.github.io/Jed/
 *
 * @typedef {{[domain:string]:TanninLocaleDomain}} TanninLocaleData
 */

/**
 * Default Tannin constructor options.
 *
 * @type {TanninOptions}
 */
var DEFAULT_OPTIONS$1 = {
	contextDelimiter: "\u0004",
	onMissingKey: null,
};

/**
 * Given a specific locale data's config `plural_forms` value, returns the
 * expression.
 *
 * @example
 *
 * ```
 * getPluralExpression( 'nplurals=2; plural=(n != 1);' ) === '(n != 1)'
 * ```
 *
 * @param {string} pf Locale data plural forms.
 *
 * @return {string} Plural forms expression.
 */
function getPluralExpression(pf) {
	var parts, i, part;

	parts = pf.split(";");

	for (i = 0; i < parts.length; i++) {
		part = parts[i].trim();
		if (part.indexOf("plural=") === 0) {
			return part.substr(7);
		}
	}
}

/**
 * Tannin constructor.
 *
 * @class
 *
 * @param {TanninLocaleData} data      Jed-formatted locale data.
 * @param {TanninOptions}    [options] Tannin options.
 */
function Tannin(data, options) {
	var key;

	/**
	 * Jed-formatted locale data.
	 *
	 * @name Tannin#data
	 * @type {TanninLocaleData}
	 */
	this.data = data;

	/**
	 * Plural forms function cache, keyed by plural forms string.
	 *
	 * @name Tannin#pluralForms
	 * @type {Object<string,Function>}
	 */
	this.pluralForms = {};

	/**
	 * Effective options for instance, including defaults.
	 *
	 * @name Tannin#options
	 * @type {TanninOptions}
	 */
	this.options = {};

	for (key in DEFAULT_OPTIONS$1) {
		this.options[key] =
			options !== undefined && key in options
				? options[key]
				: DEFAULT_OPTIONS$1[key];
	}
}

/**
 * Returns the plural form index for the given domain and value.
 *
 * @param {string} domain Domain on which to calculate plural form.
 * @param {number} n      Value for which plural form is to be calculated.
 *
 * @return {number} Plural form index.
 */
Tannin.prototype.getPluralForm = function (domain, n) {
	var getPluralForm = this.pluralForms[domain],
		config,
		plural,
		pf;

	if (!getPluralForm) {
		config = this.data[domain][""];

		pf =
			config["Plural-Forms"] ||
			config["plural-forms"] ||
			// Ignore reason: As known, there's no way to document the empty
			// string property on a key to guarantee this as metadata.
			// @ts-ignore
			config.plural_forms;

		if (typeof pf !== "function") {
			plural = getPluralExpression(
				config["Plural-Forms"] ||
					config["plural-forms"] ||
					// Ignore reason: As known, there's no way to document the empty
					// string property on a key to guarantee this as metadata.
					// @ts-ignore
					config.plural_forms
			);

			pf = pluralForms(plural);
		}

		getPluralForm = this.pluralForms[domain] = pf;
	}

	return getPluralForm(n);
};

/**
 * Translate a string.
 *
 * @param {string}      domain   Translation domain.
 * @param {string|void} context  Context distinguishing terms of the same name.
 * @param {string}      singular Primary key for translation lookup.
 * @param {string=}     plural   Fallback value used for non-zero plural
 *                               form index.
 * @param {number=}     n        Value to use in calculating plural form.
 *
 * @return {string} Translated string.
 */
Tannin.prototype.dcnpgettext = function (domain, context, singular, plural, n) {
	var index, key, entry;

	if (n === undefined) {
		// Default to singular.
		index = 0;
	} else {
		// Find index by evaluating plural form for value.
		index = this.getPluralForm(domain, n);
	}

	key = singular;

	// If provided, context is prepended to key with delimiter.
	if (context) {
		key = context + this.options.contextDelimiter + singular;
	}

	entry = this.data[domain][key];

	// Verify not only that entry exists, but that the intended index is within
	// range and non-empty.
	if (entry && entry[index]) {
		return entry[index];
	}

	if (this.options.onMissingKey) {
		this.options.onMissingKey(singular, domain);
	}

	// If entry not found, fall back to singular vs. plural with zero index
	// representing the singular value.
	return index === 0 ? singular : plural;
};

function ownKeys$b(object, enumerableOnly) {
	var keys = Object.keys(object);
	if (Object.getOwnPropertySymbols) {
		var symbols = Object.getOwnPropertySymbols(object);
		if (enumerableOnly)
			symbols = symbols.filter(function (sym) {
				return Object.getOwnPropertyDescriptor(object, sym).enumerable;
			});
		keys.push.apply(keys, symbols);
	}
	return keys;
}

function _objectSpread$a(target) {
	for (var i = 1; i < arguments.length; i++) {
		var source = arguments[i] != null ? arguments[i] : {};
		if (i % 2) {
			ownKeys$b(Object(source), true).forEach(function (key) {
				_defineProperty$1(target, key, source[key]);
			});
		} else if (Object.getOwnPropertyDescriptors) {
			Object.defineProperties(
				target,
				Object.getOwnPropertyDescriptors(source)
			);
		} else {
			ownKeys$b(Object(source)).forEach(function (key) {
				Object.defineProperty(
					target,
					key,
					Object.getOwnPropertyDescriptor(source, key)
				);
			});
		}
	}
	return target;
}
/**
 * @typedef {Record<string,any>} LocaleData
 */

/**
 * Default locale data to use for Tannin domain when not otherwise provided.
 * Assumes an English plural forms expression.
 *
 * @type {LocaleData}
 */

var DEFAULT_LOCALE_DATA$2 = {
	"": {
		/** @param {number} n */
		plural_forms: function plural_forms(n) {
			return n === 1 ? 0 : 1;
		},
	},
};
/*
 * Regular expression that matches i18n hooks like `i18n.gettext`, `i18n.ngettext`,
 * `i18n.gettext_domain` or `i18n.ngettext_with_context` or `i18n.has_translation`.
 */

var I18N_HOOK_REGEXP$2 = /^i18n\.(n?gettext|has_translation)(_|$)/;
/**
 * @typedef {(domain?: string) => LocaleData} GetLocaleData
 *
 * Returns locale data by domain in a
 * Jed-formatted JSON object shape.
 *
 * @see http://messageformat.github.io/Jed/
 */

/**
 * @typedef {(data?: LocaleData, domain?: string) => void} SetLocaleData
 *
 * Merges locale data into the Tannin instance by domain. Accepts data in a
 * Jed-formatted JSON object shape.
 *
 * @see http://messageformat.github.io/Jed/
 */

/**
 * @typedef {(data?: LocaleData, domain?: string) => void} ResetLocaleData
 *
 * Resets all current Tannin instance locale data and sets the specified
 * locale data for the domain. Accepts data in a Jed-formatted JSON object shape.
 *
 * @see http://messageformat.github.io/Jed/
 */

/** @typedef {() => void} SubscribeCallback */

/** @typedef {() => void} UnsubscribeCallback */

/**
 * @typedef {(callback: SubscribeCallback) => UnsubscribeCallback} Subscribe
 *
 * Subscribes to changes of locale data
 */

/**
 * @typedef {(domain?: string) => string} GetFilterDomain
 * Retrieve the domain to use when calling domain-specific filters.
 */

/**
 * @typedef {(text: string, domain?: string) => string} __
 *
 * Retrieve the translation of text.
 *
 * @see https://developer.wordpress.org/reference/functions/__/
 */

/**
 * @typedef {(text: string, context: string, domain?: string) => string} _x
 *
 * Retrieve translated string with gettext context.
 *
 * @see https://developer.wordpress.org/reference/functions/_x/
 */

/**
 * @typedef {(single: string, plural: string, number: number, domain?: string) => string} _n
 *
 * Translates and retrieves the singular or plural form based on the supplied
 * number.
 *
 * @see https://developer.wordpress.org/reference/functions/_n/
 */

/**
 * @typedef {(single: string, plural: string, number: number, context: string, domain?: string) => string} _nx
 *
 * Translates and retrieves the singular or plural form based on the supplied
 * number, with gettext context.
 *
 * @see https://developer.wordpress.org/reference/functions/_nx/
 */

/**
 * @typedef {() => boolean} IsRtl
 *
 * Check if current locale is RTL.
 *
 * **RTL (Right To Left)** is a locale property indicating that text is written from right to left.
 * For example, the `he` locale (for Hebrew) specifies right-to-left. Arabic (ar) is another common
 * language written RTL. The opposite of RTL, LTR (Left To Right) is used in other languages,
 * including English (`en`, `en-US`, `en-GB`, etc.), Spanish (`es`), and French (`fr`).
 */

/**
 * @typedef {(single: string, context?: string, domain?: string) => boolean} HasTranslation
 *
 * Check if there is a translation for a given string in singular form.
 */

/** @typedef {import('@wordpress/hooks').Hooks} Hooks */

/**
 * An i18n instance
 *
 * @typedef I18n
 * @property {GetLocaleData} getLocaleData     Returns locale data by domain in a Jed-formatted JSON object shape.
 * @property {SetLocaleData} setLocaleData     Merges locale data into the Tannin instance by domain. Accepts data in a
 *                                             Jed-formatted JSON object shape.
 * @property {ResetLocaleData} resetLocaleData Resets all current Tannin instance locale data and sets the specified
 *                                             locale data for the domain. Accepts data in a Jed-formatted JSON object shape.
 * @property {Subscribe} subscribe             Subscribes to changes of Tannin locale data.
 * @property {__} __                           Retrieve the translation of text.
 * @property {_x} _x                           Retrieve translated string with gettext context.
 * @property {_n} _n                           Translates and retrieves the singular or plural form based on the supplied
 *                                             number.
 * @property {_nx} _nx                         Translates and retrieves the singular or plural form based on the supplied
 *                                             number, with gettext context.
 * @property {IsRtl} isRTL                     Check if current locale is RTL.
 * @property {HasTranslation} hasTranslation   Check if there is a translation for a given string.
 */

/**
 * Create an i18n instance
 *
 * @param {LocaleData} [initialData]    Locale data configuration.
 * @param {string}     [initialDomain]  Domain for which configuration applies.
 * @param {Hooks} [hooks]     Hooks implementation.
 * @return {I18n}                       I18n instance
 */

var createI18n$2 = function createI18n(initialData, initialDomain, hooks) {
	/**
	 * The underlying instance of Tannin to which exported functions interface.
	 *
	 * @type {Tannin}
	 */
	var tannin = new Tannin({});
	var listeners = new Set();

	var notifyListeners = function notifyListeners() {
		listeners.forEach(function (listener) {
			return listener();
		});
	};
	/**
	 * Subscribe to changes of locale data.
	 *
	 * @param {SubscribeCallback} callback Subscription callback.
	 * @return {UnsubscribeCallback} Unsubscribe callback.
	 */

	var subscribe = function subscribe(callback) {
		listeners.add(callback);
		return function () {
			return listeners.delete(callback);
		};
	};
	/** @type {GetLocaleData} */

	var getLocaleData = function getLocaleData() {
		var domain =
			arguments.length > 0 && arguments[0] !== undefined
				? arguments[0]
				: "default";
		return tannin.data[domain];
	};
	/**
	 * @param {LocaleData} [data]
	 * @param {string} [domain]
	 */

	var doSetLocaleData = function doSetLocaleData(data) {
		var domain =
			arguments.length > 1 && arguments[1] !== undefined
				? arguments[1]
				: "default";
		tannin.data[domain] = _objectSpread$a(
			_objectSpread$a(
				_objectSpread$a({}, DEFAULT_LOCALE_DATA$2),
				tannin.data[domain]
			),
			data
		); // Populate default domain configuration (supported locale date which omits
		// a plural forms expression).

		tannin.data[domain][""] = _objectSpread$a(
			_objectSpread$a({}, DEFAULT_LOCALE_DATA$2[""]),
			tannin.data[domain][""]
		);
	};
	/** @type {SetLocaleData} */

	var setLocaleData = function setLocaleData(data, domain) {
		doSetLocaleData(data, domain);
		notifyListeners();
	};
	/** @type {ResetLocaleData} */

	var resetLocaleData = function resetLocaleData(data, domain) {
		// Reset all current Tannin locale data.
		tannin.data = {}; // Reset cached plural forms functions cache.

		tannin.pluralForms = {};
		setLocaleData(data, domain);
	};
	/**
	 * Wrapper for Tannin's `dcnpgettext`. Populates default locale data if not
	 * otherwise previously assigned.
	 *
	 * @param {string|undefined} domain   Domain to retrieve the translated text.
	 * @param {string|undefined} context  Context information for the translators.
	 * @param {string}           single   Text to translate if non-plural. Used as
	 *                                    fallback return value on a caught error.
	 * @param {string}           [plural] The text to be used if the number is
	 *                                    plural.
	 * @param {number}           [number] The number to compare against to use
	 *                                    either the singular or plural form.
	 *
	 * @return {string} The translated string.
	 */

	var dcnpgettext = function dcnpgettext() {
		var domain =
			arguments.length > 0 && arguments[0] !== undefined
				? arguments[0]
				: "default";
		var context = arguments.length > 1 ? arguments[1] : undefined;
		var single = arguments.length > 2 ? arguments[2] : undefined;
		var plural = arguments.length > 3 ? arguments[3] : undefined;
		var number = arguments.length > 4 ? arguments[4] : undefined;

		if (!tannin.data[domain]) {
			// use `doSetLocaleData` to set silently, without notifying listeners
			doSetLocaleData(undefined, domain);
		}

		return tannin.dcnpgettext(domain, context, single, plural, number);
	};
	/** @type {GetFilterDomain} */

	var getFilterDomain = function getFilterDomain() {
		var domain =
			arguments.length > 0 && arguments[0] !== undefined
				? arguments[0]
				: "default";
		return domain;
	};
	/** @type {__} */

	var __ = function __(text, domain) {
		var translation = dcnpgettext(domain, undefined, text);

		if (!hooks) {
			return translation;
		}
		/**
		 * Filters text with its translation.
		 *
		 * @param {string} translation Translated text.
		 * @param {string} text        Text to translate.
		 * @param {string} domain      Text domain. Unique identifier for retrieving translated strings.
		 */

		translation =
			/** @type {string} */

			/** @type {*} */
			hooks.applyFilters("i18n.gettext", translation, text, domain);
		return (
			/** @type {string} */

			/** @type {*} */
			hooks.applyFilters(
				"i18n.gettext_" + getFilterDomain(domain),
				translation,
				text,
				domain
			)
		);
	};
	/** @type {_x} */

	var _x = function _x(text, context, domain) {
		var translation = dcnpgettext(domain, context, text);

		if (!hooks) {
			return translation;
		}
		/**
		 * Filters text with its translation based on context information.
		 *
		 * @param {string} translation Translated text.
		 * @param {string} text        Text to translate.
		 * @param {string} context     Context information for the translators.
		 * @param {string} domain      Text domain. Unique identifier for retrieving translated strings.
		 */

		translation =
			/** @type {string} */

			/** @type {*} */
			hooks.applyFilters(
				"i18n.gettext_with_context",
				translation,
				text,
				context,
				domain
			);
		return (
			/** @type {string} */

			/** @type {*} */
			hooks.applyFilters(
				"i18n.gettext_with_context_" + getFilterDomain(domain),
				translation,
				text,
				context,
				domain
			)
		);
	};
	/** @type {_n} */

	var _n = function _n(single, plural, number, domain) {
		var translation = dcnpgettext(
			domain,
			undefined,
			single,
			plural,
			number
		);

		if (!hooks) {
			return translation;
		}
		/**
		 * Filters the singular or plural form of a string.
		 *
		 * @param {string} translation Translated text.
		 * @param {string} single      The text to be used if the number is singular.
		 * @param {string} plural      The text to be used if the number is plural.
		 * @param {string} number      The number to compare against to use either the singular or plural form.
		 * @param {string} domain      Text domain. Unique identifier for retrieving translated strings.
		 */

		translation =
			/** @type {string} */

			/** @type {*} */
			hooks.applyFilters(
				"i18n.ngettext",
				translation,
				single,
				plural,
				number,
				domain
			);
		return (
			/** @type {string} */

			/** @type {*} */
			hooks.applyFilters(
				"i18n.ngettext_" + getFilterDomain(domain),
				translation,
				single,
				plural,
				number,
				domain
			)
		);
	};
	/** @type {_nx} */

	var _nx = function _nx(single, plural, number, context, domain) {
		var translation = dcnpgettext(domain, context, single, plural, number);

		if (!hooks) {
			return translation;
		}
		/**
		 * Filters the singular or plural form of a string with gettext context.
		 *
		 * @param {string} translation Translated text.
		 * @param {string} single      The text to be used if the number is singular.
		 * @param {string} plural      The text to be used if the number is plural.
		 * @param {string} number      The number to compare against to use either the singular or plural form.
		 * @param {string} context     Context information for the translators.
		 * @param {string} domain      Text domain. Unique identifier for retrieving translated strings.
		 */

		translation =
			/** @type {string} */

			/** @type {*} */
			hooks.applyFilters(
				"i18n.ngettext_with_context",
				translation,
				single,
				plural,
				number,
				context,
				domain
			);
		return (
			/** @type {string} */

			/** @type {*} */
			hooks.applyFilters(
				"i18n.ngettext_with_context_" + getFilterDomain(domain),
				translation,
				single,
				plural,
				number,
				context,
				domain
			)
		);
	};
	/** @type {IsRtl} */

	var isRTL = function isRTL() {
		return "rtl" === _x("ltr", "text direction");
	};
	/** @type {HasTranslation} */

	var hasTranslation = function hasTranslation(single, context, domain) {
		var _tannin$data, _tannin$data2;

		var key = context ? context + "\x04" + single : single;
		var result = !!(
			(_tannin$data = tannin.data) !== null &&
			_tannin$data !== void 0 &&
			(_tannin$data2 =
				_tannin$data[
					domain !== null && domain !== void 0 ? domain : "default"
				]) !== null &&
			_tannin$data2 !== void 0 &&
			_tannin$data2[key]
		);

		if (hooks) {
			/**
			 * Filters the presence of a translation in the locale data.
			 *
			 * @param {boolean} hasTranslation Whether the translation is present or not..
			 * @param {string} single The singular form of the translated text (used as key in locale data)
			 * @param {string} context Context information for the translators.
			 * @param {string} domain Text domain. Unique identifier for retrieving translated strings.
			 */
			result =
				/** @type { boolean } */

				/** @type {*} */
				hooks.applyFilters(
					"i18n.has_translation",
					result,
					single,
					context,
					domain
				);
			result =
				/** @type { boolean } */

				/** @type {*} */
				hooks.applyFilters(
					"i18n.has_translation_" + getFilterDomain(domain),
					result,
					single,
					context,
					domain
				);
		}

		return result;
	};

	if (initialData) {
		setLocaleData(initialData, initialDomain);
	}

	if (hooks) {
		/**
		 * @param {string} hookName
		 */
		var onHookAddedOrRemoved = function onHookAddedOrRemoved(hookName) {
			if (I18N_HOOK_REGEXP$2.test(hookName)) {
				notifyListeners();
			}
		};

		hooks.addAction("hookAdded", "core/i18n", onHookAddedOrRemoved);
		hooks.addAction("hookRemoved", "core/i18n", onHookAddedOrRemoved);
	}

	return {
		getLocaleData: getLocaleData,
		setLocaleData: setLocaleData,
		resetLocaleData: resetLocaleData,
		subscribe: subscribe,
		__: __,
		_x: _x,
		_n: _n,
		_nx: _nx,
		isRTL: isRTL,
		hasTranslation: hasTranslation,
	};
};

/**
 * Validate a namespace string.
 *
 * @param  {string} namespace The namespace to validate - should take the form
 *                            `vendor/plugin/function`.
 *
 * @return {boolean}             Whether the namespace is valid.
 */
function validateNamespace$1(namespace) {
	if ("string" !== typeof namespace || "" === namespace) {
		// eslint-disable-next-line no-console
		console.error("The namespace must be a non-empty string.");
		return false;
	}

	if (!/^[a-zA-Z][a-zA-Z0-9_.\-\/]*$/.test(namespace)) {
		// eslint-disable-next-line no-console
		console.error(
			"The namespace can only contain numbers, letters, dashes, periods, underscores and slashes."
		);
		return false;
	}

	return true;
}

/**
 * Validate a hookName string.
 *
 * @param  {string} hookName The hook name to validate. Should be a non empty string containing
 *                           only numbers, letters, dashes, periods and underscores. Also,
 *                           the hook name cannot begin with `__`.
 *
 * @return {boolean}            Whether the hook name is valid.
 */
function validateHookName$1(hookName) {
	if ("string" !== typeof hookName || "" === hookName) {
		// eslint-disable-next-line no-console
		console.error("The hook name must be a non-empty string.");
		return false;
	}

	if (/^__/.test(hookName)) {
		// eslint-disable-next-line no-console
		console.error("The hook name cannot begin with `__`.");
		return false;
	}

	if (!/^[a-zA-Z][a-zA-Z0-9_.-]*$/.test(hookName)) {
		// eslint-disable-next-line no-console
		console.error(
			"The hook name can only contain numbers, letters, dashes, periods and underscores."
		);
		return false;
	}

	return true;
}

/**
 * Internal dependencies
 */
/**
 * @callback AddHook
 *
 * Adds the hook to the appropriate hooks container.
 *
 * @param {string}               hookName  Name of hook to add
 * @param {string}               namespace The unique namespace identifying the callback in the form `vendor/plugin/function`.
 * @param {import('.').Callback} callback  Function to call when the hook is run
 * @param {number}               [priority=10]  Priority of this hook
 */

/**
 * Returns a function which, when invoked, will add a hook.
 *
 * @param  {import('.').Hooks}    hooks Hooks instance.
 * @param  {import('.').StoreKey} storeKey
 *
 * @return {AddHook} Function that adds a new hook.
 */

function createAddHook$1(hooks, storeKey) {
	return function addHook(hookName, namespace, callback) {
		var priority =
			arguments.length > 3 && arguments[3] !== undefined
				? arguments[3]
				: 10;
		var hooksStore = hooks[storeKey];

		if (!validateHookName$1(hookName)) {
			return;
		}

		if (!validateNamespace$1(namespace)) {
			return;
		}

		if ("function" !== typeof callback) {
			// eslint-disable-next-line no-console
			console.error("The hook callback must be a function.");
			return;
		} // Validate numeric priority

		if ("number" !== typeof priority) {
			// eslint-disable-next-line no-console
			console.error("If specified, the hook priority must be a number.");
			return;
		}

		var handler = {
			callback: callback,
			priority: priority,
			namespace: namespace,
		};

		if (hooksStore[hookName]) {
			// Find the correct insert index of the new hook.
			var handlers = hooksStore[hookName].handlers;
			/** @type {number} */

			var i;

			for (i = handlers.length; i > 0; i--) {
				if (priority >= handlers[i - 1].priority) {
					break;
				}
			}

			if (i === handlers.length) {
				// If append, operate via direct assignment.
				handlers[i] = handler;
			} else {
				// Otherwise, insert before index via splice.
				handlers.splice(i, 0, handler);
			} // We may also be currently executing this hook.  If the callback
			// we're adding would come after the current callback, there's no
			// problem; otherwise we need to increase the execution index of
			// any other runs by 1 to account for the added element.

			hooksStore.__current.forEach(function (hookInfo) {
				if (hookInfo.name === hookName && hookInfo.currentIndex >= i) {
					hookInfo.currentIndex++;
				}
			});
		} else {
			// This is the first hook of its type.
			hooksStore[hookName] = {
				handlers: [handler],
				runs: 0,
			};
		}

		if (hookName !== "hookAdded") {
			hooks.doAction(
				"hookAdded",
				hookName,
				namespace,
				callback,
				priority
			);
		}
	};
}

/**
 * Internal dependencies
 */
/**
 * @callback RemoveHook
 * Removes the specified callback (or all callbacks) from the hook with a given hookName
 * and namespace.
 *
 * @param {string} hookName  The name of the hook to modify.
 * @param {string} namespace The unique namespace identifying the callback in the
 *                           form `vendor/plugin/function`.
 *
 * @return {number | undefined} The number of callbacks removed.
 */

/**
 * Returns a function which, when invoked, will remove a specified hook or all
 * hooks by the given name.
 *
 * @param  {import('.').Hooks}    hooks Hooks instance.
 * @param  {import('.').StoreKey} storeKey
 * @param  {boolean}              [removeAll=false] Whether to remove all callbacks for a hookName,
 *                                                  without regard to namespace. Used to create
 *                                                  `removeAll*` functions.
 *
 * @return {RemoveHook} Function that removes hooks.
 */

function createRemoveHook$1(hooks, storeKey) {
	var removeAll =
		arguments.length > 2 && arguments[2] !== undefined
			? arguments[2]
			: false;
	return function removeHook(hookName, namespace) {
		var hooksStore = hooks[storeKey];

		if (!validateHookName$1(hookName)) {
			return;
		}

		if (!removeAll && !validateNamespace$1(namespace)) {
			return;
		} // Bail if no hooks exist by this name

		if (!hooksStore[hookName]) {
			return 0;
		}

		var handlersRemoved = 0;

		if (removeAll) {
			handlersRemoved = hooksStore[hookName].handlers.length;
			hooksStore[hookName] = {
				runs: hooksStore[hookName].runs,
				handlers: [],
			};
		} else {
			// Try to find the specified callback to remove.
			var handlers = hooksStore[hookName].handlers;

			var _loop = function _loop(i) {
				if (handlers[i].namespace === namespace) {
					handlers.splice(i, 1);
					handlersRemoved++; // This callback may also be part of a hook that is
					// currently executing.  If the callback we're removing
					// comes after the current callback, there's no problem;
					// otherwise we need to decrease the execution index of any
					// other runs by 1 to account for the removed element.

					hooksStore.__current.forEach(function (hookInfo) {
						if (
							hookInfo.name === hookName &&
							hookInfo.currentIndex >= i
						) {
							hookInfo.currentIndex--;
						}
					});
				}
			};

			for (var i = handlers.length - 1; i >= 0; i--) {
				_loop(i);
			}
		}

		if (hookName !== "hookRemoved") {
			hooks.doAction("hookRemoved", hookName, namespace);
		}

		return handlersRemoved;
	};
}

/**
 * @callback HasHook
 *
 * Returns whether any handlers are attached for the given hookName and optional namespace.
 *
 * @param {string} hookName    The name of the hook to check for.
 * @param {string} [namespace] Optional. The unique namespace identifying the callback
 *                             in the form `vendor/plugin/function`.
 *
 * @return {boolean} Whether there are handlers that are attached to the given hook.
 */

/**
 * Returns a function which, when invoked, will return whether any handlers are
 * attached to a particular hook.
 *
 * @param  {import('.').Hooks}    hooks Hooks instance.
 * @param  {import('.').StoreKey} storeKey
 *
 * @return {HasHook} Function that returns whether any handlers are
 *                   attached to a particular hook and optional namespace.
 */
function createHasHook$1(hooks, storeKey) {
	return function hasHook(hookName, namespace) {
		var hooksStore = hooks[storeKey]; // Use the namespace if provided.

		if ("undefined" !== typeof namespace) {
			return (
				hookName in hooksStore &&
				hooksStore[hookName].handlers.some(function (hook) {
					return hook.namespace === namespace;
				})
			);
		}

		return hookName in hooksStore;
	};
}

/**
 * Returns a function which, when invoked, will execute all callbacks
 * registered to a hook of the specified type, optionally returning the final
 * value of the call chain.
 *
 * @param  {import('.').Hooks}    hooks Hooks instance.
 * @param  {import('.').StoreKey} storeKey
 * @param  {boolean}              [returnFirstArg=false] Whether each hook callback is expected to
 *                                                       return its first argument.
 *
 * @return {(hookName:string, ...args: unknown[]) => unknown} Function that runs hook callbacks.
 */
function createRunHook$1(hooks, storeKey) {
	var returnFirstArg =
		arguments.length > 2 && arguments[2] !== undefined
			? arguments[2]
			: false;
	return function runHooks(hookName) {
		var hooksStore = hooks[storeKey];

		if (!hooksStore[hookName]) {
			hooksStore[hookName] = {
				handlers: [],
				runs: 0,
			};
		}

		hooksStore[hookName].runs++;
		var handlers = hooksStore[hookName].handlers; // The following code is stripped from production builds.

		if ("production" !== process.env.NODE_ENV) {
			// Handle any 'all' hooks registered.
			if ("hookAdded" !== hookName && hooksStore.all) {
				handlers.push.apply(
					handlers,
					_toConsumableArray(hooksStore.all.handlers)
				);
			}
		}

		for (
			var _len = arguments.length,
				args = new Array(_len > 1 ? _len - 1 : 0),
				_key = 1;
			_key < _len;
			_key++
		) {
			args[_key - 1] = arguments[_key];
		}

		if (!handlers || !handlers.length) {
			return returnFirstArg ? args[0] : undefined;
		}

		var hookInfo = {
			name: hookName,
			currentIndex: 0,
		};

		hooksStore.__current.push(hookInfo);

		while (hookInfo.currentIndex < handlers.length) {
			var handler = handlers[hookInfo.currentIndex];
			var result = handler.callback.apply(null, args);

			if (returnFirstArg) {
				args[0] = result;
			}

			hookInfo.currentIndex++;
		}

		hooksStore.__current.pop();

		if (returnFirstArg) {
			return args[0];
		}
	};
}

/**
 * Returns a function which, when invoked, will return the name of the
 * currently running hook, or `null` if no hook of the given type is currently
 * running.
 *
 * @param  {import('.').Hooks}    hooks Hooks instance.
 * @param  {import('.').StoreKey} storeKey
 *
 * @return {() => string | null} Function that returns the current hook name or null.
 */
function createCurrentHook$1(hooks, storeKey) {
	return function currentHook() {
		var _hooksStore$__current, _hooksStore$__current2;

		var hooksStore = hooks[storeKey];
		return (_hooksStore$__current =
			(_hooksStore$__current2 =
				hooksStore.__current[hooksStore.__current.length - 1]) ===
				null || _hooksStore$__current2 === void 0
				? void 0
				: _hooksStore$__current2.name) !== null &&
			_hooksStore$__current !== void 0
			? _hooksStore$__current
			: null;
	};
}

/**
 * @callback DoingHook
 * Returns whether a hook is currently being executed.
 *
 * @param  {string} [hookName] The name of the hook to check for.  If
 *                             omitted, will check for any hook being executed.
 *
 * @return {boolean} Whether the hook is being executed.
 */

/**
 * Returns a function which, when invoked, will return whether a hook is
 * currently being executed.
 *
 * @param  {import('.').Hooks}    hooks Hooks instance.
 * @param  {import('.').StoreKey} storeKey
 *
 * @return {DoingHook} Function that returns whether a hook is currently
 *                     being executed.
 */
function createDoingHook$1(hooks, storeKey) {
	return function doingHook(hookName) {
		var hooksStore = hooks[storeKey]; // If the hookName was not passed, check for any current hook.

		if ("undefined" === typeof hookName) {
			return "undefined" !== typeof hooksStore.__current[0];
		} // Return the __current hook.

		return hooksStore.__current[0]
			? hookName === hooksStore.__current[0].name
			: false;
	};
}

/**
 * Internal dependencies
 */
/**
 * @callback DidHook
 *
 * Returns the number of times an action has been fired.
 *
 * @param  {string} hookName The hook name to check.
 *
 * @return {number | undefined} The number of times the hook has run.
 */

/**
 * Returns a function which, when invoked, will return the number of times a
 * hook has been called.
 *
 * @param  {import('.').Hooks}    hooks Hooks instance.
 * @param  {import('.').StoreKey} storeKey
 *
 * @return {DidHook} Function that returns a hook's call count.
 */

function createDidHook$1(hooks, storeKey) {
	return function didHook(hookName) {
		var hooksStore = hooks[storeKey];

		if (!validateHookName$1(hookName)) {
			return;
		}

		return hooksStore[hookName] && hooksStore[hookName].runs
			? hooksStore[hookName].runs
			: 0;
	};
}

/**
 * Internal class for constructing hooks. Use `createHooks()` function
 *
 * Note, it is necessary to expose this class to make its type public.
 *
 * @private
 */

var _Hooks$1 = function _Hooks() {
	_classCallCheck$1(this, _Hooks);

	/** @type {import('.').Store} actions */
	this.actions = Object.create(null);
	this.actions.__current = [];
	/** @type {import('.').Store} filters */

	this.filters = Object.create(null);
	this.filters.__current = [];
	this.addAction = createAddHook$1(this, "actions");
	this.addFilter = createAddHook$1(this, "filters");
	this.removeAction = createRemoveHook$1(this, "actions");
	this.removeFilter = createRemoveHook$1(this, "filters");
	this.hasAction = createHasHook$1(this, "actions");
	this.hasFilter = createHasHook$1(this, "filters");
	this.removeAllActions = createRemoveHook$1(this, "actions", true);
	this.removeAllFilters = createRemoveHook$1(this, "filters", true);
	this.doAction = createRunHook$1(this, "actions");
	this.applyFilters = createRunHook$1(this, "filters", true);
	this.currentAction = createCurrentHook$1(this, "actions");
	this.currentFilter = createCurrentHook$1(this, "filters");
	this.doingAction = createDoingHook$1(this, "actions");
	this.doingFilter = createDoingHook$1(this, "filters");
	this.didAction = createDidHook$1(this, "actions");
	this.didFilter = createDidHook$1(this, "filters");
};
/** @typedef {_Hooks} Hooks */

/**
 * Returns an instance of the hooks object.
 *
 * @return {Hooks} A Hooks instance.
 */

function createHooks$1() {
	return new _Hooks$1();
}

/**
 * Internal dependencies
 */
/** @typedef {(...args: any[])=>any} Callback */

/**
 * @typedef Handler
 * @property {Callback} callback  The callback
 * @property {string}   namespace The namespace
 * @property {number}   priority  The namespace
 */

/**
 * @typedef Hook
 * @property {Handler[]} handlers Array of handlers
 * @property {number}    runs     Run counter
 */

/**
 * @typedef Current
 * @property {string} name         Hook name
 * @property {number} currentIndex The index
 */

/**
 * @typedef {Record<string, Hook> & {__current: Current[]}} Store
 */

/**
 * @typedef {'actions' | 'filters'} StoreKey
 */

/**
 * @typedef {import('./createHooks').Hooks} Hooks
 */

var defaultHooks$1 = createHooks$1();
defaultHooks$1.addAction;
defaultHooks$1.addFilter;
defaultHooks$1.removeAction;
defaultHooks$1.removeFilter;
defaultHooks$1.hasAction;
defaultHooks$1.hasFilter;
defaultHooks$1.removeAllActions;
defaultHooks$1.removeAllFilters;
defaultHooks$1.doAction;
defaultHooks$1.applyFilters;
defaultHooks$1.currentAction;
defaultHooks$1.currentFilter;
defaultHooks$1.doingAction;
defaultHooks$1.doingFilter;
defaultHooks$1.didAction;
defaultHooks$1.didFilter;
defaultHooks$1.actions;
defaultHooks$1.filters;

/**
 * Internal dependencies
 */
var i18n$2 = createI18n$2(undefined, undefined, defaultHooks$1);
/*
 * Comments in this file are duplicated from ./i18n due to
 * https://github.com/WordPress/gutenberg/pull/20318#issuecomment-590837722
 */

/**
 * @typedef {import('./create-i18n').LocaleData} LocaleData
 * @typedef {import('./create-i18n').SubscribeCallback} SubscribeCallback
 * @typedef {import('./create-i18n').UnsubscribeCallback} UnsubscribeCallback
 */

/**
 * Returns locale data by domain in a Jed-formatted JSON object shape.
 *
 * @see http://messageformat.github.io/Jed/
 *
 * @param {string} [domain] Domain for which to get the data.
 * @return {LocaleData} Locale data.
 */

i18n$2.getLocaleData.bind(i18n$2);
/**
 * Merges locale data into the Tannin instance by domain. Accepts data in a
 * Jed-formatted JSON object shape.
 *
 * @see http://messageformat.github.io/Jed/
 *
 * @param {LocaleData} [data]   Locale data configuration.
 * @param {string}     [domain] Domain for which configuration applies.
 */

i18n$2.setLocaleData.bind(i18n$2);
/**
 * Resets all current Tannin instance locale data and sets the specified
 * locale data for the domain. Accepts data in a Jed-formatted JSON object shape.
 *
 * @see http://messageformat.github.io/Jed/
 *
 * @param {LocaleData} [data]   Locale data configuration.
 * @param {string}     [domain] Domain for which configuration applies.
 */

i18n$2.resetLocaleData.bind(i18n$2);
/**
 * Subscribes to changes of locale data
 *
 * @param {SubscribeCallback} callback Subscription callback
 * @return {UnsubscribeCallback} Unsubscribe callback
 */

i18n$2.subscribe.bind(i18n$2);
/**
 * Retrieve the translation of text.
 *
 * @see https://developer.wordpress.org/reference/functions/__/
 *
 * @param {string} text     Text to translate.
 * @param {string} [domain] Domain to retrieve the translated text.
 *
 * @return {string} Translated text.
 */

var __$2 = i18n$2.__.bind(i18n$2);
/**
 * Retrieve translated string with gettext context.
 *
 * @see https://developer.wordpress.org/reference/functions/_x/
 *
 * @param {string} text     Text to translate.
 * @param {string} context  Context information for the translators.
 * @param {string} [domain] Domain to retrieve the translated text.
 *
 * @return {string} Translated context string without pipe.
 */

i18n$2._x.bind(i18n$2);
/**
 * Translates and retrieves the singular or plural form based on the supplied
 * number.
 *
 * @see https://developer.wordpress.org/reference/functions/_n/
 *
 * @param {string} single   The text to be used if the number is singular.
 * @param {string} plural   The text to be used if the number is plural.
 * @param {number} number   The number to compare against to use either the
 *                          singular or plural form.
 * @param {string} [domain] Domain to retrieve the translated text.
 *
 * @return {string} The translated singular or plural form.
 */

i18n$2._n.bind(i18n$2);
/**
 * Translates and retrieves the singular or plural form based on the supplied
 * number, with gettext context.
 *
 * @see https://developer.wordpress.org/reference/functions/_nx/
 *
 * @param {string} single   The text to be used if the number is singular.
 * @param {string} plural   The text to be used if the number is plural.
 * @param {number} number   The number to compare against to use either the
 *                          singular or plural form.
 * @param {string} context  Context information for the translators.
 * @param {string} [domain] Domain to retrieve the translated text.
 *
 * @return {string} The translated singular or plural form.
 */

i18n$2._nx.bind(i18n$2);
/**
 * Check if current locale is RTL.
 *
 * **RTL (Right To Left)** is a locale property indicating that text is written from right to left.
 * For example, the `he` locale (for Hebrew) specifies right-to-left. Arabic (ar) is another common
 * language written RTL. The opposite of RTL, LTR (Left To Right) is used in other languages,
 * including English (`en`, `en-US`, `en-GB`, etc.), Spanish (`es`), and French (`fr`).
 *
 * @return {boolean} Whether locale is RTL.
 */

i18n$2.isRTL.bind(i18n$2);
/**
 * Check if there is a translation for a given string (in singular form).
 *
 * @param {string} single Singular form of the string to look up.
 * @param {string} [context] Context information for the translators.
 * @param {string} [domain] Domain to retrieve the translated text.
 * @return {boolean} Whether the translation exists or not.
 */

i18n$2.hasTranslation.bind(i18n$2);

/**
 * External dependencies
 */
/**
 * Given the name or definition of a registered store, returns an object of the store's selectors.
 * The selector functions are been pre-bound to pass the current state automatically.
 * As a consumer, you need only pass arguments of the selector, if applicable.
 *
 * @param {string|WPDataStore} storeNameOrDefinition Unique namespace identifier for the store
 *                                                   or the store definition.
 *
 * @example
 * ```js
 * import { select } from '@wordpress/data';
 *
 * select( 'my-shop' ).getPrice( 'hammer' );
 * ```
 *
 * @return {Object} Object containing the store's selectors.
 */

var select = defaultRegistry.select;
/**
 * Given the name of a registered store, returns an object containing the store's
 * selectors pre-bound to state so that you only need to supply additional arguments,
 * and modified so that they return promises that resolve to their eventual values,
 * after any resolvers have ran.
 *
 * @param {string|WPDataStore} storeNameOrDefinition Unique namespace identifier for the store
 *                                                   or the store definition.
 *
 * @example
 * ```js
 * import { resolveSelect } from '@wordpress/data';
 *
 * resolveSelect( 'my-shop' ).getPrice( 'hammer' ).then(console.log)
 * ```
 *
 * @return {Object} Object containing the store's promise-wrapped selectors.
 */

defaultRegistry.resolveSelect;
/**
 * Given the name of a registered store, returns an object of the store's action creators.
 * Calling an action creator will cause it to be dispatched, updating the state value accordingly.
 *
 * Note: Action creators returned by the dispatch will return a promise when
 * they are called.
 *
 * @param {string|WPDataStore} storeNameOrDefinition Unique namespace identifier for the store
 *                                                   or the store definition.
 *
 * @example
 * ```js
 * import { dispatch } from '@wordpress/data';
 *
 * dispatch( 'my-shop' ).setPrice( 'hammer', 9.75 );
 * ```
 * @return {Object} Object containing the action creators.
 */

var dispatch = defaultRegistry.dispatch;
/**
 * Given a listener function, the function will be called any time the state value
 * of one of the registered stores has changed. This function returns a `unsubscribe`
 * function used to stop the subscription.
 *
 * @param {Function} listener Callback function.
 *
 * @example
 * ```js
 * import { subscribe } from '@wordpress/data';
 *
 * const unsubscribe = subscribe( () => {
 * 	// You could use this opportunity to test whether the derived result of a
 * 	// selector has subsequently changed as the result of a state update.
 * } );
 *
 * // Later, if necessary...
 * unsubscribe();
 * ```
 */

defaultRegistry.subscribe;
/**
 * Registers a generic store.
 *
 * @deprecated Use `register` instead.
 *
 * @param {string} key    Store registry key.
 * @param {Object} config Configuration (getSelectors, getActions, subscribe).
 */

defaultRegistry.registerGenericStore;
/**
 * Registers a standard `@wordpress/data` store.
 *
 * @deprecated Use `register` instead.
 *
 * @param {string} storeName Unique namespace identifier for the store.
 * @param {Object} options   Store description (reducer, actions, selectors, resolvers).
 *
 * @return {Object} Registered store object.
 */

var registerStore = defaultRegistry.registerStore;
/**
 * Extends a registry to inherit functionality provided by a given plugin. A
 * plugin is an object with properties aligning to that of a registry, merged
 * to extend the default registry behavior.
 *
 * @param {Object} plugin Plugin object.
 */

defaultRegistry.use;
/**
 * Registers a standard `@wordpress/data` store definition.
 *
 * @example
 * ```js
 * import { createReduxStore, register } from '@wordpress/data';
 *
 * const store = createReduxStore( 'demo', {
 *     reducer: ( state = 'OK' ) => state,
 *     selectors: {
 *         getValue: ( state ) => state,
 *     },
 * } );
 * register( store );
 * ```
 *
 * @param {WPDataStore} store Store definition.
 */

defaultRegistry.register;

var sweetalert2_all = { exports: {} };

/*!
 * sweetalert2 v10.16.9
 * Released under the MIT License.
 */

(function (module, exports) {
	(function (global, factory) {
		module.exports = factory();
	})(commonjsGlobal, function () {
		function _typeof(obj) {
			"@babel/helpers - typeof";

			if (
				typeof Symbol === "function" &&
				typeof Symbol.iterator === "symbol"
			) {
				_typeof = function (obj) {
					return typeof obj;
				};
			} else {
				_typeof = function (obj) {
					return obj &&
						typeof Symbol === "function" &&
						obj.constructor === Symbol &&
						obj !== Symbol.prototype
						? "symbol"
						: typeof obj;
				};
			}

			return _typeof(obj);
		}

		function _classCallCheck(instance, Constructor) {
			if (!(instance instanceof Constructor)) {
				throw new TypeError("Cannot call a class as a function");
			}
		}

		function _defineProperties(target, props) {
			for (var i = 0; i < props.length; i++) {
				var descriptor = props[i];
				descriptor.enumerable = descriptor.enumerable || false;
				descriptor.configurable = true;
				if ("value" in descriptor) descriptor.writable = true;
				Object.defineProperty(target, descriptor.key, descriptor);
			}
		}

		function _createClass(Constructor, protoProps, staticProps) {
			if (protoProps)
				_defineProperties(Constructor.prototype, protoProps);
			if (staticProps) _defineProperties(Constructor, staticProps);
			return Constructor;
		}

		function _extends() {
			_extends =
				Object.assign ||
				function (target) {
					for (var i = 1; i < arguments.length; i++) {
						var source = arguments[i];

						for (var key in source) {
							if (
								Object.prototype.hasOwnProperty.call(
									source,
									key
								)
							) {
								target[key] = source[key];
							}
						}
					}

					return target;
				};

			return _extends.apply(this, arguments);
		}

		function _inherits(subClass, superClass) {
			if (typeof superClass !== "function" && superClass !== null) {
				throw new TypeError(
					"Super expression must either be null or a function"
				);
			}

			subClass.prototype = Object.create(
				superClass && superClass.prototype,
				{
					constructor: {
						value: subClass,
						writable: true,
						configurable: true,
					},
				}
			);
			if (superClass) _setPrototypeOf(subClass, superClass);
		}

		function _getPrototypeOf(o) {
			_getPrototypeOf = Object.setPrototypeOf
				? Object.getPrototypeOf
				: function _getPrototypeOf(o) {
						return o.__proto__ || Object.getPrototypeOf(o);
				  };
			return _getPrototypeOf(o);
		}

		function _setPrototypeOf(o, p) {
			_setPrototypeOf =
				Object.setPrototypeOf ||
				function _setPrototypeOf(o, p) {
					o.__proto__ = p;
					return o;
				};

			return _setPrototypeOf(o, p);
		}

		function _isNativeReflectConstruct() {
			if (typeof Reflect === "undefined" || !Reflect.construct)
				return false;
			if (Reflect.construct.sham) return false;
			if (typeof Proxy === "function") return true;

			try {
				Boolean.prototype.valueOf.call(
					Reflect.construct(Boolean, [], function () {})
				);
				return true;
			} catch (e) {
				return false;
			}
		}

		function _construct(Parent, args, Class) {
			if (_isNativeReflectConstruct()) {
				_construct = Reflect.construct;
			} else {
				_construct = function _construct(Parent, args, Class) {
					var a = [null];
					a.push.apply(a, args);
					var Constructor = Function.bind.apply(Parent, a);
					var instance = new Constructor();
					if (Class) _setPrototypeOf(instance, Class.prototype);
					return instance;
				};
			}

			return _construct.apply(null, arguments);
		}

		function _assertThisInitialized(self) {
			if (self === void 0) {
				throw new ReferenceError(
					"this hasn't been initialised - super() hasn't been called"
				);
			}

			return self;
		}

		function _possibleConstructorReturn(self, call) {
			if (
				call &&
				(typeof call === "object" || typeof call === "function")
			) {
				return call;
			}

			return _assertThisInitialized(self);
		}

		function _createSuper(Derived) {
			var hasNativeReflectConstruct = _isNativeReflectConstruct();

			return function _createSuperInternal() {
				var Super = _getPrototypeOf(Derived),
					result;

				if (hasNativeReflectConstruct) {
					var NewTarget = _getPrototypeOf(this).constructor;

					result = Reflect.construct(Super, arguments, NewTarget);
				} else {
					result = Super.apply(this, arguments);
				}

				return _possibleConstructorReturn(this, result);
			};
		}

		function _superPropBase(object, property) {
			while (!Object.prototype.hasOwnProperty.call(object, property)) {
				object = _getPrototypeOf(object);
				if (object === null) break;
			}

			return object;
		}

		function _get(target, property, receiver) {
			if (typeof Reflect !== "undefined" && Reflect.get) {
				_get = Reflect.get;
			} else {
				_get = function _get(target, property, receiver) {
					var base = _superPropBase(target, property);

					if (!base) return;
					var desc = Object.getOwnPropertyDescriptor(base, property);

					if (desc.get) {
						return desc.get.call(receiver);
					}

					return desc.value;
				};
			}

			return _get(target, property, receiver || target);
		}

		var consolePrefix = "SweetAlert2:";
		/**
		 * Filter the unique values into a new array
		 * @param arr
		 */

		var uniqueArray = function uniqueArray(arr) {
			var result = [];

			for (var i = 0; i < arr.length; i++) {
				if (result.indexOf(arr[i]) === -1) {
					result.push(arr[i]);
				}
			}

			return result;
		};
		/**
		 * Capitalize the first letter of a string
		 * @param str
		 */

		var capitalizeFirstLetter = function capitalizeFirstLetter(str) {
			return str.charAt(0).toUpperCase() + str.slice(1);
		};
		/**
		 * Returns the array of object values (Object.values isn't supported in IE11)
		 * @param obj
		 */

		var objectValues = function objectValues(obj) {
			return Object.keys(obj).map(function (key) {
				return obj[key];
			});
		};
		/**
		 * Convert NodeList to Array
		 * @param nodeList
		 */

		var toArray = function toArray(nodeList) {
			return Array.prototype.slice.call(nodeList);
		};
		/**
		 * Standardise console warnings
		 * @param message
		 */

		var warn = function warn(message) {
			console.warn(
				""
					.concat(consolePrefix, " ")
					.concat(
						_typeof(message) === "object"
							? message.join(" ")
							: message
					)
			);
		};
		/**
		 * Standardise console errors
		 * @param message
		 */

		var error = function error(message) {
			console.error("".concat(consolePrefix, " ").concat(message));
		};
		/**
		 * Private global state for `warnOnce`
		 * @type {Array}
		 * @private
		 */

		var previousWarnOnceMessages = [];
		/**
		 * Show a console warning, but only if it hasn't already been shown
		 * @param message
		 */

		var warnOnce = function warnOnce(message) {
			if (!(previousWarnOnceMessages.indexOf(message) !== -1)) {
				previousWarnOnceMessages.push(message);
				warn(message);
			}
		};
		/**
		 * Show a one-time console warning about deprecated params/methods
		 */

		var warnAboutDeprecation = function warnAboutDeprecation(
			deprecatedParam,
			useInstead
		) {
			warnOnce(
				'"'
					.concat(
						deprecatedParam,
						'" is deprecated and will be removed in the next major release. Please use "'
					)
					.concat(useInstead, '" instead.')
			);
		};
		/**
		 * If `arg` is a function, call it (with no arguments or context) and return the result.
		 * Otherwise, just pass the value through
		 * @param arg
		 */

		var callIfFunction = function callIfFunction(arg) {
			return typeof arg === "function" ? arg() : arg;
		};
		var hasToPromiseFn = function hasToPromiseFn(arg) {
			return arg && typeof arg.toPromise === "function";
		};
		var asPromise = function asPromise(arg) {
			return hasToPromiseFn(arg) ? arg.toPromise() : Promise.resolve(arg);
		};
		var isPromise = function isPromise(arg) {
			return arg && Promise.resolve(arg) === arg;
		};

		var DismissReason = Object.freeze({
			cancel: "cancel",
			backdrop: "backdrop",
			close: "close",
			esc: "esc",
			timer: "timer",
		});

		var isJqueryElement = function isJqueryElement(elem) {
			return _typeof(elem) === "object" && elem.jquery;
		};

		var isElement = function isElement(elem) {
			return elem instanceof Element || isJqueryElement(elem);
		};

		var argsToParams = function argsToParams(args) {
			var params = {};

			if (_typeof(args[0]) === "object" && !isElement(args[0])) {
				_extends(params, args[0]);
			} else {
				["title", "html", "icon"].forEach(function (name, index) {
					var arg = args[index];

					if (typeof arg === "string" || isElement(arg)) {
						params[name] = arg;
					} else if (arg !== undefined) {
						error(
							"Unexpected type of "
								.concat(
									name,
									'! Expected "string" or "Element", got '
								)
								.concat(_typeof(arg))
						);
					}
				});
			}

			return params;
		};

		var swalPrefix = "swal2-";
		var prefix = function prefix(items) {
			var result = {};

			for (var i in items) {
				result[items[i]] = swalPrefix + items[i];
			}

			return result;
		};
		var swalClasses = prefix([
			"container",
			"shown",
			"height-auto",
			"iosfix",
			"popup",
			"modal",
			"no-backdrop",
			"no-transition",
			"toast",
			"toast-shown",
			"show",
			"hide",
			"close",
			"title",
			"header",
			"content",
			"html-container",
			"actions",
			"confirm",
			"deny",
			"cancel",
			"footer",
			"icon",
			"icon-content",
			"image",
			"input",
			"file",
			"range",
			"select",
			"radio",
			"checkbox",
			"label",
			"textarea",
			"inputerror",
			"input-label",
			"validation-message",
			"progress-steps",
			"active-progress-step",
			"progress-step",
			"progress-step-line",
			"loader",
			"loading",
			"styled",
			"top",
			"top-start",
			"top-end",
			"top-left",
			"top-right",
			"center",
			"center-start",
			"center-end",
			"center-left",
			"center-right",
			"bottom",
			"bottom-start",
			"bottom-end",
			"bottom-left",
			"bottom-right",
			"grow-row",
			"grow-column",
			"grow-fullscreen",
			"rtl",
			"timer-progress-bar",
			"timer-progress-bar-container",
			"scrollbar-measure",
			"icon-success",
			"icon-warning",
			"icon-info",
			"icon-question",
			"icon-error",
		]);
		var iconTypes = prefix([
			"success",
			"warning",
			"info",
			"question",
			"error",
		]);

		var getContainer = function getContainer() {
			return document.body.querySelector(
				".".concat(swalClasses.container)
			);
		};
		var elementBySelector = function elementBySelector(selectorString) {
			var container = getContainer();
			return container ? container.querySelector(selectorString) : null;
		};

		var elementByClass = function elementByClass(className) {
			return elementBySelector(".".concat(className));
		};

		var getPopup = function getPopup() {
			return elementByClass(swalClasses.popup);
		};
		var getIcon = function getIcon() {
			return elementByClass(swalClasses.icon);
		};
		var getTitle = function getTitle() {
			return elementByClass(swalClasses.title);
		};
		var getContent = function getContent() {
			return elementByClass(swalClasses.content);
		};
		var getHtmlContainer = function getHtmlContainer() {
			return elementByClass(swalClasses["html-container"]);
		};
		var getImage = function getImage() {
			return elementByClass(swalClasses.image);
		};
		var getProgressSteps = function getProgressSteps() {
			return elementByClass(swalClasses["progress-steps"]);
		};
		var getValidationMessage = function getValidationMessage() {
			return elementByClass(swalClasses["validation-message"]);
		};
		var getConfirmButton = function getConfirmButton() {
			return elementBySelector(
				"."
					.concat(swalClasses.actions, " .")
					.concat(swalClasses.confirm)
			);
		};
		var getDenyButton = function getDenyButton() {
			return elementBySelector(
				".".concat(swalClasses.actions, " .").concat(swalClasses.deny)
			);
		};
		var getInputLabel = function getInputLabel() {
			return elementByClass(swalClasses["input-label"]);
		};
		var getLoader = function getLoader() {
			return elementBySelector(".".concat(swalClasses.loader));
		};
		var getCancelButton = function getCancelButton() {
			return elementBySelector(
				".".concat(swalClasses.actions, " .").concat(swalClasses.cancel)
			);
		};
		var getActions = function getActions() {
			return elementByClass(swalClasses.actions);
		};
		var getHeader = function getHeader() {
			return elementByClass(swalClasses.header);
		};
		var getFooter = function getFooter() {
			return elementByClass(swalClasses.footer);
		};
		var getTimerProgressBar = function getTimerProgressBar() {
			return elementByClass(swalClasses["timer-progress-bar"]);
		};
		var getCloseButton = function getCloseButton() {
			return elementByClass(swalClasses.close);
		}; // https://github.com/jkup/focusable/blob/master/index.js

		var focusable =
			'\n  a[href],\n  area[href],\n  input:not([disabled]),\n  select:not([disabled]),\n  textarea:not([disabled]),\n  button:not([disabled]),\n  iframe,\n  object,\n  embed,\n  [tabindex="0"],\n  [contenteditable],\n  audio[controls],\n  video[controls],\n  summary\n';
		var getFocusableElements = function getFocusableElements() {
			var focusableElementsWithTabindex = toArray(
				getPopup().querySelectorAll(
					'[tabindex]:not([tabindex="-1"]):not([tabindex="0"])'
				)
			) // sort according to tabindex
				.sort(function (a, b) {
					a = parseInt(a.getAttribute("tabindex"));
					b = parseInt(b.getAttribute("tabindex"));

					if (a > b) {
						return 1;
					} else if (a < b) {
						return -1;
					}

					return 0;
				});
			var otherFocusableElements = toArray(
				getPopup().querySelectorAll(focusable)
			).filter(function (el) {
				return el.getAttribute("tabindex") !== "-1";
			});
			return uniqueArray(
				focusableElementsWithTabindex.concat(otherFocusableElements)
			).filter(function (el) {
				return isVisible(el);
			});
		};
		var isModal = function isModal() {
			return (
				!isToast() &&
				!document.body.classList.contains(swalClasses["no-backdrop"])
			);
		};
		var isToast = function isToast() {
			return document.body.classList.contains(swalClasses["toast-shown"]);
		};
		var isLoading = function isLoading() {
			return getPopup().hasAttribute("data-loading");
		};

		var states = {
			previousBodyPadding: null,
		};
		var setInnerHtml = function setInnerHtml(elem, html) {
			// #1926
			elem.textContent = "";

			if (html) {
				var parser = new DOMParser();
				var parsed = parser.parseFromString(html, "text/html");
				toArray(parsed.querySelector("head").childNodes).forEach(
					function (child) {
						elem.appendChild(child);
					}
				);
				toArray(parsed.querySelector("body").childNodes).forEach(
					function (child) {
						elem.appendChild(child);
					}
				);
			}
		};
		var hasClass = function hasClass(elem, className) {
			if (!className) {
				return false;
			}

			var classList = className.split(/\s+/);

			for (var i = 0; i < classList.length; i++) {
				if (!elem.classList.contains(classList[i])) {
					return false;
				}
			}

			return true;
		};

		var removeCustomClasses = function removeCustomClasses(elem, params) {
			toArray(elem.classList).forEach(function (className) {
				if (
					!(objectValues(swalClasses).indexOf(className) !== -1) &&
					!(objectValues(iconTypes).indexOf(className) !== -1) &&
					!(objectValues(params.showClass).indexOf(className) !== -1)
				) {
					elem.classList.remove(className);
				}
			});
		};

		var applyCustomClass = function applyCustomClass(
			elem,
			params,
			className
		) {
			removeCustomClasses(elem, params);

			if (params.customClass && params.customClass[className]) {
				if (
					typeof params.customClass[className] !== "string" &&
					!params.customClass[className].forEach
				) {
					return warn(
						"Invalid type of customClass."
							.concat(
								className,
								'! Expected string or iterable object, got "'
							)
							.concat(_typeof(params.customClass[className]), '"')
					);
				}

				addClass(elem, params.customClass[className]);
			}
		};
		function getInput(content, inputType) {
			if (!inputType) {
				return null;
			}

			switch (inputType) {
				case "select":
				case "textarea":
				case "file":
					return getChildByClass(content, swalClasses[inputType]);

				case "checkbox":
					return content.querySelector(
						".".concat(swalClasses.checkbox, " input")
					);

				case "radio":
					return (
						content.querySelector(
							".".concat(swalClasses.radio, " input:checked")
						) ||
						content.querySelector(
							".".concat(swalClasses.radio, " input:first-child")
						)
					);

				case "range":
					return content.querySelector(
						".".concat(swalClasses.range, " input")
					);

				default:
					return getChildByClass(content, swalClasses.input);
			}
		}
		var focusInput = function focusInput(input) {
			input.focus(); // place cursor at end of text in text input

			if (input.type !== "file") {
				// http://stackoverflow.com/a/2345915
				var val = input.value;
				input.value = "";
				input.value = val;
			}
		};
		var toggleClass = function toggleClass(target, classList, condition) {
			if (!target || !classList) {
				return;
			}

			if (typeof classList === "string") {
				classList = classList.split(/\s+/).filter(Boolean);
			}

			classList.forEach(function (className) {
				if (target.forEach) {
					target.forEach(function (elem) {
						condition
							? elem.classList.add(className)
							: elem.classList.remove(className);
					});
				} else {
					condition
						? target.classList.add(className)
						: target.classList.remove(className);
				}
			});
		};
		var addClass = function addClass(target, classList) {
			toggleClass(target, classList, true);
		};
		var removeClass = function removeClass(target, classList) {
			toggleClass(target, classList, false);
		};
		var getChildByClass = function getChildByClass(elem, className) {
			for (var i = 0; i < elem.childNodes.length; i++) {
				if (hasClass(elem.childNodes[i], className)) {
					return elem.childNodes[i];
				}
			}
		};
		var applyNumericalStyle = function applyNumericalStyle(
			elem,
			property,
			value
		) {
			if (value === "".concat(parseInt(value))) {
				value = parseInt(value);
			}

			if (value || parseInt(value) === 0) {
				elem.style[property] =
					typeof value === "number" ? "".concat(value, "px") : value;
			} else {
				elem.style.removeProperty(property);
			}
		};
		var show = function show(elem) {
			var display =
				arguments.length > 1 && arguments[1] !== undefined
					? arguments[1]
					: "flex";
			elem.style.display = display;
		};
		var hide = function hide(elem) {
			elem.style.display = "none";
		};
		var setStyle = function setStyle(parent, selector, property, value) {
			var el = parent.querySelector(selector);

			if (el) {
				el.style[property] = value;
			}
		};
		var toggle = function toggle(elem, condition, display) {
			condition ? show(elem, display) : hide(elem);
		}; // borrowed from jquery $(elem).is(':visible') implementation

		var isVisible = function isVisible(elem) {
			return !!(
				elem &&
				(elem.offsetWidth ||
					elem.offsetHeight ||
					elem.getClientRects().length)
			);
		};
		var allButtonsAreHidden = function allButtonsAreHidden() {
			return (
				!isVisible(getConfirmButton()) &&
				!isVisible(getDenyButton()) &&
				!isVisible(getCancelButton())
			);
		};
		var isScrollable = function isScrollable(elem) {
			return !!(elem.scrollHeight > elem.clientHeight);
		}; // borrowed from https://stackoverflow.com/a/46352119

		var hasCssAnimation = function hasCssAnimation(elem) {
			var style = window.getComputedStyle(elem);
			var animDuration = parseFloat(
				style.getPropertyValue("animation-duration") || "0"
			);
			var transDuration = parseFloat(
				style.getPropertyValue("transition-duration") || "0"
			);
			return animDuration > 0 || transDuration > 0;
		};
		var contains = function contains(haystack, needle) {
			if (typeof haystack.contains === "function") {
				return haystack.contains(needle);
			}
		};
		var animateTimerProgressBar = function animateTimerProgressBar(timer) {
			var reset =
				arguments.length > 1 && arguments[1] !== undefined
					? arguments[1]
					: false;
			var timerProgressBar = getTimerProgressBar();

			if (isVisible(timerProgressBar)) {
				if (reset) {
					timerProgressBar.style.transition = "none";
					timerProgressBar.style.width = "100%";
				}

				setTimeout(function () {
					timerProgressBar.style.transition = "width ".concat(
						timer / 1000,
						"s linear"
					);
					timerProgressBar.style.width = "0%";
				}, 10);
			}
		};
		var stopTimerProgressBar = function stopTimerProgressBar() {
			var timerProgressBar = getTimerProgressBar();
			var timerProgressBarWidth = parseInt(
				window.getComputedStyle(timerProgressBar).width
			);
			timerProgressBar.style.removeProperty("transition");
			timerProgressBar.style.width = "100%";
			var timerProgressBarFullWidth = parseInt(
				window.getComputedStyle(timerProgressBar).width
			);
			var timerProgressBarPercent = parseInt(
				(timerProgressBarWidth / timerProgressBarFullWidth) * 100
			);
			timerProgressBar.style.removeProperty("transition");
			timerProgressBar.style.width = "".concat(
				timerProgressBarPercent,
				"%"
			);
		};

		// Detect Node env
		var isNodeEnv = function isNodeEnv() {
			return (
				typeof window === "undefined" || typeof document === "undefined"
			);
		};

		var sweetHTML = '\n <div aria-labelledby="'
			.concat(swalClasses.title, '" aria-describedby="')
			.concat(swalClasses.content, '" class="')
			.concat(swalClasses.popup, '" tabindex="-1">\n   <div class="')
			.concat(swalClasses.header, '">\n     <ul class="')
			.concat(swalClasses["progress-steps"], '"></ul>\n     <div class="')
			.concat(swalClasses.icon, '"></div>\n     <img class="')
			.concat(swalClasses.image, '" />\n     <h2 class="')
			.concat(swalClasses.title, '" id="')
			.concat(
				swalClasses.title,
				'"></h2>\n     <button type="button" class="'
			)
			.concat(
				swalClasses.close,
				'"></button>\n   </div>\n   <div class="'
			)
			.concat(swalClasses.content, '">\n     <div id="')
			.concat(swalClasses.content, '" class="')
			.concat(
				swalClasses["html-container"],
				'"></div>\n     <input class="'
			)
			.concat(swalClasses.input, '" />\n     <input type="file" class="')
			.concat(swalClasses.file, '" />\n     <div class="')
			.concat(
				swalClasses.range,
				'">\n       <input type="range" />\n       <output></output>\n     </div>\n     <select class="'
			)
			.concat(swalClasses.select, '"></select>\n     <div class="')
			.concat(swalClasses.radio, '"></div>\n     <label for="')
			.concat(swalClasses.checkbox, '" class="')
			.concat(
				swalClasses.checkbox,
				'">\n       <input type="checkbox" />\n       <span class="'
			)
			.concat(
				swalClasses.label,
				'"></span>\n     </label>\n     <textarea class="'
			)
			.concat(swalClasses.textarea, '"></textarea>\n     <div class="')
			.concat(swalClasses["validation-message"], '" id="')
			.concat(
				swalClasses["validation-message"],
				'"></div>\n   </div>\n   <div class="'
			)
			.concat(swalClasses.actions, '">\n     <div class="')
			.concat(
				swalClasses.loader,
				'"></div>\n     <button type="button" class="'
			)
			.concat(
				swalClasses.confirm,
				'"></button>\n     <button type="button" class="'
			)
			.concat(
				swalClasses.deny,
				'"></button>\n     <button type="button" class="'
			)
			.concat(
				swalClasses.cancel,
				'"></button>\n   </div>\n   <div class="'
			)
			.concat(swalClasses.footer, '"></div>\n   <div class="')
			.concat(
				swalClasses["timer-progress-bar-container"],
				'">\n     <div class="'
			)
			.concat(
				swalClasses["timer-progress-bar"],
				'"></div>\n   </div>\n </div>\n'
			)
			.replace(/(^|\n)\s*/g, "");

		var resetOldContainer = function resetOldContainer() {
			var oldContainer = getContainer();

			if (!oldContainer) {
				return false;
			}

			oldContainer.parentNode.removeChild(oldContainer);
			removeClass(
				[document.documentElement, document.body],
				[
					swalClasses["no-backdrop"],
					swalClasses["toast-shown"],
					swalClasses["has-column"],
				]
			);
			return true;
		};

		var oldInputVal; // IE11 workaround, see #1109 for details

		var resetValidationMessage = function resetValidationMessage(e) {
			if (Swal.isVisible() && oldInputVal !== e.target.value) {
				Swal.resetValidationMessage();
			}

			oldInputVal = e.target.value;
		};

		var addInputChangeListeners = function addInputChangeListeners() {
			var content = getContent();
			var input = getChildByClass(content, swalClasses.input);
			var file = getChildByClass(content, swalClasses.file);
			var range = content.querySelector(
				".".concat(swalClasses.range, " input")
			);
			var rangeOutput = content.querySelector(
				".".concat(swalClasses.range, " output")
			);
			var select = getChildByClass(content, swalClasses.select);
			var checkbox = content.querySelector(
				".".concat(swalClasses.checkbox, " input")
			);
			var textarea = getChildByClass(content, swalClasses.textarea);
			input.oninput = resetValidationMessage;
			file.onchange = resetValidationMessage;
			select.onchange = resetValidationMessage;
			checkbox.onchange = resetValidationMessage;
			textarea.oninput = resetValidationMessage;

			range.oninput = function (e) {
				resetValidationMessage(e);
				rangeOutput.value = range.value;
			};

			range.onchange = function (e) {
				resetValidationMessage(e);
				range.nextSibling.value = range.value;
			};
		};

		var getTarget = function getTarget(target) {
			return typeof target === "string"
				? document.querySelector(target)
				: target;
		};

		var setupAccessibility = function setupAccessibility(params) {
			var popup = getPopup();
			popup.setAttribute("role", params.toast ? "alert" : "dialog");
			popup.setAttribute(
				"aria-live",
				params.toast ? "polite" : "assertive"
			);

			if (!params.toast) {
				popup.setAttribute("aria-modal", "true");
			}
		};

		var setupRTL = function setupRTL(targetElement) {
			if (window.getComputedStyle(targetElement).direction === "rtl") {
				addClass(getContainer(), swalClasses.rtl);
			}
		};
		/*
		 * Add modal + backdrop to DOM
		 */

		var init = function init(params) {
			// Clean up the old popup container if it exists
			var oldContainerExisted = resetOldContainer();
			/* istanbul ignore if */

			if (isNodeEnv()) {
				error("SweetAlert2 requires document to initialize");
				return;
			}

			var container = document.createElement("div");
			container.className = swalClasses.container;

			if (oldContainerExisted) {
				addClass(container, swalClasses["no-transition"]);
			}

			setInnerHtml(container, sweetHTML);
			var targetElement = getTarget(params.target);
			targetElement.appendChild(container);
			setupAccessibility(params);
			setupRTL(targetElement);
			addInputChangeListeners();
		};

		var parseHtmlToContainer = function parseHtmlToContainer(
			param,
			target
		) {
			// DOM element
			if (param instanceof HTMLElement) {
				target.appendChild(param); // Object
			} else if (_typeof(param) === "object") {
				handleObject(param, target); // Plain string
			} else if (param) {
				setInnerHtml(target, param);
			}
		};

		var handleObject = function handleObject(param, target) {
			// JQuery element(s)
			if (param.jquery) {
				handleJqueryElem(target, param); // For other objects use their string representation
			} else {
				setInnerHtml(target, param.toString());
			}
		};

		var handleJqueryElem = function handleJqueryElem(target, elem) {
			target.textContent = "";

			if (0 in elem) {
				for (var i = 0; i in elem; i++) {
					target.appendChild(elem[i].cloneNode(true));
				}
			} else {
				target.appendChild(elem.cloneNode(true));
			}
		};

		var animationEndEvent = (function () {
			// Prevent run in Node env

			/* istanbul ignore if */
			if (isNodeEnv()) {
				return false;
			}

			var testEl = document.createElement("div");
			var transEndEventNames = {
				WebkitAnimation: "webkitAnimationEnd",
				OAnimation: "oAnimationEnd oanimationend",
				animation: "animationend",
			};

			for (var i in transEndEventNames) {
				if (
					Object.prototype.hasOwnProperty.call(
						transEndEventNames,
						i
					) &&
					typeof testEl.style[i] !== "undefined"
				) {
					return transEndEventNames[i];
				}
			}

			return false;
		})();

		// https://github.com/twbs/bootstrap/blob/master/js/src/modal.js

		var measureScrollbar = function measureScrollbar() {
			var scrollDiv = document.createElement("div");
			scrollDiv.className = swalClasses["scrollbar-measure"];
			document.body.appendChild(scrollDiv);
			var scrollbarWidth =
				scrollDiv.getBoundingClientRect().width - scrollDiv.clientWidth;
			document.body.removeChild(scrollDiv);
			return scrollbarWidth;
		};

		var renderActions = function renderActions(instance, params) {
			var actions = getActions();
			var loader = getLoader();
			var confirmButton = getConfirmButton();
			var denyButton = getDenyButton();
			var cancelButton = getCancelButton(); // Actions (buttons) wrapper

			if (
				!params.showConfirmButton &&
				!params.showDenyButton &&
				!params.showCancelButton
			) {
				hide(actions);
			} // Custom class

			applyCustomClass(actions, params, "actions"); // Render buttons

			renderButton(confirmButton, "confirm", params);
			renderButton(denyButton, "deny", params);
			renderButton(cancelButton, "cancel", params);
			handleButtonsStyling(
				confirmButton,
				denyButton,
				cancelButton,
				params
			);

			if (params.reverseButtons) {
				actions.insertBefore(cancelButton, loader);
				actions.insertBefore(denyButton, loader);
				actions.insertBefore(confirmButton, loader);
			} // Loader

			setInnerHtml(loader, params.loaderHtml);
			applyCustomClass(loader, params, "loader");
		};

		function handleButtonsStyling(
			confirmButton,
			denyButton,
			cancelButton,
			params
		) {
			if (!params.buttonsStyling) {
				return removeClass(
					[confirmButton, denyButton, cancelButton],
					swalClasses.styled
				);
			}

			addClass(
				[confirmButton, denyButton, cancelButton],
				swalClasses.styled
			); // Buttons background colors

			if (params.confirmButtonColor) {
				confirmButton.style.backgroundColor = params.confirmButtonColor;
			}

			if (params.denyButtonColor) {
				denyButton.style.backgroundColor = params.denyButtonColor;
			}

			if (params.cancelButtonColor) {
				cancelButton.style.backgroundColor = params.cancelButtonColor;
			}
		}

		function renderButton(button, buttonType, params) {
			toggle(
				button,
				params[
					"show".concat(capitalizeFirstLetter(buttonType), "Button")
				],
				"inline-block"
			);
			setInnerHtml(button, params["".concat(buttonType, "ButtonText")]); // Set caption text

			button.setAttribute(
				"aria-label",
				params["".concat(buttonType, "ButtonAriaLabel")]
			); // ARIA label
			// Add buttons custom classes

			button.className = swalClasses[buttonType];
			applyCustomClass(button, params, "".concat(buttonType, "Button"));
			addClass(button, params["".concat(buttonType, "ButtonClass")]);
		}

		function handleBackdropParam(container, backdrop) {
			if (typeof backdrop === "string") {
				container.style.background = backdrop;
			} else if (!backdrop) {
				addClass(
					[document.documentElement, document.body],
					swalClasses["no-backdrop"]
				);
			}
		}

		function handlePositionParam(container, position) {
			if (position in swalClasses) {
				addClass(container, swalClasses[position]);
			} else {
				warn(
					'The "position" parameter is not valid, defaulting to "center"'
				);
				addClass(container, swalClasses.center);
			}
		}

		function handleGrowParam(container, grow) {
			if (grow && typeof grow === "string") {
				var growClass = "grow-".concat(grow);

				if (growClass in swalClasses) {
					addClass(container, swalClasses[growClass]);
				}
			}
		}

		var renderContainer = function renderContainer(instance, params) {
			var container = getContainer();

			if (!container) {
				return;
			}

			handleBackdropParam(container, params.backdrop);

			if (!params.backdrop && params.allowOutsideClick) {
				warn(
					'"allowOutsideClick" parameter requires `backdrop` parameter to be set to `true`'
				);
			}

			handlePositionParam(container, params.position);
			handleGrowParam(container, params.grow); // Custom class

			applyCustomClass(container, params, "container"); // Set queue step attribute for getQueueStep() method

			var queueStep = document.body.getAttribute("data-swal2-queue-step");

			if (queueStep) {
				container.setAttribute("data-queue-step", queueStep);
				document.body.removeAttribute("data-swal2-queue-step");
			}
		};

		/**
		 * This module containts `WeakMap`s for each effectively-"private  property" that a `Swal` has.
		 * For example, to set the private property "foo" of `this` to "bar", you can `privateProps.foo.set(this, 'bar')`
		 * This is the approach that Babel will probably take to implement private methods/fields
		 *   https://github.com/tc39/proposal-private-methods
		 *   https://github.com/babel/babel/pull/7555
		 * Once we have the changes from that PR in Babel, and our core class fits reasonable in *one module*
		 *   then we can use that language feature.
		 */
		var privateProps = {
			promise: new WeakMap(),
			innerParams: new WeakMap(),
			domCache: new WeakMap(),
		};

		var inputTypes = [
			"input",
			"file",
			"range",
			"select",
			"radio",
			"checkbox",
			"textarea",
		];
		var renderInput = function renderInput(instance, params) {
			var content = getContent();
			var innerParams = privateProps.innerParams.get(instance);
			var rerender = !innerParams || params.input !== innerParams.input;
			inputTypes.forEach(function (inputType) {
				var inputClass = swalClasses[inputType];
				var inputContainer = getChildByClass(content, inputClass); // set attributes

				setAttributes(inputType, params.inputAttributes); // set class

				inputContainer.className = inputClass;

				if (rerender) {
					hide(inputContainer);
				}
			});

			if (params.input) {
				if (rerender) {
					showInput(params);
				} // set custom class

				setCustomClass(params);
			}
		};

		var showInput = function showInput(params) {
			if (!renderInputType[params.input]) {
				return error(
					'Unexpected type of input! Expected "text", "email", "password", "number", "tel", "select", "radio", "checkbox", "textarea", "file" or "url", got "'.concat(
						params.input,
						'"'
					)
				);
			}

			var inputContainer = getInputContainer(params.input);
			var input = renderInputType[params.input](inputContainer, params);
			show(input); // input autofocus

			setTimeout(function () {
				focusInput(input);
			});
		};

		var removeAttributes = function removeAttributes(input) {
			for (var i = 0; i < input.attributes.length; i++) {
				var attrName = input.attributes[i].name;

				if (!(["type", "value", "style"].indexOf(attrName) !== -1)) {
					input.removeAttribute(attrName);
				}
			}
		};

		var setAttributes = function setAttributes(inputType, inputAttributes) {
			var input = getInput(getContent(), inputType);

			if (!input) {
				return;
			}

			removeAttributes(input);

			for (var attr in inputAttributes) {
				// Do not set a placeholder for <input type="range">
				// it'll crash Edge, #1298
				if (inputType === "range" && attr === "placeholder") {
					continue;
				}

				input.setAttribute(attr, inputAttributes[attr]);
			}
		};

		var setCustomClass = function setCustomClass(params) {
			var inputContainer = getInputContainer(params.input);

			if (params.customClass) {
				addClass(inputContainer, params.customClass.input);
			}
		};

		var setInputPlaceholder = function setInputPlaceholder(input, params) {
			if (!input.placeholder || params.inputPlaceholder) {
				input.placeholder = params.inputPlaceholder;
			}
		};

		var setInputLabel = function setInputLabel(input, prependTo, params) {
			if (params.inputLabel) {
				input.id = swalClasses.input;
				var label = document.createElement("label");
				var labelClass = swalClasses["input-label"];
				label.setAttribute("for", input.id);
				label.className = labelClass;
				addClass(label, params.customClass.inputLabel);
				label.innerText = params.inputLabel;
				prependTo.insertAdjacentElement("beforebegin", label);
			}
		};

		var getInputContainer = function getInputContainer(inputType) {
			var inputClass = swalClasses[inputType]
				? swalClasses[inputType]
				: swalClasses.input;
			return getChildByClass(getContent(), inputClass);
		};

		var renderInputType = {};

		renderInputType.text =
			renderInputType.email =
			renderInputType.password =
			renderInputType.number =
			renderInputType.tel =
			renderInputType.url =
				function (input, params) {
					if (
						typeof params.inputValue === "string" ||
						typeof params.inputValue === "number"
					) {
						input.value = params.inputValue;
					} else if (!isPromise(params.inputValue)) {
						warn(
							'Unexpected type of inputValue! Expected "string", "number" or "Promise", got "'.concat(
								_typeof(params.inputValue),
								'"'
							)
						);
					}

					setInputLabel(input, input, params);
					setInputPlaceholder(input, params);
					input.type = params.input;
					return input;
				};

		renderInputType.file = function (input, params) {
			setInputLabel(input, input, params);
			setInputPlaceholder(input, params);
			return input;
		};

		renderInputType.range = function (range, params) {
			var rangeInput = range.querySelector("input");
			var rangeOutput = range.querySelector("output");
			rangeInput.value = params.inputValue;
			rangeInput.type = params.input;
			rangeOutput.value = params.inputValue;
			setInputLabel(rangeInput, range, params);
			return range;
		};

		renderInputType.select = function (select, params) {
			select.textContent = "";

			if (params.inputPlaceholder) {
				var placeholder = document.createElement("option");
				setInnerHtml(placeholder, params.inputPlaceholder);
				placeholder.value = "";
				placeholder.disabled = true;
				placeholder.selected = true;
				select.appendChild(placeholder);
			}

			setInputLabel(select, select, params);
			return select;
		};

		renderInputType.radio = function (radio) {
			radio.textContent = "";
			return radio;
		};

		renderInputType.checkbox = function (checkboxContainer, params) {
			var checkbox = getInput(getContent(), "checkbox");
			checkbox.value = 1;
			checkbox.id = swalClasses.checkbox;
			checkbox.checked = Boolean(params.inputValue);
			var label = checkboxContainer.querySelector("span");
			setInnerHtml(label, params.inputPlaceholder);
			return checkboxContainer;
		};

		renderInputType.textarea = function (textarea, params) {
			textarea.value = params.inputValue;
			setInputPlaceholder(textarea, params);
			setInputLabel(textarea, textarea, params);

			var getPadding = function getPadding(el) {
				return (
					parseInt(window.getComputedStyle(el).paddingLeft) +
					parseInt(window.getComputedStyle(el).paddingRight)
				);
			};

			if ("MutationObserver" in window) {
				// #1699
				var initialPopupWidth = parseInt(
					window.getComputedStyle(getPopup()).width
				);

				var outputsize = function outputsize() {
					var contentWidth =
						textarea.offsetWidth +
						getPadding(getPopup()) +
						getPadding(getContent());

					if (contentWidth > initialPopupWidth) {
						getPopup().style.width = "".concat(contentWidth, "px");
					} else {
						getPopup().style.width = null;
					}
				};

				new MutationObserver(outputsize).observe(textarea, {
					attributes: true,
					attributeFilter: ["style"],
				});
			}

			return textarea;
		};

		var renderContent = function renderContent(instance, params) {
			var htmlContainer = getHtmlContainer();
			applyCustomClass(htmlContainer, params, "htmlContainer"); // Content as HTML

			if (params.html) {
				parseHtmlToContainer(params.html, htmlContainer);
				show(htmlContainer, "block"); // Content as plain text
			} else if (params.text) {
				htmlContainer.textContent = params.text;
				show(htmlContainer, "block"); // No content
			} else {
				hide(htmlContainer);
			}

			renderInput(instance, params); // Custom class

			applyCustomClass(getContent(), params, "content");
		};

		var renderFooter = function renderFooter(instance, params) {
			var footer = getFooter();
			toggle(footer, params.footer);

			if (params.footer) {
				parseHtmlToContainer(params.footer, footer);
			} // Custom class

			applyCustomClass(footer, params, "footer");
		};

		var renderCloseButton = function renderCloseButton(instance, params) {
			var closeButton = getCloseButton();
			setInnerHtml(closeButton, params.closeButtonHtml); // Custom class

			applyCustomClass(closeButton, params, "closeButton");
			toggle(closeButton, params.showCloseButton);
			closeButton.setAttribute("aria-label", params.closeButtonAriaLabel);
		};

		var renderIcon = function renderIcon(instance, params) {
			var innerParams = privateProps.innerParams.get(instance);
			var icon = getIcon(); // if the given icon already rendered, apply the styling without re-rendering the icon

			if (innerParams && params.icon === innerParams.icon) {
				// Custom or default content
				setContent(icon, params);
				applyStyles(icon, params);
				return;
			}

			if (!params.icon && !params.iconHtml) {
				return hide(icon);
			}

			if (
				params.icon &&
				Object.keys(iconTypes).indexOf(params.icon) === -1
			) {
				error(
					'Unknown icon! Expected "success", "error", "warning", "info" or "question", got "'.concat(
						params.icon,
						'"'
					)
				);
				return hide(icon);
			}

			show(icon); // Custom or default content

			setContent(icon, params);
			applyStyles(icon, params); // Animate icon

			addClass(icon, params.showClass.icon);
		};

		var applyStyles = function applyStyles(icon, params) {
			for (var iconType in iconTypes) {
				if (params.icon !== iconType) {
					removeClass(icon, iconTypes[iconType]);
				}
			}

			addClass(icon, iconTypes[params.icon]); // Icon color

			setColor(icon, params); // Success icon background color

			adjustSuccessIconBackgoundColor(); // Custom class

			applyCustomClass(icon, params, "icon");
		}; // Adjust success icon background color to match the popup background color

		var adjustSuccessIconBackgoundColor =
			function adjustSuccessIconBackgoundColor() {
				var popup = getPopup();
				var popupBackgroundColor = window
					.getComputedStyle(popup)
					.getPropertyValue("background-color");
				var successIconParts = popup.querySelectorAll(
					"[class^=swal2-success-circular-line], .swal2-success-fix"
				);

				for (var i = 0; i < successIconParts.length; i++) {
					successIconParts[i].style.backgroundColor =
						popupBackgroundColor;
				}
			};

		var setContent = function setContent(icon, params) {
			icon.textContent = "";

			if (params.iconHtml) {
				setInnerHtml(icon, iconContent(params.iconHtml));
			} else if (params.icon === "success") {
				setInnerHtml(
					icon,
					'\n      <div class="swal2-success-circular-line-left"></div>\n      <span class="swal2-success-line-tip"></span> <span class="swal2-success-line-long"></span>\n      <div class="swal2-success-ring"></div> <div class="swal2-success-fix"></div>\n      <div class="swal2-success-circular-line-right"></div>\n    '
				);
			} else if (params.icon === "error") {
				setInnerHtml(
					icon,
					'\n      <span class="swal2-x-mark">\n        <span class="swal2-x-mark-line-left"></span>\n        <span class="swal2-x-mark-line-right"></span>\n      </span>\n    '
				);
			} else {
				var defaultIconHtml = {
					question: "?",
					warning: "!",
					info: "i",
				};
				setInnerHtml(icon, iconContent(defaultIconHtml[params.icon]));
			}
		};

		var setColor = function setColor(icon, params) {
			if (!params.iconColor) {
				return;
			}

			icon.style.color = params.iconColor;
			icon.style.borderColor = params.iconColor;

			for (
				var _i = 0,
					_arr = [
						".swal2-success-line-tip",
						".swal2-success-line-long",
						".swal2-x-mark-line-left",
						".swal2-x-mark-line-right",
					];
				_i < _arr.length;
				_i++
			) {
				var sel = _arr[_i];
				setStyle(icon, sel, "backgroundColor", params.iconColor);
			}

			setStyle(
				icon,
				".swal2-success-ring",
				"borderColor",
				params.iconColor
			);
		};

		var iconContent = function iconContent(content) {
			return '<div class="'
				.concat(swalClasses["icon-content"], '">')
				.concat(content, "</div>");
		};

		var renderImage = function renderImage(instance, params) {
			var image = getImage();

			if (!params.imageUrl) {
				return hide(image);
			}

			show(image, ""); // Src, alt

			image.setAttribute("src", params.imageUrl);
			image.setAttribute("alt", params.imageAlt); // Width, height

			applyNumericalStyle(image, "width", params.imageWidth);
			applyNumericalStyle(image, "height", params.imageHeight); // Class

			image.className = swalClasses.image;
			applyCustomClass(image, params, "image");
		};

		var currentSteps = [];
		/*
		 * Global function for chaining sweetAlert popups
		 */

		var queue = function queue(steps) {
			warnAboutDeprecation("Swal.queue()", "async/await");
			var Swal = this;
			currentSteps = steps;

			var resetAndResolve = function resetAndResolve(resolve, value) {
				currentSteps = [];
				resolve(value);
			};

			var queueResult = [];
			return new Promise(function (resolve) {
				(function step(i, callback) {
					if (i < currentSteps.length) {
						document.body.setAttribute("data-swal2-queue-step", i);
						Swal.fire(currentSteps[i]).then(function (result) {
							if (typeof result.value !== "undefined") {
								queueResult.push(result.value);
								step(i + 1);
							} else {
								resetAndResolve(resolve, {
									dismiss: result.dismiss,
								});
							}
						});
					} else {
						resetAndResolve(resolve, {
							value: queueResult,
						});
					}
				})(0);
			});
		};
		/*
		 * Global function for getting the index of current popup in queue
		 */

		var getQueueStep = function getQueueStep() {
			return (
				getContainer() && getContainer().getAttribute("data-queue-step")
			);
		};
		/*
		 * Global function for inserting a popup to the queue
		 */

		var insertQueueStep = function insertQueueStep(step, index) {
			if (index && index < currentSteps.length) {
				return currentSteps.splice(index, 0, step);
			}

			return currentSteps.push(step);
		};
		/*
		 * Global function for deleting a popup from the queue
		 */

		var deleteQueueStep = function deleteQueueStep(index) {
			if (typeof currentSteps[index] !== "undefined") {
				currentSteps.splice(index, 1);
			}
		};

		var createStepElement = function createStepElement(step) {
			var stepEl = document.createElement("li");
			addClass(stepEl, swalClasses["progress-step"]);
			setInnerHtml(stepEl, step);
			return stepEl;
		};

		var createLineElement = function createLineElement(params) {
			var lineEl = document.createElement("li");
			addClass(lineEl, swalClasses["progress-step-line"]);

			if (params.progressStepsDistance) {
				lineEl.style.width = params.progressStepsDistance;
			}

			return lineEl;
		};

		var renderProgressSteps = function renderProgressSteps(
			instance,
			params
		) {
			var progressStepsContainer = getProgressSteps();

			if (!params.progressSteps || params.progressSteps.length === 0) {
				return hide(progressStepsContainer);
			}

			show(progressStepsContainer);
			progressStepsContainer.textContent = "";
			var currentProgressStep = parseInt(
				params.currentProgressStep === undefined
					? getQueueStep()
					: params.currentProgressStep
			);

			if (currentProgressStep >= params.progressSteps.length) {
				warn(
					"Invalid currentProgressStep parameter, it should be less than progressSteps.length " +
						"(currentProgressStep like JS arrays starts from 0)"
				);
			}

			params.progressSteps.forEach(function (step, index) {
				var stepEl = createStepElement(step);
				progressStepsContainer.appendChild(stepEl);

				if (index === currentProgressStep) {
					addClass(stepEl, swalClasses["active-progress-step"]);
				}

				if (index !== params.progressSteps.length - 1) {
					var lineEl = createLineElement(params);
					progressStepsContainer.appendChild(lineEl);
				}
			});
		};

		var renderTitle = function renderTitle(instance, params) {
			var title = getTitle();
			toggle(title, params.title || params.titleText, "block");

			if (params.title) {
				parseHtmlToContainer(params.title, title);
			}

			if (params.titleText) {
				title.innerText = params.titleText;
			} // Custom class

			applyCustomClass(title, params, "title");
		};

		var renderHeader = function renderHeader(instance, params) {
			var header = getHeader(); // Custom class

			applyCustomClass(header, params, "header"); // Progress steps

			renderProgressSteps(instance, params); // Icon

			renderIcon(instance, params); // Image

			renderImage(instance, params); // Title

			renderTitle(instance, params); // Close button

			renderCloseButton(instance, params);
		};

		var renderPopup = function renderPopup(instance, params) {
			var container = getContainer();
			var popup = getPopup(); // Width

			if (params.toast) {
				// #2170
				applyNumericalStyle(container, "width", params.width);
				popup.style.width = "100%";
			} else {
				applyNumericalStyle(popup, "width", params.width);
			} // Padding

			applyNumericalStyle(popup, "padding", params.padding); // Background

			if (params.background) {
				popup.style.background = params.background;
			}

			hide(getValidationMessage()); // Classes

			addClasses(popup, params);
		};

		var addClasses = function addClasses(popup, params) {
			// Default Class + showClass when updating Swal.update({})
			popup.className = ""
				.concat(swalClasses.popup, " ")
				.concat(isVisible(popup) ? params.showClass.popup : "");

			if (params.toast) {
				addClass(
					[document.documentElement, document.body],
					swalClasses["toast-shown"]
				);
				addClass(popup, swalClasses.toast);
			} else {
				addClass(popup, swalClasses.modal);
			} // Custom class

			applyCustomClass(popup, params, "popup");

			if (typeof params.customClass === "string") {
				addClass(popup, params.customClass);
			} // Icon class (#1842)

			if (params.icon) {
				addClass(popup, swalClasses["icon-".concat(params.icon)]);
			}
		};

		var render = function render(instance, params) {
			renderPopup(instance, params);
			renderContainer(instance, params);
			renderHeader(instance, params);
			renderContent(instance, params);
			renderActions(instance, params);
			renderFooter(instance, params);

			if (typeof params.didRender === "function") {
				params.didRender(getPopup());
			} else if (typeof params.onRender === "function") {
				params.onRender(getPopup()); // @deprecated
			}
		};

		/*
		 * Global function to determine if SweetAlert2 popup is shown
		 */

		var isVisible$1 = function isVisible$$1() {
			return isVisible(getPopup());
		};
		/*
		 * Global function to click 'Confirm' button
		 */

		var clickConfirm = function clickConfirm() {
			return getConfirmButton() && getConfirmButton().click();
		};
		/*
		 * Global function to click 'Deny' button
		 */

		var clickDeny = function clickDeny() {
			return getDenyButton() && getDenyButton().click();
		};
		/*
		 * Global function to click 'Cancel' button
		 */

		var clickCancel = function clickCancel() {
			return getCancelButton() && getCancelButton().click();
		};

		function fire() {
			var Swal = this;

			for (
				var _len = arguments.length, args = new Array(_len), _key = 0;
				_key < _len;
				_key++
			) {
				args[_key] = arguments[_key];
			}

			return _construct(Swal, args);
		}

		/**
		 * Returns an extended version of `Swal` containing `params` as defaults.
		 * Useful for reusing Swal configuration.
		 *
		 * For example:
		 *
		 * Before:
		 * const textPromptOptions = { input: 'text', showCancelButton: true }
		 * const {value: firstName} = await Swal.fire({ ...textPromptOptions, title: 'What is your first name?' })
		 * const {value: lastName} = await Swal.fire({ ...textPromptOptions, title: 'What is your last name?' })
		 *
		 * After:
		 * const TextPrompt = Swal.mixin({ input: 'text', showCancelButton: true })
		 * const {value: firstName} = await TextPrompt('What is your first name?')
		 * const {value: lastName} = await TextPrompt('What is your last name?')
		 *
		 * @param mixinParams
		 */
		function mixin(mixinParams) {
			var MixinSwal = /*#__PURE__*/ (function (_this) {
				_inherits(MixinSwal, _this);

				var _super = _createSuper(MixinSwal);

				function MixinSwal() {
					_classCallCheck(this, MixinSwal);

					return _super.apply(this, arguments);
				}

				_createClass(MixinSwal, [
					{
						key: "_main",
						value: function _main(params, priorityMixinParams) {
							return _get(
								_getPrototypeOf(MixinSwal.prototype),
								"_main",
								this
							).call(
								this,
								params,
								_extends({}, mixinParams, priorityMixinParams)
							);
						},
					},
				]);

				return MixinSwal;
			})(this);

			return MixinSwal;
		}

		/**
		 * Shows loader (spinner), this is useful with AJAX requests.
		 * By default the loader be shown instead of the "Confirm" button.
		 */

		var showLoading = function showLoading(buttonToReplace) {
			var popup = getPopup();

			if (!popup) {
				Swal.fire();
			}

			popup = getPopup();
			var actions = getActions();
			var loader = getLoader();

			if (!buttonToReplace && isVisible(getConfirmButton())) {
				buttonToReplace = getConfirmButton();
			}

			show(actions);

			if (buttonToReplace) {
				hide(buttonToReplace);
				loader.setAttribute(
					"data-button-to-replace",
					buttonToReplace.className
				);
			}

			loader.parentNode.insertBefore(loader, buttonToReplace);
			addClass([popup, actions], swalClasses.loading);
			show(loader);
			popup.setAttribute("data-loading", true);
			popup.setAttribute("aria-busy", true);
			popup.focus();
		};

		var RESTORE_FOCUS_TIMEOUT = 100;

		var globalState = {};

		var focusPreviousActiveElement = function focusPreviousActiveElement() {
			if (
				globalState.previousActiveElement &&
				globalState.previousActiveElement.focus
			) {
				globalState.previousActiveElement.focus();
				globalState.previousActiveElement = null;
			} else if (document.body) {
				document.body.focus();
			}
		}; // Restore previous active (focused) element

		var restoreActiveElement = function restoreActiveElement(returnFocus) {
			return new Promise(function (resolve) {
				if (!returnFocus) {
					return resolve();
				}

				var x = window.scrollX;
				var y = window.scrollY;
				globalState.restoreFocusTimeout = setTimeout(function () {
					focusPreviousActiveElement();
					resolve();
				}, RESTORE_FOCUS_TIMEOUT); // issues/900

				if (typeof x !== "undefined" && typeof y !== "undefined") {
					// IE doesn't have scrollX/scrollY support
					window.scrollTo(x, y);
				}
			});
		};

		/**
		 * If `timer` parameter is set, returns number of milliseconds of timer remained.
		 * Otherwise, returns undefined.
		 */

		var getTimerLeft = function getTimerLeft() {
			return globalState.timeout && globalState.timeout.getTimerLeft();
		};
		/**
		 * Stop timer. Returns number of milliseconds of timer remained.
		 * If `timer` parameter isn't set, returns undefined.
		 */

		var stopTimer = function stopTimer() {
			if (globalState.timeout) {
				stopTimerProgressBar();
				return globalState.timeout.stop();
			}
		};
		/**
		 * Resume timer. Returns number of milliseconds of timer remained.
		 * If `timer` parameter isn't set, returns undefined.
		 */

		var resumeTimer = function resumeTimer() {
			if (globalState.timeout) {
				var remaining = globalState.timeout.start();
				animateTimerProgressBar(remaining);
				return remaining;
			}
		};
		/**
		 * Resume timer. Returns number of milliseconds of timer remained.
		 * If `timer` parameter isn't set, returns undefined.
		 */

		var toggleTimer = function toggleTimer() {
			var timer = globalState.timeout;
			return timer && (timer.running ? stopTimer() : resumeTimer());
		};
		/**
		 * Increase timer. Returns number of milliseconds of an updated timer.
		 * If `timer` parameter isn't set, returns undefined.
		 */

		var increaseTimer = function increaseTimer(n) {
			if (globalState.timeout) {
				var remaining = globalState.timeout.increase(n);
				animateTimerProgressBar(remaining, true);
				return remaining;
			}
		};
		/**
		 * Check if timer is running. Returns true if timer is running
		 * or false if timer is paused or stopped.
		 * If `timer` parameter isn't set, returns undefined
		 */

		var isTimerRunning = function isTimerRunning() {
			return globalState.timeout && globalState.timeout.isRunning();
		};

		var bodyClickListenerAdded = false;
		var clickHandlers = {};
		function bindClickHandler() {
			var attr =
				arguments.length > 0 && arguments[0] !== undefined
					? arguments[0]
					: "data-swal-template";
			clickHandlers[attr] = this;

			if (!bodyClickListenerAdded) {
				document.body.addEventListener("click", bodyClickListener);
				bodyClickListenerAdded = true;
			}
		}

		var bodyClickListener = function bodyClickListener(event) {
			// 1. using .parentNode instead of event.path because of better support by old browsers https://stackoverflow.com/a/39245638
			// 2. using .parentNode instead of .parentElement because of IE11 + SVG https://stackoverflow.com/a/36270354
			for (
				var el = event.target;
				el && el !== document;
				el = el.parentNode
			) {
				for (var attr in clickHandlers) {
					var template = el.getAttribute(attr);

					if (template) {
						clickHandlers[attr].fire({
							template: template,
						});
						return;
					}
				}
			}
		};

		var defaultParams = {
			title: "",
			titleText: "",
			text: "",
			html: "",
			footer: "",
			icon: undefined,
			iconColor: undefined,
			iconHtml: undefined,
			template: undefined,
			toast: false,
			animation: true,
			showClass: {
				popup: "swal2-show",
				backdrop: "swal2-backdrop-show",
				icon: "swal2-icon-show",
			},
			hideClass: {
				popup: "swal2-hide",
				backdrop: "swal2-backdrop-hide",
				icon: "swal2-icon-hide",
			},
			customClass: {},
			target: "body",
			backdrop: true,
			heightAuto: true,
			allowOutsideClick: true,
			allowEscapeKey: true,
			allowEnterKey: true,
			stopKeydownPropagation: true,
			keydownListenerCapture: false,
			showConfirmButton: true,
			showDenyButton: false,
			showCancelButton: false,
			preConfirm: undefined,
			preDeny: undefined,
			confirmButtonText: "OK",
			confirmButtonAriaLabel: "",
			confirmButtonColor: undefined,
			denyButtonText: "No",
			denyButtonAriaLabel: "",
			denyButtonColor: undefined,
			cancelButtonText: "Cancel",
			cancelButtonAriaLabel: "",
			cancelButtonColor: undefined,
			buttonsStyling: true,
			reverseButtons: false,
			focusConfirm: true,
			focusDeny: false,
			focusCancel: false,
			returnFocus: true,
			showCloseButton: false,
			closeButtonHtml: "&times;",
			closeButtonAriaLabel: "Close this dialog",
			loaderHtml: "",
			showLoaderOnConfirm: false,
			showLoaderOnDeny: false,
			imageUrl: undefined,
			imageWidth: undefined,
			imageHeight: undefined,
			imageAlt: "",
			timer: undefined,
			timerProgressBar: false,
			width: undefined,
			padding: undefined,
			background: undefined,
			input: undefined,
			inputPlaceholder: "",
			inputLabel: "",
			inputValue: "",
			inputOptions: {},
			inputAutoTrim: true,
			inputAttributes: {},
			inputValidator: undefined,
			returnInputValueOnDeny: false,
			validationMessage: undefined,
			grow: false,
			position: "center",
			progressSteps: [],
			currentProgressStep: undefined,
			progressStepsDistance: undefined,
			onBeforeOpen: undefined,
			onOpen: undefined,
			willOpen: undefined,
			didOpen: undefined,
			onRender: undefined,
			didRender: undefined,
			onClose: undefined,
			onAfterClose: undefined,
			willClose: undefined,
			didClose: undefined,
			onDestroy: undefined,
			didDestroy: undefined,
			scrollbarPadding: true,
		};
		var updatableParams = [
			"allowEscapeKey",
			"allowOutsideClick",
			"background",
			"buttonsStyling",
			"cancelButtonAriaLabel",
			"cancelButtonColor",
			"cancelButtonText",
			"closeButtonAriaLabel",
			"closeButtonHtml",
			"confirmButtonAriaLabel",
			"confirmButtonColor",
			"confirmButtonText",
			"currentProgressStep",
			"customClass",
			"denyButtonAriaLabel",
			"denyButtonColor",
			"denyButtonText",
			"didClose",
			"didDestroy",
			"footer",
			"hideClass",
			"html",
			"icon",
			"iconColor",
			"iconHtml",
			"imageAlt",
			"imageHeight",
			"imageUrl",
			"imageWidth",
			"onAfterClose",
			"onClose",
			"onDestroy",
			"progressSteps",
			"returnFocus",
			"reverseButtons",
			"showCancelButton",
			"showCloseButton",
			"showConfirmButton",
			"showDenyButton",
			"text",
			"title",
			"titleText",
			"willClose",
		];
		var deprecatedParams = {
			animation: 'showClass" and "hideClass',
			onBeforeOpen: "willOpen",
			onOpen: "didOpen",
			onRender: "didRender",
			onClose: "willClose",
			onAfterClose: "didClose",
			onDestroy: "didDestroy",
		};
		var toastIncompatibleParams = [
			"allowOutsideClick",
			"allowEnterKey",
			"backdrop",
			"focusConfirm",
			"focusDeny",
			"focusCancel",
			"returnFocus",
			"heightAuto",
			"keydownListenerCapture",
		];
		/**
		 * Is valid parameter
		 * @param {String} paramName
		 */

		var isValidParameter = function isValidParameter(paramName) {
			return Object.prototype.hasOwnProperty.call(
				defaultParams,
				paramName
			);
		};
		/**
		 * Is valid parameter for Swal.update() method
		 * @param {String} paramName
		 */

		var isUpdatableParameter = function isUpdatableParameter(paramName) {
			return updatableParams.indexOf(paramName) !== -1;
		};
		/**
		 * Is deprecated parameter
		 * @param {String} paramName
		 */

		var isDeprecatedParameter = function isDeprecatedParameter(paramName) {
			return deprecatedParams[paramName];
		};

		var checkIfParamIsValid = function checkIfParamIsValid(param) {
			if (!isValidParameter(param)) {
				warn('Unknown parameter "'.concat(param, '"'));
			}
		};

		var checkIfToastParamIsValid = function checkIfToastParamIsValid(
			param
		) {
			if (toastIncompatibleParams.indexOf(param) !== -1) {
				warn(
					'The parameter "'.concat(
						param,
						'" is incompatible with toasts'
					)
				);
			}
		};

		var checkIfParamIsDeprecated = function checkIfParamIsDeprecated(
			param
		) {
			if (isDeprecatedParameter(param)) {
				warnAboutDeprecation(param, isDeprecatedParameter(param));
			}
		};
		/**
		 * Show relevant warnings for given params
		 *
		 * @param params
		 */

		var showWarningsForParams = function showWarningsForParams(params) {
			for (var param in params) {
				checkIfParamIsValid(param);

				if (params.toast) {
					checkIfToastParamIsValid(param);
				}

				checkIfParamIsDeprecated(param);
			}
		};

		var staticMethods = /*#__PURE__*/ Object.freeze({
			isValidParameter: isValidParameter,
			isUpdatableParameter: isUpdatableParameter,
			isDeprecatedParameter: isDeprecatedParameter,
			argsToParams: argsToParams,
			isVisible: isVisible$1,
			clickConfirm: clickConfirm,
			clickDeny: clickDeny,
			clickCancel: clickCancel,
			getContainer: getContainer,
			getPopup: getPopup,
			getTitle: getTitle,
			getContent: getContent,
			getHtmlContainer: getHtmlContainer,
			getImage: getImage,
			getIcon: getIcon,
			getInputLabel: getInputLabel,
			getCloseButton: getCloseButton,
			getActions: getActions,
			getConfirmButton: getConfirmButton,
			getDenyButton: getDenyButton,
			getCancelButton: getCancelButton,
			getLoader: getLoader,
			getHeader: getHeader,
			getFooter: getFooter,
			getTimerProgressBar: getTimerProgressBar,
			getFocusableElements: getFocusableElements,
			getValidationMessage: getValidationMessage,
			isLoading: isLoading,
			fire: fire,
			mixin: mixin,
			queue: queue,
			getQueueStep: getQueueStep,
			insertQueueStep: insertQueueStep,
			deleteQueueStep: deleteQueueStep,
			showLoading: showLoading,
			enableLoading: showLoading,
			getTimerLeft: getTimerLeft,
			stopTimer: stopTimer,
			resumeTimer: resumeTimer,
			toggleTimer: toggleTimer,
			increaseTimer: increaseTimer,
			isTimerRunning: isTimerRunning,
			bindClickHandler: bindClickHandler,
		});

		/**
		 * Hides loader and shows back the button which was hidden by .showLoading()
		 */

		function hideLoading() {
			// do nothing if popup is closed
			var innerParams = privateProps.innerParams.get(this);

			if (!innerParams) {
				return;
			}

			var domCache = privateProps.domCache.get(this);
			hide(domCache.loader);
			var buttonToReplace = domCache.popup.getElementsByClassName(
				domCache.loader.getAttribute("data-button-to-replace")
			);

			if (buttonToReplace.length) {
				show(buttonToReplace[0], "inline-block");
			} else if (allButtonsAreHidden()) {
				hide(domCache.actions);
			}

			removeClass(
				[domCache.popup, domCache.actions],
				swalClasses.loading
			);
			domCache.popup.removeAttribute("aria-busy");
			domCache.popup.removeAttribute("data-loading");
			domCache.confirmButton.disabled = false;
			domCache.denyButton.disabled = false;
			domCache.cancelButton.disabled = false;
		}

		function getInput$1(instance) {
			var innerParams = privateProps.innerParams.get(instance || this);
			var domCache = privateProps.domCache.get(instance || this);

			if (!domCache) {
				return null;
			}

			return getInput(domCache.content, innerParams.input);
		}

		var fixScrollbar = function fixScrollbar() {
			// for queues, do not do this more than once
			if (states.previousBodyPadding !== null) {
				return;
			} // if the body has overflow

			if (document.body.scrollHeight > window.innerHeight) {
				// add padding so the content doesn't shift after removal of scrollbar
				states.previousBodyPadding = parseInt(
					window
						.getComputedStyle(document.body)
						.getPropertyValue("padding-right")
				);
				document.body.style.paddingRight = "".concat(
					states.previousBodyPadding + measureScrollbar(),
					"px"
				);
			}
		};
		var undoScrollbar = function undoScrollbar() {
			if (states.previousBodyPadding !== null) {
				document.body.style.paddingRight = "".concat(
					states.previousBodyPadding,
					"px"
				);
				states.previousBodyPadding = null;
			}
		};

		/* istanbul ignore file */

		var iOSfix = function iOSfix() {
			var iOS =
				(/iPad|iPhone|iPod/.test(navigator.userAgent) &&
					!window.MSStream) ||
				(navigator.platform === "MacIntel" &&
					navigator.maxTouchPoints > 1);

			if (iOS && !hasClass(document.body, swalClasses.iosfix)) {
				var offset = document.body.scrollTop;
				document.body.style.top = "".concat(offset * -1, "px");
				addClass(document.body, swalClasses.iosfix);
				lockBodyScroll();
				addBottomPaddingForTallPopups(); // #1948
			}
		};

		var addBottomPaddingForTallPopups =
			function addBottomPaddingForTallPopups() {
				var safari = !navigator.userAgent.match(
					/(CriOS|FxiOS|EdgiOS|YaBrowser|UCBrowser)/i
				);

				if (safari) {
					var bottomPanelHeight = 44;

					if (
						getPopup().scrollHeight >
						window.innerHeight - bottomPanelHeight
					) {
						getContainer().style.paddingBottom = "".concat(
							bottomPanelHeight,
							"px"
						);
					}
				}
			};

		var lockBodyScroll = function lockBodyScroll() {
			// #1246
			var container = getContainer();
			var preventTouchMove;

			container.ontouchstart = function (e) {
				preventTouchMove = shouldPreventTouchMove(e);
			};

			container.ontouchmove = function (e) {
				if (preventTouchMove) {
					e.preventDefault();
					e.stopPropagation();
				}
			};
		};

		var shouldPreventTouchMove = function shouldPreventTouchMove(event) {
			var target = event.target;
			var container = getContainer();

			if (isStylys(event) || isZoom(event)) {
				return false;
			}

			if (target === container) {
				return true;
			}

			if (
				!isScrollable(container) &&
				target.tagName !== "INPUT" && // #1603
				!(
					isScrollable(getContent()) && // #1944
					getContent().contains(target)
				)
			) {
				return true;
			}

			return false;
		};

		var isStylys = function isStylys(event) {
			// #1786
			return (
				event.touches &&
				event.touches.length &&
				event.touches[0].touchType === "stylus"
			);
		};

		var isZoom = function isZoom(event) {
			// #1891
			return event.touches && event.touches.length > 1;
		};

		var undoIOSfix = function undoIOSfix() {
			if (hasClass(document.body, swalClasses.iosfix)) {
				var offset = parseInt(document.body.style.top, 10);
				removeClass(document.body, swalClasses.iosfix);
				document.body.style.top = "";
				document.body.scrollTop = offset * -1;
			}
		};

		/* istanbul ignore file */

		var isIE11 = function isIE11() {
			return !!window.MSInputMethodContext && !!document.documentMode;
		}; // Fix IE11 centering sweetalert2/issues/933

		var fixVerticalPositionIE = function fixVerticalPositionIE() {
			var container = getContainer();
			var popup = getPopup();
			container.style.removeProperty("align-items");

			if (popup.offsetTop < 0) {
				container.style.alignItems = "flex-start";
			}
		};

		var IEfix = function IEfix() {
			if (typeof window !== "undefined" && isIE11()) {
				fixVerticalPositionIE();
				window.addEventListener("resize", fixVerticalPositionIE);
			}
		};
		var undoIEfix = function undoIEfix() {
			if (typeof window !== "undefined" && isIE11()) {
				window.removeEventListener("resize", fixVerticalPositionIE);
			}
		};

		// Adding aria-hidden="true" to elements outside of the active modal dialog ensures that
		// elements not within the active modal dialog will not be surfaced if a user opens a screen
		// reader’s list of elements (headings, form controls, landmarks, etc.) in the document.

		var setAriaHidden = function setAriaHidden() {
			var bodyChildren = toArray(document.body.children);
			bodyChildren.forEach(function (el) {
				if (el === getContainer() || contains(el, getContainer())) {
					return;
				}

				if (el.hasAttribute("aria-hidden")) {
					el.setAttribute(
						"data-previous-aria-hidden",
						el.getAttribute("aria-hidden")
					);
				}

				el.setAttribute("aria-hidden", "true");
			});
		};
		var unsetAriaHidden = function unsetAriaHidden() {
			var bodyChildren = toArray(document.body.children);
			bodyChildren.forEach(function (el) {
				if (el.hasAttribute("data-previous-aria-hidden")) {
					el.setAttribute(
						"aria-hidden",
						el.getAttribute("data-previous-aria-hidden")
					);
					el.removeAttribute("data-previous-aria-hidden");
				} else {
					el.removeAttribute("aria-hidden");
				}
			});
		};

		/**
		 * This module containts `WeakMap`s for each effectively-"private  property" that a `Swal` has.
		 * For example, to set the private property "foo" of `this` to "bar", you can `privateProps.foo.set(this, 'bar')`
		 * This is the approach that Babel will probably take to implement private methods/fields
		 *   https://github.com/tc39/proposal-private-methods
		 *   https://github.com/babel/babel/pull/7555
		 * Once we have the changes from that PR in Babel, and our core class fits reasonable in *one module*
		 *   then we can use that language feature.
		 */
		var privateMethods = {
			swalPromiseResolve: new WeakMap(),
		};

		/*
		 * Instance method to close sweetAlert
		 */

		function removePopupAndResetState(
			instance,
			container,
			returnFocus,
			didClose
		) {
			if (isToast()) {
				triggerDidCloseAndDispose(instance, didClose);
			} else {
				restoreActiveElement(returnFocus).then(function () {
					return triggerDidCloseAndDispose(instance, didClose);
				});
				globalState.keydownTarget.removeEventListener(
					"keydown",
					globalState.keydownHandler,
					{
						capture: globalState.keydownListenerCapture,
					}
				);
				globalState.keydownHandlerAdded = false;
			}

			if (
				container.parentNode &&
				!document.body.getAttribute("data-swal2-queue-step")
			) {
				container.parentNode.removeChild(container);
			}

			if (isModal()) {
				undoScrollbar();
				undoIOSfix();
				undoIEfix();
				unsetAriaHidden();
			}

			removeBodyClasses();
		}

		function removeBodyClasses() {
			removeClass(
				[document.documentElement, document.body],
				[
					swalClasses.shown,
					swalClasses["height-auto"],
					swalClasses["no-backdrop"],
					swalClasses["toast-shown"],
				]
			);
		}

		function close(resolveValue) {
			var popup = getPopup();

			if (!popup) {
				return;
			}

			resolveValue = prepareResolveValue(resolveValue);
			var innerParams = privateProps.innerParams.get(this);

			if (!innerParams || hasClass(popup, innerParams.hideClass.popup)) {
				return;
			}

			var swalPromiseResolve =
				privateMethods.swalPromiseResolve.get(this);
			removeClass(popup, innerParams.showClass.popup);
			addClass(popup, innerParams.hideClass.popup);
			var backdrop = getContainer();
			removeClass(backdrop, innerParams.showClass.backdrop);
			addClass(backdrop, innerParams.hideClass.backdrop);
			handlePopupAnimation(this, popup, innerParams); // Resolve Swal promise

			swalPromiseResolve(resolveValue);
		}

		var prepareResolveValue = function prepareResolveValue(resolveValue) {
			// When user calls Swal.close()
			if (typeof resolveValue === "undefined") {
				return {
					isConfirmed: false,
					isDenied: false,
					isDismissed: true,
				};
			}

			return _extends(
				{
					isConfirmed: false,
					isDenied: false,
					isDismissed: false,
				},
				resolveValue
			);
		};

		var handlePopupAnimation = function handlePopupAnimation(
			instance,
			popup,
			innerParams
		) {
			var container = getContainer(); // If animation is supported, animate

			var animationIsSupported =
				animationEndEvent && hasCssAnimation(popup);
			var onClose = innerParams.onClose,
				onAfterClose = innerParams.onAfterClose,
				willClose = innerParams.willClose,
				didClose = innerParams.didClose;
			runDidClose(popup, willClose, onClose);

			if (animationIsSupported) {
				animatePopup(
					instance,
					popup,
					container,
					innerParams.returnFocus,
					didClose || onAfterClose
				);
			} else {
				// Otherwise, remove immediately
				removePopupAndResetState(
					instance,
					container,
					innerParams.returnFocus,
					didClose || onAfterClose
				);
			}
		};

		var runDidClose = function runDidClose(popup, willClose, onClose) {
			if (willClose !== null && typeof willClose === "function") {
				willClose(popup);
			} else if (onClose !== null && typeof onClose === "function") {
				onClose(popup); // @deprecated
			}
		};

		var animatePopup = function animatePopup(
			instance,
			popup,
			container,
			returnFocus,
			didClose
		) {
			globalState.swalCloseEventFinishedCallback =
				removePopupAndResetState.bind(
					null,
					instance,
					container,
					returnFocus,
					didClose
				);
			popup.addEventListener(animationEndEvent, function (e) {
				if (e.target === popup) {
					globalState.swalCloseEventFinishedCallback();
					delete globalState.swalCloseEventFinishedCallback;
				}
			});
		};

		var triggerDidCloseAndDispose = function triggerDidCloseAndDispose(
			instance,
			didClose
		) {
			setTimeout(function () {
				if (typeof didClose === "function") {
					didClose();
				}

				instance._destroy();
			});
		};

		function setButtonsDisabled(instance, buttons, disabled) {
			var domCache = privateProps.domCache.get(instance);
			buttons.forEach(function (button) {
				domCache[button].disabled = disabled;
			});
		}

		function setInputDisabled(input, disabled) {
			if (!input) {
				return false;
			}

			if (input.type === "radio") {
				var radiosContainer = input.parentNode.parentNode;
				var radios = radiosContainer.querySelectorAll("input");

				for (var i = 0; i < radios.length; i++) {
					radios[i].disabled = disabled;
				}
			} else {
				input.disabled = disabled;
			}
		}

		function enableButtons() {
			setButtonsDisabled(
				this,
				["confirmButton", "denyButton", "cancelButton"],
				false
			);
		}
		function disableButtons() {
			setButtonsDisabled(
				this,
				["confirmButton", "denyButton", "cancelButton"],
				true
			);
		}
		function enableInput() {
			return setInputDisabled(this.getInput(), false);
		}
		function disableInput() {
			return setInputDisabled(this.getInput(), true);
		}

		function showValidationMessage(error) {
			var domCache = privateProps.domCache.get(this);
			var params = privateProps.innerParams.get(this);
			setInnerHtml(domCache.validationMessage, error);
			domCache.validationMessage.className =
				swalClasses["validation-message"];

			if (params.customClass && params.customClass.validationMessage) {
				addClass(
					domCache.validationMessage,
					params.customClass.validationMessage
				);
			}

			show(domCache.validationMessage);
			var input = this.getInput();

			if (input) {
				input.setAttribute("aria-invalid", true);
				input.setAttribute(
					"aria-describedBy",
					swalClasses["validation-message"]
				);
				focusInput(input);
				addClass(input, swalClasses.inputerror);
			}
		} // Hide block with validation message

		function resetValidationMessage$1() {
			var domCache = privateProps.domCache.get(this);

			if (domCache.validationMessage) {
				hide(domCache.validationMessage);
			}

			var input = this.getInput();

			if (input) {
				input.removeAttribute("aria-invalid");
				input.removeAttribute("aria-describedBy");
				removeClass(input, swalClasses.inputerror);
			}
		}

		function getProgressSteps$1() {
			var domCache = privateProps.domCache.get(this);
			return domCache.progressSteps;
		}

		var Timer = /*#__PURE__*/ (function () {
			function Timer(callback, delay) {
				_classCallCheck(this, Timer);

				this.callback = callback;
				this.remaining = delay;
				this.running = false;
				this.start();
			}

			_createClass(Timer, [
				{
					key: "start",
					value: function start() {
						if (!this.running) {
							this.running = true;
							this.started = new Date();
							this.id = setTimeout(this.callback, this.remaining);
						}

						return this.remaining;
					},
				},
				{
					key: "stop",
					value: function stop() {
						if (this.running) {
							this.running = false;
							clearTimeout(this.id);
							this.remaining -= new Date() - this.started;
						}

						return this.remaining;
					},
				},
				{
					key: "increase",
					value: function increase(n) {
						var running = this.running;

						if (running) {
							this.stop();
						}

						this.remaining += n;

						if (running) {
							this.start();
						}

						return this.remaining;
					},
				},
				{
					key: "getTimerLeft",
					value: function getTimerLeft() {
						if (this.running) {
							this.stop();
							this.start();
						}

						return this.remaining;
					},
				},
				{
					key: "isRunning",
					value: function isRunning() {
						return this.running;
					},
				},
			]);

			return Timer;
		})();

		var defaultInputValidators = {
			email: function email(string, validationMessage) {
				return /^[a-zA-Z0-9.+_-]+@[a-zA-Z0-9.-]+\.[a-zA-Z0-9-]{2,24}$/.test(
					string
				)
					? Promise.resolve()
					: Promise.resolve(
							validationMessage || "Invalid email address"
					  );
			},
			url: function url(string, validationMessage) {
				// taken from https://stackoverflow.com/a/3809435 with a small change from #1306 and #2013
				return /^https?:\/\/(www\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\.[a-z]{2,63}\b([-a-zA-Z0-9@:%_+.~#?&/=]*)$/.test(
					string
				)
					? Promise.resolve()
					: Promise.resolve(validationMessage || "Invalid URL");
			},
		};

		function setDefaultInputValidators(params) {
			// Use default `inputValidator` for supported input types if not provided
			if (!params.inputValidator) {
				Object.keys(defaultInputValidators).forEach(function (key) {
					if (params.input === key) {
						params.inputValidator = defaultInputValidators[key];
					}
				});
			}
		}

		function validateCustomTargetElement(params) {
			// Determine if the custom target element is valid
			if (
				!params.target ||
				(typeof params.target === "string" &&
					!document.querySelector(params.target)) ||
				(typeof params.target !== "string" &&
					!params.target.appendChild)
			) {
				warn('Target parameter is not valid, defaulting to "body"');
				params.target = "body";
			}
		}
		/**
		 * Set type, text and actions on popup
		 *
		 * @param params
		 * @returns {boolean}
		 */

		function setParameters(params) {
			setDefaultInputValidators(params); // showLoaderOnConfirm && preConfirm

			if (params.showLoaderOnConfirm && !params.preConfirm) {
				warn(
					"showLoaderOnConfirm is set to true, but preConfirm is not defined.\n" +
						"showLoaderOnConfirm should be used together with preConfirm, see usage example:\n" +
						"https://sweetalert2.github.io/#ajax-request"
				);
			} // params.animation will be actually used in renderPopup.js
			// but in case when params.animation is a function, we need to call that function
			// before popup (re)initialization, so it'll be possible to check Swal.isVisible()
			// inside the params.animation function

			params.animation = callIfFunction(params.animation);
			validateCustomTargetElement(params); // Replace newlines with <br> in title

			if (typeof params.title === "string") {
				params.title = params.title.split("\n").join("<br />");
			}

			init(params);
		}

		var swalStringParams = ["swal-title", "swal-html", "swal-footer"];
		var getTemplateParams = function getTemplateParams(params) {
			var template =
				typeof params.template === "string"
					? document.querySelector(params.template)
					: params.template;

			if (!template) {
				return {};
			}

			var templateContent = template.content || template; // IE11

			showWarningsForElements(templateContent);

			var result = _extends(
				getSwalParams(templateContent),
				getSwalButtons(templateContent),
				getSwalImage(templateContent),
				getSwalIcon(templateContent),
				getSwalInput(templateContent),
				getSwalStringParams(templateContent, swalStringParams)
			);

			return result;
		};

		var getSwalParams = function getSwalParams(templateContent) {
			var result = {};
			toArray(templateContent.querySelectorAll("swal-param")).forEach(
				function (param) {
					showWarningsForAttributes(param, ["name", "value"]);
					var paramName = param.getAttribute("name");
					var value = param.getAttribute("value");

					if (
						typeof defaultParams[paramName] === "boolean" &&
						value === "false"
					) {
						value = false;
					}

					if (_typeof(defaultParams[paramName]) === "object") {
						value = JSON.parse(value);
					}

					result[paramName] = value;
				}
			);
			return result;
		};

		var getSwalButtons = function getSwalButtons(templateContent) {
			var result = {};
			toArray(templateContent.querySelectorAll("swal-button")).forEach(
				function (button) {
					showWarningsForAttributes(button, [
						"type",
						"color",
						"aria-label",
					]);
					var type = button.getAttribute("type");
					result["".concat(type, "ButtonText")] = button.innerHTML;
					result[
						"show".concat(capitalizeFirstLetter(type), "Button")
					] = true;

					if (button.hasAttribute("color")) {
						result["".concat(type, "ButtonColor")] =
							button.getAttribute("color");
					}

					if (button.hasAttribute("aria-label")) {
						result["".concat(type, "ButtonAriaLabel")] =
							button.getAttribute("aria-label");
					}
				}
			);
			return result;
		};

		var getSwalImage = function getSwalImage(templateContent) {
			var result = {};
			var image = templateContent.querySelector("swal-image");

			if (image) {
				showWarningsForAttributes(image, [
					"src",
					"width",
					"height",
					"alt",
				]);

				if (image.hasAttribute("src")) {
					result.imageUrl = image.getAttribute("src");
				}

				if (image.hasAttribute("width")) {
					result.imageWidth = image.getAttribute("width");
				}

				if (image.hasAttribute("height")) {
					result.imageHeight = image.getAttribute("height");
				}

				if (image.hasAttribute("alt")) {
					result.imageAlt = image.getAttribute("alt");
				}
			}

			return result;
		};

		var getSwalIcon = function getSwalIcon(templateContent) {
			var result = {};
			var icon = templateContent.querySelector("swal-icon");

			if (icon) {
				showWarningsForAttributes(icon, ["type", "color"]);

				if (icon.hasAttribute("type")) {
					result.icon = icon.getAttribute("type");
				}

				if (icon.hasAttribute("color")) {
					result.iconColor = icon.getAttribute("color");
				}

				result.iconHtml = icon.innerHTML;
			}

			return result;
		};

		var getSwalInput = function getSwalInput(templateContent) {
			var result = {};
			var input = templateContent.querySelector("swal-input");

			if (input) {
				showWarningsForAttributes(input, [
					"type",
					"label",
					"placeholder",
					"value",
				]);
				result.input = input.getAttribute("type") || "text";

				if (input.hasAttribute("label")) {
					result.inputLabel = input.getAttribute("label");
				}

				if (input.hasAttribute("placeholder")) {
					result.inputPlaceholder = input.getAttribute("placeholder");
				}

				if (input.hasAttribute("value")) {
					result.inputValue = input.getAttribute("value");
				}
			}

			var inputOptions =
				templateContent.querySelectorAll("swal-input-option");

			if (inputOptions.length) {
				result.inputOptions = {};
				toArray(inputOptions).forEach(function (option) {
					showWarningsForAttributes(option, ["value"]);
					var optionValue = option.getAttribute("value");
					var optionName = option.innerHTML;
					result.inputOptions[optionValue] = optionName;
				});
			}

			return result;
		};

		var getSwalStringParams = function getSwalStringParams(
			templateContent,
			paramNames
		) {
			var result = {};

			for (var i in paramNames) {
				var paramName = paramNames[i];
				var tag = templateContent.querySelector(paramName);

				if (tag) {
					showWarningsForAttributes(tag, []);
					result[paramName.replace(/^swal-/, "")] =
						tag.innerHTML.trim();
				}
			}

			return result;
		};

		var showWarningsForElements = function showWarningsForElements(
			template
		) {
			var allowedElements = swalStringParams.concat([
				"swal-param",
				"swal-button",
				"swal-image",
				"swal-icon",
				"swal-input",
				"swal-input-option",
			]);
			toArray(template.querySelectorAll("*")).forEach(function (el) {
				if (el.parentNode !== template) {
					// can't use template.children because of IE11
					return;
				}

				var tagName = el.tagName.toLowerCase();

				if (allowedElements.indexOf(tagName) === -1) {
					warn("Unrecognized element <".concat(tagName, ">"));
				}
			});
		};

		var showWarningsForAttributes = function showWarningsForAttributes(
			el,
			allowedAttributes
		) {
			toArray(el.attributes).forEach(function (attribute) {
				if (allowedAttributes.indexOf(attribute.name) === -1) {
					warn([
						'Unrecognized attribute "'
							.concat(attribute.name, '" on <')
							.concat(el.tagName.toLowerCase(), ">."),
						"".concat(
							allowedAttributes.length
								? "Allowed attributes are: ".concat(
										allowedAttributes.join(", ")
								  )
								: "To set the value, use HTML within the element."
						),
					]);
				}
			});
		};

		var SHOW_CLASS_TIMEOUT = 10;
		/**
		 * Open popup, add necessary classes and styles, fix scrollbar
		 *
		 * @param params
		 */

		var openPopup = function openPopup(params) {
			var container = getContainer();
			var popup = getPopup();

			if (typeof params.willOpen === "function") {
				params.willOpen(popup);
			} else if (typeof params.onBeforeOpen === "function") {
				params.onBeforeOpen(popup); // @deprecated
			}

			var bodyStyles = window.getComputedStyle(document.body);
			var initialBodyOverflow = bodyStyles.overflowY;
			addClasses$1(container, popup, params); // scrolling is 'hidden' until animation is done, after that 'auto'

			setTimeout(function () {
				setScrollingVisibility(container, popup);
			}, SHOW_CLASS_TIMEOUT);

			if (isModal()) {
				fixScrollContainer(
					container,
					params.scrollbarPadding,
					initialBodyOverflow
				);
				setAriaHidden();
			}

			if (!isToast() && !globalState.previousActiveElement) {
				globalState.previousActiveElement = document.activeElement;
			}

			runDidOpen(popup, params);
			removeClass(container, swalClasses["no-transition"]);
		};

		var runDidOpen = function runDidOpen(popup, params) {
			if (typeof params.didOpen === "function") {
				setTimeout(function () {
					return params.didOpen(popup);
				});
			} else if (typeof params.onOpen === "function") {
				setTimeout(function () {
					return params.onOpen(popup);
				}); // @deprecated
			}
		};

		var swalOpenAnimationFinished = function swalOpenAnimationFinished(
			event
		) {
			var popup = getPopup();

			if (event.target !== popup) {
				return;
			}

			var container = getContainer();
			popup.removeEventListener(
				animationEndEvent,
				swalOpenAnimationFinished
			);
			container.style.overflowY = "auto";
		};

		var setScrollingVisibility = function setScrollingVisibility(
			container,
			popup
		) {
			if (animationEndEvent && hasCssAnimation(popup)) {
				container.style.overflowY = "hidden";
				popup.addEventListener(
					animationEndEvent,
					swalOpenAnimationFinished
				);
			} else {
				container.style.overflowY = "auto";
			}
		};

		var fixScrollContainer = function fixScrollContainer(
			container,
			scrollbarPadding,
			initialBodyOverflow
		) {
			iOSfix();
			IEfix();

			if (scrollbarPadding && initialBodyOverflow !== "hidden") {
				fixScrollbar();
			} // sweetalert2/issues/1247

			setTimeout(function () {
				container.scrollTop = 0;
			});
		};

		var addClasses$1 = function addClasses(container, popup, params) {
			addClass(container, params.showClass.backdrop); // the workaround with setting/unsetting opacity is needed for #2019 and 2059

			popup.style.setProperty("opacity", "0", "important");
			show(popup);
			setTimeout(function () {
				// Animate popup right after showing it
				addClass(popup, params.showClass.popup); // and remove the opacity workaround

				popup.style.removeProperty("opacity");
			}, SHOW_CLASS_TIMEOUT); // 10ms in order to fix #2062

			addClass(
				[document.documentElement, document.body],
				swalClasses.shown
			);

			if (params.heightAuto && params.backdrop && !params.toast) {
				addClass(
					[document.documentElement, document.body],
					swalClasses["height-auto"]
				);
			}
		};

		var handleInputOptionsAndValue = function handleInputOptionsAndValue(
			instance,
			params
		) {
			if (params.input === "select" || params.input === "radio") {
				handleInputOptions(instance, params);
			} else if (
				["text", "email", "number", "tel", "textarea"].indexOf(
					params.input
				) !== -1 &&
				(hasToPromiseFn(params.inputValue) ||
					isPromise(params.inputValue))
			) {
				handleInputValue(instance, params);
			}
		};
		var getInputValue = function getInputValue(instance, innerParams) {
			var input = instance.getInput();

			if (!input) {
				return null;
			}

			switch (innerParams.input) {
				case "checkbox":
					return getCheckboxValue(input);

				case "radio":
					return getRadioValue(input);

				case "file":
					return getFileValue(input);

				default:
					return innerParams.inputAutoTrim
						? input.value.trim()
						: input.value;
			}
		};

		var getCheckboxValue = function getCheckboxValue(input) {
			return input.checked ? 1 : 0;
		};

		var getRadioValue = function getRadioValue(input) {
			return input.checked ? input.value : null;
		};

		var getFileValue = function getFileValue(input) {
			return input.files.length
				? input.getAttribute("multiple") !== null
					? input.files
					: input.files[0]
				: null;
		};

		var handleInputOptions = function handleInputOptions(instance, params) {
			var content = getContent();

			var processInputOptions = function processInputOptions(
				inputOptions
			) {
				return populateInputOptions[params.input](
					content,
					formatInputOptions(inputOptions),
					params
				);
			};

			if (
				hasToPromiseFn(params.inputOptions) ||
				isPromise(params.inputOptions)
			) {
				showLoading(getConfirmButton());
				asPromise(params.inputOptions).then(function (inputOptions) {
					instance.hideLoading();
					processInputOptions(inputOptions);
				});
			} else if (_typeof(params.inputOptions) === "object") {
				processInputOptions(params.inputOptions);
			} else {
				error(
					"Unexpected type of inputOptions! Expected object, Map or Promise, got ".concat(
						_typeof(params.inputOptions)
					)
				);
			}
		};

		var handleInputValue = function handleInputValue(instance, params) {
			var input = instance.getInput();
			hide(input);
			asPromise(params.inputValue)
				.then(function (inputValue) {
					input.value =
						params.input === "number"
							? parseFloat(inputValue) || 0
							: "".concat(inputValue);
					show(input);
					input.focus();
					instance.hideLoading();
				})
				["catch"](function (err) {
					error("Error in inputValue promise: ".concat(err));
					input.value = "";
					show(input);
					input.focus();
					instance.hideLoading();
				});
		};

		var populateInputOptions = {
			select: function select(content, inputOptions, params) {
				var select = getChildByClass(content, swalClasses.select);

				var renderOption = function renderOption(
					parent,
					optionLabel,
					optionValue
				) {
					var option = document.createElement("option");
					option.value = optionValue;
					setInnerHtml(option, optionLabel);
					option.selected = isSelected(
						optionValue,
						params.inputValue
					);
					parent.appendChild(option);
				};

				inputOptions.forEach(function (inputOption) {
					var optionValue = inputOption[0];
					var optionLabel = inputOption[1]; // <optgroup> spec:
					// https://www.w3.org/TR/html401/interact/forms.html#h-17.6
					// "...all OPTGROUP elements must be specified directly within a SELECT element (i.e., groups may not be nested)..."
					// check whether this is a <optgroup>

					if (Array.isArray(optionLabel)) {
						// if it is an array, then it is an <optgroup>
						var optgroup = document.createElement("optgroup");
						optgroup.label = optionValue;
						optgroup.disabled = false; // not configurable for now

						select.appendChild(optgroup);
						optionLabel.forEach(function (o) {
							return renderOption(optgroup, o[1], o[0]);
						});
					} else {
						// case of <option>
						renderOption(select, optionLabel, optionValue);
					}
				});
				select.focus();
			},
			radio: function radio(content, inputOptions, params) {
				var radio = getChildByClass(content, swalClasses.radio);
				inputOptions.forEach(function (inputOption) {
					var radioValue = inputOption[0];
					var radioLabel = inputOption[1];
					var radioInput = document.createElement("input");
					var radioLabelElement = document.createElement("label");
					radioInput.type = "radio";
					radioInput.name = swalClasses.radio;
					radioInput.value = radioValue;

					if (isSelected(radioValue, params.inputValue)) {
						radioInput.checked = true;
					}

					var label = document.createElement("span");
					setInnerHtml(label, radioLabel);
					label.className = swalClasses.label;
					radioLabelElement.appendChild(radioInput);
					radioLabelElement.appendChild(label);
					radio.appendChild(radioLabelElement);
				});
				var radios = radio.querySelectorAll("input");

				if (radios.length) {
					radios[0].focus();
				}
			},
		};
		/**
		 * Converts `inputOptions` into an array of `[value, label]`s
		 * @param inputOptions
		 */

		var formatInputOptions = function formatInputOptions(inputOptions) {
			var result = [];

			if (typeof Map !== "undefined" && inputOptions instanceof Map) {
				inputOptions.forEach(function (value, key) {
					var valueFormatted = value;

					if (_typeof(valueFormatted) === "object") {
						// case of <optgroup>
						valueFormatted = formatInputOptions(valueFormatted);
					}

					result.push([key, valueFormatted]);
				});
			} else {
				Object.keys(inputOptions).forEach(function (key) {
					var valueFormatted = inputOptions[key];

					if (_typeof(valueFormatted) === "object") {
						// case of <optgroup>
						valueFormatted = formatInputOptions(valueFormatted);
					}

					result.push([key, valueFormatted]);
				});
			}

			return result;
		};

		var isSelected = function isSelected(optionValue, inputValue) {
			return (
				inputValue && inputValue.toString() === optionValue.toString()
			);
		};

		var handleConfirmButtonClick = function handleConfirmButtonClick(
			instance,
			innerParams
		) {
			instance.disableButtons();

			if (innerParams.input) {
				handleConfirmOrDenyWithInput(instance, innerParams, "confirm");
			} else {
				confirm(instance, innerParams, true);
			}
		};
		var handleDenyButtonClick = function handleDenyButtonClick(
			instance,
			innerParams
		) {
			instance.disableButtons();

			if (innerParams.returnInputValueOnDeny) {
				handleConfirmOrDenyWithInput(instance, innerParams, "deny");
			} else {
				deny(instance, innerParams, false);
			}
		};
		var handleCancelButtonClick = function handleCancelButtonClick(
			instance,
			dismissWith
		) {
			instance.disableButtons();
			dismissWith(DismissReason.cancel);
		};

		var handleConfirmOrDenyWithInput =
			function handleConfirmOrDenyWithInput(
				instance,
				innerParams,
				type
				/* type is either 'confirm' or 'deny' */
			) {
				var inputValue = getInputValue(instance, innerParams);

				if (innerParams.inputValidator) {
					handleInputValidator(instance, innerParams, inputValue);
				} else if (!instance.getInput().checkValidity()) {
					instance.enableButtons();
					instance.showValidationMessage(
						innerParams.validationMessage
					);
				} else if (type === "deny") {
					deny(instance, innerParams, inputValue);
				} else {
					confirm(instance, innerParams, inputValue);
				}
			};

		var handleInputValidator = function handleInputValidator(
			instance,
			innerParams,
			inputValue
		) {
			instance.disableInput();
			var validationPromise = Promise.resolve().then(function () {
				return asPromise(
					innerParams.inputValidator(
						inputValue,
						innerParams.validationMessage
					)
				);
			});
			validationPromise.then(function (validationMessage) {
				instance.enableButtons();
				instance.enableInput();

				if (validationMessage) {
					instance.showValidationMessage(validationMessage);
				} else {
					confirm(instance, innerParams, inputValue);
				}
			});
		};

		var deny = function deny(instance, innerParams, value) {
			if (innerParams.showLoaderOnDeny) {
				showLoading(getDenyButton());
			}

			if (innerParams.preDeny) {
				var preDenyPromise = Promise.resolve().then(function () {
					return asPromise(
						innerParams.preDeny(
							value,
							innerParams.validationMessage
						)
					);
				});
				preDenyPromise.then(function (preDenyValue) {
					if (preDenyValue === false) {
						instance.hideLoading();
					} else {
						instance.closePopup({
							isDenied: true,
							value:
								typeof preDenyValue === "undefined"
									? value
									: preDenyValue,
						});
					}
				});
			} else {
				instance.closePopup({
					isDenied: true,
					value: value,
				});
			}
		};

		var succeedWith = function succeedWith(instance, value) {
			instance.closePopup({
				isConfirmed: true,
				value: value,
			});
		};

		var confirm = function confirm(instance, innerParams, value) {
			if (innerParams.showLoaderOnConfirm) {
				showLoading(); // TODO: make showLoading an *instance* method
			}

			if (innerParams.preConfirm) {
				instance.resetValidationMessage();
				var preConfirmPromise = Promise.resolve().then(function () {
					return asPromise(
						innerParams.preConfirm(
							value,
							innerParams.validationMessage
						)
					);
				});
				preConfirmPromise.then(function (preConfirmValue) {
					if (
						isVisible(getValidationMessage()) ||
						preConfirmValue === false
					) {
						instance.hideLoading();
					} else {
						succeedWith(
							instance,
							typeof preConfirmValue === "undefined"
								? value
								: preConfirmValue
						);
					}
				});
			} else {
				succeedWith(instance, value);
			}
		};

		var addKeydownHandler = function addKeydownHandler(
			instance,
			globalState,
			innerParams,
			dismissWith
		) {
			if (globalState.keydownTarget && globalState.keydownHandlerAdded) {
				globalState.keydownTarget.removeEventListener(
					"keydown",
					globalState.keydownHandler,
					{
						capture: globalState.keydownListenerCapture,
					}
				);
				globalState.keydownHandlerAdded = false;
			}

			if (!innerParams.toast) {
				globalState.keydownHandler = function (e) {
					return keydownHandler(instance, e, dismissWith);
				};

				globalState.keydownTarget = innerParams.keydownListenerCapture
					? window
					: getPopup();
				globalState.keydownListenerCapture =
					innerParams.keydownListenerCapture;
				globalState.keydownTarget.addEventListener(
					"keydown",
					globalState.keydownHandler,
					{
						capture: globalState.keydownListenerCapture,
					}
				);
				globalState.keydownHandlerAdded = true;
			}
		}; // Focus handling

		var setFocus = function setFocus(innerParams, index, increment) {
			var focusableElements = getFocusableElements(); // search for visible elements and select the next possible match

			if (focusableElements.length) {
				index = index + increment; // rollover to first item

				if (index === focusableElements.length) {
					index = 0; // go to last item
				} else if (index === -1) {
					index = focusableElements.length - 1;
				}

				return focusableElements[index].focus();
			} // no visible focusable elements, focus the popup

			getPopup().focus();
		};
		var arrowKeysNextButton = [
			"ArrowRight",
			"ArrowDown",
			"Right",
			"Down", // IE11
		];
		var arrowKeysPreviousButton = [
			"ArrowLeft",
			"ArrowUp",
			"Left",
			"Up", // IE11
		];
		var escKeys = [
			"Escape",
			"Esc", // IE11
		];

		var keydownHandler = function keydownHandler(instance, e, dismissWith) {
			var innerParams = privateProps.innerParams.get(instance);

			if (!innerParams) {
				return; // This instance has already been destroyed
			}

			if (innerParams.stopKeydownPropagation) {
				e.stopPropagation();
			} // ENTER

			if (e.key === "Enter") {
				handleEnter(instance, e, innerParams); // TAB
			} else if (e.key === "Tab") {
				handleTab(e, innerParams); // ARROWS - switch focus between buttons
			} else if (
				[]
					.concat(arrowKeysNextButton, arrowKeysPreviousButton)
					.indexOf(e.key) !== -1
			) {
				handleArrows(e.key); // ESC
			} else if (escKeys.indexOf(e.key) !== -1) {
				handleEsc(e, innerParams, dismissWith);
			}
		};

		var handleEnter = function handleEnter(instance, e, innerParams) {
			// #720 #721
			if (e.isComposing) {
				return;
			}

			if (
				e.target &&
				instance.getInput() &&
				e.target.outerHTML === instance.getInput().outerHTML
			) {
				if (["textarea", "file"].indexOf(innerParams.input) !== -1) {
					return; // do not submit
				}

				clickConfirm();
				e.preventDefault();
			}
		};

		var handleTab = function handleTab(e, innerParams) {
			var targetElement = e.target;
			var focusableElements = getFocusableElements();
			var btnIndex = -1;

			for (var i = 0; i < focusableElements.length; i++) {
				if (targetElement === focusableElements[i]) {
					btnIndex = i;
					break;
				}
			}

			if (!e.shiftKey) {
				// Cycle to the next button
				setFocus(innerParams, btnIndex, 1);
			} else {
				// Cycle to the prev button
				setFocus(innerParams, btnIndex, -1);
			}

			e.stopPropagation();
			e.preventDefault();
		};

		var handleArrows = function handleArrows(key) {
			var confirmButton = getConfirmButton();
			var denyButton = getDenyButton();
			var cancelButton = getCancelButton();

			if (
				!(
					[confirmButton, denyButton, cancelButton].indexOf(
						document.activeElement
					) !== -1
				)
			) {
				return;
			}

			var sibling =
				arrowKeysNextButton.indexOf(key) !== -1
					? "nextElementSibling"
					: "previousElementSibling";
			var buttonToFocus = document.activeElement[sibling];

			if (buttonToFocus) {
				buttonToFocus.focus();
			}
		};

		var handleEsc = function handleEsc(e, innerParams, dismissWith) {
			if (callIfFunction(innerParams.allowEscapeKey)) {
				e.preventDefault();
				dismissWith(DismissReason.esc);
			}
		};

		var handlePopupClick = function handlePopupClick(
			instance,
			domCache,
			dismissWith
		) {
			var innerParams = privateProps.innerParams.get(instance);

			if (innerParams.toast) {
				handleToastClick(instance, domCache, dismissWith);
			} else {
				// Ignore click events that had mousedown on the popup but mouseup on the container
				// This can happen when the user drags a slider
				handleModalMousedown(domCache); // Ignore click events that had mousedown on the container but mouseup on the popup

				handleContainerMousedown(domCache);
				handleModalClick(instance, domCache, dismissWith);
			}
		};

		var handleToastClick = function handleToastClick(
			instance,
			domCache,
			dismissWith
		) {
			// Closing toast by internal click
			domCache.popup.onclick = function () {
				var innerParams = privateProps.innerParams.get(instance);

				if (
					innerParams.showConfirmButton ||
					innerParams.showDenyButton ||
					innerParams.showCancelButton ||
					innerParams.showCloseButton ||
					innerParams.timer ||
					innerParams.input
				) {
					return;
				}

				dismissWith(DismissReason.close);
			};
		};

		var ignoreOutsideClick = false;

		var handleModalMousedown = function handleModalMousedown(domCache) {
			domCache.popup.onmousedown = function () {
				domCache.container.onmouseup = function (e) {
					domCache.container.onmouseup = undefined; // We only check if the mouseup target is the container because usually it doesn't
					// have any other direct children aside of the popup

					if (e.target === domCache.container) {
						ignoreOutsideClick = true;
					}
				};
			};
		};

		var handleContainerMousedown = function handleContainerMousedown(
			domCache
		) {
			domCache.container.onmousedown = function () {
				domCache.popup.onmouseup = function (e) {
					domCache.popup.onmouseup = undefined; // We also need to check if the mouseup target is a child of the popup

					if (
						e.target === domCache.popup ||
						domCache.popup.contains(e.target)
					) {
						ignoreOutsideClick = true;
					}
				};
			};
		};

		var handleModalClick = function handleModalClick(
			instance,
			domCache,
			dismissWith
		) {
			domCache.container.onclick = function (e) {
				var innerParams = privateProps.innerParams.get(instance);

				if (ignoreOutsideClick) {
					ignoreOutsideClick = false;
					return;
				}

				if (
					e.target === domCache.container &&
					callIfFunction(innerParams.allowOutsideClick)
				) {
					dismissWith(DismissReason.backdrop);
				}
			};
		};

		function _main(userParams) {
			var mixinParams =
				arguments.length > 1 && arguments[1] !== undefined
					? arguments[1]
					: {};
			showWarningsForParams(_extends({}, mixinParams, userParams));

			if (globalState.currentInstance) {
				globalState.currentInstance._destroy();
			}

			globalState.currentInstance = this;
			var innerParams = prepareParams(userParams, mixinParams);
			setParameters(innerParams);
			Object.freeze(innerParams); // clear the previous timer

			if (globalState.timeout) {
				globalState.timeout.stop();
				delete globalState.timeout;
			} // clear the restore focus timeout

			clearTimeout(globalState.restoreFocusTimeout);
			var domCache = populateDomCache(this);
			render(this, innerParams);
			privateProps.innerParams.set(this, innerParams);
			return swalPromise(this, domCache, innerParams);
		}

		var prepareParams = function prepareParams(userParams, mixinParams) {
			var templateParams = getTemplateParams(userParams);

			var params = _extends(
				{},
				defaultParams,
				mixinParams,
				templateParams,
				userParams
			); // precedence is described in #2131

			params.showClass = _extends(
				{},
				defaultParams.showClass,
				params.showClass
			);
			params.hideClass = _extends(
				{},
				defaultParams.hideClass,
				params.hideClass
			); // @deprecated

			if (userParams.animation === false) {
				params.showClass = {
					popup: "swal2-noanimation",
					backdrop: "swal2-noanimation",
				};
				params.hideClass = {};
			}

			return params;
		};

		var swalPromise = function swalPromise(
			instance,
			domCache,
			innerParams
		) {
			return new Promise(function (resolve) {
				// functions to handle all closings/dismissals
				var dismissWith = function dismissWith(dismiss) {
					instance.closePopup({
						isDismissed: true,
						dismiss: dismiss,
					});
				};

				privateMethods.swalPromiseResolve.set(instance, resolve);

				domCache.confirmButton.onclick = function () {
					return handleConfirmButtonClick(instance, innerParams);
				};

				domCache.denyButton.onclick = function () {
					return handleDenyButtonClick(instance, innerParams);
				};

				domCache.cancelButton.onclick = function () {
					return handleCancelButtonClick(instance, dismissWith);
				};

				domCache.closeButton.onclick = function () {
					return dismissWith(DismissReason.close);
				};

				handlePopupClick(instance, domCache, dismissWith);
				addKeydownHandler(
					instance,
					globalState,
					innerParams,
					dismissWith
				);
				handleInputOptionsAndValue(instance, innerParams);
				openPopup(innerParams);
				setupTimer(globalState, innerParams, dismissWith);
				initFocus(domCache, innerParams); // Scroll container to top on open (#1247, #1946)

				setTimeout(function () {
					domCache.container.scrollTop = 0;
				});
			});
		};

		var populateDomCache = function populateDomCache(instance) {
			var domCache = {
				popup: getPopup(),
				container: getContainer(),
				content: getContent(),
				actions: getActions(),
				confirmButton: getConfirmButton(),
				denyButton: getDenyButton(),
				cancelButton: getCancelButton(),
				loader: getLoader(),
				closeButton: getCloseButton(),
				validationMessage: getValidationMessage(),
				progressSteps: getProgressSteps(),
			};
			privateProps.domCache.set(instance, domCache);
			return domCache;
		};

		var setupTimer = function setupTimer(
			globalState$$1,
			innerParams,
			dismissWith
		) {
			var timerProgressBar = getTimerProgressBar();
			hide(timerProgressBar);

			if (innerParams.timer) {
				globalState$$1.timeout = new Timer(function () {
					dismissWith("timer");
					delete globalState$$1.timeout;
				}, innerParams.timer);

				if (innerParams.timerProgressBar) {
					show(timerProgressBar);
					setTimeout(function () {
						if (
							globalState$$1.timeout &&
							globalState$$1.timeout.running
						) {
							// timer can be already stopped or unset at this point
							animateTimerProgressBar(innerParams.timer);
						}
					});
				}
			}
		};

		var initFocus = function initFocus(domCache, innerParams) {
			if (innerParams.toast) {
				return;
			}

			if (!callIfFunction(innerParams.allowEnterKey)) {
				return blurActiveElement();
			}

			if (!focusButton(domCache, innerParams)) {
				setFocus(innerParams, -1, 1);
			}
		};

		var focusButton = function focusButton(domCache, innerParams) {
			if (innerParams.focusDeny && isVisible(domCache.denyButton)) {
				domCache.denyButton.focus();
				return true;
			}

			if (innerParams.focusCancel && isVisible(domCache.cancelButton)) {
				domCache.cancelButton.focus();
				return true;
			}

			if (innerParams.focusConfirm && isVisible(domCache.confirmButton)) {
				domCache.confirmButton.focus();
				return true;
			}

			return false;
		};

		var blurActiveElement = function blurActiveElement() {
			if (
				document.activeElement &&
				typeof document.activeElement.blur === "function"
			) {
				document.activeElement.blur();
			}
		};

		/**
		 * Updates popup parameters.
		 */

		function update(params) {
			var popup = getPopup();
			var innerParams = privateProps.innerParams.get(this);

			if (!popup || hasClass(popup, innerParams.hideClass.popup)) {
				return warn(
					"You're trying to update the closed or closing popup, that won't work. Use the update() method in preConfirm parameter or show a new popup."
				);
			}

			var validUpdatableParams = {}; // assign valid params from `params` to `defaults`

			Object.keys(params).forEach(function (param) {
				if (Swal.isUpdatableParameter(param)) {
					validUpdatableParams[param] = params[param];
				} else {
					warn(
						'Invalid parameter to update: "'.concat(
							param,
							'". Updatable params are listed here: https://github.com/sweetalert2/sweetalert2/blob/master/src/utils/params.js\n\nIf you think this parameter should be updatable, request it here: https://github.com/sweetalert2/sweetalert2/issues/new?template=02_feature_request.md'
						)
					);
				}
			});

			var updatedParams = _extends({}, innerParams, validUpdatableParams);

			render(this, updatedParams);
			privateProps.innerParams.set(this, updatedParams);
			Object.defineProperties(this, {
				params: {
					value: _extends({}, this.params, params),
					writable: false,
					enumerable: true,
				},
			});
		}

		function _destroy() {
			var domCache = privateProps.domCache.get(this);
			var innerParams = privateProps.innerParams.get(this);

			if (!innerParams) {
				return; // This instance has already been destroyed
			} // Check if there is another Swal closing

			if (domCache.popup && globalState.swalCloseEventFinishedCallback) {
				globalState.swalCloseEventFinishedCallback();
				delete globalState.swalCloseEventFinishedCallback;
			} // Check if there is a swal disposal defer timer

			if (globalState.deferDisposalTimer) {
				clearTimeout(globalState.deferDisposalTimer);
				delete globalState.deferDisposalTimer;
			}

			runDidDestroy(innerParams);
			disposeSwal(this);
		}

		var runDidDestroy = function runDidDestroy(innerParams) {
			if (typeof innerParams.didDestroy === "function") {
				innerParams.didDestroy();
			} else if (typeof innerParams.onDestroy === "function") {
				innerParams.onDestroy(); // @deprecated
			}
		};

		var disposeSwal = function disposeSwal(instance) {
			// Unset this.params so GC will dispose it (#1569)
			delete instance.params; // Unset globalState props so GC will dispose globalState (#1569)

			delete globalState.keydownHandler;
			delete globalState.keydownTarget; // Unset WeakMaps so GC will be able to dispose them (#1569)

			unsetWeakMaps(privateProps);
			unsetWeakMaps(privateMethods);
		};

		var unsetWeakMaps = function unsetWeakMaps(obj) {
			for (var i in obj) {
				obj[i] = new WeakMap();
			}
		};

		var instanceMethods = /*#__PURE__*/ Object.freeze({
			hideLoading: hideLoading,
			disableLoading: hideLoading,
			getInput: getInput$1,
			close: close,
			closePopup: close,
			closeModal: close,
			closeToast: close,
			enableButtons: enableButtons,
			disableButtons: disableButtons,
			enableInput: enableInput,
			disableInput: disableInput,
			showValidationMessage: showValidationMessage,
			resetValidationMessage: resetValidationMessage$1,
			getProgressSteps: getProgressSteps$1,
			_main: _main,
			update: update,
			_destroy: _destroy,
		});

		var currentInstance;

		var SweetAlert = /*#__PURE__*/ (function () {
			function SweetAlert() {
				_classCallCheck(this, SweetAlert);

				// Prevent run in Node env
				if (typeof window === "undefined") {
					return;
				} // Check for the existence of Promise

				if (typeof Promise === "undefined") {
					error(
						"This package requires a Promise library, please include a shim to enable it in this browser (See: https://github.com/sweetalert2/sweetalert2/wiki/Migration-from-SweetAlert-to-SweetAlert2#1-ie-support)"
					);
				}

				currentInstance = this;

				for (
					var _len = arguments.length,
						args = new Array(_len),
						_key = 0;
					_key < _len;
					_key++
				) {
					args[_key] = arguments[_key];
				}

				var outerParams = Object.freeze(
					this.constructor.argsToParams(args)
				);
				Object.defineProperties(this, {
					params: {
						value: outerParams,
						writable: false,
						enumerable: true,
						configurable: true,
					},
				});

				var promise = this._main(this.params);

				privateProps.promise.set(this, promise);
			} // `catch` cannot be the name of a module export, so we define our thenable methods here instead

			_createClass(SweetAlert, [
				{
					key: "then",
					value: function then(onFulfilled) {
						var promise = privateProps.promise.get(this);
						return promise.then(onFulfilled);
					},
				},
				{
					key: "finally",
					value: function _finally(onFinally) {
						var promise = privateProps.promise.get(this);
						return promise["finally"](onFinally);
					},
				},
			]);

			return SweetAlert;
		})(); // Assign instance methods from src/instanceMethods/*.js to prototype

		_extends(SweetAlert.prototype, instanceMethods); // Assign static methods from src/staticMethods/*.js to constructor

		_extends(SweetAlert, staticMethods); // Proxy to instance methods to constructor, for now, for backwards compatibility

		Object.keys(instanceMethods).forEach(function (key) {
			SweetAlert[key] = function () {
				if (currentInstance) {
					var _currentInstance;

					return (_currentInstance = currentInstance)[key].apply(
						_currentInstance,
						arguments
					);
				}
			};
		});
		SweetAlert.DismissReason = DismissReason;
		SweetAlert.version = "10.16.9";

		var Swal = SweetAlert;
		Swal["default"] = Swal;

		return Swal;
	});
	if (typeof commonjsGlobal !== "undefined" && commonjsGlobal.Sweetalert2) {
		commonjsGlobal.swal =
			commonjsGlobal.sweetAlert =
			commonjsGlobal.Swal =
			commonjsGlobal.SweetAlert =
				commonjsGlobal.Sweetalert2;
	}

	"undefined" != typeof document &&
		(function (e, t) {
			var n = e.createElement("style");
			if (
				(e.getElementsByTagName("head")[0].appendChild(n), n.styleSheet)
			)
				n.styleSheet.disabled || (n.styleSheet.cssText = t);
			else
				try {
					n.innerHTML = t;
				} catch (e) {
					n.innerText = t;
				}
		})(
			document,
			'.swal2-popup.swal2-toast{flex-direction:column;align-items:stretch;width:auto;padding:1.25em;overflow-y:hidden;background:#fff;box-shadow:0 0 .625em #d9d9d9}.swal2-popup.swal2-toast .swal2-header{flex-direction:row;padding:0}.swal2-popup.swal2-toast .swal2-title{flex-grow:1;justify-content:flex-start;margin:0 .625em;font-size:1em}.swal2-popup.swal2-toast .swal2-loading{justify-content:center}.swal2-popup.swal2-toast .swal2-input{height:2em;margin:.3125em auto;font-size:1em}.swal2-popup.swal2-toast .swal2-validation-message{font-size:1em}.swal2-popup.swal2-toast .swal2-footer{margin:.5em 0 0;padding:.5em 0 0;font-size:.8em}.swal2-popup.swal2-toast .swal2-close{position:static;width:.8em;height:.8em;line-height:.8}.swal2-popup.swal2-toast .swal2-content{justify-content:flex-start;margin:0 .625em;padding:0;font-size:1em;text-align:initial}.swal2-popup.swal2-toast .swal2-html-container{padding:.625em 0 0}.swal2-popup.swal2-toast .swal2-html-container:empty{padding:0}.swal2-popup.swal2-toast .swal2-icon{width:2em;min-width:2em;height:2em;margin:0 .5em 0 0}.swal2-popup.swal2-toast .swal2-icon .swal2-icon-content{display:flex;align-items:center;font-size:1.8em;font-weight:700}@media all and (-ms-high-contrast:none),(-ms-high-contrast:active){.swal2-popup.swal2-toast .swal2-icon .swal2-icon-content{font-size:.25em}}.swal2-popup.swal2-toast .swal2-icon.swal2-success .swal2-success-ring{width:2em;height:2em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line]{top:.875em;width:1.375em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=left]{left:.3125em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=right]{right:.3125em}.swal2-popup.swal2-toast .swal2-actions{flex:1;flex-basis:auto!important;align-self:stretch;width:auto;height:2.2em;height:auto;margin:0 .3125em;margin-top:.3125em;padding:0}.swal2-popup.swal2-toast .swal2-styled{margin:.125em .3125em;padding:.3125em .625em;font-size:1em}.swal2-popup.swal2-toast .swal2-styled:focus{box-shadow:0 0 0 1px #fff,0 0 0 3px rgba(100,150,200,.5)}.swal2-popup.swal2-toast .swal2-success{border-color:#a5dc86}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line]{position:absolute;width:1.6em;height:3em;transform:rotate(45deg);border-radius:50%}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line][class$=left]{top:-.8em;left:-.5em;transform:rotate(-45deg);transform-origin:2em 2em;border-radius:4em 0 0 4em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line][class$=right]{top:-.25em;left:.9375em;transform-origin:0 1.5em;border-radius:0 4em 4em 0}.swal2-popup.swal2-toast .swal2-success .swal2-success-ring{width:2em;height:2em}.swal2-popup.swal2-toast .swal2-success .swal2-success-fix{top:0;left:.4375em;width:.4375em;height:2.6875em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line]{height:.3125em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line][class$=tip]{top:1.125em;left:.1875em;width:.75em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line][class$=long]{top:.9375em;right:.1875em;width:1.375em}.swal2-popup.swal2-toast .swal2-success.swal2-icon-show .swal2-success-line-tip{-webkit-animation:swal2-toast-animate-success-line-tip .75s;animation:swal2-toast-animate-success-line-tip .75s}.swal2-popup.swal2-toast .swal2-success.swal2-icon-show .swal2-success-line-long{-webkit-animation:swal2-toast-animate-success-line-long .75s;animation:swal2-toast-animate-success-line-long .75s}.swal2-popup.swal2-toast.swal2-show{-webkit-animation:swal2-toast-show .5s;animation:swal2-toast-show .5s}.swal2-popup.swal2-toast.swal2-hide{-webkit-animation:swal2-toast-hide .1s forwards;animation:swal2-toast-hide .1s forwards}.swal2-container{display:flex;position:fixed;z-index:1060;top:0;right:0;bottom:0;left:0;flex-direction:row;align-items:center;justify-content:center;padding:.625em;overflow-x:hidden;transition:background-color .1s;-webkit-overflow-scrolling:touch}.swal2-container.swal2-backdrop-show,.swal2-container.swal2-noanimation{background:rgba(0,0,0,.4)}.swal2-container.swal2-backdrop-hide{background:0 0!important}.swal2-container.swal2-top{align-items:flex-start}.swal2-container.swal2-top-left,.swal2-container.swal2-top-start{align-items:flex-start;justify-content:flex-start}.swal2-container.swal2-top-end,.swal2-container.swal2-top-right{align-items:flex-start;justify-content:flex-end}.swal2-container.swal2-center{align-items:center}.swal2-container.swal2-center-left,.swal2-container.swal2-center-start{align-items:center;justify-content:flex-start}.swal2-container.swal2-center-end,.swal2-container.swal2-center-right{align-items:center;justify-content:flex-end}.swal2-container.swal2-bottom{align-items:flex-end}.swal2-container.swal2-bottom-left,.swal2-container.swal2-bottom-start{align-items:flex-end;justify-content:flex-start}.swal2-container.swal2-bottom-end,.swal2-container.swal2-bottom-right{align-items:flex-end;justify-content:flex-end}.swal2-container.swal2-bottom-end>:first-child,.swal2-container.swal2-bottom-left>:first-child,.swal2-container.swal2-bottom-right>:first-child,.swal2-container.swal2-bottom-start>:first-child,.swal2-container.swal2-bottom>:first-child{margin-top:auto}.swal2-container.swal2-grow-fullscreen>.swal2-modal{display:flex!important;flex:1;align-self:stretch;justify-content:center}.swal2-container.swal2-grow-row>.swal2-modal{display:flex!important;flex:1;align-content:center;justify-content:center}.swal2-container.swal2-grow-column{flex:1;flex-direction:column}.swal2-container.swal2-grow-column.swal2-bottom,.swal2-container.swal2-grow-column.swal2-center,.swal2-container.swal2-grow-column.swal2-top{align-items:center}.swal2-container.swal2-grow-column.swal2-bottom-left,.swal2-container.swal2-grow-column.swal2-bottom-start,.swal2-container.swal2-grow-column.swal2-center-left,.swal2-container.swal2-grow-column.swal2-center-start,.swal2-container.swal2-grow-column.swal2-top-left,.swal2-container.swal2-grow-column.swal2-top-start{align-items:flex-start}.swal2-container.swal2-grow-column.swal2-bottom-end,.swal2-container.swal2-grow-column.swal2-bottom-right,.swal2-container.swal2-grow-column.swal2-center-end,.swal2-container.swal2-grow-column.swal2-center-right,.swal2-container.swal2-grow-column.swal2-top-end,.swal2-container.swal2-grow-column.swal2-top-right{align-items:flex-end}.swal2-container.swal2-grow-column>.swal2-modal{display:flex!important;flex:1;align-content:center;justify-content:center}.swal2-container.swal2-no-transition{transition:none!important}.swal2-container:not(.swal2-top):not(.swal2-top-start):not(.swal2-top-end):not(.swal2-top-left):not(.swal2-top-right):not(.swal2-center-start):not(.swal2-center-end):not(.swal2-center-left):not(.swal2-center-right):not(.swal2-bottom):not(.swal2-bottom-start):not(.swal2-bottom-end):not(.swal2-bottom-left):not(.swal2-bottom-right):not(.swal2-grow-fullscreen)>.swal2-modal{margin:auto}@media all and (-ms-high-contrast:none),(-ms-high-contrast:active){.swal2-container .swal2-modal{margin:0!important}}.swal2-popup{display:none;position:relative;box-sizing:border-box;flex-direction:column;justify-content:center;width:32em;max-width:100%;padding:1.25em;border:none;border-radius:5px;background:#fff;font-family:inherit;font-size:1rem}.swal2-popup:focus{outline:0}.swal2-popup.swal2-loading{overflow-y:hidden}.swal2-header{display:flex;flex-direction:column;align-items:center;padding:0 1.8em}.swal2-title{position:relative;max-width:100%;margin:0 0 .4em;padding:0;color:#595959;font-size:1.875em;font-weight:600;text-align:center;text-transform:none;word-wrap:break-word}.swal2-actions{display:flex;z-index:1;box-sizing:border-box;flex-wrap:wrap;align-items:center;justify-content:center;width:100%;margin:1.25em auto 0;padding:0}.swal2-actions:not(.swal2-loading) .swal2-styled[disabled]{opacity:.4}.swal2-actions:not(.swal2-loading) .swal2-styled:hover{background-image:linear-gradient(rgba(0,0,0,.1),rgba(0,0,0,.1))}.swal2-actions:not(.swal2-loading) .swal2-styled:active{background-image:linear-gradient(rgba(0,0,0,.2),rgba(0,0,0,.2))}.swal2-loader{display:none;align-items:center;justify-content:center;width:2.2em;height:2.2em;margin:0 1.875em;-webkit-animation:swal2-rotate-loading 1.5s linear 0s infinite normal;animation:swal2-rotate-loading 1.5s linear 0s infinite normal;border-width:.25em;border-style:solid;border-radius:100%;border-color:#2778c4 transparent #2778c4 transparent}.swal2-styled{margin:.3125em;padding:.625em 1.1em;box-shadow:none;font-weight:500}.swal2-styled:not([disabled]){cursor:pointer}.swal2-styled.swal2-confirm{border:0;border-radius:.25em;background:initial;background-color:#2778c4;color:#fff;font-size:1em}.swal2-styled.swal2-deny{border:0;border-radius:.25em;background:initial;background-color:#d14529;color:#fff;font-size:1em}.swal2-styled.swal2-cancel{border:0;border-radius:.25em;background:initial;background-color:#757575;color:#fff;font-size:1em}.swal2-styled:focus{outline:0;box-shadow:0 0 0 3px rgba(100,150,200,.5)}.swal2-styled::-moz-focus-inner{border:0}.swal2-footer{justify-content:center;margin:1.25em 0 0;padding:1em 0 0;border-top:1px solid #eee;color:#545454;font-size:1em}.swal2-timer-progress-bar-container{position:absolute;right:0;bottom:0;left:0;height:.25em;overflow:hidden;border-bottom-right-radius:5px;border-bottom-left-radius:5px}.swal2-timer-progress-bar{width:100%;height:.25em;background:rgba(0,0,0,.2)}.swal2-image{max-width:100%;margin:1.25em auto}.swal2-close{position:absolute;z-index:2;top:0;right:0;align-items:center;justify-content:center;width:1.2em;height:1.2em;padding:0;overflow:hidden;transition:color .1s ease-out;border:none;border-radius:5px;background:0 0;color:#ccc;font-family:serif;font-size:2.5em;line-height:1.2;cursor:pointer}.swal2-close:hover{transform:none;background:0 0;color:#f27474}.swal2-close:focus{outline:0;box-shadow:inset 0 0 0 3px rgba(100,150,200,.5)}.swal2-close::-moz-focus-inner{border:0}.swal2-content{z-index:1;justify-content:center;margin:0;padding:0 1.6em;color:#545454;font-size:1.125em;font-weight:400;line-height:normal;text-align:center;word-wrap:break-word}.swal2-checkbox,.swal2-file,.swal2-input,.swal2-radio,.swal2-select,.swal2-textarea{margin:1em auto}.swal2-file,.swal2-input,.swal2-textarea{box-sizing:border-box;width:100%;transition:border-color .3s,box-shadow .3s;border:1px solid #d9d9d9;border-radius:.1875em;background:inherit;box-shadow:inset 0 1px 1px rgba(0,0,0,.06);color:inherit;font-size:1.125em}.swal2-file.swal2-inputerror,.swal2-input.swal2-inputerror,.swal2-textarea.swal2-inputerror{border-color:#f27474!important;box-shadow:0 0 2px #f27474!important}.swal2-file:focus,.swal2-input:focus,.swal2-textarea:focus{border:1px solid #b4dbed;outline:0;box-shadow:0 0 0 3px rgba(100,150,200,.5)}.swal2-file::-moz-placeholder,.swal2-input::-moz-placeholder,.swal2-textarea::-moz-placeholder{color:#ccc}.swal2-file:-ms-input-placeholder,.swal2-input:-ms-input-placeholder,.swal2-textarea:-ms-input-placeholder{color:#ccc}.swal2-file::placeholder,.swal2-input::placeholder,.swal2-textarea::placeholder{color:#ccc}.swal2-range{margin:1em auto;background:#fff}.swal2-range input{width:80%}.swal2-range output{width:20%;color:inherit;font-weight:600;text-align:center}.swal2-range input,.swal2-range output{height:2.625em;padding:0;font-size:1.125em;line-height:2.625em}.swal2-input{height:2.625em;padding:0 .75em}.swal2-input[type=number]{max-width:10em}.swal2-file{background:inherit;font-size:1.125em}.swal2-textarea{height:6.75em;padding:.75em}.swal2-select{min-width:50%;max-width:100%;padding:.375em .625em;background:inherit;color:inherit;font-size:1.125em}.swal2-checkbox,.swal2-radio{align-items:center;justify-content:center;background:#fff;color:inherit}.swal2-checkbox label,.swal2-radio label{margin:0 .6em;font-size:1.125em}.swal2-checkbox input,.swal2-radio input{flex-shrink:0;margin:0 .4em}.swal2-input-label{display:flex;justify-content:center;margin:1em auto}.swal2-validation-message{align-items:center;justify-content:center;margin:0 -2.7em;padding:.625em;overflow:hidden;background:#f0f0f0;color:#666;font-size:1em;font-weight:300}.swal2-validation-message::before{content:"!";display:inline-block;width:1.5em;min-width:1.5em;height:1.5em;margin:0 .625em;border-radius:50%;background-color:#f27474;color:#fff;font-weight:600;line-height:1.5em;text-align:center}.swal2-icon{position:relative;box-sizing:content-box;justify-content:center;width:5em;height:5em;margin:1.25em auto 1.875em;border:.25em solid transparent;border-radius:50%;border-color:#000;font-family:inherit;line-height:5em;cursor:default;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.swal2-icon .swal2-icon-content{display:flex;align-items:center;font-size:3.75em}.swal2-icon.swal2-error{border-color:#f27474;color:#f27474}.swal2-icon.swal2-error .swal2-x-mark{position:relative;flex-grow:1}.swal2-icon.swal2-error [class^=swal2-x-mark-line]{display:block;position:absolute;top:2.3125em;width:2.9375em;height:.3125em;border-radius:.125em;background-color:#f27474}.swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=left]{left:1.0625em;transform:rotate(45deg)}.swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=right]{right:1em;transform:rotate(-45deg)}.swal2-icon.swal2-error.swal2-icon-show{-webkit-animation:swal2-animate-error-icon .5s;animation:swal2-animate-error-icon .5s}.swal2-icon.swal2-error.swal2-icon-show .swal2-x-mark{-webkit-animation:swal2-animate-error-x-mark .5s;animation:swal2-animate-error-x-mark .5s}.swal2-icon.swal2-warning{border-color:#facea8;color:#f8bb86}.swal2-icon.swal2-info{border-color:#9de0f6;color:#3fc3ee}.swal2-icon.swal2-question{border-color:#c9dae1;color:#87adbd}.swal2-icon.swal2-success{border-color:#a5dc86;color:#a5dc86}.swal2-icon.swal2-success [class^=swal2-success-circular-line]{position:absolute;width:3.75em;height:7.5em;transform:rotate(45deg);border-radius:50%}.swal2-icon.swal2-success [class^=swal2-success-circular-line][class$=left]{top:-.4375em;left:-2.0635em;transform:rotate(-45deg);transform-origin:3.75em 3.75em;border-radius:7.5em 0 0 7.5em}.swal2-icon.swal2-success [class^=swal2-success-circular-line][class$=right]{top:-.6875em;left:1.875em;transform:rotate(-45deg);transform-origin:0 3.75em;border-radius:0 7.5em 7.5em 0}.swal2-icon.swal2-success .swal2-success-ring{position:absolute;z-index:2;top:-.25em;left:-.25em;box-sizing:content-box;width:100%;height:100%;border:.25em solid rgba(165,220,134,.3);border-radius:50%}.swal2-icon.swal2-success .swal2-success-fix{position:absolute;z-index:1;top:.5em;left:1.625em;width:.4375em;height:5.625em;transform:rotate(-45deg)}.swal2-icon.swal2-success [class^=swal2-success-line]{display:block;position:absolute;z-index:2;height:.3125em;border-radius:.125em;background-color:#a5dc86}.swal2-icon.swal2-success [class^=swal2-success-line][class$=tip]{top:2.875em;left:.8125em;width:1.5625em;transform:rotate(45deg)}.swal2-icon.swal2-success [class^=swal2-success-line][class$=long]{top:2.375em;right:.5em;width:2.9375em;transform:rotate(-45deg)}.swal2-icon.swal2-success.swal2-icon-show .swal2-success-line-tip{-webkit-animation:swal2-animate-success-line-tip .75s;animation:swal2-animate-success-line-tip .75s}.swal2-icon.swal2-success.swal2-icon-show .swal2-success-line-long{-webkit-animation:swal2-animate-success-line-long .75s;animation:swal2-animate-success-line-long .75s}.swal2-icon.swal2-success.swal2-icon-show .swal2-success-circular-line-right{-webkit-animation:swal2-rotate-success-circular-line 4.25s ease-in;animation:swal2-rotate-success-circular-line 4.25s ease-in}.swal2-progress-steps{flex-wrap:wrap;align-items:center;max-width:100%;margin:0 0 1.25em;padding:0;background:inherit;font-weight:600}.swal2-progress-steps li{display:inline-block;position:relative}.swal2-progress-steps .swal2-progress-step{z-index:20;flex-shrink:0;width:2em;height:2em;border-radius:2em;background:#2778c4;color:#fff;line-height:2em;text-align:center}.swal2-progress-steps .swal2-progress-step.swal2-active-progress-step{background:#2778c4}.swal2-progress-steps .swal2-progress-step.swal2-active-progress-step~.swal2-progress-step{background:#add8e6;color:#fff}.swal2-progress-steps .swal2-progress-step.swal2-active-progress-step~.swal2-progress-step-line{background:#add8e6}.swal2-progress-steps .swal2-progress-step-line{z-index:10;flex-shrink:0;width:2.5em;height:.4em;margin:0 -1px;background:#2778c4}[class^=swal2]{-webkit-tap-highlight-color:transparent}.swal2-show{-webkit-animation:swal2-show .3s;animation:swal2-show .3s}.swal2-hide{-webkit-animation:swal2-hide .15s forwards;animation:swal2-hide .15s forwards}.swal2-noanimation{transition:none}.swal2-scrollbar-measure{position:absolute;top:-9999px;width:50px;height:50px;overflow:scroll}.swal2-rtl .swal2-close{right:auto;left:0}.swal2-rtl .swal2-timer-progress-bar{right:0;left:auto}@supports (-ms-accelerator:true){.swal2-range input{width:100%!important}.swal2-range output{display:none}}@media all and (-ms-high-contrast:none),(-ms-high-contrast:active){.swal2-range input{width:100%!important}.swal2-range output{display:none}}@-webkit-keyframes swal2-toast-show{0%{transform:translateY(-.625em) rotateZ(2deg)}33%{transform:translateY(0) rotateZ(-2deg)}66%{transform:translateY(.3125em) rotateZ(2deg)}100%{transform:translateY(0) rotateZ(0)}}@keyframes swal2-toast-show{0%{transform:translateY(-.625em) rotateZ(2deg)}33%{transform:translateY(0) rotateZ(-2deg)}66%{transform:translateY(.3125em) rotateZ(2deg)}100%{transform:translateY(0) rotateZ(0)}}@-webkit-keyframes swal2-toast-hide{100%{transform:rotateZ(1deg);opacity:0}}@keyframes swal2-toast-hide{100%{transform:rotateZ(1deg);opacity:0}}@-webkit-keyframes swal2-toast-animate-success-line-tip{0%{top:.5625em;left:.0625em;width:0}54%{top:.125em;left:.125em;width:0}70%{top:.625em;left:-.25em;width:1.625em}84%{top:1.0625em;left:.75em;width:.5em}100%{top:1.125em;left:.1875em;width:.75em}}@keyframes swal2-toast-animate-success-line-tip{0%{top:.5625em;left:.0625em;width:0}54%{top:.125em;left:.125em;width:0}70%{top:.625em;left:-.25em;width:1.625em}84%{top:1.0625em;left:.75em;width:.5em}100%{top:1.125em;left:.1875em;width:.75em}}@-webkit-keyframes swal2-toast-animate-success-line-long{0%{top:1.625em;right:1.375em;width:0}65%{top:1.25em;right:.9375em;width:0}84%{top:.9375em;right:0;width:1.125em}100%{top:.9375em;right:.1875em;width:1.375em}}@keyframes swal2-toast-animate-success-line-long{0%{top:1.625em;right:1.375em;width:0}65%{top:1.25em;right:.9375em;width:0}84%{top:.9375em;right:0;width:1.125em}100%{top:.9375em;right:.1875em;width:1.375em}}@-webkit-keyframes swal2-show{0%{transform:scale(.7)}45%{transform:scale(1.05)}80%{transform:scale(.95)}100%{transform:scale(1)}}@keyframes swal2-show{0%{transform:scale(.7)}45%{transform:scale(1.05)}80%{transform:scale(.95)}100%{transform:scale(1)}}@-webkit-keyframes swal2-hide{0%{transform:scale(1);opacity:1}100%{transform:scale(.5);opacity:0}}@keyframes swal2-hide{0%{transform:scale(1);opacity:1}100%{transform:scale(.5);opacity:0}}@-webkit-keyframes swal2-animate-success-line-tip{0%{top:1.1875em;left:.0625em;width:0}54%{top:1.0625em;left:.125em;width:0}70%{top:2.1875em;left:-.375em;width:3.125em}84%{top:3em;left:1.3125em;width:1.0625em}100%{top:2.8125em;left:.8125em;width:1.5625em}}@keyframes swal2-animate-success-line-tip{0%{top:1.1875em;left:.0625em;width:0}54%{top:1.0625em;left:.125em;width:0}70%{top:2.1875em;left:-.375em;width:3.125em}84%{top:3em;left:1.3125em;width:1.0625em}100%{top:2.8125em;left:.8125em;width:1.5625em}}@-webkit-keyframes swal2-animate-success-line-long{0%{top:3.375em;right:2.875em;width:0}65%{top:3.375em;right:2.875em;width:0}84%{top:2.1875em;right:0;width:3.4375em}100%{top:2.375em;right:.5em;width:2.9375em}}@keyframes swal2-animate-success-line-long{0%{top:3.375em;right:2.875em;width:0}65%{top:3.375em;right:2.875em;width:0}84%{top:2.1875em;right:0;width:3.4375em}100%{top:2.375em;right:.5em;width:2.9375em}}@-webkit-keyframes swal2-rotate-success-circular-line{0%{transform:rotate(-45deg)}5%{transform:rotate(-45deg)}12%{transform:rotate(-405deg)}100%{transform:rotate(-405deg)}}@keyframes swal2-rotate-success-circular-line{0%{transform:rotate(-45deg)}5%{transform:rotate(-45deg)}12%{transform:rotate(-405deg)}100%{transform:rotate(-405deg)}}@-webkit-keyframes swal2-animate-error-x-mark{0%{margin-top:1.625em;transform:scale(.4);opacity:0}50%{margin-top:1.625em;transform:scale(.4);opacity:0}80%{margin-top:-.375em;transform:scale(1.15)}100%{margin-top:0;transform:scale(1);opacity:1}}@keyframes swal2-animate-error-x-mark{0%{margin-top:1.625em;transform:scale(.4);opacity:0}50%{margin-top:1.625em;transform:scale(.4);opacity:0}80%{margin-top:-.375em;transform:scale(1.15)}100%{margin-top:0;transform:scale(1);opacity:1}}@-webkit-keyframes swal2-animate-error-icon{0%{transform:rotateX(100deg);opacity:0}100%{transform:rotateX(0);opacity:1}}@keyframes swal2-animate-error-icon{0%{transform:rotateX(100deg);opacity:0}100%{transform:rotateX(0);opacity:1}}@-webkit-keyframes swal2-rotate-loading{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}@keyframes swal2-rotate-loading{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown){overflow:hidden}body.swal2-height-auto{height:auto!important}body.swal2-no-backdrop .swal2-container{top:auto;right:auto;bottom:auto;left:auto;max-width:calc(100% - .625em * 2);background-color:transparent!important}body.swal2-no-backdrop .swal2-container>.swal2-modal{box-shadow:0 0 10px rgba(0,0,0,.4)}body.swal2-no-backdrop .swal2-container.swal2-top{top:0;left:50%;transform:translateX(-50%)}body.swal2-no-backdrop .swal2-container.swal2-top-left,body.swal2-no-backdrop .swal2-container.swal2-top-start{top:0;left:0}body.swal2-no-backdrop .swal2-container.swal2-top-end,body.swal2-no-backdrop .swal2-container.swal2-top-right{top:0;right:0}body.swal2-no-backdrop .swal2-container.swal2-center{top:50%;left:50%;transform:translate(-50%,-50%)}body.swal2-no-backdrop .swal2-container.swal2-center-left,body.swal2-no-backdrop .swal2-container.swal2-center-start{top:50%;left:0;transform:translateY(-50%)}body.swal2-no-backdrop .swal2-container.swal2-center-end,body.swal2-no-backdrop .swal2-container.swal2-center-right{top:50%;right:0;transform:translateY(-50%)}body.swal2-no-backdrop .swal2-container.swal2-bottom{bottom:0;left:50%;transform:translateX(-50%)}body.swal2-no-backdrop .swal2-container.swal2-bottom-left,body.swal2-no-backdrop .swal2-container.swal2-bottom-start{bottom:0;left:0}body.swal2-no-backdrop .swal2-container.swal2-bottom-end,body.swal2-no-backdrop .swal2-container.swal2-bottom-right{right:0;bottom:0}@media print{body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown){overflow-y:scroll!important}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown)>[aria-hidden=true]{display:none}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown) .swal2-container{position:static!important}}body.swal2-toast-shown .swal2-container{background-color:transparent}body.swal2-toast-shown .swal2-container.swal2-top{top:0;right:auto;bottom:auto;left:50%;transform:translateX(-50%)}body.swal2-toast-shown .swal2-container.swal2-top-end,body.swal2-toast-shown .swal2-container.swal2-top-right{top:0;right:0;bottom:auto;left:auto}body.swal2-toast-shown .swal2-container.swal2-top-left,body.swal2-toast-shown .swal2-container.swal2-top-start{top:0;right:auto;bottom:auto;left:0}body.swal2-toast-shown .swal2-container.swal2-center-left,body.swal2-toast-shown .swal2-container.swal2-center-start{top:50%;right:auto;bottom:auto;left:0;transform:translateY(-50%)}body.swal2-toast-shown .swal2-container.swal2-center{top:50%;right:auto;bottom:auto;left:50%;transform:translate(-50%,-50%)}body.swal2-toast-shown .swal2-container.swal2-center-end,body.swal2-toast-shown .swal2-container.swal2-center-right{top:50%;right:0;bottom:auto;left:auto;transform:translateY(-50%)}body.swal2-toast-shown .swal2-container.swal2-bottom-left,body.swal2-toast-shown .swal2-container.swal2-bottom-start{top:auto;right:auto;bottom:0;left:0}body.swal2-toast-shown .swal2-container.swal2-bottom{top:auto;right:auto;bottom:0;left:50%;transform:translateX(-50%)}body.swal2-toast-shown .swal2-container.swal2-bottom-end,body.swal2-toast-shown .swal2-container.swal2-bottom-right{top:auto;right:0;bottom:0;left:auto}'
		);
})(sweetalert2_all);

var Swal = sweetalert2_all.exports;

/**
 * External dependencies
 */
/**
 * Log to console, once per message; or more precisely, per referentially equal
 * argument set. Because Jed throws errors, we log these to the console instead
 * to avoid crashing the application.
 *
 * @param {...*} args Arguments to pass to `console.error`
 */

memize_1(console.error); // eslint-disable-line no-console

/**
 * External dependencies
 */
/**
 * @typedef {Record<string,any>} LocaleData
 */

/**
 * Default locale data to use for Tannin domain when not otherwise provided.
 * Assumes an English plural forms expression.
 *
 * @type {LocaleData}
 */

const DEFAULT_LOCALE_DATA$1 = {
	"": {
		/** @param {number} n */
		plural_forms(n) {
			return n === 1 ? 0 : 1;
		},
	},
};
/*
 * Regular expression that matches i18n hooks like `i18n.gettext`, `i18n.ngettext`,
 * `i18n.gettext_domain` or `i18n.ngettext_with_context` or `i18n.has_translation`.
 */

const I18N_HOOK_REGEXP$1 = /^i18n\.(n?gettext|has_translation)(_|$)/;
/**
 * @typedef {(domain?: string) => LocaleData} GetLocaleData
 *
 * Returns locale data by domain in a
 * Jed-formatted JSON object shape.
 *
 * @see http://messageformat.github.io/Jed/
 */

/**
 * @typedef {(data?: LocaleData, domain?: string) => void} SetLocaleData
 *
 * Merges locale data into the Tannin instance by domain. Accepts data in a
 * Jed-formatted JSON object shape.
 *
 * @see http://messageformat.github.io/Jed/
 */

/**
 * @typedef {(data?: LocaleData, domain?: string) => void} ResetLocaleData
 *
 * Resets all current Tannin instance locale data and sets the specified
 * locale data for the domain. Accepts data in a Jed-formatted JSON object shape.
 *
 * @see http://messageformat.github.io/Jed/
 */

/** @typedef {() => void} SubscribeCallback */

/** @typedef {() => void} UnsubscribeCallback */

/**
 * @typedef {(callback: SubscribeCallback) => UnsubscribeCallback} Subscribe
 *
 * Subscribes to changes of locale data
 */

/**
 * @typedef {(domain?: string) => string} GetFilterDomain
 * Retrieve the domain to use when calling domain-specific filters.
 */

/**
 * @typedef {(text: string, domain?: string) => string} __
 *
 * Retrieve the translation of text.
 *
 * @see https://developer.wordpress.org/reference/functions/__/
 */

/**
 * @typedef {(text: string, context: string, domain?: string) => string} _x
 *
 * Retrieve translated string with gettext context.
 *
 * @see https://developer.wordpress.org/reference/functions/_x/
 */

/**
 * @typedef {(single: string, plural: string, number: number, domain?: string) => string} _n
 *
 * Translates and retrieves the singular or plural form based on the supplied
 * number.
 *
 * @see https://developer.wordpress.org/reference/functions/_n/
 */

/**
 * @typedef {(single: string, plural: string, number: number, context: string, domain?: string) => string} _nx
 *
 * Translates and retrieves the singular or plural form based on the supplied
 * number, with gettext context.
 *
 * @see https://developer.wordpress.org/reference/functions/_nx/
 */

/**
 * @typedef {() => boolean} IsRtl
 *
 * Check if current locale is RTL.
 *
 * **RTL (Right To Left)** is a locale property indicating that text is written from right to left.
 * For example, the `he` locale (for Hebrew) specifies right-to-left. Arabic (ar) is another common
 * language written RTL. The opposite of RTL, LTR (Left To Right) is used in other languages,
 * including English (`en`, `en-US`, `en-GB`, etc.), Spanish (`es`), and French (`fr`).
 */

/**
 * @typedef {(single: string, context?: string, domain?: string) => boolean} HasTranslation
 *
 * Check if there is a translation for a given string in singular form.
 */

/** @typedef {import('@wordpress/hooks').Hooks} Hooks */

/**
 * An i18n instance
 *
 * @typedef I18n
 * @property {GetLocaleData}   getLocaleData   Returns locale data by domain in a Jed-formatted JSON object shape.
 * @property {SetLocaleData}   setLocaleData   Merges locale data into the Tannin instance by domain. Accepts data in a
 *                                             Jed-formatted JSON object shape.
 * @property {ResetLocaleData} resetLocaleData Resets all current Tannin instance locale data and sets the specified
 *                                             locale data for the domain. Accepts data in a Jed-formatted JSON object shape.
 * @property {Subscribe}       subscribe       Subscribes to changes of Tannin locale data.
 * @property {__}              __              Retrieve the translation of text.
 * @property {_x}              _x              Retrieve translated string with gettext context.
 * @property {_n}              _n              Translates and retrieves the singular or plural form based on the supplied
 *                                             number.
 * @property {_nx}             _nx             Translates and retrieves the singular or plural form based on the supplied
 *                                             number, with gettext context.
 * @property {IsRtl}           isRTL           Check if current locale is RTL.
 * @property {HasTranslation}  hasTranslation  Check if there is a translation for a given string.
 */

/**
 * Create an i18n instance
 *
 * @param {LocaleData} [initialData]   Locale data configuration.
 * @param {string}     [initialDomain] Domain for which configuration applies.
 * @param {Hooks}      [hooks]         Hooks implementation.
 *
 * @return {I18n} I18n instance.
 */

const createI18n$1 = (initialData, initialDomain, hooks) => {
	/**
	 * The underlying instance of Tannin to which exported functions interface.
	 *
	 * @type {Tannin}
	 */
	const tannin = new Tannin({});
	const listeners = new Set();

	const notifyListeners = () => {
		listeners.forEach((listener) => listener());
	};
	/**
	 * Subscribe to changes of locale data.
	 *
	 * @param {SubscribeCallback} callback Subscription callback.
	 * @return {UnsubscribeCallback} Unsubscribe callback.
	 */

	const subscribe = (callback) => {
		listeners.add(callback);
		return () => listeners.delete(callback);
	};
	/** @type {GetLocaleData} */

	const getLocaleData = (domain = "default") => tannin.data[domain];
	/**
	 * @param {LocaleData} [data]
	 * @param {string}     [domain]
	 */

	const doSetLocaleData = (data, domain = "default") => {
		tannin.data[domain] = {
			...DEFAULT_LOCALE_DATA$1,
			...tannin.data[domain],
			...data,
		}; // Populate default domain configuration (supported locale date which omits
		// a plural forms expression).

		tannin.data[domain][""] = {
			...DEFAULT_LOCALE_DATA$1[""],
			...tannin.data[domain][""],
		};
	};
	/** @type {SetLocaleData} */

	const setLocaleData = (data, domain) => {
		doSetLocaleData(data, domain);
		notifyListeners();
	};
	/** @type {ResetLocaleData} */

	const resetLocaleData = (data, domain) => {
		// Reset all current Tannin locale data.
		tannin.data = {}; // Reset cached plural forms functions cache.

		tannin.pluralForms = {};
		setLocaleData(data, domain);
	};
	/**
	 * Wrapper for Tannin's `dcnpgettext`. Populates default locale data if not
	 * otherwise previously assigned.
	 *
	 * @param {string|undefined} domain   Domain to retrieve the translated text.
	 * @param {string|undefined} context  Context information for the translators.
	 * @param {string}           single   Text to translate if non-plural. Used as
	 *                                    fallback return value on a caught error.
	 * @param {string}           [plural] The text to be used if the number is
	 *                                    plural.
	 * @param {number}           [number] The number to compare against to use
	 *                                    either the singular or plural form.
	 *
	 * @return {string} The translated string.
	 */

	const dcnpgettext = (
		domain = "default",
		context,
		single,
		plural,
		number
	) => {
		if (!tannin.data[domain]) {
			// use `doSetLocaleData` to set silently, without notifying listeners
			doSetLocaleData(undefined, domain);
		}

		return tannin.dcnpgettext(domain, context, single, plural, number);
	};
	/** @type {GetFilterDomain} */

	const getFilterDomain = (domain = "default") => domain;
	/** @type {__} */

	const __ = (text, domain) => {
		let translation = dcnpgettext(domain, undefined, text);

		if (!hooks) {
			return translation;
		}
		/**
		 * Filters text with its translation.
		 *
		 * @param {string} translation Translated text.
		 * @param {string} text        Text to translate.
		 * @param {string} domain      Text domain. Unique identifier for retrieving translated strings.
		 */

		translation =
			/** @type {string} */

			/** @type {*} */
			hooks.applyFilters("i18n.gettext", translation, text, domain);
		return (
			/** @type {string} */

			/** @type {*} */
			hooks.applyFilters(
				"i18n.gettext_" + getFilterDomain(domain),
				translation,
				text,
				domain
			)
		);
	};
	/** @type {_x} */

	const _x = (text, context, domain) => {
		let translation = dcnpgettext(domain, context, text);

		if (!hooks) {
			return translation;
		}
		/**
		 * Filters text with its translation based on context information.
		 *
		 * @param {string} translation Translated text.
		 * @param {string} text        Text to translate.
		 * @param {string} context     Context information for the translators.
		 * @param {string} domain      Text domain. Unique identifier for retrieving translated strings.
		 */

		translation =
			/** @type {string} */

			/** @type {*} */
			hooks.applyFilters(
				"i18n.gettext_with_context",
				translation,
				text,
				context,
				domain
			);
		return (
			/** @type {string} */

			/** @type {*} */
			hooks.applyFilters(
				"i18n.gettext_with_context_" + getFilterDomain(domain),
				translation,
				text,
				context,
				domain
			)
		);
	};
	/** @type {_n} */

	const _n = (single, plural, number, domain) => {
		let translation = dcnpgettext(
			domain,
			undefined,
			single,
			plural,
			number
		);

		if (!hooks) {
			return translation;
		}
		/**
		 * Filters the singular or plural form of a string.
		 *
		 * @param {string} translation Translated text.
		 * @param {string} single      The text to be used if the number is singular.
		 * @param {string} plural      The text to be used if the number is plural.
		 * @param {string} number      The number to compare against to use either the singular or plural form.
		 * @param {string} domain      Text domain. Unique identifier for retrieving translated strings.
		 */

		translation =
			/** @type {string} */

			/** @type {*} */
			hooks.applyFilters(
				"i18n.ngettext",
				translation,
				single,
				plural,
				number,
				domain
			);
		return (
			/** @type {string} */

			/** @type {*} */
			hooks.applyFilters(
				"i18n.ngettext_" + getFilterDomain(domain),
				translation,
				single,
				plural,
				number,
				domain
			)
		);
	};
	/** @type {_nx} */

	const _nx = (single, plural, number, context, domain) => {
		let translation = dcnpgettext(domain, context, single, plural, number);

		if (!hooks) {
			return translation;
		}
		/**
		 * Filters the singular or plural form of a string with gettext context.
		 *
		 * @param {string} translation Translated text.
		 * @param {string} single      The text to be used if the number is singular.
		 * @param {string} plural      The text to be used if the number is plural.
		 * @param {string} number      The number to compare against to use either the singular or plural form.
		 * @param {string} context     Context information for the translators.
		 * @param {string} domain      Text domain. Unique identifier for retrieving translated strings.
		 */

		translation =
			/** @type {string} */

			/** @type {*} */
			hooks.applyFilters(
				"i18n.ngettext_with_context",
				translation,
				single,
				plural,
				number,
				context,
				domain
			);
		return (
			/** @type {string} */

			/** @type {*} */
			hooks.applyFilters(
				"i18n.ngettext_with_context_" + getFilterDomain(domain),
				translation,
				single,
				plural,
				number,
				context,
				domain
			)
		);
	};
	/** @type {IsRtl} */

	const isRTL = () => {
		return "rtl" === _x("ltr", "text direction");
	};
	/** @type {HasTranslation} */

	const hasTranslation = (single, context, domain) => {
		var _tannin$data, _tannin$data2;

		const key = context ? context + "\u0004" + single : single;
		let result = !!(
			(_tannin$data = tannin.data) !== null &&
			_tannin$data !== void 0 &&
			(_tannin$data2 =
				_tannin$data[
					domain !== null && domain !== void 0 ? domain : "default"
				]) !== null &&
			_tannin$data2 !== void 0 &&
			_tannin$data2[key]
		);

		if (hooks) {
			/**
			 * Filters the presence of a translation in the locale data.
			 *
			 * @param {boolean} hasTranslation Whether the translation is present or not..
			 * @param {string}  single         The singular form of the translated text (used as key in locale data)
			 * @param {string}  context        Context information for the translators.
			 * @param {string}  domain         Text domain. Unique identifier for retrieving translated strings.
			 */
			result =
				/** @type { boolean } */

				/** @type {*} */
				hooks.applyFilters(
					"i18n.has_translation",
					result,
					single,
					context,
					domain
				);
			result =
				/** @type { boolean } */

				/** @type {*} */
				hooks.applyFilters(
					"i18n.has_translation_" + getFilterDomain(domain),
					result,
					single,
					context,
					domain
				);
		}

		return result;
	};

	if (initialData) {
		setLocaleData(initialData, initialDomain);
	}

	if (hooks) {
		/**
		 * @param {string} hookName
		 */
		const onHookAddedOrRemoved = (hookName) => {
			if (I18N_HOOK_REGEXP$1.test(hookName)) {
				notifyListeners();
			}
		};

		hooks.addAction("hookAdded", "core/i18n", onHookAddedOrRemoved);
		hooks.addAction("hookRemoved", "core/i18n", onHookAddedOrRemoved);
	}

	return {
		getLocaleData,
		setLocaleData,
		resetLocaleData,
		subscribe,
		__,
		_x,
		_n,
		_nx,
		isRTL,
		hasTranslation,
	};
};

/**
 * Validate a namespace string.
 *
 * @param {string} namespace The namespace to validate - should take the form
 *                           `vendor/plugin/function`.
 *
 * @return {boolean} Whether the namespace is valid.
 */
function validateNamespace(namespace) {
	if ("string" !== typeof namespace || "" === namespace) {
		// eslint-disable-next-line no-console
		console.error("The namespace must be a non-empty string.");
		return false;
	}

	if (!/^[a-zA-Z][a-zA-Z0-9_.\-\/]*$/.test(namespace)) {
		// eslint-disable-next-line no-console
		console.error(
			"The namespace can only contain numbers, letters, dashes, periods, underscores and slashes."
		);
		return false;
	}

	return true;
}

/**
 * Validate a hookName string.
 *
 * @param {string} hookName The hook name to validate. Should be a non empty string containing
 *                          only numbers, letters, dashes, periods and underscores. Also,
 *                          the hook name cannot begin with `__`.
 *
 * @return {boolean} Whether the hook name is valid.
 */
function validateHookName(hookName) {
	if ("string" !== typeof hookName || "" === hookName) {
		// eslint-disable-next-line no-console
		console.error("The hook name must be a non-empty string.");
		return false;
	}

	if (/^__/.test(hookName)) {
		// eslint-disable-next-line no-console
		console.error("The hook name cannot begin with `__`.");
		return false;
	}

	if (!/^[a-zA-Z][a-zA-Z0-9_.-]*$/.test(hookName)) {
		// eslint-disable-next-line no-console
		console.error(
			"The hook name can only contain numbers, letters, dashes, periods and underscores."
		);
		return false;
	}

	return true;
}

/**
 * Internal dependencies
 */
/**
 * @callback AddHook
 *
 * Adds the hook to the appropriate hooks container.
 *
 * @param {string}               hookName      Name of hook to add
 * @param {string}               namespace     The unique namespace identifying the callback in the form `vendor/plugin/function`.
 * @param {import('.').Callback} callback      Function to call when the hook is run
 * @param {number}               [priority=10] Priority of this hook
 */

/**
 * Returns a function which, when invoked, will add a hook.
 *
 * @param {import('.').Hooks}    hooks    Hooks instance.
 * @param {import('.').StoreKey} storeKey
 *
 * @return {AddHook} Function that adds a new hook.
 */

function createAddHook(hooks, storeKey) {
	return function addHook(hookName, namespace, callback, priority = 10) {
		const hooksStore = hooks[storeKey];

		if (!validateHookName(hookName)) {
			return;
		}

		if (!validateNamespace(namespace)) {
			return;
		}

		if ("function" !== typeof callback) {
			// eslint-disable-next-line no-console
			console.error("The hook callback must be a function.");
			return;
		} // Validate numeric priority

		if ("number" !== typeof priority) {
			// eslint-disable-next-line no-console
			console.error("If specified, the hook priority must be a number.");
			return;
		}

		const handler = {
			callback,
			priority,
			namespace,
		};

		if (hooksStore[hookName]) {
			// Find the correct insert index of the new hook.
			const handlers = hooksStore[hookName].handlers;
			/** @type {number} */

			let i;

			for (i = handlers.length; i > 0; i--) {
				if (priority >= handlers[i - 1].priority) {
					break;
				}
			}

			if (i === handlers.length) {
				// If append, operate via direct assignment.
				handlers[i] = handler;
			} else {
				// Otherwise, insert before index via splice.
				handlers.splice(i, 0, handler);
			} // We may also be currently executing this hook.  If the callback
			// we're adding would come after the current callback, there's no
			// problem; otherwise we need to increase the execution index of
			// any other runs by 1 to account for the added element.

			hooksStore.__current.forEach((hookInfo) => {
				if (hookInfo.name === hookName && hookInfo.currentIndex >= i) {
					hookInfo.currentIndex++;
				}
			});
		} else {
			// This is the first hook of its type.
			hooksStore[hookName] = {
				handlers: [handler],
				runs: 0,
			};
		}

		if (hookName !== "hookAdded") {
			hooks.doAction(
				"hookAdded",
				hookName,
				namespace,
				callback,
				priority
			);
		}
	};
}

/**
 * Internal dependencies
 */
/**
 * @callback RemoveHook
 * Removes the specified callback (or all callbacks) from the hook with a given hookName
 * and namespace.
 *
 * @param {string} hookName  The name of the hook to modify.
 * @param {string} namespace The unique namespace identifying the callback in the
 *                           form `vendor/plugin/function`.
 *
 * @return {number | undefined} The number of callbacks removed.
 */

/**
 * Returns a function which, when invoked, will remove a specified hook or all
 * hooks by the given name.
 *
 * @param {import('.').Hooks}    hooks             Hooks instance.
 * @param {import('.').StoreKey} storeKey
 * @param {boolean}              [removeAll=false] Whether to remove all callbacks for a hookName,
 *                                                 without regard to namespace. Used to create
 *                                                 `removeAll*` functions.
 *
 * @return {RemoveHook} Function that removes hooks.
 */

function createRemoveHook(hooks, storeKey, removeAll = false) {
	return function removeHook(hookName, namespace) {
		const hooksStore = hooks[storeKey];

		if (!validateHookName(hookName)) {
			return;
		}

		if (!removeAll && !validateNamespace(namespace)) {
			return;
		} // Bail if no hooks exist by this name

		if (!hooksStore[hookName]) {
			return 0;
		}

		let handlersRemoved = 0;

		if (removeAll) {
			handlersRemoved = hooksStore[hookName].handlers.length;
			hooksStore[hookName] = {
				runs: hooksStore[hookName].runs,
				handlers: [],
			};
		} else {
			// Try to find the specified callback to remove.
			const handlers = hooksStore[hookName].handlers;

			for (let i = handlers.length - 1; i >= 0; i--) {
				if (handlers[i].namespace === namespace) {
					handlers.splice(i, 1);
					handlersRemoved++; // This callback may also be part of a hook that is
					// currently executing.  If the callback we're removing
					// comes after the current callback, there's no problem;
					// otherwise we need to decrease the execution index of any
					// other runs by 1 to account for the removed element.

					hooksStore.__current.forEach((hookInfo) => {
						if (
							hookInfo.name === hookName &&
							hookInfo.currentIndex >= i
						) {
							hookInfo.currentIndex--;
						}
					});
				}
			}
		}

		if (hookName !== "hookRemoved") {
			hooks.doAction("hookRemoved", hookName, namespace);
		}

		return handlersRemoved;
	};
}

/**
 * @callback HasHook
 *
 * Returns whether any handlers are attached for the given hookName and optional namespace.
 *
 * @param {string} hookName    The name of the hook to check for.
 * @param {string} [namespace] Optional. The unique namespace identifying the callback
 *                             in the form `vendor/plugin/function`.
 *
 * @return {boolean} Whether there are handlers that are attached to the given hook.
 */

/**
 * Returns a function which, when invoked, will return whether any handlers are
 * attached to a particular hook.
 *
 * @param {import('.').Hooks}    hooks    Hooks instance.
 * @param {import('.').StoreKey} storeKey
 *
 * @return {HasHook} Function that returns whether any handlers are
 *                   attached to a particular hook and optional namespace.
 */
function createHasHook(hooks, storeKey) {
	return function hasHook(hookName, namespace) {
		const hooksStore = hooks[storeKey]; // Use the namespace if provided.

		if ("undefined" !== typeof namespace) {
			return (
				hookName in hooksStore &&
				hooksStore[hookName].handlers.some(
					(hook) => hook.namespace === namespace
				)
			);
		}

		return hookName in hooksStore;
	};
}

/**
 * Returns a function which, when invoked, will execute all callbacks
 * registered to a hook of the specified type, optionally returning the final
 * value of the call chain.
 *
 * @param {import('.').Hooks}    hooks                  Hooks instance.
 * @param {import('.').StoreKey} storeKey
 * @param {boolean}              [returnFirstArg=false] Whether each hook callback is expected to
 *                                                      return its first argument.
 *
 * @return {(hookName:string, ...args: unknown[]) => unknown} Function that runs hook callbacks.
 */
function createRunHook(hooks, storeKey, returnFirstArg = false) {
	return function runHooks(hookName, ...args) {
		const hooksStore = hooks[storeKey];

		if (!hooksStore[hookName]) {
			hooksStore[hookName] = {
				handlers: [],
				runs: 0,
			};
		}

		hooksStore[hookName].runs++;
		const handlers = hooksStore[hookName].handlers; // The following code is stripped from production builds.

		if ("production" !== process.env.NODE_ENV) {
			// Handle any 'all' hooks registered.
			if ("hookAdded" !== hookName && hooksStore.all) {
				handlers.push(...hooksStore.all.handlers);
			}
		}

		if (!handlers || !handlers.length) {
			return returnFirstArg ? args[0] : undefined;
		}

		const hookInfo = {
			name: hookName,
			currentIndex: 0,
		};

		hooksStore.__current.push(hookInfo);

		while (hookInfo.currentIndex < handlers.length) {
			const handler = handlers[hookInfo.currentIndex];
			const result = handler.callback.apply(null, args);

			if (returnFirstArg) {
				args[0] = result;
			}

			hookInfo.currentIndex++;
		}

		hooksStore.__current.pop();

		if (returnFirstArg) {
			return args[0];
		}
	};
}

/**
 * Returns a function which, when invoked, will return the name of the
 * currently running hook, or `null` if no hook of the given type is currently
 * running.
 *
 * @param {import('.').Hooks}    hooks    Hooks instance.
 * @param {import('.').StoreKey} storeKey
 *
 * @return {() => string | null} Function that returns the current hook name or null.
 */
function createCurrentHook(hooks, storeKey) {
	return function currentHook() {
		var _hooksStore$__current, _hooksStore$__current2;

		const hooksStore = hooks[storeKey];
		return (_hooksStore$__current =
			(_hooksStore$__current2 =
				hooksStore.__current[hooksStore.__current.length - 1]) ===
				null || _hooksStore$__current2 === void 0
				? void 0
				: _hooksStore$__current2.name) !== null &&
			_hooksStore$__current !== void 0
			? _hooksStore$__current
			: null;
	};
}

/**
 * @callback DoingHook
 * Returns whether a hook is currently being executed.
 *
 * @param {string} [hookName] The name of the hook to check for.  If
 *                            omitted, will check for any hook being executed.
 *
 * @return {boolean} Whether the hook is being executed.
 */

/**
 * Returns a function which, when invoked, will return whether a hook is
 * currently being executed.
 *
 * @param {import('.').Hooks}    hooks    Hooks instance.
 * @param {import('.').StoreKey} storeKey
 *
 * @return {DoingHook} Function that returns whether a hook is currently
 *                     being executed.
 */
function createDoingHook(hooks, storeKey) {
	return function doingHook(hookName) {
		const hooksStore = hooks[storeKey]; // If the hookName was not passed, check for any current hook.

		if ("undefined" === typeof hookName) {
			return "undefined" !== typeof hooksStore.__current[0];
		} // Return the __current hook.

		return hooksStore.__current[0]
			? hookName === hooksStore.__current[0].name
			: false;
	};
}

/**
 * Internal dependencies
 */
/**
 * @callback DidHook
 *
 * Returns the number of times an action has been fired.
 *
 * @param {string} hookName The hook name to check.
 *
 * @return {number | undefined} The number of times the hook has run.
 */

/**
 * Returns a function which, when invoked, will return the number of times a
 * hook has been called.
 *
 * @param {import('.').Hooks}    hooks    Hooks instance.
 * @param {import('.').StoreKey} storeKey
 *
 * @return {DidHook} Function that returns a hook's call count.
 */

function createDidHook(hooks, storeKey) {
	return function didHook(hookName) {
		const hooksStore = hooks[storeKey];

		if (!validateHookName(hookName)) {
			return;
		}

		return hooksStore[hookName] && hooksStore[hookName].runs
			? hooksStore[hookName].runs
			: 0;
	};
}

/**
 * Internal dependencies
 */
/**
 * Internal class for constructing hooks. Use `createHooks()` function
 *
 * Note, it is necessary to expose this class to make its type public.
 *
 * @private
 */

class _Hooks {
	constructor() {
		/** @type {import('.').Store} actions */
		this.actions = Object.create(null);
		this.actions.__current = [];
		/** @type {import('.').Store} filters */

		this.filters = Object.create(null);
		this.filters.__current = [];
		this.addAction = createAddHook(this, "actions");
		this.addFilter = createAddHook(this, "filters");
		this.removeAction = createRemoveHook(this, "actions");
		this.removeFilter = createRemoveHook(this, "filters");
		this.hasAction = createHasHook(this, "actions");
		this.hasFilter = createHasHook(this, "filters");
		this.removeAllActions = createRemoveHook(this, "actions", true);
		this.removeAllFilters = createRemoveHook(this, "filters", true);
		this.doAction = createRunHook(this, "actions");
		this.applyFilters = createRunHook(this, "filters", true);
		this.currentAction = createCurrentHook(this, "actions");
		this.currentFilter = createCurrentHook(this, "filters");
		this.doingAction = createDoingHook(this, "actions");
		this.doingFilter = createDoingHook(this, "filters");
		this.didAction = createDidHook(this, "actions");
		this.didFilter = createDidHook(this, "filters");
	}
}
/** @typedef {_Hooks} Hooks */

/**
 * Returns an instance of the hooks object.
 *
 * @return {Hooks} A Hooks instance.
 */

function createHooks() {
	return new _Hooks();
}

/**
 * Internal dependencies
 */
/** @typedef {(...args: any[])=>any} Callback */

/**
 * @typedef Handler
 * @property {Callback} callback  The callback
 * @property {string}   namespace The namespace
 * @property {number}   priority  The namespace
 */

/**
 * @typedef Hook
 * @property {Handler[]} handlers Array of handlers
 * @property {number}    runs     Run counter
 */

/**
 * @typedef Current
 * @property {string} name         Hook name
 * @property {number} currentIndex The index
 */

/**
 * @typedef {Record<string, Hook> & {__current: Current[]}} Store
 */

/**
 * @typedef {'actions' | 'filters'} StoreKey
 */

/**
 * @typedef {import('./createHooks').Hooks} Hooks
 */

const defaultHooks = createHooks();
const {
	addAction,
	addFilter,
	removeAction,
	removeFilter,
	hasAction,
	hasFilter,
	removeAllActions,
	removeAllFilters,
	doAction,
	applyFilters,
	currentAction,
	currentFilter,
	doingAction,
	doingFilter,
	didAction,
	didFilter,
	actions: actions$1,
	filters,
} = defaultHooks;

/**
 * Internal dependencies
 */
const i18n$1 = createI18n$1(undefined, undefined, defaultHooks);
/*
 * Comments in this file are duplicated from ./i18n due to
 * https://github.com/WordPress/gutenberg/pull/20318#issuecomment-590837722
 */

/**
 * @typedef {import('./create-i18n').LocaleData} LocaleData
 * @typedef {import('./create-i18n').SubscribeCallback} SubscribeCallback
 * @typedef {import('./create-i18n').UnsubscribeCallback} UnsubscribeCallback
 */

/**
 * Returns locale data by domain in a Jed-formatted JSON object shape.
 *
 * @see http://messageformat.github.io/Jed/
 *
 * @param {string} [domain] Domain for which to get the data.
 * @return {LocaleData} Locale data.
 */

i18n$1.getLocaleData.bind(i18n$1);
/**
 * Merges locale data into the Tannin instance by domain. Accepts data in a
 * Jed-formatted JSON object shape.
 *
 * @see http://messageformat.github.io/Jed/
 *
 * @param {LocaleData} [data]   Locale data configuration.
 * @param {string}     [domain] Domain for which configuration applies.
 */

i18n$1.setLocaleData.bind(i18n$1);
/**
 * Resets all current Tannin instance locale data and sets the specified
 * locale data for the domain. Accepts data in a Jed-formatted JSON object shape.
 *
 * @see http://messageformat.github.io/Jed/
 *
 * @param {LocaleData} [data]   Locale data configuration.
 * @param {string}     [domain] Domain for which configuration applies.
 */

i18n$1.resetLocaleData.bind(i18n$1);
/**
 * Subscribes to changes of locale data
 *
 * @param {SubscribeCallback} callback Subscription callback
 * @return {UnsubscribeCallback} Unsubscribe callback
 */

i18n$1.subscribe.bind(i18n$1);
/**
 * Retrieve the translation of text.
 *
 * @see https://developer.wordpress.org/reference/functions/__/
 *
 * @param {string} text     Text to translate.
 * @param {string} [domain] Domain to retrieve the translated text.
 *
 * @return {string} Translated text.
 */

const __$1 = i18n$1.__.bind(i18n$1);
/**
 * Retrieve translated string with gettext context.
 *
 * @see https://developer.wordpress.org/reference/functions/_x/
 *
 * @param {string} text     Text to translate.
 * @param {string} context  Context information for the translators.
 * @param {string} [domain] Domain to retrieve the translated text.
 *
 * @return {string} Translated context string without pipe.
 */

i18n$1._x.bind(i18n$1);
/**
 * Translates and retrieves the singular or plural form based on the supplied
 * number.
 *
 * @see https://developer.wordpress.org/reference/functions/_n/
 *
 * @param {string} single   The text to be used if the number is singular.
 * @param {string} plural   The text to be used if the number is plural.
 * @param {number} number   The number to compare against to use either the
 *                          singular or plural form.
 * @param {string} [domain] Domain to retrieve the translated text.
 *
 * @return {string} The translated singular or plural form.
 */

i18n$1._n.bind(i18n$1);
/**
 * Translates and retrieves the singular or plural form based on the supplied
 * number, with gettext context.
 *
 * @see https://developer.wordpress.org/reference/functions/_nx/
 *
 * @param {string} single   The text to be used if the number is singular.
 * @param {string} plural   The text to be used if the number is plural.
 * @param {number} number   The number to compare against to use either the
 *                          singular or plural form.
 * @param {string} context  Context information for the translators.
 * @param {string} [domain] Domain to retrieve the translated text.
 *
 * @return {string} The translated singular or plural form.
 */

i18n$1._nx.bind(i18n$1);
/**
 * Check if current locale is RTL.
 *
 * **RTL (Right To Left)** is a locale property indicating that text is written from right to left.
 * For example, the `he` locale (for Hebrew) specifies right-to-left. Arabic (ar) is another common
 * language written RTL. The opposite of RTL, LTR (Left To Right) is used in other languages,
 * including English (`en`, `en-US`, `en-GB`, etc.), Spanish (`es`), and French (`fr`).
 *
 * @return {boolean} Whether locale is RTL.
 */

i18n$1.isRTL.bind(i18n$1);
/**
 * Check if there is a translation for a given string (in singular form).
 *
 * @param {string} single    Singular form of the string to look up.
 * @param {string} [context] Context information for the translators.
 * @param {string} [domain]  Domain to retrieve the translated text.
 * @return {boolean} Whether the translation exists or not.
 */

i18n$1.hasTranslation.bind(i18n$1);

/**
 * @param {string} nonce
 * @return {import('../types').APIFetchMiddleware & { nonce: string }} A middleware to enhance a request with a nonce.
 */
function createNonceMiddleware(nonce) {
	/**
	 * @type {import('../types').APIFetchMiddleware & { nonce: string }}
	 */
	const middleware = (options, next) => {
		const { headers = {} } = options; // If an 'X-WP-Nonce' header (or any case-insensitive variation
		// thereof) was specified, no need to add a nonce header.

		for (const headerName in headers) {
			if (
				headerName.toLowerCase() === "x-wp-nonce" &&
				headers[headerName] === middleware.nonce
			) {
				return next(options);
			}
		}

		return next({
			...options,
			headers: { ...headers, "X-WP-Nonce": middleware.nonce },
		});
	};

	middleware.nonce = nonce;
	return middleware;
}

/**
 * @type {import('../types').APIFetchMiddleware}
 */
const namespaceAndEndpointMiddleware = (options, next) => {
	let path = options.path;
	let namespaceTrimmed, endpointTrimmed;

	if (
		typeof options.namespace === "string" &&
		typeof options.endpoint === "string"
	) {
		namespaceTrimmed = options.namespace.replace(/^\/|\/$/g, "");
		endpointTrimmed = options.endpoint.replace(/^\//, "");

		if (endpointTrimmed) {
			path = namespaceTrimmed + "/" + endpointTrimmed;
		} else {
			path = namespaceTrimmed;
		}
	}

	delete options.namespace;
	delete options.endpoint;
	return next({ ...options, path });
};

/**
 * Internal dependencies
 */
/**
 * @param {string} rootURL
 * @return {import('../types').APIFetchMiddleware} Root URL middleware.
 */

const createRootURLMiddleware = (rootURL) => (options, next) => {
	return namespaceAndEndpointMiddleware(options, (optionsWithPath) => {
		let url = optionsWithPath.url;
		let path = optionsWithPath.path;
		let apiRoot;

		if (typeof path === "string") {
			apiRoot = rootURL;

			if (-1 !== rootURL.indexOf("?")) {
				path = path.replace("?", "&");
			}

			path = path.replace(/^\//, ""); // API root may already include query parameter prefix if site is
			// configured to use plain permalinks.

			if ("string" === typeof apiRoot && -1 !== apiRoot.indexOf("?")) {
				path = path.replace("?", "&");
			}

			url = apiRoot + path;
		}

		return next({ ...optionsWithPath, url });
	});
};

/**
 * Given a path, returns a normalized path where equal query parameter values
 * will be treated as identical, regardless of order they appear in the original
 * text.
 *
 * @param {string} path Original path.
 *
 * @return {string} Normalized path.
 */
function getStablePath(path) {
	const splitted = path.split("?");
	const query = splitted[1];
	const base = splitted[0];

	if (!query) {
		return base;
	} // 'b=1&c=2&a=5'

	return (
		base +
		"?" +
		query // [ 'b=1', 'c=2', 'a=5' ]
			.split("&") // [ [ 'b, '1' ], [ 'c', '2' ], [ 'a', '5' ] ]
			.map((entry) => entry.split("=")) // [ [ 'a', '5' ], [ 'b, '1' ], [ 'c', '2' ] ]
			.sort((a, b) => a[0].localeCompare(b[0])) // [ 'a=5', 'b=1', 'c=2' ]
			.map((pair) => pair.join("=")) // 'a=5&b=1&c=2'
			.join("&")
	);
}
/**
 * @param {Record<string, any>} preloadedData
 * @return {import('../types').APIFetchMiddleware} Preloading middleware.
 */

function createPreloadingMiddleware(preloadedData) {
	const cache = Object.keys(preloadedData).reduce(
		(result, path) => {
			result[getStablePath(path)] = preloadedData[path];
			return result;
		},
		/** @type {Record<string, any>} */
		{}
	);
	return (options, next) => {
		const { parse = true } = options;

		if (typeof options.path === "string") {
			const method = options.method || "GET";
			const path = getStablePath(options.path);

			if ("GET" === method && cache[path]) {
				const cacheData = cache[path]; // Unsetting the cache key ensures that the data is only preloaded a single time

				delete cache[path];
				return Promise.resolve(
					parse
						? cacheData.body
						: new window.Response(JSON.stringify(cacheData.body), {
								status: 200,
								statusText: "OK",
								headers: cacheData.headers,
						  })
				);
			} else if (
				"OPTIONS" === method &&
				cache[method] &&
				cache[method][path]
			) {
				return Promise.resolve(
					parse ? cache[method][path].body : cache[method][path]
				);
			}
		}

		return next(options);
	};
}

/**
 * Returns the query string part of the URL.
 *
 * @param {string} url The full URL.
 *
 * @example
 * ```js
 * const queryString = getQueryString( 'http://localhost:8080/this/is/a/test?query=true#fragment' ); // 'query=true'
 * ```
 *
 * @return {string|void} The query string part of the URL.
 */
function getQueryString(url) {
	let query;

	try {
		query = new URL(url, "http://example.com").search.substring(1);
	} catch (error) {}

	if (query) {
		return query;
	}
}

/**
 * Generates URL-encoded query string using input query data.
 *
 * It is intended to behave equivalent as PHP's `http_build_query`, configured
 * with encoding type PHP_QUERY_RFC3986 (spaces as `%20`).
 *
 * @example
 * ```js
 * const queryString = buildQueryString( {
 *    simple: 'is ok',
 *    arrays: [ 'are', 'fine', 'too' ],
 *    objects: {
 *       evenNested: {
 *          ok: 'yes',
 *       },
 *    },
 * } );
 * // "simple=is%20ok&arrays%5B0%5D=are&arrays%5B1%5D=fine&arrays%5B2%5D=too&objects%5BevenNested%5D%5Bok%5D=yes"
 * ```
 *
 * @param {Record<string,*>} data Data to encode.
 *
 * @return {string} Query string.
 */
function buildQueryString(data) {
	let string = "";
	const stack = Object.entries(data);
	let pair;

	while ((pair = stack.shift())) {
		let [key, value] = pair; // Support building deeply nested data, from array or object values.

		const hasNestedData =
			Array.isArray(value) || (value && value.constructor === Object);

		if (hasNestedData) {
			// Push array or object values onto the stack as composed of their
			// original key and nested index or key, retaining order by a
			// combination of Array#reverse and Array#unshift onto the stack.
			const valuePairs = Object.entries(value).reverse();

			for (const [member, memberValue] of valuePairs) {
				stack.unshift([`${key}[${member}]`, memberValue]);
			}
		} else if (value !== undefined) {
			// Null is treated as special case, equivalent to empty string.
			if (value === null) {
				value = "";
			}

			string += "&" + [key, value].map(encodeURIComponent).join("=");
		}
	} // Loop will concatenate with leading `&`, but it's only expected for all
	// but the first query parameter. This strips the leading `&`, while still
	// accounting for the case that the string may in-fact be empty.

	return string.substr(1);
}

/**
 * Internal dependencies
 */
/** @typedef {import('./get-query-arg').QueryArgParsed} QueryArgParsed */

/**
 * @typedef {Record<string,QueryArgParsed>} QueryArgs
 */

/**
 * Sets a value in object deeply by a given array of path segments. Mutates the
 * object reference.
 *
 * @param {Record<string,*>} object Object in which to assign.
 * @param {string[]}         path   Path segment at which to set value.
 * @param {*}                value  Value to set.
 */

function setPath(object, path, value) {
	const length = path.length;
	const lastIndex = length - 1;

	for (let i = 0; i < length; i++) {
		let key = path[i];

		if (!key && Array.isArray(object)) {
			// If key is empty string and next value is array, derive key from
			// the current length of the array.
			key = object.length.toString();
		} // If the next key in the path is numeric (or empty string), it will be
		// created as an array. Otherwise, it will be created as an object.

		const isNextKeyArrayIndex = !isNaN(Number(path[i + 1]));
		object[key] =
			i === lastIndex // If at end of path, assign the intended value.
				? value // Otherwise, advance to the next object in the path, creating
				: // it if it does not yet exist.
				  object[key] || (isNextKeyArrayIndex ? [] : {});

		if (Array.isArray(object[key]) && !isNextKeyArrayIndex) {
			// If we current key is non-numeric, but the next value is an
			// array, coerce the value to an object.
			object[key] = { ...object[key] };
		} // Update working reference object to the next in the path.

		object = object[key];
	}
}
/**
 * Returns an object of query arguments of the given URL. If the given URL is
 * invalid or has no querystring, an empty object is returned.
 *
 * @param {string} url URL.
 *
 * @example
 * ```js
 * const foo = getQueryArgs( 'https://wordpress.org?foo=bar&bar=baz' );
 * // { "foo": "bar", "bar": "baz" }
 * ```
 *
 * @return {QueryArgs} Query args object.
 */

function getQueryArgs(url) {
	return (
		(getQueryString(url) || "") // Normalize space encoding, accounting for PHP URL encoding
			// corresponding to `application/x-www-form-urlencoded`.
			//
			// See: https://tools.ietf.org/html/rfc1866#section-8.2.1
			.replace(/\+/g, "%20")
			.split("&")
			.reduce((accumulator, keyValue) => {
				const [key, value = ""] = keyValue
					.split("=") // Filtering avoids decoding as `undefined` for value, where
					// default is restored in destructuring assignment.
					.filter(Boolean)
					.map(decodeURIComponent);

				if (key) {
					const segments = key.replace(/\]/g, "").split("[");
					setPath(accumulator, segments, value);
				}

				return accumulator;
			}, {})
	);
}

/**
 * Internal dependencies
 */
/**
 * Appends arguments as querystring to the provided URL. If the URL already
 * includes query arguments, the arguments are merged with (and take precedent
 * over) the existing set.
 *
 * @param {string} [url=''] URL to which arguments should be appended. If omitted,
 *                          only the resulting querystring is returned.
 * @param {Object} [args]   Query arguments to apply to URL.
 *
 * @example
 * ```js
 * const newURL = addQueryArgs( 'https://google.com', { q: 'test' } ); // https://google.com/?q=test
 * ```
 *
 * @return {string} URL with arguments applied.
 */

function addQueryArgs(url = "", args) {
	// If no arguments are to be appended, return original URL.
	if (!args || !Object.keys(args).length) {
		return url;
	}

	let baseUrl = url; // Determine whether URL already had query arguments.

	const queryStringIndex = url.indexOf("?");

	if (queryStringIndex !== -1) {
		// Merge into existing query arguments.
		args = Object.assign(getQueryArgs(url), args); // Change working base URL to omit previous query arguments.

		baseUrl = baseUrl.substr(0, queryStringIndex);
	}

	return baseUrl + "?" + buildQueryString(args);
}

/**
 * Internal dependencies
 */
/**
 * @typedef {{[key: string]: QueryArgParsed}} QueryArgObject
 */

/**
 * @typedef {string|string[]|QueryArgObject} QueryArgParsed
 */

/**
 * Returns a single query argument of the url
 *
 * @param {string} url URL.
 * @param {string} arg Query arg name.
 *
 * @example
 * ```js
 * const foo = getQueryArg( 'https://wordpress.org?foo=bar&bar=baz', 'foo' ); // bar
 * ```
 *
 * @return {QueryArgParsed|void} Query arg value.
 */

function getQueryArg(url, arg) {
	return getQueryArgs(url)[arg];
}

/**
 * Internal dependencies
 */
/**
 * Determines whether the URL contains a given query arg.
 *
 * @param {string} url URL.
 * @param {string} arg Query arg name.
 *
 * @example
 * ```js
 * const hasBar = hasQueryArg( 'https://wordpress.org?foo=bar&bar=baz', 'bar' ); // true
 * ```
 *
 * @return {boolean} Whether or not the URL contains the query arg.
 */

function hasQueryArg(url, arg) {
	return getQueryArg(url, arg) !== undefined;
}

/**
 * WordPress dependencies
 */
/**
 * Apply query arguments to both URL and Path, whichever is present.
 *
 * @param {import('../types').APIFetchOptions} props
 * @param {Record<string, string | number>}    queryArgs
 * @return {import('../types').APIFetchOptions} The request with the modified query args
 */

const modifyQuery = ({ path, url, ...options }, queryArgs) => ({
	...options,
	url: url && addQueryArgs(url, queryArgs),
	path: path && addQueryArgs(path, queryArgs),
});
/**
 * Duplicates parsing functionality from apiFetch.
 *
 * @param {Response} response
 * @return {Promise<any>} Parsed response json.
 */

const parseResponse$1 = (response) =>
	response.json ? response.json() : Promise.reject(response);
/**
 * @param {string | null} linkHeader
 * @return {{ next?: string }} The parsed link header.
 */

const parseLinkHeader = (linkHeader) => {
	if (!linkHeader) {
		return {};
	}

	const match = linkHeader.match(/<([^>]+)>; rel="next"/);
	return match
		? {
				next: match[1],
		  }
		: {};
};
/**
 * @param {Response} response
 * @return {string | undefined} The next page URL.
 */

const getNextPageUrl = (response) => {
	const { next } = parseLinkHeader(response.headers.get("link"));
	return next;
};
/**
 * @param {import('../types').APIFetchOptions} options
 * @return {boolean} True if the request contains an unbounded query.
 */

const requestContainsUnboundedQuery = (options) => {
	const pathIsUnbounded =
		!!options.path && options.path.indexOf("per_page=-1") !== -1;
	const urlIsUnbounded =
		!!options.url && options.url.indexOf("per_page=-1") !== -1;
	return pathIsUnbounded || urlIsUnbounded;
};
/**
 * The REST API enforces an upper limit on the per_page option. To handle large
 * collections, apiFetch consumers can pass `per_page=-1`; this middleware will
 * then recursively assemble a full response array from all available pages.
 *
 * @type {import('../types').APIFetchMiddleware}
 */

const fetchAllMiddleware = async (options, next) => {
	if (options.parse === false) {
		// If a consumer has opted out of parsing, do not apply middleware.
		return next(options);
	}

	if (!requestContainsUnboundedQuery(options)) {
		// If neither url nor path is requesting all items, do not apply middleware.
		return next(options);
	} // Retrieve requested page of results.

	const response = await apiFetch({
		...modifyQuery(options, {
			per_page: 100,
		}),
		// Ensure headers are returned for page 1.
		parse: false,
	});
	const results = await parseResponse$1(response);

	if (!Array.isArray(results)) {
		// We have no reliable way of merging non-array results.
		return results;
	}

	let nextPage = getNextPageUrl(response);

	if (!nextPage) {
		// There are no further pages to request.
		return results;
	} // Iteratively fetch all remaining pages until no "next" header is found.

	let mergedResults =
		/** @type {any[]} */
		[].concat(results);

	while (nextPage) {
		const nextResponse = await apiFetch({
			...options,
			// Ensure the URL for the next page is used instead of any provided path.
			path: undefined,
			url: nextPage,
			// Ensure we still get headers so we can identify the next page.
			parse: false,
		});
		const nextResults = await parseResponse$1(nextResponse);
		mergedResults = mergedResults.concat(nextResults);
		nextPage = getNextPageUrl(nextResponse);
	}

	return mergedResults;
};

/**
 * Set of HTTP methods which are eligible to be overridden.
 *
 * @type {Set<string>}
 */
const OVERRIDE_METHODS = new Set(["PATCH", "PUT", "DELETE"]);
/**
 * Default request method.
 *
 * "A request has an associated method (a method). Unless stated otherwise it
 * is `GET`."
 *
 * @see  https://fetch.spec.whatwg.org/#requests
 *
 * @type {string}
 */

const DEFAULT_METHOD = "GET";
/**
 * API Fetch middleware which overrides the request method for HTTP v1
 * compatibility leveraging the REST API X-HTTP-Method-Override header.
 *
 * @type {import('../types').APIFetchMiddleware}
 */

const httpV1Middleware = (options, next) => {
	const { method = DEFAULT_METHOD } = options;

	if (OVERRIDE_METHODS.has(method.toUpperCase())) {
		options = {
			...options,
			headers: {
				...options.headers,
				"X-HTTP-Method-Override": method,
				"Content-Type": "application/json",
			},
			method: "POST",
		};
	}

	return next(options);
};

/**
 * WordPress dependencies
 */
/**
 * @type {import('../types').APIFetchMiddleware}
 */

const userLocaleMiddleware = (options, next) => {
	if (
		typeof options.url === "string" &&
		!hasQueryArg(options.url, "_locale")
	) {
		options.url = addQueryArgs(options.url, {
			_locale: "user",
		});
	}

	if (
		typeof options.path === "string" &&
		!hasQueryArg(options.path, "_locale")
	) {
		options.path = addQueryArgs(options.path, {
			_locale: "user",
		});
	}

	return next(options);
};

/**
 * WordPress dependencies
 */
/**
 * Parses the apiFetch response.
 *
 * @param {Response} response
 * @param {boolean}  shouldParseResponse
 *
 * @return {Promise<any> | null | Response} Parsed response.
 */

const parseResponse = (response, shouldParseResponse = true) => {
	if (shouldParseResponse) {
		if (response.status === 204) {
			return null;
		}

		return response.json ? response.json() : Promise.reject(response);
	}

	return response;
};
/**
 * Calls the `json` function on the Response, throwing an error if the response
 * doesn't have a json function or if parsing the json itself fails.
 *
 * @param {Response} response
 * @return {Promise<any>} Parsed response.
 */

const parseJsonAndNormalizeError = (response) => {
	const invalidJsonError = {
		code: "invalid_json",
		message: __$1("The response is not a valid JSON response."),
	};

	if (!response || !response.json) {
		throw invalidJsonError;
	}

	return response.json().catch(() => {
		throw invalidJsonError;
	});
};
/**
 * Parses the apiFetch response properly and normalize response errors.
 *
 * @param {Response} response
 * @param {boolean}  shouldParseResponse
 *
 * @return {Promise<any>} Parsed response.
 */

const parseResponseAndNormalizeError = (
	response,
	shouldParseResponse = true
) => {
	return Promise.resolve(parseResponse(response, shouldParseResponse)).catch(
		(res) => parseAndThrowError(res, shouldParseResponse)
	);
};
/**
 * Parses a response, throwing an error if parsing the response fails.
 *
 * @param {Response} response
 * @param {boolean}  shouldParseResponse
 * @return {Promise<any>} Parsed response.
 */

function parseAndThrowError(response, shouldParseResponse = true) {
	if (!shouldParseResponse) {
		throw response;
	}

	return parseJsonAndNormalizeError(response).then((error) => {
		const unknownError = {
			code: "unknown_error",
			message: __$1("An unknown error occurred."),
		};
		throw error || unknownError;
	});
}

/**
 * WordPress dependencies
 */
/**
 * Middleware handling media upload failures and retries.
 *
 * @type {import('../types').APIFetchMiddleware}
 */

const mediaUploadMiddleware = (options, next) => {
	const isMediaUploadRequest =
		(options.path && options.path.indexOf("/wp/v2/media") !== -1) ||
		(options.url && options.url.indexOf("/wp/v2/media") !== -1);

	if (!isMediaUploadRequest) {
		return next(options);
	}

	let retries = 0;
	const maxRetries = 5;
	/**
	 * @param {string} attachmentId
	 * @return {Promise<any>} Processed post response.
	 */

	const postProcess = (attachmentId) => {
		retries++;
		return next({
			path: `/wp/v2/media/${attachmentId}/post-process`,
			method: "POST",
			data: {
				action: "create-image-subsizes",
			},
			parse: false,
		}).catch(() => {
			if (retries < maxRetries) {
				return postProcess(attachmentId);
			}

			next({
				path: `/wp/v2/media/${attachmentId}?force=true`,
				method: "DELETE",
			});
			return Promise.reject();
		});
	};

	return next({ ...options, parse: false })
		.catch((response) => {
			const attachmentId = response.headers.get(
				"x-wp-upload-attachment-id"
			);

			if (
				response.status >= 500 &&
				response.status < 600 &&
				attachmentId
			) {
				return postProcess(attachmentId).catch(() => {
					if (options.parse !== false) {
						return Promise.reject({
							code: "post_process",
							message: __$1(
								"Media upload failed. If this is a photo or a large image, please scale it down and try again."
							),
						});
					}

					return Promise.reject(response);
				});
			}

			return parseAndThrowError(response, options.parse);
		})
		.then((response) =>
			parseResponseAndNormalizeError(response, options.parse)
		);
};

/**
 * WordPress dependencies
 */
/**
 * Default set of header values which should be sent with every request unless
 * explicitly provided through apiFetch options.
 *
 * @type {Record<string, string>}
 */

const DEFAULT_HEADERS = {
	// The backend uses the Accept header as a condition for considering an
	// incoming request as a REST request.
	//
	// See: https://core.trac.wordpress.org/ticket/44534
	Accept: "application/json, */*;q=0.1",
};
/**
 * Default set of fetch option values which should be sent with every request
 * unless explicitly provided through apiFetch options.
 *
 * @type {Object}
 */

const DEFAULT_OPTIONS = {
	credentials: "include",
};
/** @typedef {import('./types').APIFetchMiddleware} APIFetchMiddleware */

/** @typedef {import('./types').APIFetchOptions} APIFetchOptions */

/**
 * @type {import('./types').APIFetchMiddleware[]}
 */

const middlewares = [
	userLocaleMiddleware,
	namespaceAndEndpointMiddleware,
	httpV1Middleware,
	fetchAllMiddleware,
];
/**
 * Register a middleware
 *
 * @param {import('./types').APIFetchMiddleware} middleware
 */

function registerMiddleware(middleware) {
	middlewares.unshift(middleware);
}
/**
 * Checks the status of a response, throwing the Response as an error if
 * it is outside the 200 range.
 *
 * @param {Response} response
 * @return {Response} The response if the status is in the 200 range.
 */

const checkStatus = (response) => {
	if (response.status >= 200 && response.status < 300) {
		return response;
	}

	throw response;
};
/** @typedef {(options: import('./types').APIFetchOptions) => Promise<any>} FetchHandler*/

/**
 * @type {FetchHandler}
 */

const defaultFetchHandler = (nextOptions) => {
	const { url, path, data, parse = true, ...remainingOptions } = nextOptions;
	let { body, headers } = nextOptions; // Merge explicitly-provided headers with default values.

	headers = { ...DEFAULT_HEADERS, ...headers }; // The `data` property is a shorthand for sending a JSON body.

	if (data) {
		body = JSON.stringify(data);
		headers["Content-Type"] = "application/json";
	}

	const responsePromise = window.fetch(
		// fall back to explicitly passing `window.location` which is the behavior if `undefined` is passed
		url || path || window.location.href,
		{ ...DEFAULT_OPTIONS, ...remainingOptions, body, headers }
	);
	return responsePromise.then(
		(value) =>
			Promise.resolve(value)
				.then(checkStatus)
				.catch((response) => parseAndThrowError(response, parse))
				.then((response) =>
					parseResponseAndNormalizeError(response, parse)
				),
		(err) => {
			// Re-throw AbortError for the users to handle it themselves.
			if (err && err.name === "AbortError") {
				throw err;
			} // Otherwise, there is most likely no network connection.
			// Unfortunately the message might depend on the browser.

			throw {
				code: "fetch_error",
				message: __$1("You are probably offline."),
			};
		}
	);
};
/** @type {FetchHandler} */

let fetchHandler = defaultFetchHandler;
/**
 * Defines a custom fetch handler for making the requests that will override
 * the default one using window.fetch
 *
 * @param {FetchHandler} newFetchHandler The new fetch handler
 */

function setFetchHandler(newFetchHandler) {
	fetchHandler = newFetchHandler;
}
/**
 * @template T
 * @param {import('./types').APIFetchOptions} options
 * @return {Promise<T>} A promise representing the request processed via the registered middlewares.
 */

function apiFetch(options) {
	// creates a nested function chain that calls all middlewares and finally the `fetchHandler`,
	// converting `middlewares = [ m1, m2, m3 ]` into:
	// ```
	// opts1 => m1( opts1, opts2 => m2( opts2, opts3 => m3( opts3, fetchHandler ) ) );
	// ```
	const enhancedHandler = middlewares.reduceRight(
		(
			/** @type {FetchHandler} */
			next,
			middleware
		) => {
			return (workingOptions) => middleware(workingOptions, next);
		},
		fetchHandler
	);
	return enhancedHandler(options).catch((error) => {
		if (error.code !== "rest_cookie_invalid_nonce") {
			return Promise.reject(error);
		} // If the nonce is invalid, refresh it and try again.

		return window // @ts-ignore
			.fetch(apiFetch.nonceEndpoint)
			.then(checkStatus)
			.then((data) => data.text())
			.then((text) => {
				// @ts-ignore
				apiFetch.nonceMiddleware.nonce = text;
				return apiFetch(options);
			});
	});
}

apiFetch.use = registerMiddleware;
apiFetch.setFetchHandler = setFetchHandler;
apiFetch.createNonceMiddleware = createNonceMiddleware;
apiFetch.createPreloadingMiddleware = createPreloadingMiddleware;
apiFetch.createRootURLMiddleware = createRootURLMiddleware;
apiFetch.fetchAllMiddleware = fetchAllMiddleware;
apiFetch.mediaUploadMiddleware = mediaUploadMiddleware;

function ownKeys$a(object, enumerableOnly) {
	var keys = Object.keys(object);
	if (Object.getOwnPropertySymbols) {
		var symbols = Object.getOwnPropertySymbols(object);
		if (enumerableOnly) {
			symbols = symbols.filter(function (sym) {
				return Object.getOwnPropertyDescriptor(object, sym).enumerable;
			});
		}
		keys.push.apply(keys, symbols);
	}
	return keys;
}

function _objectSpread$9(target) {
	for (var i = 1; i < arguments.length; i++) {
		var source = arguments[i] != null ? arguments[i] : {};
		if (i % 2) {
			ownKeys$a(Object(source), true).forEach(function (key) {
				_defineProperty$1(target, key, source[key]);
			});
		} else if (Object.getOwnPropertyDescriptors) {
			Object.defineProperties(
				target,
				Object.getOwnPropertyDescriptors(source)
			);
		} else {
			ownKeys$a(Object(source)).forEach(function (key) {
				Object.defineProperty(
					target,
					key,
					Object.getOwnPropertyDescriptor(source, key)
				);
			});
		}
	}
	return target;
}

var SweetAlert$2 = function SweetAlert() {
	var _args$target,
		_args$type,
		_args$title,
		_args$text,
		_args$icon,
		_args$timer;

	var args =
		arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	return Swal.fire(
		_objectSpread$9(
			{
				target:
					(_args$target =
						args === null || args === void 0
							? void 0
							: args.target) !== null && _args$target !== void 0
						? _args$target
						: "#notificationx",
				type:
					(_args$type =
						args === null || args === void 0
							? void 0
							: args.type) !== null && _args$type !== void 0
						? _args$type
						: "success",
				html: args === null || args === void 0 ? void 0 : args.html,
				title:
					(_args$title =
						args === null || args === void 0
							? void 0
							: args.title) !== null && _args$title !== void 0
						? _args$title
						: "Title Goes Here: title",
				text:
					(_args$text =
						args === null || args === void 0
							? void 0
							: args.text) !== null && _args$text !== void 0
						? _args$text
						: "Test Goes Here: text",
				icon:
					(_args$icon =
						args === null || args === void 0
							? void 0
							: args.icon) !== null && _args$icon !== void 0
						? _args$icon
						: (args === null || args === void 0
								? void 0
								: args.type) || "success",
				timer:
					(_args$timer =
						args === null || args === void 0
							? void 0
							: args.timer) !== null && _args$timer !== void 0
						? _args$timer
						: null,
			},
			args
		)
	);
};
var ObjectFilter = function ObjectFilter(thisObj, func) {
	var returnArr =
		arguments.length > 2 && arguments[2] !== undefined
			? arguments[2]
			: false;

	if (!thisObj) {
		return false;
	}

	var newObj = {};
	var newArr = Object.keys(thisObj).filter(function (item) {
		return func(item);
	});

	if (returnArr) {
		return newArr;
	} else {
		newArr.map(function (item) {
			newObj[item] = thisObj[item];
		});
	}

	return newObj;
};
var isExists = function isExists(args, value) {
	var typeOfargs = _typeof$1(args);

	switch (true) {
		case typeOfargs === "object" && isArray(args):
			return args.includes(value);

		case typeOfargs === "object" && !isArray(args):
			return (
				(args === null || args === void 0 ? void 0 : args[value]) !==
				undefined
			);

		default:
			return args === value;
	}
};
var triggerDefaults = function triggerDefaults(defaults, checkType) {
	var value =
		arguments.length > 2 && arguments[2] !== undefined
			? arguments[2]
			: null;

	if (!isEmptyObj(defaults) && _typeof$1(defaults) === "object") {
		for (var obj in defaults) {
			if (obj === value) {
				var at = defaults[obj].indexOf("@"),
					colon = defaults[obj].indexOf(":");

				if (at === 0 && colon > 0) {
					var eligibleKey = defaults[obj].substr(1, colon - 1);
					var eligibleDataToSet = defaults[obj].substr(colon + 1);
					var eligibleDefaultData = getStoreData().getSavedFieldValue(
						eligibleKey,
						checkType
					);

					if (eligibleKey != "" && eligibleDataToSet != "") {
						setStoreData().setFieldValue({
							name: eligibleKey,
							value: _defineProperty$1(
								{},
								eligibleKey,
								eligibleDefaultData
									? eligibleDefaultData
									: eligibleDataToSet
							),
						});
					}
				}
			}
		}
	}
};
/**
 * API Fetch for WP
 * @param {object} args
 */

var getStoreData = function getStoreData() {
	return select("formbuilder");
};
var setStoreData = function setStoreData() {
	return dispatch("formbuilder");
};
var wpFetch = function wpFetch(params) {
	var args = _objectSpread$9(
		_objectSpread$9({}, params),
		{},
		{
			method: "POST",
		}
	);

	return apiFetch(args);
};
var processAjaxData = function processAjaxData(data) {
	var newData = {};
	Object.keys(data).map(function (item) {
		if (data[item].indexOf("@") === 0) {
			var eligibleKey = data[item].substr(1);

			if (eligibleKey != "") {
				var eligibleData = getStoreData().getFieldValue(eligibleKey);

				if (eligibleData) {
					newData[item] = eligibleData;
				} else {
					newData[item] = "undefined";
				}
			}
		} else {
			newData[item] = data[item];
		}
	});
	return newData;
};
function _extends$1() {
	for (
		var _len = arguments.length, rest = new Array(_len), _key = 0;
		_key < _len;
		_key++
	) {
		rest[_key] = arguments[_key];
	}

	var _extends =
		Object.assign ||
		function (target) {
			for (var i = 1; i < rest.length; i++) {
				var source = rest[i];

				for (var key in source) {
					if (Object.prototype.hasOwnProperty.call(source, key)) {
						target[key] = source[key];
					}
				}
			}

			return target;
		};

	return _extends.apply(this, rest);
} // export const timezoneString = ($offset) => {
//     let $hours     = Math.trunc($offset);
//     let $minutes   = ( $offset - $hours );
//     let $sign      = ( $offset < 0 ) ? '-' : '+';
//     let $abs_hour  = Math.abs( $hours );
//     let $abs_mins  = Math.abs( $minutes * 60 );
//     let $tz_offset = $sign + pad2($abs_hour) + ':' + pad2($abs_mins) );
//     return $tz_offset;
// }
// export function pad2(number) {
//     return (number < 10 ? '0' : '') + number
// }

var momentTimezone$1 = { exports: {} };

(function (module) {
	//! moment-timezone.js
	//! version : 0.5.33
	//! Copyright (c) JS Foundation and other contributors
	//! license : MIT
	//! github.com/moment/moment-timezone

	(function (root, factory) {
		/*global define*/
		if (module.exports) {
			module.exports = factory(momentLib); // Node
		} else {
			factory(root.moment); // Browser
		}
	})(commonjsGlobal, function (moment) {
		// Resolves es6 module loading issue
		if (moment.version === undefined && moment.default) {
			moment = moment.default;
		}

		// Do not load moment-timezone a second time.
		// if (moment.tz !== undefined) {
		// 	logError('Moment Timezone ' + moment.tz.version + ' was already loaded ' + (moment.tz.dataVersion ? 'with data from ' : 'without any data') + moment.tz.dataVersion);
		// 	return moment;
		// }

		var VERSION = "0.5.33",
			zones = {},
			links = {},
			countries = {},
			names = {},
			guesses = {},
			cachedGuess;

		if (!moment || typeof moment.version !== "string") {
			logError(
				"Moment Timezone requires Moment.js. See https://momentjs.com/timezone/docs/#/use-it/browser/"
			);
		}

		var momentVersion = moment.version.split("."),
			major = +momentVersion[0],
			minor = +momentVersion[1];

		// Moment.js version check
		if (major < 2 || (major === 2 && minor < 6)) {
			logError(
				"Moment Timezone requires Moment.js >= 2.6.0. You are using Moment.js " +
					moment.version +
					". See momentjs.com"
			);
		}

		/************************************
		Unpacking
	************************************/

		function charCodeToInt(charCode) {
			if (charCode > 96) {
				return charCode - 87;
			} else if (charCode > 64) {
				return charCode - 29;
			}
			return charCode - 48;
		}

		function unpackBase60(string) {
			var i = 0,
				parts = string.split("."),
				whole = parts[0],
				fractional = parts[1] || "",
				multiplier = 1,
				num,
				out = 0,
				sign = 1;

			// handle negative numbers
			if (string.charCodeAt(0) === 45) {
				i = 1;
				sign = -1;
			}

			// handle digits before the decimal
			for (i; i < whole.length; i++) {
				num = charCodeToInt(whole.charCodeAt(i));
				out = 60 * out + num;
			}

			// handle digits after the decimal
			for (i = 0; i < fractional.length; i++) {
				multiplier = multiplier / 60;
				num = charCodeToInt(fractional.charCodeAt(i));
				out += num * multiplier;
			}

			return out * sign;
		}

		function arrayToInt(array) {
			for (var i = 0; i < array.length; i++) {
				array[i] = unpackBase60(array[i]);
			}
		}

		function intToUntil(array, length) {
			for (var i = 0; i < length; i++) {
				array[i] = Math.round((array[i - 1] || 0) + array[i] * 60000); // minutes to milliseconds
			}

			array[length - 1] = Infinity;
		}

		function mapIndices(source, indices) {
			var out = [],
				i;

			for (i = 0; i < indices.length; i++) {
				out[i] = source[indices[i]];
			}

			return out;
		}

		function unpack(string) {
			var data = string.split("|"),
				offsets = data[2].split(" "),
				indices = data[3].split(""),
				untils = data[4].split(" ");

			arrayToInt(offsets);
			arrayToInt(indices);
			arrayToInt(untils);

			intToUntil(untils, indices.length);

			return {
				name: data[0],
				abbrs: mapIndices(data[1].split(" "), indices),
				offsets: mapIndices(offsets, indices),
				untils: untils,
				population: data[5] | 0,
			};
		}

		/************************************
		Zone object
	************************************/

		function Zone(packedString) {
			if (packedString) {
				this._set(unpack(packedString));
			}
		}

		Zone.prototype = {
			_set: function (unpacked) {
				this.name = unpacked.name;
				this.abbrs = unpacked.abbrs;
				this.untils = unpacked.untils;
				this.offsets = unpacked.offsets;
				this.population = unpacked.population;
			},

			_index: function (timestamp) {
				var target = +timestamp,
					untils = this.untils,
					i;

				for (i = 0; i < untils.length; i++) {
					if (target < untils[i]) {
						return i;
					}
				}
			},

			countries: function () {
				var zone_name = this.name;
				return Object.keys(countries).filter(function (country_code) {
					return (
						countries[country_code].zones.indexOf(zone_name) !== -1
					);
				});
			},

			parse: function (timestamp) {
				var target = +timestamp,
					offsets = this.offsets,
					untils = this.untils,
					max = untils.length - 1,
					offset,
					offsetNext,
					offsetPrev,
					i;

				for (i = 0; i < max; i++) {
					offset = offsets[i];
					offsetNext = offsets[i + 1];
					offsetPrev = offsets[i ? i - 1 : i];

					if (offset < offsetNext && tz.moveAmbiguousForward) {
						offset = offsetNext;
					} else if (offset > offsetPrev && tz.moveInvalidForward) {
						offset = offsetPrev;
					}

					if (target < untils[i] - offset * 60000) {
						return offsets[i];
					}
				}

				return offsets[max];
			},

			abbr: function (mom) {
				return this.abbrs[this._index(mom)];
			},

			offset: function (mom) {
				logError(
					"zone.offset has been deprecated in favor of zone.utcOffset"
				);
				return this.offsets[this._index(mom)];
			},

			utcOffset: function (mom) {
				return this.offsets[this._index(mom)];
			},
		};

		/************************************
		Country object
	************************************/

		function Country(country_name, zone_names) {
			this.name = country_name;
			this.zones = zone_names;
		}

		/************************************
		Current Timezone
	************************************/

		function OffsetAt(at) {
			var timeString = at.toTimeString();
			var abbr = timeString.match(/\([a-z ]+\)/i);
			if (abbr && abbr[0]) {
				// 17:56:31 GMT-0600 (CST)
				// 17:56:31 GMT-0600 (Central Standard Time)
				abbr = abbr[0].match(/[A-Z]/g);
				abbr = abbr ? abbr.join("") : undefined;
			} else {
				// 17:56:31 CST
				// 17:56:31 GMT+0800 (台北標準時間)
				abbr = timeString.match(/[A-Z]{3,5}/g);
				abbr = abbr ? abbr[0] : undefined;
			}

			if (abbr === "GMT") {
				abbr = undefined;
			}

			this.at = +at;
			this.abbr = abbr;
			this.offset = at.getTimezoneOffset();
		}

		function ZoneScore(zone) {
			this.zone = zone;
			this.offsetScore = 0;
			this.abbrScore = 0;
		}

		ZoneScore.prototype.scoreOffsetAt = function (offsetAt) {
			this.offsetScore += Math.abs(
				this.zone.utcOffset(offsetAt.at) - offsetAt.offset
			);
			if (
				this.zone.abbr(offsetAt.at).replace(/[^A-Z]/g, "") !==
				offsetAt.abbr
			) {
				this.abbrScore++;
			}
		};

		function findChange(low, high) {
			var mid, diff;

			while ((diff = (((high.at - low.at) / 12e4) | 0) * 6e4)) {
				mid = new OffsetAt(new Date(low.at + diff));
				if (mid.offset === low.offset) {
					low = mid;
				} else {
					high = mid;
				}
			}

			return low;
		}

		function userOffsets() {
			var startYear = new Date().getFullYear() - 2,
				last = new OffsetAt(new Date(startYear, 0, 1)),
				offsets = [last],
				change,
				next,
				i;

			for (i = 1; i < 48; i++) {
				next = new OffsetAt(new Date(startYear, i, 1));
				if (next.offset !== last.offset) {
					change = findChange(last, next);
					offsets.push(change);
					offsets.push(new OffsetAt(new Date(change.at + 6e4)));
				}
				last = next;
			}

			for (i = 0; i < 4; i++) {
				offsets.push(new OffsetAt(new Date(startYear + i, 0, 1)));
				offsets.push(new OffsetAt(new Date(startYear + i, 6, 1)));
			}

			return offsets;
		}

		function sortZoneScores(a, b) {
			if (a.offsetScore !== b.offsetScore) {
				return a.offsetScore - b.offsetScore;
			}
			if (a.abbrScore !== b.abbrScore) {
				return a.abbrScore - b.abbrScore;
			}
			if (a.zone.population !== b.zone.population) {
				return b.zone.population - a.zone.population;
			}
			return b.zone.name.localeCompare(a.zone.name);
		}

		function addToGuesses(name, offsets) {
			var i, offset;
			arrayToInt(offsets);
			for (i = 0; i < offsets.length; i++) {
				offset = offsets[i];
				guesses[offset] = guesses[offset] || {};
				guesses[offset][name] = true;
			}
		}

		function guessesForUserOffsets(offsets) {
			var offsetsLength = offsets.length,
				filteredGuesses = {},
				out = [],
				i,
				j,
				guessesOffset;

			for (i = 0; i < offsetsLength; i++) {
				guessesOffset = guesses[offsets[i].offset] || {};
				for (j in guessesOffset) {
					if (guessesOffset.hasOwnProperty(j)) {
						filteredGuesses[j] = true;
					}
				}
			}

			for (i in filteredGuesses) {
				if (filteredGuesses.hasOwnProperty(i)) {
					out.push(names[i]);
				}
			}

			return out;
		}

		function rebuildGuess() {
			// use Intl API when available and returning valid time zone
			try {
				var intlName = Intl.DateTimeFormat().resolvedOptions().timeZone;
				if (intlName && intlName.length > 3) {
					var name = names[normalizeName(intlName)];
					if (name) {
						return name;
					}
					logError(
						"Moment Timezone found " +
							intlName +
							" from the Intl api, but did not have that data loaded."
					);
				}
			} catch (e) {
				// Intl unavailable, fall back to manual guessing.
			}

			var offsets = userOffsets(),
				offsetsLength = offsets.length,
				guesses = guessesForUserOffsets(offsets),
				zoneScores = [],
				zoneScore,
				i,
				j;

			for (i = 0; i < guesses.length; i++) {
				zoneScore = new ZoneScore(getZone(guesses[i]), offsetsLength);
				for (j = 0; j < offsetsLength; j++) {
					zoneScore.scoreOffsetAt(offsets[j]);
				}
				zoneScores.push(zoneScore);
			}

			zoneScores.sort(sortZoneScores);

			return zoneScores.length > 0 ? zoneScores[0].zone.name : undefined;
		}

		function guess(ignoreCache) {
			if (!cachedGuess || ignoreCache) {
				cachedGuess = rebuildGuess();
			}
			return cachedGuess;
		}

		/************************************
		Global Methods
	************************************/

		function normalizeName(name) {
			return (name || "").toLowerCase().replace(/\//g, "_");
		}

		function addZone(packed) {
			var i, name, split, normalized;

			if (typeof packed === "string") {
				packed = [packed];
			}

			for (i = 0; i < packed.length; i++) {
				split = packed[i].split("|");
				name = split[0];
				normalized = normalizeName(name);
				zones[normalized] = packed[i];
				names[normalized] = name;
				addToGuesses(normalized, split[2].split(" "));
			}
		}

		function getZone(name, caller) {
			name = normalizeName(name);

			var zone = zones[name];
			var link;

			if (zone instanceof Zone) {
				return zone;
			}

			if (typeof zone === "string") {
				zone = new Zone(zone);
				zones[name] = zone;
				return zone;
			}

			// Pass getZone to prevent recursion more than 1 level deep
			if (
				links[name] &&
				caller !== getZone &&
				(link = getZone(links[name], getZone))
			) {
				zone = zones[name] = new Zone();
				zone._set(link);
				zone.name = names[name];
				return zone;
			}

			return null;
		}

		function getNames() {
			var i,
				out = [];

			for (i in names) {
				if (
					names.hasOwnProperty(i) &&
					(zones[i] || zones[links[i]]) &&
					names[i]
				) {
					out.push(names[i]);
				}
			}

			return out.sort();
		}

		function getCountryNames() {
			return Object.keys(countries);
		}

		function addLink(aliases) {
			var i, alias, normal0, normal1;

			if (typeof aliases === "string") {
				aliases = [aliases];
			}

			for (i = 0; i < aliases.length; i++) {
				alias = aliases[i].split("|");

				normal0 = normalizeName(alias[0]);
				normal1 = normalizeName(alias[1]);

				links[normal0] = normal1;
				names[normal0] = alias[0];

				links[normal1] = normal0;
				names[normal1] = alias[1];
			}
		}

		function addCountries(data) {
			var i, country_code, country_zones, split;
			if (!data || !data.length) return;
			for (i = 0; i < data.length; i++) {
				split = data[i].split("|");
				country_code = split[0].toUpperCase();
				country_zones = split[1].split(" ");
				countries[country_code] = new Country(
					country_code,
					country_zones
				);
			}
		}

		function getCountry(name) {
			name = name.toUpperCase();
			return countries[name] || null;
		}

		function zonesForCountry(country, with_offset) {
			country = getCountry(country);

			if (!country) return null;

			var zones = country.zones.sort();

			if (with_offset) {
				return zones.map(function (zone_name) {
					var zone = getZone(zone_name);
					return {
						name: zone_name,
						offset: zone.utcOffset(new Date()),
					};
				});
			}

			return zones;
		}

		function loadData(data) {
			addZone(data.zones);
			addLink(data.links);
			addCountries(data.countries);
			tz.dataVersion = data.version;
		}

		function zoneExists(name) {
			if (!zoneExists.didShowError) {
				zoneExists.didShowError = true;
				logError(
					"moment.tz.zoneExists('" +
						name +
						"') has been deprecated in favor of !moment.tz.zone('" +
						name +
						"')"
				);
			}
			return !!getZone(name);
		}

		function needsOffset(m) {
			var isUnixTimestamp = m._f === "X" || m._f === "x";
			return !!(m._a && m._tzm === undefined && !isUnixTimestamp);
		}

		function logError(message) {
			if (
				typeof console !== "undefined" &&
				typeof console.error === "function"
			) {
				console.error(message);
			}
		}

		/************************************
		moment.tz namespace
	************************************/

		function tz(input) {
			var args = Array.prototype.slice.call(arguments, 0, -1),
				name = arguments[arguments.length - 1],
				zone = getZone(name),
				out = moment.utc.apply(null, args);

			if (zone && !moment.isMoment(input) && needsOffset(out)) {
				out.add(zone.parse(out), "minutes");
			}

			out.tz(name);

			return out;
		}

		tz.version = VERSION;
		tz.dataVersion = "";
		tz._zones = zones;
		tz._links = links;
		tz._names = names;
		tz._countries = countries;
		tz.add = addZone;
		tz.link = addLink;
		tz.load = loadData;
		tz.zone = getZone;
		tz.zoneExists = zoneExists; // deprecated in 0.1.0
		tz.guess = guess;
		tz.names = getNames;
		tz.Zone = Zone;
		tz.unpack = unpack;
		tz.unpackBase60 = unpackBase60;
		tz.needsOffset = needsOffset;
		tz.moveInvalidForward = true;
		tz.moveAmbiguousForward = false;
		tz.countries = getCountryNames;
		tz.zonesForCountry = zonesForCountry;

		/************************************
		Interface with Moment.js
	************************************/

		var fn = moment.fn;

		moment.tz = tz;

		moment.defaultZone = null;

		moment.updateOffset = function (mom, keepTime) {
			var zone = moment.defaultZone,
				offset;

			if (mom._z === undefined) {
				if (zone && needsOffset(mom) && !mom._isUTC) {
					mom._d = moment.utc(mom._a)._d;
					mom.utc().add(zone.parse(mom), "minutes");
				}
				mom._z = zone;
			}
			if (mom._z) {
				offset = mom._z.utcOffset(mom);
				if (Math.abs(offset) < 16) {
					offset = offset / 60;
				}
				if (mom.utcOffset !== undefined) {
					var z = mom._z;
					mom.utcOffset(-offset, keepTime);
					mom._z = z;
				} else {
					mom.zone(offset, keepTime);
				}
			}
		};

		fn.tz = function (name, keepTime) {
			if (name) {
				if (typeof name !== "string") {
					throw new Error(
						"Time zone name must be a string, got " +
							name +
							" [" +
							typeof name +
							"]"
					);
				}
				this._z = getZone(name);
				if (this._z) {
					moment.updateOffset(this, keepTime);
				} else {
					logError(
						"Moment Timezone has no data for " +
							name +
							". See http://momentjs.com/timezone/docs/#/data-loading/."
					);
				}
				return this;
			}
			if (this._z) {
				return this._z.name;
			}
		};

		function abbrWrap(old) {
			return function () {
				if (this._z) {
					return this._z.abbr(this);
				}
				return old.call(this);
			};
		}

		function resetZoneWrap(old) {
			return function () {
				this._z = null;
				return old.apply(this, arguments);
			};
		}

		function resetZoneWrap2(old) {
			return function () {
				if (arguments.length > 0) this._z = null;
				return old.apply(this, arguments);
			};
		}

		fn.zoneName = abbrWrap(fn.zoneName);
		fn.zoneAbbr = abbrWrap(fn.zoneAbbr);
		fn.utc = resetZoneWrap(fn.utc);
		fn.local = resetZoneWrap(fn.local);
		fn.utcOffset = resetZoneWrap2(fn.utcOffset);

		moment.tz.setDefault = function (name) {
			if (major < 2 || (major === 2 && minor < 9)) {
				logError(
					"Moment Timezone setDefault() requires Moment.js >= 2.9.0. You are using Moment.js " +
						moment.version +
						"."
				);
			}
			moment.defaultZone = name ? getZone(name) : null;
			return moment;
		};

		// Cloning a moment should include the _z property.
		var momentProperties = moment.momentProperties;
		if (
			Object.prototype.toString.call(momentProperties) ===
			"[object Array]"
		) {
			// moment 2.8.1+
			momentProperties.push("_z");
			momentProperties.push("_a");
		} else if (momentProperties) {
			// moment 2.7.0
			momentProperties._z = null;
		}

		// INJECT DATA

		return moment;
	});
})(momentTimezone$1);

var momentTimezoneUtils = { exports: {} };

var momentTimezone = { exports: {} };

var version = "2021a";
var zones = [
	"Africa/Abidjan|LMT GMT|g.8 0|01|-2ldXH.Q|48e5",
	"Africa/Accra|LMT GMT +0020 +0030|.Q 0 -k -u|01212121212121212121212121212121212121212121212131313131313131|-2bRzX.8 9RbX.8 fdE 1BAk MLE 1Bck MLE 1Bck MLE 1Bck MLE 1BAk MLE 1Bck MLE 1Bck MLE 1Bck MLE 1BAk MLE 1Bck MLE 1Bck MLE 1Bck MLE 1BAk MLE 1Bck MLE 1Bck MLE 1Bck MLE 1BAk MLE 1Bck MLE 1Bck MLE 1Bck MLE Mok 1BXE M0k 1BXE fak 9vbu bjCu MLu 1Bcu MLu 1BAu MLu 1Bcu MLu 1Bcu MLu 1Bcu MLu|41e5",
	"Africa/Nairobi|LMT +0230 EAT +0245|-2r.g -2u -30 -2J|012132|-2ua2r.g N6nV.g 3Fbu h1cu dzbJ|47e5",
	"Africa/Algiers|PMT WET WEST CET CEST|-9.l 0 -10 -10 -20|0121212121212121343431312123431213|-2nco9.l cNb9.l HA0 19A0 1iM0 11c0 1oo0 Wo0 1rc0 QM0 1EM0 UM0 DA0 Imo0 rd0 De0 9Xz0 1fb0 1ap0 16K0 2yo0 mEp0 hwL0 jxA0 11A0 dDd0 17b0 11B0 1cN0 2Dy0 1cN0 1fB0 1cL0|26e5",
	"Africa/Lagos|LMT GMT +0030 WAT|-d.z 0 -u -10|01023|-2B40d.z 7iod.z dnXK.p dLzH.z|17e6",
	"Africa/Bissau|LMT -01 GMT|12.k 10 0|012|-2ldX0 2xoo0|39e4",
	"Africa/Maputo|LMT CAT|-2a.k -20|01|-2GJea.k|26e5",
	"Africa/Cairo|EET EEST|-20 -30|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-1bIO0 vb0 1ip0 11z0 1iN0 1nz0 12p0 1pz0 10N0 1pz0 16p0 1jz0 s3d0 Vz0 1oN0 11b0 1oO0 10N0 1pz0 10N0 1pb0 10N0 1pb0 10N0 1pb0 10N0 1pz0 10N0 1pb0 10N0 1pb0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1WL0 rd0 1Rz0 wp0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1qL0 Xd0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1ny0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 WL0 1qN0 Rb0 1wp0 On0 1zd0 Lz0 1EN0 Fb0 c10 8n0 8Nd0 gL0 e10 mn0|15e6",
	"Africa/Casablanca|LMT +00 +01|u.k 0 -10|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212|-2gMnt.E 130Lt.E rb0 Dd0 dVb0 b6p0 TX0 EoB0 LL0 gnd0 rz0 43d0 AL0 1Nd0 XX0 1Cp0 pz0 dEp0 4mn0 SyN0 AL0 1Nd0 wn0 1FB0 Db0 1zd0 Lz0 1Nf0 wM0 co0 go0 1o00 s00 dA0 vc0 11A0 A00 e00 y00 11A0 uM0 e00 Dc0 11A0 s00 e00 IM0 WM0 mo0 gM0 LA0 WM0 jA0 e00 28M0 e00 2600 gM0 2600 e00 2600 gM0 2600 gM0 2600 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0 2600 e00 2600 gM0 2600 gM0 2600 e00 2600 gM0 2600 e00 2600 gM0 2600 gM0 2600 e00 2600 gM0|32e5",
	"Africa/Ceuta|WET WEST CET CEST|0 -10 -10 -20|010101010101010101010232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-25KN0 11z0 drd0 18p0 3HX0 17d0 1fz0 1a10 1io0 1a00 1y7o0 LL0 gnd0 rz0 43d0 AL0 1Nd0 XX0 1Cp0 pz0 dEp0 4VB0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|85e3",
	"Africa/El_Aaiun|LMT -01 +00 +01|Q.M 10 0 -10|012323232323232323232323232323232323232323232323232323232323232323232323232323232323|-1rDz7.c 1GVA7.c 6L0 AL0 1Nd0 XX0 1Cp0 pz0 1cBB0 AL0 1Nd0 wn0 1FB0 Db0 1zd0 Lz0 1Nf0 wM0 co0 go0 1o00 s00 dA0 vc0 11A0 A00 e00 y00 11A0 uM0 e00 Dc0 11A0 s00 e00 IM0 WM0 mo0 gM0 LA0 WM0 jA0 e00 28M0 e00 2600 gM0 2600 e00 2600 gM0 2600 gM0 2600 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0 2600 e00 2600 gM0 2600 gM0 2600 e00 2600 gM0 2600 e00 2600 gM0 2600 gM0 2600 e00 2600 gM0|20e4",
	"Africa/Johannesburg|SAST SAST SAST|-1u -20 -30|012121|-2GJdu 1Ajdu 1cL0 1cN0 1cL0|84e5",
	"Africa/Juba|LMT CAT CAST EAT|-26.s -20 -30 -30|012121212121212121212121212121212131|-1yW26.s 1zK06.s 16L0 1iN0 17b0 1jd0 17b0 1ip0 17z0 1i10 17X0 1hB0 18n0 1hd0 19b0 1gp0 19z0 1iN0 17b0 1ip0 17z0 1i10 18n0 1hd0 18L0 1gN0 19b0 1gp0 19z0 1iN0 17z0 1i10 17X0 yGd0 PeX0|",
	"Africa/Khartoum|LMT CAT CAST EAT|-2a.8 -20 -30 -30|012121212121212121212121212121212131|-1yW2a.8 1zK0a.8 16L0 1iN0 17b0 1jd0 17b0 1ip0 17z0 1i10 17X0 1hB0 18n0 1hd0 19b0 1gp0 19z0 1iN0 17b0 1ip0 17z0 1i10 18n0 1hd0 18L0 1gN0 19b0 1gp0 19z0 1iN0 17z0 1i10 17X0 yGd0 HjL0|51e5",
	"Africa/Monrovia|MMT MMT GMT|H.8 I.u 0|012|-23Lzg.Q 28G01.m|11e5",
	"Africa/Ndjamena|LMT WAT WAST|-10.c -10 -20|0121|-2le10.c 2J3c0.c Wn0|13e5",
	"Africa/Sao_Tome|LMT GMT WAT|A.J 0 -10|0121|-2le00 4i6N0 2q00|",
	"Africa/Tripoli|LMT CET CEST EET|-Q.I -10 -20 -20|012121213121212121212121213123123|-21JcQ.I 1hnBQ.I vx0 4iP0 xx0 4eN0 Bb0 7ip0 U0n0 A10 1db0 1cN0 1db0 1dd0 1db0 1eN0 1bb0 1e10 1cL0 1c10 1db0 1dd0 1db0 1cN0 1db0 1q10 fAn0 1ep0 1db0 AKq0 TA0 1o00|11e5",
	"Africa/Tunis|PMT CET CEST|-9.l -10 -20|0121212121212121212121212121212121|-2nco9.l 18pa9.l 1qM0 DA0 3Tc0 11B0 1ze0 WM0 7z0 3d0 14L0 1cN0 1f90 1ar0 16J0 1gXB0 WM0 1rA0 11c0 nwo0 Ko0 1cM0 1cM0 1rA0 10M0 zuM0 10N0 1aN0 1qM0 WM0 1qM0 11A0 1o00|20e5",
	"Africa/Windhoek|+0130 SAST SAST CAT WAT|-1u -20 -30 -20 -10|01213434343434343434343434343434343434343434343434343|-2GJdu 1Ajdu 1cL0 1SqL0 9Io0 16P0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0|32e4",
	"America/Adak|NST NWT NPT BST BDT AHST HST HDT|b0 a0 a0 b0 a0 a0 a0 90|012034343434343434343434343434343456767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676|-17SX0 8wW0 iB0 Qlb0 52O0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 cm0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|326",
	"America/Anchorage|AST AWT APT AHST AHDT YST AKST AKDT|a0 90 90 a0 90 90 90 80|012034343434343434343434343434343456767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676|-17T00 8wX0 iA0 Qlb0 52O0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 cm0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|30e4",
	"America/Port_of_Spain|LMT AST|46.4 40|01|-2kNvR.U|43e3",
	"America/Araguaina|LMT -03 -02|3c.M 30 20|0121212121212121212121212121212121212121212121212121|-2glwL.c HdKL.c 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 dMN0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 ny10 Lz0|14e4",
	"America/Argentina/Buenos_Aires|CMT -04 -03 -02|4g.M 40 30 20|01212121212121212121212121212121212121212123232323232323232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wp0 Rb0 1wp0 TX0 A4p0 uL0 1qN0 WL0|",
	"America/Argentina/Catamarca|CMT -04 -03 -02|4g.M 40 30 20|01212121212121212121212121212121212121212123232323132321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wq0 Ra0 1wp0 TX0 rlB0 7B0 8zb0 uL0|",
	"America/Argentina/Cordoba|CMT -04 -03 -02|4g.M 40 30 20|01212121212121212121212121212121212121212123232323132323232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wq0 Ra0 1wp0 TX0 A4p0 uL0 1qN0 WL0|",
	"America/Argentina/Jujuy|CMT -04 -03 -02|4g.M 40 30 20|012121212121212121212121212121212121212121232323121323232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1ze0 TX0 1ld0 WK0 1wp0 TX0 A4p0 uL0|",
	"America/Argentina/La_Rioja|CMT -04 -03 -02|4g.M 40 30 20|012121212121212121212121212121212121212121232323231232321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Qn0 qO0 16n0 Rb0 1wp0 TX0 rlB0 7B0 8zb0 uL0|",
	"America/Argentina/Mendoza|CMT -04 -03 -02|4g.M 40 30 20|01212121212121212121212121212121212121212123232312121321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1u20 SL0 1vd0 Tb0 1wp0 TW0 ri10 Op0 7TX0 uL0|",
	"America/Argentina/Rio_Gallegos|CMT -04 -03 -02|4g.M 40 30 20|01212121212121212121212121212121212121212123232323232321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wp0 Rb0 1wp0 TX0 rlB0 7B0 8zb0 uL0|",
	"America/Argentina/Salta|CMT -04 -03 -02|4g.M 40 30 20|012121212121212121212121212121212121212121232323231323232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wq0 Ra0 1wp0 TX0 A4p0 uL0|",
	"America/Argentina/San_Juan|CMT -04 -03 -02|4g.M 40 30 20|012121212121212121212121212121212121212121232323231232321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Qn0 qO0 16n0 Rb0 1wp0 TX0 rld0 m10 8lb0 uL0|",
	"America/Argentina/San_Luis|CMT -04 -03 -02|4g.M 40 30 20|012121212121212121212121212121212121212121232323121212321212|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 XX0 1q20 SL0 AN0 vDb0 m10 8lb0 8L0 jd0 1qN0 WL0 1qN0|",
	"America/Argentina/Tucuman|CMT -04 -03 -02|4g.M 40 30 20|0121212121212121212121212121212121212121212323232313232123232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wq0 Ra0 1wp0 TX0 rlB0 4N0 8BX0 uL0 1qN0 WL0|",
	"America/Argentina/Ushuaia|CMT -04 -03 -02|4g.M 40 30 20|01212121212121212121212121212121212121212123232323232321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wp0 Rb0 1wp0 TX0 rkN0 8p0 8zb0 uL0|",
	"America/Curacao|LMT -0430 AST|4z.L 4u 40|012|-2kV7o.d 28KLS.d|15e4",
	"America/Asuncion|AMT -04 -03|3O.E 40 30|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212|-1x589.k 1DKM9.k 3CL0 3Dd0 10L0 1pB0 10n0 1pB0 10n0 1pB0 1cL0 1dd0 1db0 1dd0 1cL0 1dd0 1cL0 1dd0 1cL0 1dd0 1db0 1dd0 1cL0 1dd0 1cL0 1dd0 1cL0 1dd0 1db0 1dd0 1cL0 1lB0 14n0 1dd0 1cL0 1fd0 WL0 1rd0 1aL0 1dB0 Xz0 1qp0 Xb0 1qN0 10L0 1rB0 TX0 1tB0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 1cL0 WN0 1qL0 11B0 1nX0 1ip0 WL0 1qN0 WL0 1qN0 WL0 1tB0 TX0 1tB0 TX0 1tB0 19X0 1a10 1fz0 1a10 1fz0 1cN0 17b0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1ip0 17b0 1ip0 17b0 1ip0|28e5",
	"America/Atikokan|CST CDT CWT CPT EST|60 50 50 50 50|0101234|-25TQ0 1in0 Rnb0 3je0 8x30 iw0|28e2",
	"America/Bahia_Banderas|LMT MST CST PST MDT CDT|71 70 60 80 60 50|0121212131414141414141414141414141414152525252525252525252525252525252525252525252525252525252|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 otX0 gmN0 P2N0 13Vd0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nW0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|84e3",
	"America/Bahia|LMT -03 -02|2y.4 30 20|01212121212121212121212121212121212121212121212121212121212121|-2glxp.U HdLp.U 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 1EN0 Lz0 1C10 IL0 1HB0 Db0 1HB0 On0 1zd0 On0 1zd0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 l5B0 Rb0|27e5",
	"America/Barbados|LMT BMT AST ADT|3W.t 3W.t 40 30|01232323232|-1Q0I1.v jsM0 1ODC1.v IL0 1ip0 17b0 1ip0 17b0 1ld0 13b0|28e4",
	"America/Belem|LMT -03 -02|3d.U 30 20|012121212121212121212121212121|-2glwK.4 HdKK.4 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0|20e5",
	"America/Belize|LMT CST -0530 CWT CPT CDT|5Q.M 60 5u 50 50 50|012121212121212121212121212121212121212121212121213412121212121212121212121212121212121212121215151|-2kBu7.c fPA7.c Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Rbu Rcu 7Bt0 Ni0 4nd0 Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1zcu Onu e9Au qn0 lxB0 mn0|57e3",
	"America/Blanc-Sablon|AST ADT AWT APT|40 30 30 30|010230|-25TS0 1in0 UGp0 8x50 iu0|11e2",
	"America/Boa_Vista|LMT -04 -03|42.E 40 30|0121212121212121212121212121212121|-2glvV.k HdKV.k 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 smp0 WL0 1tB0 2L0|62e2",
	"America/Bogota|BMT -05 -04|4U.g 50 40|0121|-2eb73.I 38yo3.I 2en0|90e5",
	"America/Boise|PST PDT MST MWT MPT MDT|80 70 70 60 60 60|0101023425252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252|-261q0 1nX0 11B0 1nX0 8C10 JCL0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 Dd0 1Kn0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|21e4",
	"America/Cambridge_Bay|-00 MST MWT MPT MDDT MDT CST CDT EST|0 70 60 60 50 60 60 50 50|0123141515151515151515151515151515151515151515678651515151515151515151515151515151515151515151515151515151515151515151515151|-21Jc0 RO90 8x20 ix0 LCL0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11A0 1nX0 2K0 WQ0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|15e2",
	"America/Campo_Grande|LMT -04 -03|3C.s 40 30|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2glwl.w HdLl.w 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 1EN0 Lz0 1C10 IL0 1HB0 Db0 1HB0 On0 1zd0 On0 1zd0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 1C10 Lz0 1Ip0 HX0 1zd0 On0 1HB0 IL0 1wp0 On0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 Rb0 1zd0 Lz0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 On0 1zd0 On0 1HB0 FX0|77e4",
	"America/Cancun|LMT CST EST EDT CDT|5L.4 60 50 40 50|0123232341414141414141414141414141414141412|-1UQG0 2q2o0 yLB0 1lb0 14p0 1lb0 14p0 Lz0 xB0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 Dd0|63e4",
	"America/Caracas|CMT -0430 -04|4r.E 4u 40|01212|-2kV7w.k 28KM2.k 1IwOu kqo0|29e5",
	"America/Cayenne|LMT -04 -03|3t.k 40 30|012|-2mrwu.E 2gWou.E|58e3",
	"America/Panama|CMT EST|5j.A 50|01|-2uduE.o|15e5",
	"America/Chicago|CST CDT EST CWT CPT|60 50 50 50 50|01010101010101010101010101010101010102010101010103401010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261s0 1nX0 11B0 1nX0 1wp0 TX0 WN0 1qL0 1cN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 11B0 1Hz0 14p0 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 RB0 8x30 iw0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|92e5",
	"America/Chihuahua|LMT MST CST CDT MDT|74.k 70 60 50 60|0121212323241414141414141414141414141414141414141414141414141414141414141414141414141414141|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 2zQN0 1lb0 14p0 1lb0 14q0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|81e4",
	"America/Costa_Rica|SJMT CST CDT|5A.d 60 50|0121212121|-1Xd6n.L 2lu0n.L Db0 1Kp0 Db0 pRB0 15b0 1kp0 mL0|12e5",
	"America/Creston|MST PST|70 80|010|-29DR0 43B0|53e2",
	"America/Cuiaba|LMT -04 -03|3I.k 40 30|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2glwf.E HdLf.E 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 1EN0 Lz0 1C10 IL0 1HB0 Db0 1HB0 On0 1zd0 On0 1zd0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 4a10 HX0 1zd0 On0 1HB0 IL0 1wp0 On0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 Rb0 1zd0 Lz0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 On0 1zd0 On0 1HB0 FX0|54e4",
	"America/Danmarkshavn|LMT -03 -02 GMT|1e.E 30 20 0|01212121212121212121212121212121213|-2a5WJ.k 2z5fJ.k 19U0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 DC0|8",
	"America/Dawson_Creek|PST PDT PWT PPT MST|80 70 70 70 70|0102301010101010101010101010101010101010101010101010101014|-25TO0 1in0 UGp0 8x10 iy0 3NB0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 ML0|12e3",
	"America/Dawson|YST YDT YWT YPT YDDT PST PDT MST|90 80 80 80 70 80 70 70|010102304056565656565656565656565656565656565656565656565656565656565656565656565656565656567|-25TN0 1in0 1o10 13V0 Ser0 8x00 iz0 LCL0 1fA0 jrA0 fNd0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1z90|13e2",
	"America/Denver|MST MDT MWT MPT|70 60 60 60|01010101023010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261r0 1nX0 11B0 1nX0 11B0 1qL0 WN0 mn0 Ord0 8x20 ix0 LCN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|26e5",
	"America/Detroit|LMT CST EST EWT EPT EDT|5w.b 60 50 40 40 40|0123425252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252|-2Cgir.N peqr.N 156L0 8x40 iv0 6fd0 11z0 JxX1 SMX 1cN0 1cL0 aW10 1cL0 s10 1Vz0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|37e5",
	"America/Edmonton|LMT MST MDT MWT MPT|7x.Q 70 60 60 60|0121212121212134121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2yd4q.8 shdq.8 1in0 17d0 hz0 2dB0 1fz0 1a10 11z0 1qN0 WL0 1qN0 11z0 IGN0 8x20 ix0 3NB0 11z0 XQp0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|10e5",
	"America/Eirunepe|LMT -05 -04|4D.s 50 40|0121212121212121212121212121212121|-2glvk.w HdLk.w 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 dPB0 On0 yTd0 d5X0|31e3",
	"America/El_Salvador|LMT CST CDT|5U.M 60 50|012121|-1XiG3.c 2Fvc3.c WL0 1qN0 WL0|11e5",
	"America/Tijuana|LMT MST PST PDT PWT PPT|7M.4 70 80 70 70 70|012123245232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-1UQE0 4PX0 8mM0 8lc0 SN0 1cL0 pHB0 83r0 zI0 5O10 1Rz0 cOO0 11A0 1o00 11A0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 BUp0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 U10 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|20e5",
	"America/Fort_Nelson|PST PDT PWT PPT MST|80 70 70 70 70|01023010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010104|-25TO0 1in0 UGp0 8x10 iy0 3NB0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0|39e2",
	"America/Fort_Wayne|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|010101023010101010101010101040454545454545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 QI10 Db0 RB0 8x30 iw0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 5Tz0 1o10 qLb0 1cL0 1cN0 1cL0 1qhd0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
	"America/Fortaleza|LMT -03 -02|2y 30 20|0121212121212121212121212121212121212121|-2glxq HdLq 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 nsp0 WL0 1tB0 5z0 2mN0 On0|34e5",
	"America/Glace_Bay|LMT AST ADT AWT APT|3X.M 40 30 30 30|012134121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2IsI0.c CwO0.c 1in0 UGp0 8x50 iu0 iq10 11z0 Jg10 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|19e3",
	"America/Godthab|LMT -03 -02|3q.U 30 20|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2a5Ux.4 2z5dx.4 19U0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|17e3",
	"America/Goose_Bay|NST NDT NST NDT NWT NPT AST ADT ADDT|3u.Q 2u.Q 3u 2u 2u 2u 40 30 20|010232323232323245232323232323232323232323232323232323232326767676767676767676767676767676767676767676768676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676|-25TSt.8 1in0 DXb0 2HbX.8 WL0 1qN0 WL0 1qN0 WL0 1tB0 TX0 1tB0 WL0 1qN0 WL0 1qN0 7UHu itu 1tB0 WL0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1tB0 WL0 1ld0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 S10 g0u 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14n1 1lb0 14p0 1nW0 11C0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zcX Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|76e2",
	"America/Grand_Turk|KMT EST EDT AST|57.a 50 40 40|0121212121212121212121212121212121212121212121212121212121212121212121212132121212121212121212121212121212121212121|-2l1uQ.O 2HHBQ.O 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 7jA0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|37e2",
	"America/Guatemala|LMT CST CDT|62.4 60 50|0121212121|-24KhV.U 2efXV.U An0 mtd0 Nz0 ifB0 17b0 zDB0 11z0|13e5",
	"America/Guayaquil|QMT -05 -04|5e 50 40|0121|-1yVSK 2uILK rz0|27e5",
	"America/Guyana|LMT -0345 -03 -04|3Q.E 3J 30 40|0123|-2dvU7.k 2r6LQ.k Bxbf|80e4",
	"America/Halifax|LMT AST ADT AWT APT|4e.o 40 30 30 30|0121212121212121212121212121212121212121212121212134121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2IsHJ.A xzzJ.A 1db0 3I30 1in0 3HX0 IL0 1E10 ML0 1yN0 Pb0 1Bd0 Mn0 1Bd0 Rz0 1w10 Xb0 1w10 LX0 1w10 Xb0 1w10 Lz0 1C10 Jz0 1E10 OL0 1yN0 Un0 1qp0 Xb0 1qp0 11X0 1w10 Lz0 1HB0 LX0 1C10 FX0 1w10 Xb0 1qp0 Xb0 1BB0 LX0 1td0 Xb0 1qp0 Xb0 Rf0 8x50 iu0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 3Qp0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 3Qp0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 6i10 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|39e4",
	"America/Havana|HMT CST CDT|5t.A 50 40|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1Meuu.o 72zu.o ML0 sld0 An0 1Nd0 Db0 1Nd0 An0 6Ep0 An0 1Nd0 An0 JDd0 Mn0 1Ap0 On0 1fd0 11X0 1qN0 WL0 1wp0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 14n0 1ld0 14L0 1kN0 15b0 1kp0 1cL0 1cN0 1fz0 1a10 1fz0 1fB0 11z0 14p0 1nX0 11B0 1nX0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 14n0 1ld0 14n0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 1a10 1in0 1a10 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 17c0 1o00 11A0 1qM0 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 11A0 6i00 Rc0 1wo0 U00 1tA0 Rc0 1wo0 U00 1wo0 U00 1zc0 U00 1qM0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0|21e5",
	"America/Hermosillo|LMT MST CST PST MDT|7n.Q 70 60 80 60|0121212131414141|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 otX0 gmN0 P2N0 13Vd0 1lb0 14p0 1lb0 14p0 1lb0|64e4",
	"America/Indiana/Knox|CST CDT CWT CPT EST|60 50 50 50 50|0101023010101010101010101010101010101040101010101010101010101010101010101010101010101010141010101010101010101010101010101010101010101010101010101010101010|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 3NB0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 11z0 1o10 11z0 1o10 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 3Cn0 8wp0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 z8o0 1o00 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
	"America/Indiana/Marengo|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|0101023010101010101010104545454545414545454545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 dyN0 11z0 6fd0 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 jrz0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1VA0 LA0 1BX0 1e6p0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
	"America/Indiana/Petersburg|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|01010230101010101010101010104010101010101010101010141014545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 njX0 WN0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 3Fb0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 19co0 1o00 Rd0 1zb0 Oo0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
	"America/Indiana/Tell_City|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|01010230101010101010101010401054541010101010101010101010101010101010101010101010101010101010101010|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 njX0 WN0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 8wn0 1cN0 1cL0 1cN0 1cK0 1cN0 1cL0 1qhd0 1o00 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
	"America/Indiana/Vevay|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|010102304545454545454545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 kPB0 Awn0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1lnd0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
	"America/Indiana/Vincennes|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|01010230101010101010101010101010454541014545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 1o10 11z0 g0p0 11z0 1o10 11z0 1qL0 WN0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 WL0 1qN0 1cL0 1cN0 1cL0 1cN0 caL0 1cL0 1cN0 1cL0 1qhd0 1o00 Rd0 1zb0 Oo0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
	"America/Indiana/Winamac|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|01010230101010101010101010101010101010454541054545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 jrz0 1cL0 1cN0 1cL0 1qhd0 1o00 Rd0 1za0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
	"America/Inuvik|-00 PST PDDT MST MDT|0 80 60 70 60|0121343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343|-FnA0 tWU0 1fA0 wPe0 2pz0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|35e2",
	"America/Iqaluit|-00 EWT EPT EST EDDT EDT CST CDT|0 40 40 50 30 40 60 50|01234353535353535353535353535353535353535353567353535353535353535353535353535353535353535353535353535353535353535353535353|-16K00 7nX0 iv0 LCL0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11C0 1nX0 11A0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|67e2",
	"America/Jamaica|KMT EST EDT|57.a 50 40|0121212121212121212121|-2l1uQ.O 2uM1Q.O 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0|94e4",
	"America/Juneau|PST PWT PPT PDT YDT YST AKST AKDT|80 70 70 70 80 90 90 80|01203030303030303030303030403030356767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676|-17T20 8x10 iy0 Vo10 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cM0 1cM0 1cL0 1cN0 1fz0 1a10 1fz0 co0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|33e3",
	"America/Kentucky/Louisville|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|0101010102301010101010101010101010101454545454545414545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 3Fd0 Nb0 LPd0 11z0 RB0 8x30 iw0 1nX1 e0X 9vd0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 xz0 gso0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1VA0 LA0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
	"America/Kentucky/Monticello|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|0101023010101010101010101010101010101010101010101010101010101010101010101454545454545454545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 SWp0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11A0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
	"America/La_Paz|CMT BST -04|4w.A 3w.A 40|012|-1x37r.o 13b0|19e5",
	"America/Lima|LMT -05 -04|58.A 50 40|0121212121212121|-2tyGP.o 1bDzP.o zX0 1aN0 1cL0 1cN0 1cL0 1PrB0 zX0 1O10 zX0 6Gp0 zX0 98p0 zX0|11e6",
	"America/Los_Angeles|PST PDT PWT PPT|80 70 70 70|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261q0 1nX0 11B0 1nX0 SgN0 8x10 iy0 5Wp1 1VaX 3dA0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1a00 1fA0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|15e6",
	"America/Maceio|LMT -03 -02|2m.Q 30 20|012121212121212121212121212121212121212121|-2glxB.8 HdLB.8 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 dMN0 Lz0 8Q10 WL0 1tB0 5z0 2mN0 On0|93e4",
	"America/Managua|MMT CST EST CDT|5J.c 60 50 50|0121313121213131|-1quie.M 1yAMe.M 4mn0 9Up0 Dz0 1K10 Dz0 s3F0 1KH0 DB0 9In0 k8p0 19X0 1o30 11y0|22e5",
	"America/Manaus|LMT -04 -03|40.4 40 30|01212121212121212121212121212121|-2glvX.U HdKX.U 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 dPB0 On0|19e5",
	"America/Martinique|FFMT AST ADT|44.k 40 30|0121|-2mPTT.E 2LPbT.E 19X0|39e4",
	"America/Matamoros|LMT CST CDT|6E 60 50|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1UQG0 2FjC0 1nX0 i6p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 U10 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|45e4",
	"America/Mazatlan|LMT MST CST PST MDT|75.E 70 60 80 60|0121212131414141414141414141414141414141414141414141414141414141414141414141414141414141414141|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 otX0 gmN0 P2N0 13Vd0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|44e4",
	"America/Menominee|CST CDT CWT CPT EST|60 50 50 50 50|01010230101041010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 1o10 11z0 LCN0 1fz0 6410 9Jb0 1cM0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|85e2",
	"America/Merida|LMT CST EST CDT|5W.s 60 50 50|0121313131313131313131313131313131313131313131313131313131313131313131313131313131313131|-1UQG0 2q2o0 2hz0 wu30 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|11e5",
	"America/Metlakatla|PST PWT PPT PDT AKST AKDT|80 70 70 70 90 80|01203030303030303030303030303030304545450454545454545454545454545454545454545454|-17T20 8x10 iy0 Vo10 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1hU10 Rd0 1zb0 Op0 1zb0 Op0 1zb0 uM0 jB0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|14e2",
	"America/Mexico_City|LMT MST CST CDT CWT|6A.A 70 60 50 50|012121232324232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 gEn0 TX0 3xd0 Jb0 6zB0 SL0 e5d0 17b0 1Pff0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|20e6",
	"America/Miquelon|LMT AST -03 -02|3I.E 40 30 20|012323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-2mKkf.k 2LTAf.k gQ10 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|61e2",
	"America/Moncton|EST AST ADT AWT APT|50 40 30 30 30|012121212121212121212134121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2IsH0 CwN0 1in0 zAo0 An0 1Nd0 An0 1Nd0 An0 1Nd0 An0 1Nd0 An0 1Nd0 An0 1K10 Lz0 1zB0 NX0 1u10 Wn0 S20 8x50 iu0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 3Cp0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14n1 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 ReX 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|64e3",
	"America/Monterrey|LMT CST CDT|6F.g 60 50|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1UQG0 2FjC0 1nX0 i6p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|41e5",
	"America/Montevideo|LMT MMT -04 -03 -0330 -0230 -02 -0130|3I.P 3I.P 40 30 3u 2u 20 1u|012343434343434343434343435353636353636375363636363636363636363636363636363636363636363|-2tRUf.9 sVc0 8jcf.9 1db0 1dcu 1cLu 1dcu 1cLu ircu 11zu 1o0u 11zu 1o0u 11zu 1o0u 11zu 1qMu WLu 1qMu WLu 1fAu 1cLu 1o0u 11zu NAu 3jXu zXu Dq0u 19Xu pcu jz0 cm10 19X0 6tB0 1fbu 3o0u jX0 4vB0 xz0 3Cp0 mmu 1a10 IMu Db0 4c10 uL0 1Nd0 An0 1SN0 uL0 mp0 28L0 iPB0 un0 1SN0 xz0 1zd0 Lz0 1zd0 Rb0 1zd0 On0 1wp0 Rb0 s8p0 1fB0 1ip0 11z0 1ld0 14n0 1o10 11z0 1o10 11z0 1o10 14n0 1ld0 14n0 1ld0 14n0 1o10 11z0 1o10 11z0 1o10 11z0|17e5",
	"America/Toronto|EST EDT EWT EPT|50 40 40 40|01010101010101010101010101010101010101010101012301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-25TR0 1in0 11Wu 1nzu 1fD0 WJ0 1wr0 Nb0 1Ap0 On0 1zd0 On0 1wp0 TX0 1tB0 TX0 1tB0 TX0 1tB0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 4kM0 8x40 iv0 1o10 11z0 1nX0 11z0 1o10 11z0 1o10 1qL0 11D0 1nX0 11B0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|65e5",
	"America/Nassau|LMT EST EWT EPT EDT|59.u 50 40 40 40|01212314141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141|-2kNuO.u 1drbO.u 6tX0 cp0 1hS0 pF0 J630 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|24e4",
	"America/New_York|EST EDT EWT EPT|50 40 40 40|01010101010101010101010101010101010101010101010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261t0 1nX0 11B0 1nX0 11B0 1qL0 1a10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 RB0 8x40 iv0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|21e6",
	"America/Nipigon|EST EDT EWT EPT|50 40 40 40|010123010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-25TR0 1in0 Rnb0 3je0 8x40 iv0 19yN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|16e2",
	"America/Nome|NST NWT NPT BST BDT YST AKST AKDT|b0 a0 a0 b0 a0 90 90 80|012034343434343434343434343434343456767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676|-17SX0 8wW0 iB0 Qlb0 52O0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 cl0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|38e2",
	"America/Noronha|LMT -02 -01|29.E 20 10|0121212121212121212121212121212121212121|-2glxO.k HdKO.k 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 nsp0 WL0 1tB0 2L0 2pB0 On0|30e2",
	"America/North_Dakota/Beulah|MST MDT MWT MPT CST CDT|70 60 60 60 60 50|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101014545454545454545454545454545454545454545454545454545454|-261r0 1nX0 11B0 1nX0 SgN0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Oo0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
	"America/North_Dakota/Center|MST MDT MWT MPT CST CDT|70 60 60 60 60 50|010102301010101010101010101010101010101010101010101010101014545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-261r0 1nX0 11B0 1nX0 SgN0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14o0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
	"America/North_Dakota/New_Salem|MST MDT MWT MPT CST CDT|70 60 60 60 60 50|010102301010101010101010101010101010101010101010101010101010101010101010101010101454545454545454545454545454545454545454545454545454545454545454545454|-261r0 1nX0 11B0 1nX0 SgN0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14o0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
	"America/Ojinaga|LMT MST CST CDT MDT|6V.E 70 60 50 60|0121212323241414141414141414141414141414141414141414141414141414141414141414141414141414141|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 2zQN0 1lb0 14p0 1lb0 14q0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 U10 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|23e3",
	"America/Pangnirtung|-00 AST AWT APT ADDT ADT EDT EST CST CDT|0 40 30 30 20 30 40 50 60 50|012314151515151515151515151515151515167676767689767676767676767676767676767676767676767676767676767676767676767676767676767|-1XiM0 PnG0 8x50 iu0 LCL0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1o00 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11C0 1nX0 11A0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|14e2",
	"America/Paramaribo|LMT PMT PMT -0330 -03|3E.E 3E.Q 3E.A 3u 30|01234|-2nDUj.k Wqo0.c qanX.I 1yVXN.o|24e4",
	"America/Phoenix|MST MDT MWT|70 60 60|01010202010|-261r0 1nX0 11B0 1nX0 SgN0 4Al1 Ap0 1db0 SWqX 1cL0|42e5",
	"America/Port-au-Prince|PPMT EST EDT|4N 50 40|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-28RHb 2FnMb 19X0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14q0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 i6n0 1nX0 11B0 1nX0 d430 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 3iN0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|23e5",
	"America/Rio_Branco|LMT -05 -04|4v.c 50 40|01212121212121212121212121212121|-2glvs.M HdLs.M 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 NBd0 d5X0|31e4",
	"America/Porto_Velho|LMT -04 -03|4f.A 40 30|012121212121212121212121212121|-2glvI.o HdKI.o 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0|37e4",
	"America/Puerto_Rico|AST AWT APT|40 30 30|0120|-17lU0 7XT0 iu0|24e5",
	"America/Punta_Arenas|SMT -05 -04 -03|4G.K 50 40 30|0102021212121212121232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323|-2q2jh.e fJAh.e 5knG.K 1Vzh.e jRAG.K 1pbh.e 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 nHX0 op0 blz0 ko0 Qeo0 WL0 1zd0 On0 1ip0 11z0 1o10 11z0 1qN0 WL0 1ld0 14n0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 1cL0 1cN0 11z0 1o10 11z0 1qN0 WL0 1fB0 19X0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1ip0 1fz0 1fB0 11z0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1o10 19X0 1fB0 1nX0 G10 1EL0 Op0 1zb0 Rd0 1wn0 Rd0 46n0 Ap0|",
	"America/Rainy_River|CST CDT CWT CPT|60 50 50 50|010123010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-25TQ0 1in0 Rnb0 3je0 8x30 iw0 19yN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|842",
	"America/Rankin_Inlet|-00 CST CDDT CDT EST|0 60 40 50 50|012131313131313131313131313131313131313131313431313131313131313131313131313131313131313131313131313131313131313131313131|-vDc0 keu0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|26e2",
	"America/Recife|LMT -03 -02|2j.A 30 20|0121212121212121212121212121212121212121|-2glxE.o HdLE.o 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 nsp0 WL0 1tB0 2L0 2pB0 On0|33e5",
	"America/Regina|LMT MST MDT MWT MPT CST|6W.A 70 60 60 60 60|012121212121212121212121341212121212121212121212121215|-2AD51.o uHe1.o 1in0 s2L0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 66N0 1cL0 1cN0 19X0 1fB0 1cL0 1fB0 1cL0 1cN0 1cL0 M30 8x20 ix0 1ip0 1cL0 1ip0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 3NB0 1cL0 1cN0|19e4",
	"America/Resolute|-00 CST CDDT CDT EST|0 60 40 50 50|012131313131313131313131313131313131313131313431313131313431313131313131313131313131313131313131313131313131313131313131|-SnA0 GWS0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|229",
	"America/Santarem|LMT -04 -03|3C.M 40 30|0121212121212121212121212121212|-2glwl.c HdLl.c 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 NBd0|21e4",
	"America/Santiago|SMT -05 -04 -03|4G.K 50 40 30|010202121212121212321232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323|-2q2jh.e fJAh.e 5knG.K 1Vzh.e jRAG.K 1pbh.e 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 nHX0 op0 9Bz0 jb0 1oN0 ko0 Qeo0 WL0 1zd0 On0 1ip0 11z0 1o10 11z0 1qN0 WL0 1ld0 14n0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 1cL0 1cN0 11z0 1o10 11z0 1qN0 WL0 1fB0 19X0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1ip0 1fz0 1fB0 11z0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1o10 19X0 1fB0 1nX0 G10 1EL0 Op0 1zb0 Rd0 1wn0 Rd0 46n0 Ap0 1Nb0 Ap0 1Nb0 Ap0 1zb0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0|62e5",
	"America/Santo_Domingo|SDMT EST EDT -0430 AST|4E 50 40 4u 40|01213131313131414|-1ttjk 1lJMk Mn0 6sp0 Lbu 1Cou yLu 1RAu wLu 1QMu xzu 1Q0u xXu 1PAu 13jB0 e00|29e5",
	"America/Sao_Paulo|LMT -03 -02|36.s 30 20|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2glwR.w HdKR.w 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 pTd0 PX0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 1EN0 Lz0 1C10 IL0 1HB0 Db0 1HB0 On0 1zd0 On0 1zd0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 1C10 Lz0 1Ip0 HX0 1zd0 On0 1HB0 IL0 1wp0 On0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 Rb0 1zd0 Lz0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 On0 1zd0 On0 1HB0 FX0|20e6",
	"America/Scoresbysund|LMT -02 -01 +00|1r.Q 20 10 0|0121323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-2a5Ww.8 2z5ew.8 1a00 1cK0 1cL0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|452",
	"America/Sitka|PST PWT PPT PDT YST AKST AKDT|80 70 70 70 90 90 80|01203030303030303030303030303030345656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565|-17T20 8x10 iy0 Vo10 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 co0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|90e2",
	"America/St_Johns|NST NDT NST NDT NWT NPT NDDT|3u.Q 2u.Q 3u 2u 2u 2u 1u|01010101010101010101010101010101010102323232323232324523232323232323232323232323232323232323232323232323232323232323232323232323232323232326232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-28oit.8 14L0 1nB0 1in0 1gm0 Dz0 1JB0 1cL0 1cN0 1cL0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1fB0 1cL0 1cN0 1cL0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1fB0 1cL0 1fB0 19X0 1fB0 19X0 10O0 eKX.8 19X0 1iq0 WL0 1qN0 WL0 1qN0 WL0 1tB0 TX0 1tB0 WL0 1qN0 WL0 1qN0 7UHu itu 1tB0 WL0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1tB0 WL0 1ld0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14n1 1lb0 14p0 1nW0 11C0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zcX Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|11e4",
	"America/Swift_Current|LMT MST MDT MWT MPT CST|7b.k 70 60 60 60 60|012134121212121212121215|-2AD4M.E uHdM.E 1in0 UGp0 8x20 ix0 1o10 17b0 1ip0 11z0 1o10 11z0 1o10 11z0 isN0 1cL0 3Cp0 1cL0 1cN0 11z0 1qN0 WL0 pMp0|16e3",
	"America/Tegucigalpa|LMT CST CDT|5M.Q 60 50|01212121|-1WGGb.8 2ETcb.8 WL0 1qN0 WL0 GRd0 AL0|11e5",
	"America/Thule|LMT AST ADT|4z.8 40 30|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2a5To.Q 31NBo.Q 1cL0 1cN0 1cL0 1fB0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|656",
	"America/Thunder_Bay|CST EST EWT EPT EDT|60 50 40 40 40|0123141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141|-2q5S0 1iaN0 8x40 iv0 XNB0 1cL0 1cN0 1fz0 1cN0 1cL0 3Cp0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|11e4",
	"America/Vancouver|PST PDT PWT PPT|80 70 70 70|0102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-25TO0 1in0 UGp0 8x10 iy0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|23e5",
	"America/Whitehorse|YST YDT YWT YPT YDDT PST PDT MST|90 80 80 80 70 80 70 70|010102304056565656565656565656565656565656565656565656565656565656565656565656565656565656567|-25TN0 1in0 1o10 13V0 Ser0 8x00 iz0 LCL0 1fA0 3NA0 vrd0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1z90|23e3",
	"America/Winnipeg|CST CDT CWT CPT|60 50 50 50|010101023010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aIi0 WL0 3ND0 1in0 Jap0 Rb0 aCN0 8x30 iw0 1tB0 11z0 1ip0 11z0 1o10 11z0 1o10 11z0 1rd0 10L0 1op0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 1cL0 1cN0 11z0 6i10 WL0 6i10 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1a00 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1a00 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|66e4",
	"America/Yakutat|YST YWT YPT YDT AKST AKDT|90 80 80 80 90 80|01203030303030303030303030303030304545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-17T10 8x00 iz0 Vo10 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 cn0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|642",
	"America/Yellowknife|-00 MST MWT MPT MDDT MDT|0 70 60 60 50 60|012314151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151|-1pdA0 hix0 8x20 ix0 LCL0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|19e3",
	"Antarctica/Casey|-00 +08 +11|0 -80 -b0|0121212121212|-2q00 1DjS0 T90 40P0 KL0 blz0 3m10 1o30 14k0 1kr0 12l0 1o01|10",
	"Antarctica/Davis|-00 +07 +05|0 -70 -50|01012121|-vyo0 iXt0 alj0 1D7v0 VB0 3Wn0 KN0|70",
	"Antarctica/DumontDUrville|-00 +10|0 -a0|0101|-U0o0 cfq0 bFm0|80",
	"Antarctica/Macquarie|AEST AEDT -00|-a0 -b0 0|010201010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-29E80 1a00 4SK0 1ayy0 Lvs0 1cM0 1o00 Rc0 1wo0 Rc0 1wo0 U00 1wo0 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 11A0 1qM0 WM0 1qM0 Oo0 1zc0 Oo0 1zc0 Oo0 1wo0 WM0 1tA0 WM0 1tA0 U00 1tA0 U00 1tA0 11A0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 11A0 1o00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1cM0 1cM0 3Co0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|1",
	"Antarctica/Mawson|-00 +06 +05|0 -60 -50|012|-CEo0 2fyk0|60",
	"Pacific/Auckland|NZMT NZST NZST NZDT|-bu -cu -c0 -d0|01020202020202020202020202023232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323|-1GCVu Lz0 1tB0 11zu 1o0u 11zu 1o0u 11zu 1o0u 14nu 1lcu 14nu 1lcu 1lbu 11Au 1nXu 11Au 1nXu 11Au 1nXu 11Au 1nXu 11Au 1qLu WMu 1qLu 11Au 1n1bu IM0 1C00 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1qM0 14o0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1io0 17c0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1io0 17c0 1io0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00|14e5",
	"Antarctica/Palmer|-00 -03 -04 -02|0 30 40 20|0121212121213121212121212121212121212121212121212121212121212121212121212121212121|-cao0 nD0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 jsN0 14N0 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 1cL0 1cN0 11z0 1o10 11z0 1qN0 WL0 1fB0 19X0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1ip0 1fz0 1fB0 11z0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1o10 19X0 1fB0 1nX0 G10 1EL0 Op0 1zb0 Rd0 1wn0 Rd0 46n0 Ap0|40",
	"Antarctica/Rothera|-00 -03|0 30|01|gOo0|130",
	"Antarctica/Syowa|-00 +03|0 -30|01|-vs00|20",
	"Antarctica/Troll|-00 +00 +02|0 0 -20|01212121212121212121212121212121212121212121212121212121212121212121|1puo0 hd0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|40",
	"Antarctica/Vostok|-00 +06|0 -60|01|-tjA0|25",
	"Europe/Oslo|CET CEST|-10 -20|010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2awM0 Qm0 W6o0 5pf0 WM0 1fA0 1cM0 1cM0 1cM0 1cM0 wJc0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1qM0 WM0 zpc0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|62e4",
	"Asia/Riyadh|LMT +03|-36.Q -30|01|-TvD6.Q|57e5",
	"Asia/Almaty|LMT +05 +06 +07|-57.M -50 -60 -70|012323232323232323232321232323232323232323232323232|-1Pc57.M eUo7.M 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0|15e5",
	"Asia/Amman|LMT EET EEST|-2n.I -20 -30|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1yW2n.I 1HiMn.I KL0 1oN0 11b0 1oN0 11b0 1pd0 1dz0 1cp0 11b0 1op0 11b0 fO10 1db0 1e10 1cL0 1cN0 1cL0 1cN0 1fz0 1pd0 10n0 1ld0 14n0 1hB0 15b0 1ip0 19X0 1cN0 1cL0 1cN0 17b0 1ld0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1So0 y00 1fc0 1dc0 1co0 1dc0 1cM0 1cM0 1cM0 1o00 11A0 1lc0 17c0 1cM0 1cM0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 4bX0 Dd0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0|25e5",
	"Asia/Anadyr|LMT +12 +13 +14 +11|-bN.U -c0 -d0 -e0 -b0|01232121212121212121214121212121212121212121212121212121212141|-1PcbN.U eUnN.U 23CL0 1db0 2q10 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 2sp0 WM0|13e3",
	"Asia/Aqtau|LMT +04 +05 +06|-3l.4 -40 -50 -60|012323232323232323232123232312121212121212121212|-1Pc3l.4 eUnl.4 24PX0 2pX0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0|15e4",
	"Asia/Aqtobe|LMT +04 +05 +06|-3M.E -40 -50 -60|0123232323232323232321232323232323232323232323232|-1Pc3M.E eUnM.E 23CL0 3Db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0|27e4",
	"Asia/Ashgabat|LMT +04 +05 +06|-3R.w -40 -50 -60|0123232323232323232323212|-1Pc3R.w eUnR.w 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0|41e4",
	"Asia/Atyrau|LMT +03 +05 +06 +04|-3r.I -30 -50 -60 -40|01232323232323232323242323232323232324242424242|-1Pc3r.I eUor.I 24PW0 2pX0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 2sp0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0|",
	"Asia/Baghdad|BMT +03 +04|-2V.A -30 -40|012121212121212121212121212121212121212121212121212121|-26BeV.A 2ACnV.A 11b0 1cp0 1dz0 1dd0 1db0 1cN0 1cp0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1de0 1dc0 1dc0 1dc0 1cM0 1dc0 1cM0 1dc0 1cM0 1dc0 1dc0 1dc0 1cM0 1dc0 1cM0 1dc0 1cM0 1dc0 1dc0 1dc0 1cM0 1dc0 1cM0 1dc0 1cM0 1dc0 1dc0 1dc0 1cM0 1dc0 1cM0 1dc0 1cM0 1dc0|66e5",
	"Asia/Qatar|LMT +04 +03|-3q.8 -40 -30|012|-21Jfq.8 27BXq.8|96e4",
	"Asia/Baku|LMT +03 +04 +05|-3j.o -30 -40 -50|01232323232323232323232123232323232323232323232323232323232323232|-1Pc3j.o 1jUoj.o WCL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 1cM0 9Je0 1o00 11z0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00|27e5",
	"Asia/Bangkok|BMT +07|-6G.4 -70|01|-218SG.4|15e6",
	"Asia/Barnaul|LMT +06 +07 +08|-5z -60 -70 -80|0123232323232323232323212323232321212121212121212121212121212121212|-21S5z pCnz 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 p90 LE0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3rd0|",
	"Asia/Beirut|EET EEST|-20 -30|010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-21aq0 1on0 1410 1db0 19B0 1in0 1ip0 WL0 1lQp0 11b0 1oN0 11b0 1oN0 11b0 1pd0 11b0 1oN0 11b0 q6N0 En0 1oN0 11b0 1oN0 11b0 1oN0 11b0 1pd0 11b0 1oN0 11b0 1op0 11b0 dA10 17b0 1iN0 17b0 1iN0 17b0 1iN0 17b0 1vB0 SL0 1mp0 13z0 1iN0 17b0 1iN0 17b0 1jd0 12n0 1a10 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0|22e5",
	"Asia/Bishkek|LMT +05 +06 +07|-4W.o -50 -60 -70|012323232323232323232321212121212121212121212121212|-1Pc4W.o eUnW.o 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2e00 1tX0 17b0 1ip0 17b0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1cPu 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0|87e4",
	"Asia/Brunei|LMT +0730 +08|-7D.E -7u -80|012|-1KITD.E gDc9.E|42e4",
	"Asia/Kolkata|MMT IST +0630|-5l.a -5u -6u|012121|-2zOtl.a 1r2LP.a 1un0 HB0 7zX0|15e6",
	"Asia/Chita|LMT +08 +09 +10|-7x.Q -80 -90 -a0|012323232323232323232321232323232323232323232323232323232323232312|-21Q7x.Q pAnx.Q 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3re0|33e4",
	"Asia/Choibalsan|LMT +07 +08 +10 +09|-7C -70 -80 -a0 -90|0123434343434343434343434343434343434343434343424242|-2APHC 2UkoC cKn0 1da0 1dd0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 6hD0 11z0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 3Db0 h1f0 1cJ0 1cP0 1cJ0|38e3",
	"Asia/Shanghai|CST CDT|-80 -90|01010101010101010101010101010|-23uw0 18n0 OjB0 Rz0 11d0 1wL0 A10 8HX0 1G10 Tz0 1ip0 1jX0 1cN0 11b0 1oN0 aL0 1tU30 Rb0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0|23e6",
	"Asia/Colombo|MMT +0530 +06 +0630|-5j.w -5u -60 -6u|01231321|-2zOtj.w 1rFbN.w 1zzu 7Apu 23dz0 11zu n3cu|22e5",
	"Asia/Dhaka|HMT +0630 +0530 +06 +07|-5R.k -6u -5u -60 -70|0121343|-18LFR.k 1unn.k HB0 m6n0 2kxbu 1i00|16e6",
	"Asia/Damascus|LMT EET EEST|-2p.c -20 -30|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-21Jep.c Hep.c 17b0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1xRB0 11X0 1oN0 10L0 1pB0 11b0 1oN0 10L0 1mp0 13X0 1oN0 11b0 1pd0 11b0 1oN0 11b0 1oN0 11b0 1oN0 11b0 1pd0 11b0 1oN0 11b0 1oN0 11b0 1oN0 11b0 1pd0 11b0 1oN0 Nb0 1AN0 Nb0 bcp0 19X0 1gp0 19X0 3ld0 1xX0 Vd0 1Bz0 Sp0 1vX0 10p0 1dz0 1cN0 1cL0 1db0 1db0 1g10 1an0 1ap0 1db0 1fd0 1db0 1cN0 1db0 1dd0 1db0 1cp0 1dz0 1c10 1dX0 1cN0 1db0 1dd0 1db0 1cN0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1db0 1cN0 1db0 1cN0 19z0 1fB0 1qL0 11B0 1on0 Wp0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0|26e5",
	"Asia/Dili|LMT +08 +09|-8m.k -80 -90|01212|-2le8m.k 1dnXm.k 1nfA0 Xld0|19e4",
	"Asia/Dubai|LMT +04|-3F.c -40|01|-21JfF.c|39e5",
	"Asia/Dushanbe|LMT +05 +06 +07|-4z.c -50 -60 -70|012323232323232323232321|-1Pc4z.c eUnz.c 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2hB0|76e4",
	"Asia/Famagusta|LMT EET EEST +03|-2f.M -20 -30 -30|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212312121212121212121212121212121212121212121|-1Vc2f.M 2a3cf.M 1cL0 1qp0 Xz0 19B0 19X0 1fB0 1db0 1cp0 1cL0 1fB0 19X0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1o30 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 15U0 2Ks0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|",
	"Asia/Gaza|EET EEST IST IDT|-20 -30 -20 -30|010101010101010101010101010101010123232323232323232323232323232320101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-1c2o0 MM0 iM0 4JA0 10o0 1pA0 10M0 1pA0 16o0 1jA0 16o0 1jA0 pBa0 Vz0 1oN0 11b0 1oO0 10N0 1pz0 10N0 1pb0 10N0 1pb0 10N0 1pb0 10N0 1pz0 10N0 1pb0 10N0 1pb0 11d0 1oL0 dW0 hfB0 Db0 1fB0 Rb0 bXB0 gM0 8Q00 IM0 1wo0 TX0 1HB0 IL0 1s10 10n0 1o10 WL0 1zd0 On0 1ld0 11z0 1o10 14n0 1o10 14n0 1nd0 12n0 1nd0 Xz0 1q10 12n0 M10 C00 17c0 1io0 17c0 1io0 17c0 1o00 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 17c0 1io0 18N0 1bz0 19z0 1gp0 1610 1iL0 11z0 1o10 14o0 1lA1 SKX 1xd1 MKX 1AN0 1a00 1fA0 1cL0 1cN0 1nX0 1210 1nA0 1210 1qL0 WN0 1qL0 WN0 1qL0 11c0 1on0 11B0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|18e5",
	"Asia/Hebron|EET EEST IST IDT|-20 -30 -20 -30|01010101010101010101010101010101012323232323232323232323232323232010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-1c2o0 MM0 iM0 4JA0 10o0 1pA0 10M0 1pA0 16o0 1jA0 16o0 1jA0 pBa0 Vz0 1oN0 11b0 1oO0 10N0 1pz0 10N0 1pb0 10N0 1pb0 10N0 1pb0 10N0 1pz0 10N0 1pb0 10N0 1pb0 11d0 1oL0 dW0 hfB0 Db0 1fB0 Rb0 bXB0 gM0 8Q00 IM0 1wo0 TX0 1HB0 IL0 1s10 10n0 1o10 WL0 1zd0 On0 1ld0 11z0 1o10 14n0 1o10 14n0 1nd0 12n0 1nd0 Xz0 1q10 12n0 M10 C00 17c0 1io0 17c0 1io0 17c0 1o00 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 17c0 1io0 18N0 1bz0 19z0 1gp0 1610 1iL0 12L0 1mN0 14o0 1lc0 Tb0 1xd1 MKX bB0 cn0 1cN0 1a00 1fA0 1cL0 1cN0 1nX0 1210 1nA0 1210 1qL0 WN0 1qL0 WN0 1qL0 11c0 1on0 11B0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|25e4",
	"Asia/Ho_Chi_Minh|LMT PLMT +07 +08 +09|-76.E -76.u -70 -80 -90|0123423232|-2yC76.E bK00.a 1h7b6.u 5lz0 18o0 3Oq0 k5b0 aW00 BAM0|90e5",
	"Asia/Hong_Kong|LMT HKT HKST HKWT JST|-7A.G -80 -90 -8u -90|0123412121212121212121212121212121212121212121212121212121212121212121|-2CFH0 1taO0 Hc0 xUu 9tBu 11z0 1tDu Rc0 1wo0 11A0 1cM0 11A0 1o00 11A0 1o00 11A0 1o00 14o0 1o00 11A0 1nX0 U10 1tz0 U10 1wn0 Rd0 1wn0 U10 1tz0 U10 1tz0 U10 1tz0 U10 1wn0 Rd0 1wn0 Rd0 1wn0 U10 1tz0 U10 1tz0 17d0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 s10 1Vz0 1cN0 1cL0 1cN0 1cL0 6fd0 14n0|73e5",
	"Asia/Hovd|LMT +06 +07 +08|-66.A -60 -70 -80|012323232323232323232323232323232323232323232323232|-2APG6.A 2Uko6.A cKn0 1db0 1dd0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 6hD0 11z0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 kEp0 1cJ0 1cP0 1cJ0|81e3",
	"Asia/Irkutsk|IMT +07 +08 +09|-6V.5 -70 -80 -90|01232323232323232323232123232323232323232323232323232323232323232|-21zGV.5 pjXV.5 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|60e4",
	"Europe/Istanbul|IMT EET EEST +03 +04|-1U.U -20 -30 -30 -40|0121212121212121212121212121212121212121212121234312121212121212121212121212121212121212121212121212121212121212123|-2ogNU.U dzzU.U 11b0 8tB0 1on0 1410 1db0 19B0 1in0 3Rd0 Un0 1oN0 11b0 zSN0 CL0 mp0 1Vz0 1gN0 8yn0 1yp0 ML0 1kp0 17b0 1ip0 17b0 1fB0 19X0 1ip0 19X0 1ip0 17b0 qdB0 38L0 1jd0 Tz0 l6O0 11A0 WN0 1qL0 TB0 1tX0 U10 1tz0 11B0 1in0 17d0 z90 cne0 pb0 2Cp0 1800 14o0 1dc0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1a00 1fA0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WO0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 Xc0 1qo0 WM0 1qM0 11A0 1o00 1200 1nA0 11A0 1tA0 U00 15w0|13e6",
	"Asia/Jakarta|BMT +0720 +0730 +09 +08 WIB|-77.c -7k -7u -90 -80 -70|01232425|-1Q0Tk luM0 mPzO 8vWu 6kpu 4PXu xhcu|31e6",
	"Asia/Jayapura|LMT +09 +0930 WIT|-9m.M -90 -9u -90|0123|-1uu9m.M sMMm.M L4nu|26e4",
	"Asia/Jerusalem|JMT IST IDT IDDT|-2k.E -20 -30 -40|01212121212121321212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-26Bek.E SyOk.E MM0 iM0 4JA0 10o0 1pA0 10M0 1pA0 16o0 1jA0 16o0 1jA0 3LA0 Eo0 oo0 1co0 1dA0 16o0 10M0 1jc0 1tA0 14o0 1cM0 1a00 11A0 1Nc0 Ao0 1Nc0 Ao0 1Ko0 LA0 1o00 WM0 EQK0 Db0 1fB0 Rb0 bXB0 gM0 8Q00 IM0 1wo0 TX0 1HB0 IL0 1s10 10n0 1o10 WL0 1zd0 On0 1ld0 11z0 1o10 14n0 1o10 14n0 1nd0 12n0 1nd0 Xz0 1q10 12n0 1hB0 1dX0 1ep0 1aL0 1eN0 17X0 1nf0 11z0 1tB0 19W0 1e10 17b0 1ep0 1gL0 18N0 1fz0 1eN0 17b0 1gq0 1gn0 19d0 1dz0 1c10 17X0 1hB0 1gn0 19d0 1dz0 1c10 17X0 1kp0 1dz0 1c10 1aL0 1eN0 1oL0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0|81e4",
	"Asia/Kabul|+04 +0430|-40 -4u|01|-10Qs0|46e5",
	"Asia/Kamchatka|LMT +11 +12 +13|-ay.A -b0 -c0 -d0|012323232323232323232321232323232323232323232323232323232323212|-1SLKy.A ivXy.A 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 2sp0 WM0|18e4",
	"Asia/Karachi|LMT +0530 +0630 +05 PKT PKST|-4s.c -5u -6u -50 -50 -60|012134545454|-2xoss.c 1qOKW.c 7zX0 eup0 LqMu 1fy00 1cL0 dK10 11b0 1610 1jX0|24e6",
	"Asia/Urumqi|LMT +06|-5O.k -60|01|-1GgtO.k|32e5",
	"Asia/Kathmandu|LMT +0530 +0545|-5F.g -5u -5J|012|-21JhF.g 2EGMb.g|12e5",
	"Asia/Khandyga|LMT +08 +09 +10 +11|-92.d -80 -90 -a0 -b0|0123232323232323232323212323232323232323232323232343434343434343432|-21Q92.d pAp2.d 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 qK0 yN0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 17V0 7zD0|66e2",
	"Asia/Krasnoyarsk|LMT +06 +07 +08|-6b.q -60 -70 -80|01232323232323232323232123232323232323232323232323232323232323232|-21Hib.q prAb.q 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|10e5",
	"Asia/Kuala_Lumpur|SMT +07 +0720 +0730 +09 +08|-6T.p -70 -7k -7u -90 -80|0123435|-2Bg6T.p 17anT.p l5XE 17bO 8Fyu 1so1u|71e5",
	"Asia/Kuching|LMT +0730 +08 +0820 +09|-7l.k -7u -80 -8k -90|0123232323232323242|-1KITl.k gDbP.k 6ynu AnE 1O0k AnE 1NAk AnE 1NAk AnE 1NAk AnE 1O0k AnE 1NAk AnE pAk 8Fz0|13e4",
	"Asia/Macau|LMT CST +09 +10 CDT|-7y.a -80 -90 -a0 -90|012323214141414141414141414141414141414141414141414141414141414141414141|-2CFHy.a 1uqKy.a PX0 1kn0 15B0 11b0 4Qq0 1oM0 11c0 1ko0 1u00 11A0 1cM0 11c0 1o00 11A0 1o00 11A0 1oo0 1400 1o00 11A0 1o00 U00 1tA0 U00 1wo0 Rc0 1wru U10 1tz0 U10 1tz0 U10 1tz0 U10 1wn0 Rd0 1wn0 Rd0 1wn0 U10 1tz0 U10 1tz0 17d0 1cK0 1cO0 1cK0 1cO0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 s10 1Vz0 1cN0 1cL0 1cN0 1cL0 6fd0 14n0|57e4",
	"Asia/Magadan|LMT +10 +11 +12|-a3.c -a0 -b0 -c0|012323232323232323232321232323232323232323232323232323232323232312|-1Pca3.c eUo3.c 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3Cq0|95e3",
	"Asia/Makassar|LMT MMT +08 +09 WITA|-7V.A -7V.A -80 -90 -80|01234|-21JjV.A vfc0 myLV.A 8ML0|15e5",
	"Asia/Manila|PST PDT JST|-80 -90 -90|010201010|-1kJI0 AL0 cK10 65X0 mXB0 vX0 VK10 1db0|24e6",
	"Asia/Nicosia|LMT EET EEST|-2d.s -20 -30|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1Vc2d.s 2a3cd.s 1cL0 1qp0 Xz0 19B0 19X0 1fB0 1db0 1cp0 1cL0 1fB0 19X0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1o30 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|32e4",
	"Asia/Novokuznetsk|LMT +06 +07 +08|-5M.M -60 -70 -80|012323232323232323232321232323232323232323232323232323232323212|-1PctM.M eULM.M 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 2sp0 WM0|55e4",
	"Asia/Novosibirsk|LMT +06 +07 +08|-5v.E -60 -70 -80|0123232323232323232323212323212121212121212121212121212121212121212|-21Qnv.E pAFv.E 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 ml0 Os0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 4eN0|15e5",
	"Asia/Omsk|LMT +05 +06 +07|-4R.u -50 -60 -70|01232323232323232323232123232323232323232323232323232323232323232|-224sR.u pMLR.u 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|12e5",
	"Asia/Oral|LMT +03 +05 +06 +04|-3p.o -30 -50 -60 -40|01232323232323232424242424242424242424242424242|-1Pc3p.o eUop.o 23CK0 3Db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1fA0 1cM0 1cM0 IM0 1EM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0|27e4",
	"Asia/Pontianak|LMT PMT +0730 +09 +08 WITA WIB|-7h.k -7h.k -7u -90 -80 -80 -70|012324256|-2ua7h.k XE00 munL.k 8Rau 6kpu 4PXu xhcu Wqnu|23e4",
	"Asia/Pyongyang|LMT KST JST KST|-8n -8u -90 -90|012313|-2um8n 97XR 1lTzu 2Onc0 6BA0|29e5",
	"Asia/Qostanay|LMT +04 +05 +06|-4e.s -40 -50 -60|012323232323232323232123232323232323232323232323|-1Pc4e.s eUoe.s 23CL0 3Db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0|",
	"Asia/Qyzylorda|LMT +04 +05 +06|-4l.Q -40 -50 -60|01232323232323232323232323232323232323232323232|-1Pc4l.Q eUol.Q 23CL0 3Db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 3ao0 1EM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 zQl0|73e4",
	"Asia/Rangoon|RMT +0630 +09|-6o.L -6u -90|0121|-21Jio.L SmnS.L 7j9u|48e5",
	"Asia/Sakhalin|LMT +09 +11 +12 +10|-9u.M -90 -b0 -c0 -a0|01232323232323232323232423232323232424242424242424242424242424242|-2AGVu.M 1BoMu.M 1qFa0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 2pB0 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3rd0|58e4",
	"Asia/Samarkand|LMT +04 +05 +06|-4r.R -40 -50 -60|01232323232323232323232|-1Pc4r.R eUor.R 23CL0 3Db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0|36e4",
	"Asia/Seoul|LMT KST JST KST KDT KDT|-8r.Q -8u -90 -90 -a0 -9u|012343434343151515151515134343|-2um8r.Q 97XV.Q 1m1zu 6CM0 Fz0 1kN0 14n0 1kN0 14L0 1zd0 On0 69B0 2I0u OL0 1FB0 Rb0 1qN0 TX0 1tB0 TX0 1tB0 TX0 1tB0 TX0 2ap0 12FBu 11A0 1o00 11A0|23e6",
	"Asia/Srednekolymsk|LMT +10 +11 +12|-ae.Q -a0 -b0 -c0|01232323232323232323232123232323232323232323232323232323232323232|-1Pcae.Q eUoe.Q 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|35e2",
	"Asia/Taipei|CST JST CDT|-80 -90 -90|01020202020202020202020202020202020202020|-1iw80 joM0 1yo0 Tz0 1ip0 1jX0 1cN0 11b0 1oN0 11b0 1oN0 11b0 1oN0 11b0 10N0 1BX0 10p0 1pz0 10p0 1pz0 10p0 1db0 1dd0 1db0 1cN0 1db0 1cN0 1db0 1cN0 1db0 1BB0 ML0 1Bd0 ML0 uq10 1db0 1cN0 1db0 97B0 AL0|74e5",
	"Asia/Tashkent|LMT +05 +06 +07|-4B.b -50 -60 -70|012323232323232323232321|-1Pc4B.b eUnB.b 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0|23e5",
	"Asia/Tbilisi|TBMT +03 +04 +05|-2X.b -30 -40 -50|0123232323232323232323212121232323232323232323212|-1Pc2X.b 1jUnX.b WCL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 1cK0 1cL0 1cN0 1cL0 1cN0 2pz0 1cL0 1fB0 3Nz0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 An0 Os0 WM0|11e5",
	"Asia/Tehran|LMT TMT +0330 +04 +05 +0430|-3p.I -3p.I -3u -40 -50 -4u|01234325252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252|-2btDp.I 1d3c0 1huLT.I TXu 1pz0 sN0 vAu 1cL0 1dB0 1en0 pNB0 UL0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 64p0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0|14e6",
	"Asia/Thimphu|LMT +0530 +06|-5W.A -5u -60|012|-Su5W.A 1BGMs.A|79e3",
	"Asia/Tokyo|JST JDT|-90 -a0|010101010|-QJJ0 Rc0 1lc0 14o0 1zc0 Oo0 1zc0 Oo0|38e6",
	"Asia/Tomsk|LMT +06 +07 +08|-5D.P -60 -70 -80|0123232323232323232323212323232323232323232323212121212121212121212|-21NhD.P pxzD.P 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 co0 1bB0 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3Qp0|10e5",
	"Asia/Ulaanbaatar|LMT +07 +08 +09|-77.w -70 -80 -90|012323232323232323232323232323232323232323232323232|-2APH7.w 2Uko7.w cKn0 1db0 1dd0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 6hD0 11z0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 kEp0 1cJ0 1cP0 1cJ0|12e5",
	"Asia/Ust-Nera|LMT +08 +09 +12 +11 +10|-9w.S -80 -90 -c0 -b0 -a0|012343434343434343434345434343434343434343434343434343434343434345|-21Q9w.S pApw.S 23CL0 1d90 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 17V0 7zD0|65e2",
	"Asia/Vladivostok|LMT +09 +10 +11|-8L.v -90 -a0 -b0|01232323232323232323232123232323232323232323232323232323232323232|-1SJIL.v itXL.v 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|60e4",
	"Asia/Yakutsk|LMT +08 +09 +10|-8C.W -80 -90 -a0|01232323232323232323232123232323232323232323232323232323232323232|-21Q8C.W pAoC.W 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|28e4",
	"Asia/Yekaterinburg|LMT PMT +04 +05 +06|-42.x -3J.5 -40 -50 -60|012343434343434343434343234343434343434343434343434343434343434343|-2ag42.x 7mQh.s qBvJ.5 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|14e5",
	"Asia/Yerevan|LMT +03 +04 +05|-2W -30 -40 -50|0123232323232323232323212121212323232323232323232323232323232|-1Pc2W 1jUnW WCL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 4RX0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0|13e5",
	"Atlantic/Azores|HMT -02 -01 +00 WET|1S.w 20 10 0 0|01212121212121212121212121212121212121212121232123212321232121212121212121212121212121212121212121232323232323232323232323232323234323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-2ldW0 aPX0 Sp0 LX0 1vc0 Tc0 1uM0 SM0 1vc0 Tc0 1vc0 SM0 1vc0 6600 1co0 3E00 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 3I00 17c0 1cM0 1cM0 3Fc0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 1tA0 1cM0 1dc0 1400 gL0 IM0 s10 U00 dX0 Rc0 pd0 Rc0 gL0 Oo0 pd0 Rc0 gL0 Oo0 pd0 14o0 1cM0 1cP0 1cM0 1cM0 1cM0 1cM0 1cM0 3Co0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 qIl0 1cM0 1fA0 1cM0 1cM0 1cN0 1cL0 1cN0 1cM0 1cM0 1cM0 1cM0 1cN0 1cL0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cL0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|25e4",
	"Atlantic/Bermuda|BMT BST AST ADT|4j.i 3j.i 40 30|010102323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-28p7E.G 1bb0 1i10 11X0 ru30 thbE.G 1PX0 11B0 1tz0 Rd0 1zb0 Op0 1zb0 3I10 Lz0 1EN0 FX0 1HB0 FX0 1Kp0 Db0 1Kp0 Db0 1Kp0 FX0 93d0 11z0 GAp0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|65e3",
	"Atlantic/Canary|LMT -01 WET WEST|11.A 10 0 -10|01232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-1UtaW.o XPAW.o 1lAK0 1a10 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|54e4",
	"Atlantic/Cape_Verde|LMT -02 -01|1y.4 20 10|01212|-2ldW0 1eEo0 7zX0 1djf0|50e4",
	"Atlantic/Faroe|LMT WET WEST|r.4 0 -10|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2uSnw.U 2Wgow.U 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|49e3",
	"Atlantic/Madeira|FMT -01 +00 +01 WET WEST|17.A 10 0 -10 0 -10|01212121212121212121212121212121212121212121232123212321232121212121212121212121212121212121212121454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-2ldX0 aPX0 Sp0 LX0 1vc0 Tc0 1uM0 SM0 1vc0 Tc0 1vc0 SM0 1vc0 6600 1co0 3E00 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 3I00 17c0 1cM0 1cM0 3Fc0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 1tA0 1cM0 1dc0 1400 gL0 IM0 s10 U00 dX0 Rc0 pd0 Rc0 gL0 Oo0 pd0 Rc0 gL0 Oo0 pd0 14o0 1cM0 1cP0 1cM0 1cM0 1cM0 1cM0 1cM0 3Co0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 qIl0 1cM0 1fA0 1cM0 1cM0 1cN0 1cL0 1cN0 1cM0 1cM0 1cM0 1cM0 1cN0 1cL0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|27e4",
	"Atlantic/Reykjavik|LMT -01 +00 GMT|1s 10 0 0|012121212121212121212121212121212121212121212121212121212121212121213|-2uWmw mfaw 1Bd0 ML0 1LB0 Cn0 1LB0 3fX0 C10 HrX0 1cO0 LB0 1EL0 LA0 1C00 Oo0 1wo0 Rc0 1wo0 Rc0 1wo0 Rc0 1zc0 Oo0 1zc0 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1lc0 14o0 1o00 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1o00 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1o00 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1o00 14o0|12e4",
	"Atlantic/South_Georgia|-02|20|0||30",
	"Atlantic/Stanley|SMT -04 -03 -02|3P.o 40 30 20|012121212121212323212121212121212121212121212121212121212121212121212|-2kJw8.A 12bA8.A 19X0 1fB0 19X0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1fB0 Cn0 1Cc10 WL0 1qL0 U10 1tz0 2mN0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1tz0 U10 1tz0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1tz0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qN0 U10 1wn0 Rd0 1wn0 U10 1tz0 U10 1tz0 U10 1tz0 U10 1tz0 U10 1wn0 U10 1tz0 U10 1tz0 U10|21e2",
	"Australia/Sydney|AEST AEDT|-a0 -b0|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-293k0 xc0 10jc0 yM0 1cM0 1cM0 1fA0 1a00 17c00 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 14o0 1o00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 U00 1qM0 WM0 1tA0 WM0 1tA0 U00 1tA0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 11A0 1o00 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 14o0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|40e5",
	"Australia/Adelaide|ACST ACDT|-9u -au|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-293ju xc0 10jc0 yM0 1cM0 1cM0 1fA0 1a00 17c00 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 U00 1qM0 WM0 1tA0 WM0 1tA0 U00 1tA0 U00 1tA0 Oo0 1zc0 WM0 1qM0 Rc0 1zc0 U00 1tA0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 14o0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|11e5",
	"Australia/Brisbane|AEST AEDT|-a0 -b0|01010101010101010|-293k0 xc0 10jc0 yM0 1cM0 1cM0 1fA0 1a00 17c00 LA0 H1A0 Oo0 1zc0 Oo0 1zc0 Oo0|20e5",
	"Australia/Broken_Hill|ACST ACDT|-9u -au|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-293ju xc0 10jc0 yM0 1cM0 1cM0 1fA0 1a00 17c00 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 14o0 1o00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 U00 1qM0 WM0 1tA0 WM0 1tA0 U00 1tA0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 14o0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|18e3",
	"Australia/Hobart|AEST AEDT|-a0 -b0|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-29E80 1a00 1qM0 Oo0 1zc0 Oo0 TAo0 yM0 1cM0 1cM0 1fA0 1a00 VfA0 1cM0 1o00 Rc0 1wo0 Rc0 1wo0 U00 1wo0 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 11A0 1qM0 WM0 1qM0 Oo0 1zc0 Oo0 1zc0 Oo0 1wo0 WM0 1tA0 WM0 1tA0 U00 1tA0 U00 1tA0 11A0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 11A0 1o00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|21e4",
	"Australia/Darwin|ACST ACDT|-9u -au|010101010|-293ju xc0 10jc0 yM0 1cM0 1cM0 1fA0 1a00|12e4",
	"Australia/Eucla|+0845 +0945|-8J -9J|0101010101010101010|-293iJ xc0 10jc0 yM0 1cM0 1cM0 1gSo0 Oo0 l5A0 Oo0 iJA0 G00 zU00 IM0 1qM0 11A0 1o00 11A0|368",
	"Australia/Lord_Howe|AEST +1030 +1130 +11|-a0 -au -bu -b0|0121212121313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313|raC0 1zdu Rb0 1zd0 On0 1zd0 On0 1zd0 On0 1zd0 TXu 1qMu WLu 1tAu WLu 1tAu TXu 1tAu Onu 1zcu Onu 1zcu Onu 1zcu Rbu 1zcu Onu 1zcu Onu 1zcu 11zu 1o0u 11zu 1o0u 11zu 1o0u 11zu 1qMu WLu 11Au 1nXu 1qMu 11zu 1o0u 11zu 1o0u 11zu 1qMu WLu 1qMu 11zu 1o0u WLu 1qMu 14nu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1fzu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu|347",
	"Australia/Lindeman|AEST AEDT|-a0 -b0|010101010101010101010|-293k0 xc0 10jc0 yM0 1cM0 1cM0 1fA0 1a00 17c00 LA0 H1A0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0|10",
	"Australia/Melbourne|AEST AEDT|-a0 -b0|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-293k0 xc0 10jc0 yM0 1cM0 1cM0 1fA0 1a00 17c00 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 U00 1qM0 WM0 1qM0 11A0 1tA0 U00 1tA0 U00 1tA0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 11A0 1o00 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 14o0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|39e5",
	"Australia/Perth|AWST AWDT|-80 -90|0101010101010101010|-293i0 xc0 10jc0 yM0 1cM0 1cM0 1gSo0 Oo0 l5A0 Oo0 iJA0 G00 zU00 IM0 1qM0 11A0 1o00 11A0|18e5",
	"CET|CET CEST|-10 -20|01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 1cM0 1cM0 16M0 1gMM0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|",
	"Pacific/Easter|EMT -07 -06 -05|7h.s 70 60 50|012121212121212121212121212123232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323|-1uSgG.w 1s4IG.w WL0 1zd0 On0 1ip0 11z0 1o10 11z0 1qN0 WL0 1ld0 14n0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 2pA0 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 1cL0 1cN0 11z0 1o10 11z0 1qN0 WL0 1fB0 19X0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1ip0 1fz0 1fB0 11z0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1o10 19X0 1fB0 1nX0 G10 1EL0 Op0 1zb0 Rd0 1wn0 Rd0 46n0 Ap0 1Nb0 Ap0 1Nb0 Ap0 1zb0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0|30e2",
	"CST6CDT|CST CDT CWT CPT|60 50 50 50|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
	"EET|EET EEST|-20 -30|010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|hDB0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|",
	"Europe/Dublin|DMT IST GMT BST IST|p.l -y.D 0 -10 -10|01232323232324242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242|-2ax9y.D Rc0 1fzy.D 14M0 1fc0 1g00 1co0 1dc0 1co0 1oo0 1400 1dc0 19A0 1io0 1io0 WM0 1o00 14o0 1o00 17c0 1io0 17c0 1fA0 1a00 1lc0 17c0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1cM0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1io0 1qM0 Dc0 g600 14o0 1wo0 17c0 1io0 11A0 1o00 17c0 1fA0 1a00 1fA0 1cM0 1fA0 1a00 17c0 1fA0 1a00 1io0 17c0 1lc0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1a00 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1tA0 IM0 90o0 U00 1tA0 U00 1tA0 U00 1tA0 U00 1tA0 WM0 1qM0 WM0 1qM0 WM0 1tA0 U00 1tA0 U00 1tA0 11z0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 14o0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|12e5",
	"EST|EST|50|0||",
	"EST5EDT|EST EDT EWT EPT|50 40 40 40|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261t0 1nX0 11B0 1nX0 SgN0 8x40 iv0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
	"Etc/GMT-0|GMT|0|0||",
	"Etc/GMT-1|+01|-10|0||",
	"Pacific/Port_Moresby|+10|-a0|0||25e4",
	"Etc/GMT-11|+11|-b0|0||",
	"Pacific/Tarawa|+12|-c0|0||29e3",
	"Etc/GMT-13|+13|-d0|0||",
	"Etc/GMT-14|+14|-e0|0||",
	"Etc/GMT-2|+02|-20|0||",
	"Etc/GMT-3|+03|-30|0||",
	"Etc/GMT-4|+04|-40|0||",
	"Etc/GMT-5|+05|-50|0||",
	"Etc/GMT-6|+06|-60|0||",
	"Indian/Christmas|+07|-70|0||21e2",
	"Etc/GMT-8|+08|-80|0||",
	"Pacific/Palau|+09|-90|0||21e3",
	"Etc/GMT+1|-01|10|0||",
	"Etc/GMT+10|-10|a0|0||",
	"Etc/GMT+11|-11|b0|0||",
	"Etc/GMT+12|-12|c0|0||",
	"Etc/GMT+3|-03|30|0||",
	"Etc/GMT+4|-04|40|0||",
	"Etc/GMT+5|-05|50|0||",
	"Etc/GMT+6|-06|60|0||",
	"Etc/GMT+7|-07|70|0||",
	"Etc/GMT+8|-08|80|0||",
	"Etc/GMT+9|-09|90|0||",
	"Etc/UTC|UTC|0|0||",
	"Europe/Amsterdam|AMT NST +0120 +0020 CEST CET|-j.w -1j.w -1k -k -20 -10|010101010101010101010101010101010101010101012323234545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545|-2aFcj.w 11b0 1iP0 11A0 1io0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1co0 1io0 1yo0 Pc0 1a00 1fA0 1Bc0 Mo0 1tc0 Uo0 1tA0 U00 1uo0 W00 1s00 VA0 1so0 Vc0 1sM0 UM0 1wo0 Rc0 1u00 Wo0 1rA0 W00 1s00 VA0 1sM0 UM0 1w00 fV0 BCX.w 1tA0 U00 1u00 Wo0 1sm0 601k WM0 1fA0 1cM0 1cM0 1cM0 16M0 1gMM0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|16e5",
	"Europe/Andorra|WET CET CEST|0 -10 -20|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-UBA0 1xIN0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|79e3",
	"Europe/Astrakhan|LMT +03 +04 +05|-3c.c -30 -40 -50|012323232323232323212121212121212121212121212121212121212121212|-1Pcrc.c eUMc.c 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1fA0 1cM0 3Co0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3rd0|10e5",
	"Europe/Athens|AMT EET EEST CEST CET|-1y.Q -20 -30 -20 -10|012123434121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2a61x.Q CNbx.Q mn0 kU10 9b0 3Es0 Xa0 1fb0 1dd0 k3X0 Nz0 SCp0 1vc0 SO0 1cM0 1a00 1ao0 1fc0 1a10 1fG0 1cg0 1dX0 1bX0 1cQ0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|35e5",
	"Europe/London|GMT BST BDST|0 -10 -20|0101010101010101010101010101010101010101010101010121212121210101210101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2axa0 Rc0 1fA0 14M0 1fc0 1g00 1co0 1dc0 1co0 1oo0 1400 1dc0 19A0 1io0 1io0 WM0 1o00 14o0 1o00 17c0 1io0 17c0 1fA0 1a00 1lc0 17c0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1cM0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1io0 1qM0 Dc0 2Rz0 Dc0 1zc0 Oo0 1zc0 Rc0 1wo0 17c0 1iM0 FA0 xB0 1fA0 1a00 14o0 bb0 LA0 xB0 Rc0 1wo0 11A0 1o00 17c0 1fA0 1a00 1fA0 1cM0 1fA0 1a00 17c0 1fA0 1a00 1io0 17c0 1lc0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1a00 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1tA0 IM0 90o0 U00 1tA0 U00 1tA0 U00 1tA0 U00 1tA0 WM0 1qM0 WM0 1qM0 WM0 1tA0 U00 1tA0 U00 1tA0 11z0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 14o0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|10e6",
	"Europe/Belgrade|CET CEST|-10 -20|01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-19RC0 3IP0 WM0 1fA0 1cM0 1cM0 1rc0 Qo0 1vmo0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|12e5",
	"Europe/Berlin|CET CEST CEMT|-10 -20 -30|01010101010101210101210101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 1cM0 1cM0 kL0 Nc0 m10 WM0 1ao0 1cp0 dX0 jz0 Dd0 1io0 17c0 1fA0 1a00 1ehA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|41e5",
	"Europe/Prague|CET CEST GMT|-10 -20 0|01010101010101010201010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 1cM0 1cM0 1cM0 1qM0 11c0 mp0 xA0 mn0 17c0 1io0 17c0 1fc0 1ao0 1bNc0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|13e5",
	"Europe/Brussels|WET CET CEST WEST|0 -10 -20 -10|0121212103030303030303030303030303030303030303030303212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2ehc0 3zX0 11c0 1iO0 11A0 1o00 11A0 my0 Ic0 1qM0 Rc0 1EM0 UM0 1u00 10o0 1io0 1io0 17c0 1a00 1fA0 1cM0 1cM0 1io0 17c0 1fA0 1a00 1io0 1a30 1io0 17c0 1fA0 1a00 1io0 17c0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 y00 5Wn0 WM0 1fA0 1cM0 16M0 1iM0 16M0 1C00 Uo0 1eeo0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|21e5",
	"Europe/Bucharest|BMT EET EEST|-1I.o -20 -30|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1xApI.o 20LI.o RA0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1Axc0 On0 1fA0 1a10 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cK0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cL0 1cN0 1cL0 1fB0 1nX0 11E0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|19e5",
	"Europe/Budapest|CET CEST|-10 -20|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 1oo0 11c0 1lc0 17c0 O1V0 3Nf0 WM0 1fA0 1cM0 1cM0 1oJ0 1dd0 1020 1fX0 1cp0 1cM0 1cM0 1cM0 1fA0 1a00 bhy0 Rb0 1wr0 Rc0 1C00 LA0 1C00 LA0 SNW0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cO0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|17e5",
	"Europe/Zurich|CET CEST|-10 -20|01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-19Lc0 11A0 1o00 11A0 1xG10 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|38e4",
	"Europe/Chisinau|CMT BMT EET EEST CEST CET MSK MSD|-1T -1I.o -20 -30 -20 -10 -30 -40|012323232323232323234545467676767676767676767323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-26jdT wGMa.A 20LI.o RA0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 27A0 2en0 39g0 WM0 1fA0 1cM0 V90 1t7z0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 gL0 WO0 1cM0 1cM0 1cK0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1nX0 11D0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|67e4",
	"Europe/Copenhagen|CET CEST|-10 -20|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2azC0 Tz0 VuO0 60q0 WM0 1fA0 1cM0 1cM0 1cM0 S00 1HA0 Nc0 1C00 Dc0 1Nc0 Ao0 1h5A0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|12e5",
	"Europe/Gibraltar|GMT BST BDST CET CEST|0 -10 -20 -10 -20|010101010101010101010101010101010101010101010101012121212121010121010101010101010101034343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343|-2axa0 Rc0 1fA0 14M0 1fc0 1g00 1co0 1dc0 1co0 1oo0 1400 1dc0 19A0 1io0 1io0 WM0 1o00 14o0 1o00 17c0 1io0 17c0 1fA0 1a00 1lc0 17c0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1cM0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1io0 1qM0 Dc0 2Rz0 Dc0 1zc0 Oo0 1zc0 Rc0 1wo0 17c0 1iM0 FA0 xB0 1fA0 1a00 14o0 bb0 LA0 xB0 Rc0 1wo0 11A0 1o00 17c0 1fA0 1a00 1fA0 1cM0 1fA0 1a00 17c0 1fA0 1a00 1io0 17c0 1lc0 17c0 1fA0 10Jz0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|30e3",
	"Europe/Helsinki|HMT EET EEST|-1D.N -20 -30|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1WuND.N OULD.N 1dA0 1xGq0 1cM0 1cM0 1cM0 1cN0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|12e5",
	"Europe/Kaliningrad|CET CEST EET EEST MSK MSD +03|-10 -20 -20 -30 -30 -40 -30|01010101010101232454545454545454543232323232323232323232323232323232323232323262|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 1cM0 1cM0 390 7A0 1en0 12N0 1pbb0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|44e4",
	"Europe/Kiev|KMT EET MSK CEST CET MSD EEST|-22.4 -20 -30 -20 -10 -40 -30|0123434252525252525252525256161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161|-1Pc22.4 eUo2.4 rnz0 2Hg0 WM0 1fA0 da0 1v4m0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 Db0 3220 1cK0 1cL0 1cN0 1cL0 1cN0 1cL0 1cQ0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|34e5",
	"Europe/Kirov|LMT +03 +04 +05|-3i.M -30 -40 -50|01232323232323232321212121212121212121212121212121212121212121|-22WM0 qH90 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1fA0 1cM0 3Co0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|48e4",
	"Europe/Lisbon|LMT WET WEST WEMT CET CEST|A.J 0 -10 -20 -10 -20|012121212121212121212121212121212121212121212321232123212321212121212121212121212121212121212121214121212121212121212121212121212124545454212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2le00 aPX0 Sp0 LX0 1vc0 Tc0 1uM0 SM0 1vc0 Tc0 1vc0 SM0 1vc0 6600 1co0 3E00 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 3I00 17c0 1cM0 1cM0 3Fc0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 1tA0 1cM0 1dc0 1400 gL0 IM0 s10 U00 dX0 Rc0 pd0 Rc0 gL0 Oo0 pd0 Rc0 gL0 Oo0 pd0 14o0 1cM0 1cP0 1cM0 1cM0 1cM0 1cM0 1cM0 3Co0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 pvy0 1cM0 1cM0 1fA0 1cM0 1cM0 1cN0 1cL0 1cN0 1cM0 1cM0 1cM0 1cM0 1cN0 1cL0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|27e5",
	"Europe/Luxembourg|LMT CET CEST WET WEST WEST WET|-o.A -10 -20 0 -10 -20 -10|0121212134343434343434343434343434343434343434343434565651212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2DG0o.A t6mo.A TB0 1nX0 Up0 1o20 11A0 rW0 CM0 1qP0 R90 1EO0 UK0 1u20 10m0 1ip0 1in0 17e0 19W0 1fB0 1db0 1cp0 1in0 17d0 1fz0 1a10 1in0 1a10 1in0 17f0 1fA0 1a00 1io0 17c0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 vA0 60L0 WM0 1fA0 1cM0 17c0 1io0 16M0 1C00 Uo0 1eeo0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|54e4",
	"Europe/Madrid|WET WEST WEMT CET CEST|0 -10 -20 -10 -20|010101010101010101210343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343|-25Td0 19B0 1cL0 1dd0 b1z0 18p0 3HX0 17d0 1fz0 1a10 1io0 1a00 1in0 17d0 iIn0 Hd0 1cL0 bb0 1200 2s20 14n0 5aL0 Mp0 1vz0 17d0 1in0 17d0 1in0 17d0 1in0 17d0 6hX0 11B0 XHX0 1a10 1fz0 1a10 19X0 1cN0 1fz0 1a10 1fC0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|62e5",
	"Europe/Malta|CET CEST|-10 -20|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2arB0 Lz0 1cN0 1db0 1410 1on0 Wp0 1qL0 17d0 1cL0 M3B0 5M20 WM0 1fA0 1co0 17c0 1iM0 16m0 1de0 1lc0 14m0 1lc0 WO0 1qM0 GTW0 On0 1C10 LA0 1C00 LA0 1EM0 LA0 1C00 LA0 1zc0 Oo0 1C00 Oo0 1co0 1cM0 1lA0 Xc0 1qq0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1iN0 19z0 1fB0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|42e4",
	"Europe/Minsk|MMT EET MSK CEST CET MSD EEST +03|-1O -20 -30 -20 -10 -40 -30 -30|01234343252525252525252525261616161616161616161616161616161616161617|-1Pc1O eUnO qNX0 3gQ0 WM0 1fA0 1cM0 Al0 1tsn0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 3Fc0 1cN0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0|19e5",
	"Europe/Monaco|PMT WET WEST WEMT CET CEST|-9.l 0 -10 -20 -10 -20|01212121212121212121212121212121212121212121212121232323232345454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-2n5c9.l cFX9.l HA0 19A0 1iM0 11c0 1oo0 Wo0 1rc0 QM0 1EM0 UM0 1u00 10o0 1io0 1wo0 Rc0 1a00 1fA0 1cM0 1cM0 1io0 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 1fA0 1a00 1io0 17c0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Df0 2RV0 11z0 11B0 1ze0 WM0 1fA0 1cM0 1fa0 1aq0 16M0 1ekn0 1cL0 1fC0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|38e3",
	"Europe/Moscow|MMT MMT MST MDST MSD MSK +05 EET EEST MSK|-2u.h -2v.j -3v.j -4v.j -40 -30 -50 -20 -30 -40|012132345464575454545454545454545458754545454545454545454545454545454545454595|-2ag2u.h 2pyW.W 1bA0 11X0 GN0 1Hb0 c4v.j ik0 3DA0 dz0 15A0 c10 2q10 iM10 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cN0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|16e6",
	"Europe/Paris|PMT WET WEST CEST CET WEMT|-9.l 0 -10 -20 -10 -20|0121212121212121212121212121212121212121212121212123434352543434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434|-2nco9.l cNb9.l HA0 19A0 1iM0 11c0 1oo0 Wo0 1rc0 QM0 1EM0 UM0 1u00 10o0 1io0 1wo0 Rc0 1a00 1fA0 1cM0 1cM0 1io0 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 1fA0 1a00 1io0 17c0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Df0 Ik0 5M30 WM0 1fA0 1cM0 Vx0 hB0 1aq0 16M0 1ekn0 1cL0 1fC0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|11e6",
	"Europe/Riga|RMT LST EET MSK CEST CET MSD EEST|-1A.y -2A.y -20 -30 -20 -10 -40 -30|010102345454536363636363636363727272727272727272727272727272727272727272727272727272727272727272727272727272727272727272727272|-25TzA.y 11A0 1iM0 ko0 gWm0 yDXA.y 2bX0 3fE0 WM0 1fA0 1cM0 1cM0 4m0 1sLy0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cN0 1o00 11A0 1o00 11A0 1qM0 3oo0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|64e4",
	"Europe/Rome|CET CEST|-10 -20|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2arB0 Lz0 1cN0 1db0 1410 1on0 Wp0 1qL0 17d0 1cL0 M3B0 5M20 WM0 1fA0 1cM0 16M0 1iM0 16m0 1de0 1lc0 14m0 1lc0 WO0 1qM0 GTW0 On0 1C10 LA0 1C00 LA0 1EM0 LA0 1C00 LA0 1zc0 Oo0 1C00 Oo0 1C00 LA0 1zc0 Oo0 1C00 LA0 1C00 LA0 1zc0 Oo0 1C00 Oo0 1zc0 Oo0 1fC0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|39e5",
	"Europe/Samara|LMT +03 +04 +05|-3k.k -30 -40 -50|0123232323232323232121232323232323232323232323232323232323212|-22WM0 qH90 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1fA0 2y10 14m0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 2sp0 WM0|12e5",
	"Europe/Saratov|LMT +03 +04 +05|-34.i -30 -40 -50|012323232323232321212121212121212121212121212121212121212121212|-22WM0 qH90 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1cM0 1cM0 1fA0 1cM0 3Co0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 5810|",
	"Europe/Simferopol|SMT EET MSK CEST CET MSD EEST MSK|-2g -20 -30 -20 -10 -40 -30 -40|012343432525252525252525252161616525252616161616161616161616161616161616172|-1Pc2g eUog rEn0 2qs0 WM0 1fA0 1cM0 3V0 1u0L0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1Q00 4eL0 1cL0 1cN0 1cL0 1cN0 dX0 WL0 1cN0 1cL0 1fB0 1o30 11B0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11z0 1nW0|33e4",
	"Europe/Sofia|EET CET CEST EEST|-20 -10 -20 -30|01212103030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030|-168L0 WM0 1fA0 1cM0 1cM0 1cN0 1mKH0 1dd0 1fb0 1ap0 1fb0 1a20 1fy0 1a30 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cK0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1nX0 11E0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|12e5",
	"Europe/Stockholm|CET CEST|-10 -20|01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2azC0 TB0 2yDe0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|15e5",
	"Europe/Tallinn|TMT CET CEST EET MSK MSD EEST|-1D -10 -20 -20 -30 -40 -30|012103421212454545454545454546363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363|-26oND teD 11A0 1Ta0 4rXl KSLD 2FX0 2Jg0 WM0 1fA0 1cM0 18J0 1sTX0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o10 11A0 1qM0 5QM0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|41e4",
	"Europe/Tirane|LMT CET CEST|-1j.k -10 -20|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2glBj.k 14pcj.k 5LC0 WM0 4M0 1fCK0 10n0 1op0 11z0 1pd0 11z0 1qN0 WL0 1qp0 Xb0 1qp0 Xb0 1qp0 11z0 1lB0 11z0 1qN0 11z0 1iN0 16n0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|42e4",
	"Europe/Ulyanovsk|LMT +03 +04 +05 +02|-3d.A -30 -40 -50 -20|01232323232323232321214121212121212121212121212121212121212121212|-22WM0 qH90 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3rd0|13e5",
	"Europe/Uzhgorod|CET CEST MSK MSD EET EEST|-10 -20 -30 -40 -20 -30|010101023232323232323232320454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-1cqL0 6i00 WM0 1fA0 1cM0 1ml0 1Cp0 1r3W0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1Q00 1Nf0 2pw0 1cL0 1cN0 1cL0 1cN0 1cL0 1cQ0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|11e4",
	"Europe/Vienna|CET CEST|-10 -20|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 3KM0 14o0 LA00 6i00 WM0 1fA0 1cM0 1cM0 1cM0 400 2qM0 1ao0 1co0 1cM0 1io0 17c0 1gHa0 19X0 1cP0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|18e5",
	"Europe/Vilnius|WMT KMT CET EET MSK CEST MSD EEST|-1o -1z.A -10 -20 -30 -20 -40 -30|012324525254646464646464646473737373737373737352537373737373737373737373737373737373737373737373737373737373737373737373|-293do 6ILM.o 1Ooz.A zz0 Mfd0 29W0 3is0 WM0 1fA0 1cM0 LV0 1tgL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11B0 1o00 11A0 1qM0 8io0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|54e4",
	"Europe/Volgograd|LMT +03 +04 +05|-2V.E -30 -40 -50|0123232323232323212121212121212121212121212121212121212121212121|-21IqV.E psLV.E 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1cM0 1cM0 1fA0 1cM0 3Co0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 9Jd0 5gn0|10e5",
	"Europe/Warsaw|WMT CET CEST EET EEST|-1o -10 -20 -20 -30|012121234312121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2ctdo 1LXo 11d0 1iO0 11A0 1o00 11A0 1on0 11A0 6zy0 HWP0 5IM0 WM0 1fA0 1cM0 1dz0 1mL0 1en0 15B0 1aq0 1nA0 11A0 1io0 17c0 1fA0 1a00 iDX0 LA0 1cM0 1cM0 1C00 Oo0 1cM0 1cM0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1C00 LA0 uso0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|17e5",
	"Europe/Zaporozhye|+0220 EET MSK CEST CET MSD EEST|-2k -20 -30 -20 -10 -40 -30|01234342525252525252525252526161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161|-1Pc2k eUok rdb0 2RE0 WM0 1fA0 8m0 1v9a0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cK0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cQ0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|77e4",
	"HST|HST|a0|0||",
	"Indian/Chagos|LMT +05 +06|-4N.E -50 -60|012|-2xosN.E 3AGLN.E|30e2",
	"Indian/Cocos|+0630|-6u|0||596",
	"Indian/Kerguelen|-00 +05|0 -50|01|-MG00|130",
	"Indian/Mahe|LMT +04|-3F.M -40|01|-2xorF.M|79e3",
	"Indian/Maldives|MMT +05|-4S -50|01|-olgS|35e4",
	"Indian/Mauritius|LMT +04 +05|-3O -40 -50|012121|-2xorO 34unO 14L0 12kr0 11z0|15e4",
	"Indian/Reunion|LMT +04|-3F.Q -40|01|-2mDDF.Q|84e4",
	"Pacific/Kwajalein|+11 +10 +09 -12 +12|-b0 -a0 -90 c0 -c0|012034|-1kln0 akp0 6Up0 12ry0 Wan0|14e3",
	"MET|MET MEST|-10 -20|01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 1cM0 1cM0 16M0 1gMM0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|",
	"MST|MST|70|0||",
	"MST7MDT|MST MDT MWT MPT|70 60 60 60|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261r0 1nX0 11B0 1nX0 SgN0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
	"Pacific/Chatham|+1215 +1245 +1345|-cf -cJ -dJ|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212|-WqAf 1adef IM0 1C00 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1qM0 14o0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1io0 17c0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1io0 17c0 1io0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00|600",
	"Pacific/Apia|LMT -1130 -11 -10 +14 +13|bq.U bu b0 a0 -e0 -d0|01232345454545454545454545454545454545454545454545454545454|-2nDMx.4 1yW03.4 2rRbu 1ff0 1a00 CI0 AQ0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00|37e3",
	"Pacific/Bougainville|+10 +09 +11|-a0 -90 -b0|0102|-16Wy0 7CN0 2MQp0|18e4",
	"Pacific/Chuuk|+10 +09|-a0 -90|01010|-2ewy0 axB0 RVX0 axd0|49e3",
	"Pacific/Efate|LMT +11 +12|-bd.g -b0 -c0|012121212121212121212121|-2l9nd.g 2uNXd.g Dc0 n610 1cL0 1cN0 1cL0 1fB0 19X0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 Lz0 1Nd0 An0|66e3",
	"Pacific/Enderbury|-12 -11 +13|c0 b0 -d0|012|nIc0 B7X0|1",
	"Pacific/Fakaofo|-11 +13|b0 -d0|01|1Gfn0|483",
	"Pacific/Fiji|LMT +12 +13|-bT.I -c0 -d0|0121212121212121212121212121212121212121212121212121212121212121|-2bUzT.I 3m8NT.I LA0 1EM0 IM0 nJc0 LA0 1o00 Rc0 1wo0 Ao0 1Nc0 Ao0 1Q00 xz0 1SN0 uM0 1SM0 uM0 1VA0 s00 1VA0 s00 1VA0 s00 20o0 pc0 2hc0 bc0 20o0 pc0 20o0 pc0 20o0 pc0 20o0 pc0 20o0 s00 1VA0 s00 20o0 pc0 20o0 pc0 20o0 pc0 20o0 pc0 20o0 s00 20o0 pc0 20o0 pc0 20o0 pc0 20o0 pc0 20o0 s00 1VA0 s00|88e4",
	"Pacific/Galapagos|LMT -05 -06|5W.o 50 60|01212|-1yVS1.A 2dTz1.A gNd0 rz0|25e3",
	"Pacific/Gambier|LMT -09|8X.M 90|01|-2jof0.c|125",
	"Pacific/Guadalcanal|LMT +11|-aD.M -b0|01|-2joyD.M|11e4",
	"Pacific/Guam|GST +09 GDT ChST|-a0 -90 -b0 -a0|01020202020202020203|-18jK0 6pB0 AhB0 3QL0 g2p0 3p91 WOX rX0 1zd0 Rb0 1wp0 Rb0 5xd0 rX0 5sN0 zb1 1C0X On0 ULb0|17e4",
	"Pacific/Honolulu|HST HDT HWT HPT HST|au 9u 9u 9u a0|0102304|-1thLu 8x0 lef0 8wWu iAu 46p0|37e4",
	"Pacific/Kiritimati|-1040 -10 +14|aE a0 -e0|012|nIaE B7Xk|51e2",
	"Pacific/Kosrae|+11 +09 +10 +12|-b0 -90 -a0 -c0|01021030|-2ewz0 axC0 HBy0 akp0 axd0 WOK0 1bdz0|66e2",
	"Pacific/Majuro|+11 +09 +10 +12|-b0 -90 -a0 -c0|0102103|-2ewz0 axC0 HBy0 akp0 6RB0 12um0|28e3",
	"Pacific/Marquesas|LMT -0930|9i 9u|01|-2joeG|86e2",
	"Pacific/Pago_Pago|LMT SST|bm.M b0|01|-2nDMB.c|37e2",
	"Pacific/Nauru|LMT +1130 +09 +12|-b7.E -bu -90 -c0|01213|-1Xdn7.E QCnB.E 7mqu 1lnbu|10e3",
	"Pacific/Niue|-1120 -1130 -11|bk bu b0|012|-KfME 17y0a|12e2",
	"Pacific/Norfolk|+1112 +1130 +1230 +11 +12|-bc -bu -cu -b0 -c0|012134343434343434343434343434343434343434|-Kgbc W01G Oo0 1COo0 9Jcu 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|25e4",
	"Pacific/Noumea|LMT +11 +12|-b5.M -b0 -c0|01212121|-2l9n5.M 2EqM5.M xX0 1PB0 yn0 HeP0 Ao0|98e3",
	"Pacific/Pitcairn|-0830 -08|8u 80|01|18Vku|56",
	"Pacific/Pohnpei|+11 +09 +10|-b0 -90 -a0|010210|-2ewz0 axC0 HBy0 akp0 axd0|34e3",
	"Pacific/Rarotonga|-1030 -0930 -10|au 9u a0|012121212121212121212121212|lyWu IL0 1zcu Onu 1zcu Onu 1zcu Rbu 1zcu Onu 1zcu Onu 1zcu Onu 1zcu Onu 1zcu Onu 1zcu Rbu 1zcu Onu 1zcu Onu 1zcu Onu|13e3",
	"Pacific/Tahiti|LMT -10|9W.g a0|01|-2joe1.I|18e4",
	"Pacific/Tongatapu|+1220 +13 +14|-ck -d0 -e0|0121212121|-1aB0k 2n5dk 15A0 1wo0 xz0 1Q10 xz0 zWN0 s00|75e3",
	"PST8PDT|PST PDT PWT PPT|80 70 70 70|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261q0 1nX0 11B0 1nX0 SgN0 8x10 iy0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
	"WET|WET WEST|0 -10|010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|hDB0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|",
];
var links = [
	"Africa/Abidjan|Africa/Bamako",
	"Africa/Abidjan|Africa/Banjul",
	"Africa/Abidjan|Africa/Conakry",
	"Africa/Abidjan|Africa/Dakar",
	"Africa/Abidjan|Africa/Freetown",
	"Africa/Abidjan|Africa/Lome",
	"Africa/Abidjan|Africa/Nouakchott",
	"Africa/Abidjan|Africa/Ouagadougou",
	"Africa/Abidjan|Africa/Timbuktu",
	"Africa/Abidjan|Atlantic/St_Helena",
	"Africa/Cairo|Egypt",
	"Africa/Johannesburg|Africa/Maseru",
	"Africa/Johannesburg|Africa/Mbabane",
	"Africa/Lagos|Africa/Bangui",
	"Africa/Lagos|Africa/Brazzaville",
	"Africa/Lagos|Africa/Douala",
	"Africa/Lagos|Africa/Kinshasa",
	"Africa/Lagos|Africa/Libreville",
	"Africa/Lagos|Africa/Luanda",
	"Africa/Lagos|Africa/Malabo",
	"Africa/Lagos|Africa/Niamey",
	"Africa/Lagos|Africa/Porto-Novo",
	"Africa/Maputo|Africa/Blantyre",
	"Africa/Maputo|Africa/Bujumbura",
	"Africa/Maputo|Africa/Gaborone",
	"Africa/Maputo|Africa/Harare",
	"Africa/Maputo|Africa/Kigali",
	"Africa/Maputo|Africa/Lubumbashi",
	"Africa/Maputo|Africa/Lusaka",
	"Africa/Nairobi|Africa/Addis_Ababa",
	"Africa/Nairobi|Africa/Asmara",
	"Africa/Nairobi|Africa/Asmera",
	"Africa/Nairobi|Africa/Dar_es_Salaam",
	"Africa/Nairobi|Africa/Djibouti",
	"Africa/Nairobi|Africa/Kampala",
	"Africa/Nairobi|Africa/Mogadishu",
	"Africa/Nairobi|Indian/Antananarivo",
	"Africa/Nairobi|Indian/Comoro",
	"Africa/Nairobi|Indian/Mayotte",
	"Africa/Tripoli|Libya",
	"America/Adak|America/Atka",
	"America/Adak|US/Aleutian",
	"America/Anchorage|US/Alaska",
	"America/Argentina/Buenos_Aires|America/Buenos_Aires",
	"America/Argentina/Catamarca|America/Argentina/ComodRivadavia",
	"America/Argentina/Catamarca|America/Catamarca",
	"America/Argentina/Cordoba|America/Cordoba",
	"America/Argentina/Cordoba|America/Rosario",
	"America/Argentina/Jujuy|America/Jujuy",
	"America/Argentina/Mendoza|America/Mendoza",
	"America/Atikokan|America/Coral_Harbour",
	"America/Chicago|US/Central",
	"America/Curacao|America/Aruba",
	"America/Curacao|America/Kralendijk",
	"America/Curacao|America/Lower_Princes",
	"America/Denver|America/Shiprock",
	"America/Denver|Navajo",
	"America/Denver|US/Mountain",
	"America/Detroit|US/Michigan",
	"America/Edmonton|Canada/Mountain",
	"America/Fort_Wayne|America/Indiana/Indianapolis",
	"America/Fort_Wayne|America/Indianapolis",
	"America/Fort_Wayne|US/East-Indiana",
	"America/Godthab|America/Nuuk",
	"America/Halifax|Canada/Atlantic",
	"America/Havana|Cuba",
	"America/Indiana/Knox|America/Knox_IN",
	"America/Indiana/Knox|US/Indiana-Starke",
	"America/Jamaica|Jamaica",
	"America/Kentucky/Louisville|America/Louisville",
	"America/Los_Angeles|US/Pacific",
	"America/Manaus|Brazil/West",
	"America/Mazatlan|Mexico/BajaSur",
	"America/Mexico_City|Mexico/General",
	"America/New_York|US/Eastern",
	"America/Noronha|Brazil/DeNoronha",
	"America/Panama|America/Cayman",
	"America/Phoenix|US/Arizona",
	"America/Port_of_Spain|America/Anguilla",
	"America/Port_of_Spain|America/Antigua",
	"America/Port_of_Spain|America/Dominica",
	"America/Port_of_Spain|America/Grenada",
	"America/Port_of_Spain|America/Guadeloupe",
	"America/Port_of_Spain|America/Marigot",
	"America/Port_of_Spain|America/Montserrat",
	"America/Port_of_Spain|America/St_Barthelemy",
	"America/Port_of_Spain|America/St_Kitts",
	"America/Port_of_Spain|America/St_Lucia",
	"America/Port_of_Spain|America/St_Thomas",
	"America/Port_of_Spain|America/St_Vincent",
	"America/Port_of_Spain|America/Tortola",
	"America/Port_of_Spain|America/Virgin",
	"America/Regina|Canada/Saskatchewan",
	"America/Rio_Branco|America/Porto_Acre",
	"America/Rio_Branco|Brazil/Acre",
	"America/Santiago|Chile/Continental",
	"America/Sao_Paulo|Brazil/East",
	"America/St_Johns|Canada/Newfoundland",
	"America/Tijuana|America/Ensenada",
	"America/Tijuana|America/Santa_Isabel",
	"America/Tijuana|Mexico/BajaNorte",
	"America/Toronto|America/Montreal",
	"America/Toronto|Canada/Eastern",
	"America/Vancouver|Canada/Pacific",
	"America/Whitehorse|Canada/Yukon",
	"America/Winnipeg|Canada/Central",
	"Asia/Ashgabat|Asia/Ashkhabad",
	"Asia/Bangkok|Asia/Phnom_Penh",
	"Asia/Bangkok|Asia/Vientiane",
	"Asia/Dhaka|Asia/Dacca",
	"Asia/Dubai|Asia/Muscat",
	"Asia/Ho_Chi_Minh|Asia/Saigon",
	"Asia/Hong_Kong|Hongkong",
	"Asia/Jerusalem|Asia/Tel_Aviv",
	"Asia/Jerusalem|Israel",
	"Asia/Kathmandu|Asia/Katmandu",
	"Asia/Kolkata|Asia/Calcutta",
	"Asia/Kuala_Lumpur|Asia/Singapore",
	"Asia/Kuala_Lumpur|Singapore",
	"Asia/Macau|Asia/Macao",
	"Asia/Makassar|Asia/Ujung_Pandang",
	"Asia/Nicosia|Europe/Nicosia",
	"Asia/Qatar|Asia/Bahrain",
	"Asia/Rangoon|Asia/Yangon",
	"Asia/Riyadh|Asia/Aden",
	"Asia/Riyadh|Asia/Kuwait",
	"Asia/Seoul|ROK",
	"Asia/Shanghai|Asia/Chongqing",
	"Asia/Shanghai|Asia/Chungking",
	"Asia/Shanghai|Asia/Harbin",
	"Asia/Shanghai|PRC",
	"Asia/Taipei|ROC",
	"Asia/Tehran|Iran",
	"Asia/Thimphu|Asia/Thimbu",
	"Asia/Tokyo|Japan",
	"Asia/Ulaanbaatar|Asia/Ulan_Bator",
	"Asia/Urumqi|Asia/Kashgar",
	"Atlantic/Faroe|Atlantic/Faeroe",
	"Atlantic/Reykjavik|Iceland",
	"Atlantic/South_Georgia|Etc/GMT+2",
	"Australia/Adelaide|Australia/South",
	"Australia/Brisbane|Australia/Queensland",
	"Australia/Broken_Hill|Australia/Yancowinna",
	"Australia/Darwin|Australia/North",
	"Australia/Hobart|Australia/Currie",
	"Australia/Hobart|Australia/Tasmania",
	"Australia/Lord_Howe|Australia/LHI",
	"Australia/Melbourne|Australia/Victoria",
	"Australia/Perth|Australia/West",
	"Australia/Sydney|Australia/ACT",
	"Australia/Sydney|Australia/Canberra",
	"Australia/Sydney|Australia/NSW",
	"Etc/GMT-0|Etc/GMT",
	"Etc/GMT-0|Etc/GMT+0",
	"Etc/GMT-0|Etc/GMT0",
	"Etc/GMT-0|Etc/Greenwich",
	"Etc/GMT-0|GMT",
	"Etc/GMT-0|GMT+0",
	"Etc/GMT-0|GMT-0",
	"Etc/GMT-0|GMT0",
	"Etc/GMT-0|Greenwich",
	"Etc/UTC|Etc/UCT",
	"Etc/UTC|Etc/Universal",
	"Etc/UTC|Etc/Zulu",
	"Etc/UTC|UCT",
	"Etc/UTC|UTC",
	"Etc/UTC|Universal",
	"Etc/UTC|Zulu",
	"Europe/Belgrade|Europe/Ljubljana",
	"Europe/Belgrade|Europe/Podgorica",
	"Europe/Belgrade|Europe/Sarajevo",
	"Europe/Belgrade|Europe/Skopje",
	"Europe/Belgrade|Europe/Zagreb",
	"Europe/Chisinau|Europe/Tiraspol",
	"Europe/Dublin|Eire",
	"Europe/Helsinki|Europe/Mariehamn",
	"Europe/Istanbul|Asia/Istanbul",
	"Europe/Istanbul|Turkey",
	"Europe/Lisbon|Portugal",
	"Europe/London|Europe/Belfast",
	"Europe/London|Europe/Guernsey",
	"Europe/London|Europe/Isle_of_Man",
	"Europe/London|Europe/Jersey",
	"Europe/London|GB",
	"Europe/London|GB-Eire",
	"Europe/Moscow|W-SU",
	"Europe/Oslo|Arctic/Longyearbyen",
	"Europe/Oslo|Atlantic/Jan_Mayen",
	"Europe/Prague|Europe/Bratislava",
	"Europe/Rome|Europe/San_Marino",
	"Europe/Rome|Europe/Vatican",
	"Europe/Warsaw|Poland",
	"Europe/Zurich|Europe/Busingen",
	"Europe/Zurich|Europe/Vaduz",
	"Indian/Christmas|Etc/GMT-7",
	"Pacific/Auckland|Antarctica/McMurdo",
	"Pacific/Auckland|Antarctica/South_Pole",
	"Pacific/Auckland|NZ",
	"Pacific/Chatham|NZ-CHAT",
	"Pacific/Chuuk|Pacific/Truk",
	"Pacific/Chuuk|Pacific/Yap",
	"Pacific/Easter|Chile/EasterIsland",
	"Pacific/Guam|Pacific/Saipan",
	"Pacific/Honolulu|Pacific/Johnston",
	"Pacific/Honolulu|US/Hawaii",
	"Pacific/Kwajalein|Kwajalein",
	"Pacific/Pago_Pago|Pacific/Midway",
	"Pacific/Pago_Pago|Pacific/Samoa",
	"Pacific/Pago_Pago|US/Samoa",
	"Pacific/Palau|Etc/GMT-9",
	"Pacific/Pohnpei|Pacific/Ponape",
	"Pacific/Port_Moresby|Etc/GMT-10",
	"Pacific/Tarawa|Etc/GMT-12",
	"Pacific/Tarawa|Pacific/Funafuti",
	"Pacific/Tarawa|Pacific/Wake",
	"Pacific/Tarawa|Pacific/Wallis",
];
var countries = [
	"AD|Europe/Andorra",
	"AE|Asia/Dubai",
	"AF|Asia/Kabul",
	"AG|America/Port_of_Spain America/Antigua",
	"AI|America/Port_of_Spain America/Anguilla",
	"AL|Europe/Tirane",
	"AM|Asia/Yerevan",
	"AO|Africa/Lagos Africa/Luanda",
	"AQ|Antarctica/Casey Antarctica/Davis Antarctica/DumontDUrville Antarctica/Mawson Antarctica/Palmer Antarctica/Rothera Antarctica/Syowa Antarctica/Troll Antarctica/Vostok Pacific/Auckland Antarctica/McMurdo",
	"AR|America/Argentina/Buenos_Aires America/Argentina/Cordoba America/Argentina/Salta America/Argentina/Jujuy America/Argentina/Tucuman America/Argentina/Catamarca America/Argentina/La_Rioja America/Argentina/San_Juan America/Argentina/Mendoza America/Argentina/San_Luis America/Argentina/Rio_Gallegos America/Argentina/Ushuaia",
	"AS|Pacific/Pago_Pago",
	"AT|Europe/Vienna",
	"AU|Australia/Lord_Howe Antarctica/Macquarie Australia/Hobart Australia/Currie Australia/Melbourne Australia/Sydney Australia/Broken_Hill Australia/Brisbane Australia/Lindeman Australia/Adelaide Australia/Darwin Australia/Perth Australia/Eucla",
	"AW|America/Curacao America/Aruba",
	"AX|Europe/Helsinki Europe/Mariehamn",
	"AZ|Asia/Baku",
	"BA|Europe/Belgrade Europe/Sarajevo",
	"BB|America/Barbados",
	"BD|Asia/Dhaka",
	"BE|Europe/Brussels",
	"BF|Africa/Abidjan Africa/Ouagadougou",
	"BG|Europe/Sofia",
	"BH|Asia/Qatar Asia/Bahrain",
	"BI|Africa/Maputo Africa/Bujumbura",
	"BJ|Africa/Lagos Africa/Porto-Novo",
	"BL|America/Port_of_Spain America/St_Barthelemy",
	"BM|Atlantic/Bermuda",
	"BN|Asia/Brunei",
	"BO|America/La_Paz",
	"BQ|America/Curacao America/Kralendijk",
	"BR|America/Noronha America/Belem America/Fortaleza America/Recife America/Araguaina America/Maceio America/Bahia America/Sao_Paulo America/Campo_Grande America/Cuiaba America/Santarem America/Porto_Velho America/Boa_Vista America/Manaus America/Eirunepe America/Rio_Branco",
	"BS|America/Nassau",
	"BT|Asia/Thimphu",
	"BW|Africa/Maputo Africa/Gaborone",
	"BY|Europe/Minsk",
	"BZ|America/Belize",
	"CA|America/St_Johns America/Halifax America/Glace_Bay America/Moncton America/Goose_Bay America/Blanc-Sablon America/Toronto America/Nipigon America/Thunder_Bay America/Iqaluit America/Pangnirtung America/Atikokan America/Winnipeg America/Rainy_River America/Resolute America/Rankin_Inlet America/Regina America/Swift_Current America/Edmonton America/Cambridge_Bay America/Yellowknife America/Inuvik America/Creston America/Dawson_Creek America/Fort_Nelson America/Vancouver America/Whitehorse America/Dawson",
	"CC|Indian/Cocos",
	"CD|Africa/Maputo Africa/Lagos Africa/Kinshasa Africa/Lubumbashi",
	"CF|Africa/Lagos Africa/Bangui",
	"CG|Africa/Lagos Africa/Brazzaville",
	"CH|Europe/Zurich",
	"CI|Africa/Abidjan",
	"CK|Pacific/Rarotonga",
	"CL|America/Santiago America/Punta_Arenas Pacific/Easter",
	"CM|Africa/Lagos Africa/Douala",
	"CN|Asia/Shanghai Asia/Urumqi",
	"CO|America/Bogota",
	"CR|America/Costa_Rica",
	"CU|America/Havana",
	"CV|Atlantic/Cape_Verde",
	"CW|America/Curacao",
	"CX|Indian/Christmas",
	"CY|Asia/Nicosia Asia/Famagusta",
	"CZ|Europe/Prague",
	"DE|Europe/Zurich Europe/Berlin Europe/Busingen",
	"DJ|Africa/Nairobi Africa/Djibouti",
	"DK|Europe/Copenhagen",
	"DM|America/Port_of_Spain America/Dominica",
	"DO|America/Santo_Domingo",
	"DZ|Africa/Algiers",
	"EC|America/Guayaquil Pacific/Galapagos",
	"EE|Europe/Tallinn",
	"EG|Africa/Cairo",
	"EH|Africa/El_Aaiun",
	"ER|Africa/Nairobi Africa/Asmara",
	"ES|Europe/Madrid Africa/Ceuta Atlantic/Canary",
	"ET|Africa/Nairobi Africa/Addis_Ababa",
	"FI|Europe/Helsinki",
	"FJ|Pacific/Fiji",
	"FK|Atlantic/Stanley",
	"FM|Pacific/Chuuk Pacific/Pohnpei Pacific/Kosrae",
	"FO|Atlantic/Faroe",
	"FR|Europe/Paris",
	"GA|Africa/Lagos Africa/Libreville",
	"GB|Europe/London",
	"GD|America/Port_of_Spain America/Grenada",
	"GE|Asia/Tbilisi",
	"GF|America/Cayenne",
	"GG|Europe/London Europe/Guernsey",
	"GH|Africa/Accra",
	"GI|Europe/Gibraltar",
	"GL|America/Nuuk America/Danmarkshavn America/Scoresbysund America/Thule",
	"GM|Africa/Abidjan Africa/Banjul",
	"GN|Africa/Abidjan Africa/Conakry",
	"GP|America/Port_of_Spain America/Guadeloupe",
	"GQ|Africa/Lagos Africa/Malabo",
	"GR|Europe/Athens",
	"GS|Atlantic/South_Georgia",
	"GT|America/Guatemala",
	"GU|Pacific/Guam",
	"GW|Africa/Bissau",
	"GY|America/Guyana",
	"HK|Asia/Hong_Kong",
	"HN|America/Tegucigalpa",
	"HR|Europe/Belgrade Europe/Zagreb",
	"HT|America/Port-au-Prince",
	"HU|Europe/Budapest",
	"ID|Asia/Jakarta Asia/Pontianak Asia/Makassar Asia/Jayapura",
	"IE|Europe/Dublin",
	"IL|Asia/Jerusalem",
	"IM|Europe/London Europe/Isle_of_Man",
	"IN|Asia/Kolkata",
	"IO|Indian/Chagos",
	"IQ|Asia/Baghdad",
	"IR|Asia/Tehran",
	"IS|Atlantic/Reykjavik",
	"IT|Europe/Rome",
	"JE|Europe/London Europe/Jersey",
	"JM|America/Jamaica",
	"JO|Asia/Amman",
	"JP|Asia/Tokyo",
	"KE|Africa/Nairobi",
	"KG|Asia/Bishkek",
	"KH|Asia/Bangkok Asia/Phnom_Penh",
	"KI|Pacific/Tarawa Pacific/Enderbury Pacific/Kiritimati",
	"KM|Africa/Nairobi Indian/Comoro",
	"KN|America/Port_of_Spain America/St_Kitts",
	"KP|Asia/Pyongyang",
	"KR|Asia/Seoul",
	"KW|Asia/Riyadh Asia/Kuwait",
	"KY|America/Panama America/Cayman",
	"KZ|Asia/Almaty Asia/Qyzylorda Asia/Qostanay Asia/Aqtobe Asia/Aqtau Asia/Atyrau Asia/Oral",
	"LA|Asia/Bangkok Asia/Vientiane",
	"LB|Asia/Beirut",
	"LC|America/Port_of_Spain America/St_Lucia",
	"LI|Europe/Zurich Europe/Vaduz",
	"LK|Asia/Colombo",
	"LR|Africa/Monrovia",
	"LS|Africa/Johannesburg Africa/Maseru",
	"LT|Europe/Vilnius",
	"LU|Europe/Luxembourg",
	"LV|Europe/Riga",
	"LY|Africa/Tripoli",
	"MA|Africa/Casablanca",
	"MC|Europe/Monaco",
	"MD|Europe/Chisinau",
	"ME|Europe/Belgrade Europe/Podgorica",
	"MF|America/Port_of_Spain America/Marigot",
	"MG|Africa/Nairobi Indian/Antananarivo",
	"MH|Pacific/Majuro Pacific/Kwajalein",
	"MK|Europe/Belgrade Europe/Skopje",
	"ML|Africa/Abidjan Africa/Bamako",
	"MM|Asia/Yangon",
	"MN|Asia/Ulaanbaatar Asia/Hovd Asia/Choibalsan",
	"MO|Asia/Macau",
	"MP|Pacific/Guam Pacific/Saipan",
	"MQ|America/Martinique",
	"MR|Africa/Abidjan Africa/Nouakchott",
	"MS|America/Port_of_Spain America/Montserrat",
	"MT|Europe/Malta",
	"MU|Indian/Mauritius",
	"MV|Indian/Maldives",
	"MW|Africa/Maputo Africa/Blantyre",
	"MX|America/Mexico_City America/Cancun America/Merida America/Monterrey America/Matamoros America/Mazatlan America/Chihuahua America/Ojinaga America/Hermosillo America/Tijuana America/Bahia_Banderas",
	"MY|Asia/Kuala_Lumpur Asia/Kuching",
	"MZ|Africa/Maputo",
	"NA|Africa/Windhoek",
	"NC|Pacific/Noumea",
	"NE|Africa/Lagos Africa/Niamey",
	"NF|Pacific/Norfolk",
	"NG|Africa/Lagos",
	"NI|America/Managua",
	"NL|Europe/Amsterdam",
	"NO|Europe/Oslo",
	"NP|Asia/Kathmandu",
	"NR|Pacific/Nauru",
	"NU|Pacific/Niue",
	"NZ|Pacific/Auckland Pacific/Chatham",
	"OM|Asia/Dubai Asia/Muscat",
	"PA|America/Panama",
	"PE|America/Lima",
	"PF|Pacific/Tahiti Pacific/Marquesas Pacific/Gambier",
	"PG|Pacific/Port_Moresby Pacific/Bougainville",
	"PH|Asia/Manila",
	"PK|Asia/Karachi",
	"PL|Europe/Warsaw",
	"PM|America/Miquelon",
	"PN|Pacific/Pitcairn",
	"PR|America/Puerto_Rico",
	"PS|Asia/Gaza Asia/Hebron",
	"PT|Europe/Lisbon Atlantic/Madeira Atlantic/Azores",
	"PW|Pacific/Palau",
	"PY|America/Asuncion",
	"QA|Asia/Qatar",
	"RE|Indian/Reunion",
	"RO|Europe/Bucharest",
	"RS|Europe/Belgrade",
	"RU|Europe/Kaliningrad Europe/Moscow Europe/Simferopol Europe/Kirov Europe/Astrakhan Europe/Volgograd Europe/Saratov Europe/Ulyanovsk Europe/Samara Asia/Yekaterinburg Asia/Omsk Asia/Novosibirsk Asia/Barnaul Asia/Tomsk Asia/Novokuznetsk Asia/Krasnoyarsk Asia/Irkutsk Asia/Chita Asia/Yakutsk Asia/Khandyga Asia/Vladivostok Asia/Ust-Nera Asia/Magadan Asia/Sakhalin Asia/Srednekolymsk Asia/Kamchatka Asia/Anadyr",
	"RW|Africa/Maputo Africa/Kigali",
	"SA|Asia/Riyadh",
	"SB|Pacific/Guadalcanal",
	"SC|Indian/Mahe",
	"SD|Africa/Khartoum",
	"SE|Europe/Stockholm",
	"SG|Asia/Singapore",
	"SH|Africa/Abidjan Atlantic/St_Helena",
	"SI|Europe/Belgrade Europe/Ljubljana",
	"SJ|Europe/Oslo Arctic/Longyearbyen",
	"SK|Europe/Prague Europe/Bratislava",
	"SL|Africa/Abidjan Africa/Freetown",
	"SM|Europe/Rome Europe/San_Marino",
	"SN|Africa/Abidjan Africa/Dakar",
	"SO|Africa/Nairobi Africa/Mogadishu",
	"SR|America/Paramaribo",
	"SS|Africa/Juba",
	"ST|Africa/Sao_Tome",
	"SV|America/El_Salvador",
	"SX|America/Curacao America/Lower_Princes",
	"SY|Asia/Damascus",
	"SZ|Africa/Johannesburg Africa/Mbabane",
	"TC|America/Grand_Turk",
	"TD|Africa/Ndjamena",
	"TF|Indian/Reunion Indian/Kerguelen",
	"TG|Africa/Abidjan Africa/Lome",
	"TH|Asia/Bangkok",
	"TJ|Asia/Dushanbe",
	"TK|Pacific/Fakaofo",
	"TL|Asia/Dili",
	"TM|Asia/Ashgabat",
	"TN|Africa/Tunis",
	"TO|Pacific/Tongatapu",
	"TR|Europe/Istanbul",
	"TT|America/Port_of_Spain",
	"TV|Pacific/Funafuti",
	"TW|Asia/Taipei",
	"TZ|Africa/Nairobi Africa/Dar_es_Salaam",
	"UA|Europe/Simferopol Europe/Kiev Europe/Uzhgorod Europe/Zaporozhye",
	"UG|Africa/Nairobi Africa/Kampala",
	"UM|Pacific/Pago_Pago Pacific/Wake Pacific/Honolulu Pacific/Midway",
	"US|America/New_York America/Detroit America/Kentucky/Louisville America/Kentucky/Monticello America/Indiana/Indianapolis America/Indiana/Vincennes America/Indiana/Winamac America/Indiana/Marengo America/Indiana/Petersburg America/Indiana/Vevay America/Chicago America/Indiana/Tell_City America/Indiana/Knox America/Menominee America/North_Dakota/Center America/North_Dakota/New_Salem America/North_Dakota/Beulah America/Denver America/Boise America/Phoenix America/Los_Angeles America/Anchorage America/Juneau America/Sitka America/Metlakatla America/Yakutat America/Nome America/Adak Pacific/Honolulu",
	"UY|America/Montevideo",
	"UZ|Asia/Samarkand Asia/Tashkent",
	"VA|Europe/Rome Europe/Vatican",
	"VC|America/Port_of_Spain America/St_Vincent",
	"VE|America/Caracas",
	"VG|America/Port_of_Spain America/Tortola",
	"VI|America/Port_of_Spain America/St_Thomas",
	"VN|Asia/Bangkok Asia/Ho_Chi_Minh",
	"VU|Pacific/Efate",
	"WF|Pacific/Wallis",
	"WS|Pacific/Apia",
	"YE|Asia/Riyadh Asia/Aden",
	"YT|Africa/Nairobi Indian/Mayotte",
	"ZA|Africa/Johannesburg",
	"ZM|Africa/Maputo Africa/Lusaka",
	"ZW|Africa/Maputo Africa/Harare",
];
var require$$1 = {
	version: version,
	zones: zones,
	links: links,
	countries: countries,
};

var moment = (momentTimezone.exports = momentTimezone$1.exports);
moment.tz.load(require$$1);

(function (module) {
	//! moment-timezone-utils.js
	//! version : 0.5.33
	//! Copyright (c) JS Foundation and other contributors
	//! license : MIT
	//! github.com/moment/moment-timezone

	(function (root, factory) {
		/*global define*/
		if (module.exports) {
			module.exports = factory(momentTimezone.exports); // Node
		} else {
			factory(root.moment); // Browser
		}
	})(commonjsGlobal, function (moment) {
		if (!moment.tz) {
			throw new Error(
				"moment-timezone-utils.js must be loaded after moment-timezone.js"
			);
		}

		/************************************
		Pack Base 60
	************************************/

		var BASE60 =
				"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWX",
			EPSILON = 0.000001; // Used to fix floating point rounding errors

		function packBase60Fraction(fraction, precision) {
			var buffer = ".",
				output = "",
				current;

			while (precision > 0) {
				precision -= 1;
				fraction *= 60;
				current = Math.floor(fraction + EPSILON);
				buffer += BASE60[current];
				fraction -= current;

				// Only add buffer to output once we have a non-zero value.
				// This makes '.000' output '', and '.100' output '.1'
				if (current) {
					output += buffer;
					buffer = "";
				}
			}

			return output;
		}

		function packBase60(number, precision) {
			var output = "",
				absolute = Math.abs(number),
				whole = Math.floor(absolute),
				fraction = packBase60Fraction(
					absolute - whole,
					Math.min(~~precision, 10)
				);

			while (whole > 0) {
				output = BASE60[whole % 60] + output;
				whole = Math.floor(whole / 60);
			}

			if (number < 0) {
				output = "-" + output;
			}

			if (output && fraction) {
				return output + fraction;
			}

			if (!fraction && output === "-") {
				return "0";
			}

			return output || fraction || "0";
		}

		/************************************
		Pack
	************************************/

		function packUntils(untils) {
			var out = [],
				last = 0,
				i;

			for (i = 0; i < untils.length - 1; i++) {
				out[i] = packBase60(
					Math.round((untils[i] - last) / 1000) / 60,
					1
				);
				last = untils[i];
			}

			return out.join(" ");
		}

		function packAbbrsAndOffsets(source) {
			var index = 0,
				abbrs = [],
				offsets = [],
				indices = [],
				map = {},
				i,
				key;

			for (i = 0; i < source.abbrs.length; i++) {
				key = source.abbrs[i] + "|" + source.offsets[i];
				if (map[key] === undefined) {
					map[key] = index;
					abbrs[index] = source.abbrs[i];
					offsets[index] = packBase60(
						Math.round(source.offsets[i] * 60) / 60,
						1
					);
					index++;
				}
				indices[i] = packBase60(map[key], 0);
			}

			return (
				abbrs.join(" ") +
				"|" +
				offsets.join(" ") +
				"|" +
				indices.join("")
			);
		}

		function packPopulation(number) {
			if (!number) {
				return "";
			}
			if (number < 1000) {
				return number;
			}
			var exponent = String(number | 0).length - 2;
			var precision = Math.round(number / Math.pow(10, exponent));
			return precision + "e" + exponent;
		}

		function validatePackData(source) {
			if (!source.name) {
				throw new Error("Missing name");
			}
			if (!source.abbrs) {
				throw new Error("Missing abbrs");
			}
			if (!source.untils) {
				throw new Error("Missing untils");
			}
			if (!source.offsets) {
				throw new Error("Missing offsets");
			}
			if (
				source.offsets.length !== source.untils.length ||
				source.offsets.length !== source.abbrs.length
			) {
				throw new Error("Mismatched array lengths");
			}
		}

		function pack(source) {
			validatePackData(source);
			return [
				source.name, // 0 - timezone name
				packAbbrsAndOffsets(source), // 1 - abbrs, 2 - offsets, 3 - indices
				packUntils(source.untils), // 4 - untils
				packPopulation(source.population), // 5 - population
			].join("|");
		}

		function packCountry(source) {
			return [source.name, source.zones.join(" ")].join("|");
		}

		/************************************
		Create Links
	************************************/

		function arraysAreEqual(a, b) {
			var i;

			if (a.length !== b.length) {
				return false;
			}

			for (i = 0; i < a.length; i++) {
				if (a[i] !== b[i]) {
					return false;
				}
			}
			return true;
		}

		function zonesAreEqual(a, b) {
			return (
				arraysAreEqual(a.offsets, b.offsets) &&
				arraysAreEqual(a.abbrs, b.abbrs) &&
				arraysAreEqual(a.untils, b.untils)
			);
		}

		function findAndCreateLinks(input, output, links, groupLeaders) {
			var i,
				j,
				a,
				b,
				group,
				foundGroup,
				groups = [];

			for (i = 0; i < input.length; i++) {
				foundGroup = false;
				a = input[i];

				for (j = 0; j < groups.length; j++) {
					group = groups[j];
					b = group[0];
					if (zonesAreEqual(a, b)) {
						if (a.population > b.population) {
							group.unshift(a);
						} else if (
							a.population === b.population &&
							groupLeaders &&
							groupLeaders[a.name]
						) {
							group.unshift(a);
						} else {
							group.push(a);
						}
						foundGroup = true;
					}
				}

				if (!foundGroup) {
					groups.push([a]);
				}
			}

			for (i = 0; i < groups.length; i++) {
				group = groups[i];
				output.push(group[0]);
				for (j = 1; j < group.length; j++) {
					links.push(group[0].name + "|" + group[j].name);
				}
			}
		}

		function createLinks(source, groupLeaders) {
			var zones = [],
				links = [];

			if (source.links) {
				links = source.links.slice();
			}

			findAndCreateLinks(source.zones, zones, links, groupLeaders);

			return {
				version: source.version,
				zones: zones,
				links: links.sort(),
			};
		}

		/************************************
		Filter Years
	************************************/

		function findStartAndEndIndex(untils, start, end) {
			var startI = 0,
				endI = untils.length + 1,
				untilYear,
				i;

			if (!end) {
				end = start;
			}

			if (start > end) {
				i = start;
				start = end;
				end = i;
			}

			for (i = 0; i < untils.length; i++) {
				if (untils[i] == null) {
					continue;
				}
				untilYear = new Date(untils[i]).getUTCFullYear();
				if (untilYear < start) {
					startI = i + 1;
				}
				if (untilYear > end) {
					endI = Math.min(endI, i + 1);
				}
			}

			return [startI, endI];
		}

		function filterYears(source, start, end) {
			var slice = Array.prototype.slice,
				indices = findStartAndEndIndex(source.untils, start, end),
				untils = slice.apply(source.untils, indices);

			untils[untils.length - 1] = null;

			return {
				name: source.name,
				abbrs: slice.apply(source.abbrs, indices),
				untils: untils,
				offsets: slice.apply(source.offsets, indices),
				population: source.population,
				countries: source.countries,
			};
		}

		/************************************
		Filter, Link, and Pack
	************************************/

		function filterLinkPack(input, start, end, groupLeaders) {
			var i,
				inputZones = input.zones,
				outputZones = [],
				output;

			for (i = 0; i < inputZones.length; i++) {
				outputZones[i] = filterYears(inputZones[i], start, end);
			}

			output = createLinks(
				{
					zones: outputZones,
					links: input.links.slice(),
					version: input.version,
				},
				groupLeaders
			);

			for (i = 0; i < output.zones.length; i++) {
				output.zones[i] = pack(output.zones[i]);
			}

			output.countries = input.countries
				? input.countries.map(function (unpacked) {
						return packCountry(unpacked);
				  })
				: [];

			return output;
		}

		/************************************
		Exports
	************************************/

		moment.tz.pack = pack;
		moment.tz.packBase60 = packBase60;
		moment.tz.createLinks = createLinks;
		moment.tz.filterYears = filterYears;
		moment.tz.filterLinkPack = filterLinkPack;
		moment.tz.packCountry = packCountry;

		return moment;
	});
})(momentTimezoneUtils);

/**
 * External dependencies
 */
/** @typedef {import('moment').Moment} Moment */

/** @typedef {import('moment').LocaleSpecification} MomentLocaleSpecification */

/**
 * @typedef MeridiemConfig
 * @property {string} am Lowercase AM.
 * @property {string} AM Uppercase AM.
 * @property {string} pm Lowercase PM.
 * @property {string} PM Uppercase PM.
 */

/**
 * @typedef FormatsConfig
 * @property {string} time                Time format.
 * @property {string} date                Date format.
 * @property {string} datetime            Datetime format.
 * @property {string} datetimeAbbreviated Abbreviated datetime format.
 */

/**
 * @typedef TimezoneConfig
 * @property {string} offset Offset setting.
 * @property {string} string The timezone as a string (e.g., `'America/Los_Angeles'`).
 * @property {string} abbr   Abbreviation for the timezone.
 */

/* eslint-disable jsdoc/valid-types */

/**
 * @typedef L10nSettings
 * @property {string}                                     locale        Moment locale.
 * @property {MomentLocaleSpecification['months']}        months        Locale months.
 * @property {MomentLocaleSpecification['monthsShort']}   monthsShort   Locale months short.
 * @property {MomentLocaleSpecification['weekdays']}      weekdays      Locale weekdays.
 * @property {MomentLocaleSpecification['weekdaysShort']} weekdaysShort Locale weekdays short.
 * @property {MeridiemConfig}                             meridiem      Meridiem config.
 * @property {MomentLocaleSpecification['relativeTime']}  relative      Relative time config.
 */

/* eslint-enable jsdoc/valid-types */

/**
 * @typedef DateSettings
 * @property {L10nSettings}   l10n     Localization settings.
 * @property {FormatsConfig}  formats  Date/time formats config.
 * @property {TimezoneConfig} timezone Timezone settings.
 */

const WP_ZONE = "WP"; // This regular expression tests positive for UTC offsets as described in ISO 8601.
// See: https://en.wikipedia.org/wiki/ISO_8601#Time_offsets_from_UTC

const VALID_UTC_OFFSET = /^[+-][0-1][0-9](:?[0-9][0-9])?$/; // Changes made here will likely need to be made in `lib/client-assets.php` as
// well because it uses the `setSettings()` function to change these settings.

/** @type {DateSettings} */

let settings = {
	l10n: {
		locale: "en",
		months: [
			"January",
			"February",
			"March",
			"April",
			"May",
			"June",
			"July",
			"August",
			"September",
			"October",
			"November",
			"December",
		],
		monthsShort: [
			"Jan",
			"Feb",
			"Mar",
			"Apr",
			"May",
			"Jun",
			"Jul",
			"Aug",
			"Sep",
			"Oct",
			"Nov",
			"Dec",
		],
		weekdays: [
			"Sunday",
			"Monday",
			"Tuesday",
			"Wednesday",
			"Thursday",
			"Friday",
			"Saturday",
		],
		weekdaysShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
		meridiem: {
			am: "am",
			pm: "pm",
			AM: "AM",
			PM: "PM",
		},
		relative: {
			future: "%s from now",
			past: "%s ago",
			s: "a few seconds",
			ss: "%d seconds",
			m: "a minute",
			mm: "%d minutes",
			h: "an hour",
			hh: "%d hours",
			d: "a day",
			dd: "%d days",
			M: "a month",
			MM: "%d months",
			y: "a year",
			yy: "%d years",
		},
	},
	formats: {
		time: "g: i a",
		date: "F j, Y",
		datetime: "F j, Y g: i a",
		datetimeAbbreviated: "M j, Y g: i a",
	},
	timezone: {
		offset: "0",
		string: "",
		abbr: "",
	},
};
/**
 * Returns the currently defined date settings.
 *
 * @return {Object} Settings, including locale data.
 */

function __experimentalGetSettings() {
	return settings;
}

function setupWPTimezone() {
	// Create WP timezone based off dateSettings.
	momentLib.tz.add(
		momentLib.tz.pack({
			name: WP_ZONE,
			abbrs: [WP_ZONE],
			untils: [null],
			offsets: [-settings.timezone.offset * 60 || 0],
		})
	);
} // Date constants.

/**
 * Number of seconds in one minute.
 *
 * @type {number}
 */

const MINUTE_IN_SECONDS = 60;
/**
 * Number of minutes in one hour.
 *
 * @type {number}
 */

const HOUR_IN_MINUTES = 60;
/**
 * Number of seconds in one hour.
 *
 * @type {number}
 */

const HOUR_IN_SECONDS = 60 * MINUTE_IN_SECONDS;
/**
 * Map of PHP formats to Moment.js formats.
 *
 * These are used internally by {@link wp.date.format}, and are either
 * a string representing the corresponding Moment.js format code, or a
 * function which returns the formatted string.
 *
 * This should only be used through {@link wp.date.format}, not
 * directly.
 */

const formatMap = {
	// Day
	d: "DD",
	D: "ddd",
	j: "D",
	l: "dddd",
	N: "E",

	/**
	 * Gets the ordinal suffix.
	 *
	 * @param {Moment} momentDate Moment instance.
	 *
	 * @return {string} Formatted date.
	 */
	S(momentDate) {
		// Do - D
		const num = momentDate.format("D");
		const withOrdinal = momentDate.format("Do");
		return withOrdinal.replace(num, "");
	},

	w: "d",

	/**
	 * Gets the day of the year (zero-indexed).
	 *
	 * @param {Moment} momentDate Moment instance.
	 *
	 * @return {string} Formatted date.
	 */
	z(momentDate) {
		// DDD - 1
		return (parseInt(momentDate.format("DDD"), 10) - 1).toString();
	},

	// Week
	W: "W",
	// Month
	F: "MMMM",
	m: "MM",
	M: "MMM",
	n: "M",

	/**
	 * Gets the days in the month.
	 *
	 * @param {Moment} momentDate Moment instance.
	 *
	 * @return {number} Formatted date.
	 */
	t(momentDate) {
		return momentDate.daysInMonth();
	},

	// Year

	/**
	 * Gets whether the current year is a leap year.
	 *
	 * @param {Moment} momentDate Moment instance.
	 *
	 * @return {string} Formatted date.
	 */
	L(momentDate) {
		return momentDate.isLeapYear() ? "1" : "0";
	},

	o: "GGGG",
	Y: "YYYY",
	y: "YY",
	// Time
	a: "a",
	A: "A",

	/**
	 * Gets the current time in Swatch Internet Time (.beats).
	 *
	 * @param {Moment} momentDate Moment instance.
	 *
	 * @return {number} Formatted date.
	 */
	B(momentDate) {
		const timezoned = momentLib(momentDate).utcOffset(60);
		const seconds = parseInt(timezoned.format("s"), 10),
			minutes = parseInt(timezoned.format("m"), 10),
			hours = parseInt(timezoned.format("H"), 10);
		return parseInt(
			(
				(seconds +
					minutes * MINUTE_IN_SECONDS +
					hours * HOUR_IN_SECONDS) /
				86.4
			).toString(),
			10
		);
	},

	g: "h",
	G: "H",
	h: "hh",
	H: "HH",
	i: "mm",
	s: "ss",
	u: "SSSSSS",
	v: "SSS",
	// Timezone
	e: "zz",

	/**
	 * Gets whether the timezone is in DST currently.
	 *
	 * @param {Moment} momentDate Moment instance.
	 *
	 * @return {string} Formatted date.
	 */
	I(momentDate) {
		return momentDate.isDST() ? "1" : "0";
	},

	O: "ZZ",
	P: "Z",
	T: "z",

	/**
	 * Gets the timezone offset in seconds.
	 *
	 * @param {Moment} momentDate Moment instance.
	 *
	 * @return {number} Formatted date.
	 */
	Z(momentDate) {
		// Timezone offset in seconds.
		const offset = momentDate.format("Z");
		const sign = offset[0] === "-" ? -1 : 1;
		const parts = offset
			.substring(1)
			.split(":")
			.map((n) => parseInt(n, 10));
		return (
			sign * (parts[0] * HOUR_IN_MINUTES + parts[1]) * MINUTE_IN_SECONDS
		);
	},

	// Full date/time
	c: "YYYY-MM-DDTHH:mm:ssZ",
	// .toISOString
	r: "ddd, D MMM YYYY HH:mm:ss ZZ",
	U: "X",
};
/**
 * Formats a date. Does not alter the date's timezone.
 *
 * @param {string}                             dateFormat PHP-style formatting string.
 *                                                        See php.net/date.
 * @param {Moment | Date | string | undefined} dateValue  Date object or string,
 *                                                        parsable by moment.js.
 *
 * @return {string} Formatted date.
 */

function format(dateFormat, dateValue = new Date()) {
	let i, char;
	const newFormat = [];
	const momentDate = momentLib(dateValue);

	for (i = 0; i < dateFormat.length; i++) {
		char = dateFormat[i]; // Is this an escape?

		if ("\\" === char) {
			// Add next character, then move on.
			i++;
			newFormat.push("[" + dateFormat[i] + "]");
			continue;
		}

		if (char in formatMap) {
			const formatter =
				/** @type {keyof formatMap} */
				formatMap[char];

			if (typeof formatter !== "string") {
				// If the format is a function, call it.
				newFormat.push("[" + formatter(momentDate) + "]");
			} else {
				// Otherwise, add as a formatting string.
				newFormat.push(formatter);
			}
		} else {
			newFormat.push("[" + char + "]");
		}
	} // Join with [] between to separate characters, and replace
	// unneeded separators with static text.

	return momentDate.format(newFormat.join("[]"));
}
/**
 * Formats a date (like `date()` in PHP).
 *
 * @param {string}                             dateFormat PHP-style formatting string.
 *                                                        See php.net/date.
 * @param {Moment | Date | string | undefined} dateValue  Date object or string, parsable
 *                                                        by moment.js.
 * @param {string | undefined}                 timezone   Timezone to output result in or a
 *                                                        UTC offset. Defaults to timezone from
 *                                                        site.
 *
 * @see https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
 * @see https://en.wikipedia.org/wiki/ISO_8601#Time_offsets_from_UTC
 *
 * @return {string} Formatted date in English.
 */

function date(dateFormat, dateValue = new Date(), timezone) {
	const dateMoment = buildMoment(dateValue, timezone);
	return format(dateFormat, dateMoment);
}
/**
 * Creates a moment instance using the given timezone or, if none is provided, using global settings.
 *
 * @param {Moment | Date | string | undefined} dateValue Date object or string, parsable
 *                                                       by moment.js.
 * @param {string | undefined}                 timezone  Timezone to output result in or a
 *                                                       UTC offset. Defaults to timezone from
 *                                                       site.
 *
 * @see https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
 * @see https://en.wikipedia.org/wiki/ISO_8601#Time_offsets_from_UTC
 *
 * @return {Moment} a moment instance.
 */

function buildMoment(dateValue, timezone = "") {
	const dateMoment = momentLib(dateValue);

	if (timezone && !isUTCOffset(timezone)) {
		return dateMoment.tz(timezone);
	}

	if (timezone && isUTCOffset(timezone)) {
		return dateMoment.utcOffset(timezone);
	}

	if (settings.timezone.string) {
		return dateMoment.tz(settings.timezone.string);
	}

	return dateMoment.utcOffset(settings.timezone.offset);
}
/**
 * Returns whether a certain UTC offset is valid or not.
 *
 * @param {number|string} offset a UTC offset.
 *
 * @return {boolean} whether a certain UTC offset is valid or not.
 */

function isUTCOffset(offset) {
	if ("number" === typeof offset) {
		return true;
	}

	return VALID_UTC_OFFSET.test(offset);
}

setupWPTimezone();

var isString = function isString(args) {
	return args !== null && typeof args === "string";
};
var isNumber = function isNumber(args) {
	return args !== null && typeof args === "number";
};

var isInteger = function isInteger(obj) {
	return String(Math.floor(Number(obj))) === obj;
};

var isFunction = function isFunction(functionName) {
	return functionName !== null && typeof functionName === "function";
};
var isArray = function isArray(args) {
	return args !== null && _typeof$1(args) === "object" && Array.isArray(args);
};
var isObject = function isObject(obj) {
	return obj !== null && _typeof$1(obj) === "object" && !isArray(obj);
};
var isVisible = function isVisible(values, props) {
	if (
		!(props !== null && props !== void 0 && props.rules) ||
		props.name == undefined
	) {
		return true;
	}

	var whenVar = when(props.rules, values);
	return Boolean(whenVar);
};
var withState = function withState(type) {
	return Boolean(["group", "section"].includes(type));
};
var isEmptyObj = function isEmptyObj(obj) {
	for (var k in obj) {
		if (obj.hasOwnProperty(k)) {
			return false;
		}
	}

	return true;
};
var getIn = function getIn(obj, key, def, p) {
	if (p === void 0) {
		p = 0;
	}

	var path = toPath(key);

	while (obj && p < path.length) {
		obj = obj[path[p++]];
	}

	return obj === undefined ? def : obj;
};
var sortingFields = function sortingFields(fields) {
	return [].concat(fields).sort(function (a, b) {
		if (a.priority == undefined || b.priority == undefined) return 0;
		return a.priority > b.priority ? 1 : -1;
	});
};
var getSelectedValues = function getSelectedValues(options) {
	return Array.from(options)
		.filter(function (el) {
			return el.selected;
		})
		.map(function (el) {
			return el.value;
		});
};
var executeChange = function executeChange(eventOrTextValue, maybePath) {
	var field = maybePath;
	var val = eventOrTextValue;
	var parsed;

	if (!isString(eventOrTextValue)) {
		if (eventOrTextValue.persist) {
			eventOrTextValue.persist();
		}

		var target = eventOrTextValue.target
			? eventOrTextValue.target
			: eventOrTextValue.currentTarget;
		var type = target.type,
			name = target.name,
			value = target.value,
			checked = target.checked;
		target.options;
		var multiple = target.multiple;
		field = maybePath ? maybePath : name;
		val = /number|range/.test(type)
			? ((parsed = parseFloat(value)), isNaN(parsed) ? "" : parsed)
			: /checkbox/.test(type) // checkboxes
			? checked
			: !!multiple
			? value
			: value;
	}

	return {
		field: field,
		val: val,
	};
};
var objectWithoutPropertiesLoose = function objectWithoutPropertiesLoose(
	source,
	excluded
) {
	if (source == null) return {};
	var target = {};
	var sourceKeys = Object.keys(source);
	var key, i;

	for (i = 0; i < sourceKeys.length; i++) {
		key = sourceKeys[i];
		if (excluded.indexOf(key) >= 0) continue;
		target[key] = source[key];
	}

	return target;
};
var setIn = function setIn(obj, path, value) {
	var res = clone(obj); // this keeps inheritance when obj is a class

	var resVal = res;
	var i = 0;
	var pathArray = toPath(path);

	for (; i < pathArray.length - 1; i++) {
		var currentPath = pathArray[i];
		var currentObj = getIn(obj, pathArray.slice(0, i + 1));

		if (currentObj && (isObject(currentObj) || Array.isArray(currentObj))) {
			resVal = resVal[currentPath] = clone(currentObj);
		} else {
			var nextPath = pathArray[i + 1];
			resVal = resVal[currentPath] =
				isInteger(nextPath) && Number(nextPath) >= 0 ? [] : {};
		}
	} // Return original object if new value is the same as current

	if ((i === 0 ? obj : resVal)[pathArray[i]] === value) {
		return obj;
	}

	if (value === undefined) {
		delete resVal[pathArray[i]];
	} else {
		resVal[pathArray[i]] = value;
	} // If the path array has a single element, the loop did not run.
	// Deleting on `resVal` had no effect in this scenario, so we delete on the result instead.

	if (i === 0 && value === undefined) {
		delete res[pathArray[i]];
	}

	return res;
};
var validFieldProps = function validFieldProps(defaultProps) {
	var exclude =
		arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
	var type = defaultProps.type;
	var filterOutArray = [
		"validation_rules",
		"default",
		"rules",
		"meta",
		"switch",
	].concat(_toConsumableArray(exclude));

	if (
		type !== "select" &&
		type !== "radio-card" &&
		type !== "toggle" &&
		defaultProps.multiple
	) {
		filterOutArray.push("options");
	}

	if (
		type !== "group" &&
		type !== "repeater" &&
		type !== "section" &&
		type !== "button"
	) {
		filterOutArray.push("fields");
	}

	var validProps = objectWithoutPropertiesLoose(defaultProps, filterOutArray);

	if (
		defaultProps !== null &&
		defaultProps !== void 0 &&
		defaultProps.label &&
		!(
			defaultProps !== null &&
			defaultProps !== void 0 &&
			defaultProps.placeholder
		)
	) {
		validProps.placeholder = defaultProps.label;
	}

	return validProps;
};
var hitAAJX = function hitAAJX(ajax) {
	var context =
		arguments.length > 1 && arguments[1] !== undefined
			? arguments[1]
			: null;

	if (context !== null && ajax) {
		var isEligible = true;

		if (ajax !== null && ajax !== void 0 && ajax.rules) {
			isEligible = when(
				ajax === null || ajax === void 0 ? void 0 : ajax.rules,
				context.values
			);
		}

		if (isEligible) {
			var data = {};
			Object.keys(ajax.data).map(function (singleData) {
				var _ajax$data$singleData, _ajax$data$singleData2;

				if (
					((_ajax$data$singleData = (_ajax$data$singleData2 =
						ajax.data[singleData]).indexOf) === null ||
					_ajax$data$singleData === void 0
						? void 0
						: _ajax$data$singleData.call(
								_ajax$data$singleData2,
								"@"
						  )) > -1
				) {
					var _context$values;

					var eligibleKey = ajax.data[singleData].substr(1);
					data[singleData] =
						(_context$values = context.values) === null ||
						_context$values === void 0
							? void 0
							: _context$values[eligibleKey];
				} else {
					data[singleData] = ajax.data[singleData];
				}
			});
			return wpFetch({
				path: ajax.api,
				data: data,
			}).then(function (response) {
				var _response$data, _response$data2;

				if (
					(response === null || response === void 0
						? void 0
						: response.status) == "success" &&
					response !== null &&
					response !== void 0 &&
					response.redirect
				) {
					window.location =
						response === null || response === void 0
							? void 0
							: response.redirect;
				}

				if (
					response !== null &&
					response !== void 0 &&
					(_response$data = response.data) !== null &&
					_response$data !== void 0 &&
					_response$data.context &&
					isObject(
						response === null || response === void 0
							? void 0
							: (_response$data2 = response.data) === null ||
							  _response$data2 === void 0
							? void 0
							: _response$data2.context
					)
				) {
					Object.keys(response.data.context).map(function (
						eligibleKey
					) {
						context.setFieldValue(
							eligibleKey,
							response.data.context[eligibleKey]
						);
					});
				}

				if (
					ajax !== null &&
					ajax !== void 0 &&
					ajax.trigger &&
					isString(
						ajax === null || ajax === void 0 ? void 0 : ajax.trigger
					)
				) {
					var at = ajax.trigger.indexOf("@");
					var colon = ajax.trigger.indexOf(":");

					if (at === 0 && colon > 0) {
						var eligibleKey = ajax.trigger.substr(1, colon - 1);
						var eligibleDataToSet = ajax.trigger.substr(colon + 1);

						if (eligibleDataToSet == "true") {
							eligibleDataToSet = true;
						} else if (eligibleDataToSet == "false") {
							eligibleDataToSet = false;
						}

						context.setFieldValue(eligibleKey, eligibleDataToSet);
					}
				}

				return response;
			});
		}
	}

	return Promise.reject(false);
};
var getTime = function getTime(value) {
	var _settings$timezone;

	var keepLocalTime =
		arguments.length > 1 && arguments[1] !== undefined
			? arguments[1]
			: false;

	var settings = __experimentalGetSettings();

	var _value = momentLib
		.utc(value ? value : undefined)
		.utcOffset(
			+(settings === null || settings === void 0
				? void 0
				: (_settings$timezone = settings.timezone) === null ||
				  _settings$timezone === void 0
				? void 0
				: _settings$timezone.offset),
			keepLocalTime
		);

	return _value;
};
var merge$1 = function merge(array_one, array_two, key) {
	// if( ! isArray(array_one) && ! isArray( array_two ) && isObject( array_one ) && isObject( array_two ) ) {
	//     return { ...array_one, ...array_two }
	// }
	var data = _toConsumableArray(array_one);

	var _array_two = array_two.filter(function (element) {
		return (
			data.findIndex(function (_element) {
				return _element[key] === element[key];
			}) <= -1
		);
	});

	return [].concat(_toConsumableArray(data), _toConsumableArray(_array_two));
};

var intersect_1 = intersect;

function many(sets) {
	var o = {};
	var l = sets.length - 1;
	var first = sets[0];
	var last = sets[l];

	for (var i in first) o[first[i]] = 0;

	for (var i = 1; i <= l; i++) {
		var row = sets[i];
		for (var j in row) {
			var key = row[j];
			if (o[key] === i - 1) o[key] = i;
		}
	}

	var a = [];
	for (var i in last) {
		var key = last[i];
		if (o[key] === l) a.push(key);
	}

	return a;
}

function intersect(a, b) {
	if (!b) return many(a);

	var res = [];
	for (var i = 0; i < a.length; i++) {
		if (indexOf(b, a[i]) > -1) res.push(a[i]);
	}
	return res;
}

intersect.big = function (a, b) {
	if (!b) return many(a);

	var ret = [];
	var temp = {};

	for (var i = 0; i < b.length; i++) {
		temp[b[i]] = true;
	}
	for (var i = 0; i < a.length; i++) {
		if (temp[a[i]]) ret.push(a[i]);
	}

	return ret;
};

function indexOf(arr, el) {
	for (var i = 0; i < arr.length; i++) {
		if (arr[i] === el) return i;
	}
	return -1;
}

var _typeof = function _typeof(obj) {
	if (
		typeof Symbol === "function" &&
		_typeof$1(Symbol.iterator) === "symbol"
	) {
		return _typeof$1(obj);
	} else {
		return obj &&
			typeof Symbol === "function" &&
			obj.constructor === Symbol &&
			obj !== Symbol.prototype
			? "symbol"
			: _typeof$1(obj);
	}
};

var get = function get(obj, path) {
	var defaultValue =
		(arguments.length <= 2 ? 0 : arguments.length - 2) > 2 &&
		(arguments.length <= 4 ? undefined : arguments[4]) !== undefined
			? arguments.length <= 4
				? undefined
				: arguments[4]
			: undefined;
	return String.prototype.split
		.call(path, /[,[\].]+?/)
		.filter(Boolean)
		.reduce(function (a, c) {
			return a && Object.hasOwnProperty.call(a, c) ? a[c] : defaultValue;
		}, obj);
};

var rules = {
	is: function is(key, value, data) {
		return get(data, key) == value;
	},
	"!is": function is(key, value, data) {
		return !rules.is(key, value, data);
	},
	includes: function includes(key, checkAgainst, selectedData) {
		if (!isEmptyObj(selectedData)) {
			var newData = get(selectedData, key);

			if (_typeof(newData) != "function") {
				if (isArray(checkAgainst) && isArray(newData)) {
					var _intersect;

					return (_intersect = intersect_1(newData, checkAgainst)) ===
						null || _intersect === void 0
						? void 0
						: _intersect.length;
				} else if (
					isArray(checkAgainst) &&
					_typeof(newData) == "string"
				) {
					return checkAgainst.includes(newData);
				} else if (
					isArray(newData) &&
					_typeof(checkAgainst) == "string"
				) {
					return newData.includes(checkAgainst);
				}
			}
		}

		return false;
	},
	"!includes": function includes(key, value, data) {
		return !rules.includes(key, value, data);
	},
	isOfType: function isOfType(key, value, data) {
		return _typeof(get(data, key)) === value;
	},
	"!isOfType": function isOfType(key, value, data) {
		return !rules.isOfType(key, value, data);
	},
	allOf: function allOf(key, values, data) {
		if (!Array.isArray(values)) {
			throw Error('"allOf" condition requires an array as #3 argument');
		}

		var dataValues = get(data, key);
		return values.every(function (currentValue) {
			return dataValues.includes(currentValue);
		});
	},
	anyOf: function anyOf(key, values, data) {
		if (!Array.isArray(values)) {
			throw Error('"anyOf" condition requires an array as #3 argument');
		}

		var dataValue = get(data, key);
		return values.includes(dataValue);
	},
	gt: function gt(key, value, data) {
		return get(data, key) > value;
	},
	gte: function gte(key, value, data) {
		return get(data, key) >= value;
	},
	lt: function lt(key, value, data) {
		return get(data, key) < value;
	},
	lte: function lte(key, value, data) {
		return get(data, key) <= value;
	},
};
var logicalRules = {
	and: function and(data) {
		return !data.includes(false);
	},
	or: function or(data) {
		return data.includes(true);
	},
	not: function not(data) {
		if (data.length !== 1) {
			throw Error(
				'"not" can have only one comparison rule, multiple rules given'
			);
		}

		return !data[0];
	},
};

var isValidCondition = function isValidCondition(conditions) {
	if (
		Array.isArray(conditions) &&
		Array.isArray(conditions[1]) &&
		conditions[0] &&
		logicalRules[conditions[0].toLowerCase()]
	) {
		return true;
	}

	return false;
};

var processRule = function processRule(_ref, data) {
	var condition = _ref[0],
		key = _ref[1],
		value = _ref[2];

	if (typeof condition !== "string" || rules[condition] === undefined) {
		throw Error("Invalid comparison rule " + condition + ".");
	}

	return rules[condition](key, value, data);
};

var processCondition = function processCondition(condition, data) {
	return logicalRules[condition.toLowerCase()](data);
};

var validate = function validate(conditions, data) {
	if (!isValidCondition(conditions)) {
		return processRule(conditions, data);
	}

	var logicalRule = conditions.slice(0, 1)[0];
	var comparisonRules = conditions.slice(1);
	var result = comparisonRules.map(function (condition, index) {
		if (isValidCondition(condition)) {
			return when(condition, data);
		}

		return processRule(condition, data);
	});
	return processCondition(logicalRule, result);
};

var when = function when(conditions, data) {
	if (typeof conditions === "function") {
		return Promise.resolve(conditions(data));
	}

	return validate(conditions, data);
};

function ownKeys$9(object, enumerableOnly) {
	var keys = Object.keys(object);
	if (Object.getOwnPropertySymbols) {
		var symbols = Object.getOwnPropertySymbols(object);
		if (enumerableOnly) {
			symbols = symbols.filter(function (sym) {
				return Object.getOwnPropertyDescriptor(object, sym).enumerable;
			});
		}
		keys.push.apply(keys, symbols);
	}
	return keys;
}

function _objectSpread$8(target) {
	for (var i = 1; i < arguments.length; i++) {
		var source = arguments[i] != null ? arguments[i] : {};
		if (i % 2) {
			ownKeys$9(Object(source), true).forEach(function (key) {
				_defineProperty$1(target, key, source[key]);
			});
		} else if (Object.getOwnPropertyDescriptors) {
			Object.defineProperties(
				target,
				Object.getOwnPropertyDescriptors(source)
			);
		} else {
			ownKeys$9(Object(source)).forEach(function (key) {
				Object.defineProperty(
					target,
					key,
					Object.getOwnPropertyDescriptor(source, key)
				);
			});
		}
	}
	return target;
}
var DEFAULT_STATE = {
	savedValues: {
		type: "conversions",
		source: "edd",
	},
	values: {
		// source: "woocommerce",
	},
	touched: {},
	errors: {},
};
var actions = {
	setSavedValues: function setSavedValues(payload) {
		return {
			type: "SET_SAVED_VALUES",
			payload: payload,
		};
	},
	setFieldValue: function setFieldValue(_ref) {
		var name = _ref.name,
			value = _ref.value;
		return {
			type: "FIELD_VALUE",
			name: name,
			payload: value,
		};
	},
	removeFieldValue: function removeFieldValue(payload) {
		return {
			type: "REMOVE_FIELD_VALUE",
			payload: payload,
		};
	},
	resetFieldValue: function resetFieldValue(payload) {
		return {
			type: "RESET_FIELD_VALUE",
			payload: payload,
		};
	},
	setFieldTouched: function setFieldTouched(payload) {
		return {
			type: "FIELD_TOUCHED",
			payload: payload,
		};
	},
	setError: function setError(payload) {
		return {
			type: "FIELD_ERROR",
			payload: payload,
		};
	},
	removeError: function removeError(payload) {
		return {
			type: "REMOVE_FIELD_ERROR",
			payload: payload,
		};
	},
};
var store = {
	reducer: function reducer() {
		var state =
			arguments.length > 0 && arguments[0] !== undefined
				? arguments[0]
				: DEFAULT_STATE;
		var action = arguments.length > 1 ? arguments[1] : undefined;

		switch (action.type) {
			case "SET_SAVED_VALUES": {
				var _updatedState = _objectSpread$8({}, state);

				_updatedState = _objectSpread$8(
					_objectSpread$8({}, _updatedState),
					{},
					{
						values: action.payload,
						savedValues: action.payload,
					}
				);
				return _updatedState;
			}

			case "FIELD_VALUE": {
				var _updatedState3;

				var _updatedState2 = _objectSpread$8({}, state);

				var payload = action.payload;
				action.name;
				_updatedState2 = _objectSpread$8(
					_objectSpread$8({}, _updatedState2),
					{},
					{
						values: _objectSpread$8(
							_objectSpread$8(
								{},
								(_updatedState3 = _updatedState2) === null ||
									_updatedState3 === void 0
									? void 0
									: _updatedState3.values
							),
							payload
						),
					}
				);
				return _updatedState2;
			}

			case "REMOVE_FIELD_VALUE": {
				var _updatedState4$values;

				var _updatedState4 = _objectSpread$8({}, state);

				var _payload = action.payload;

				if (
					(_updatedState4$values = _updatedState4.values) !== null &&
					_updatedState4$values !== void 0 &&
					_updatedState4$values[_payload]
				) {
					delete _updatedState4.values[_payload];
				}

				return _updatedState4;
			}

			case "RESET_FIELD_VALUE": {
				var _updatedState5$values;

				var _updatedState5 = _objectSpread$8({}, state);

				if (
					(_updatedState5$values = _updatedState5.values) !== null &&
					_updatedState5$values !== void 0 &&
					_updatedState5$values[action.payload]
				) {
					var _updatedState5$savedV;

					delete _updatedState5.values[action.payload];

					if (
						(_updatedState5$savedV = _updatedState5.savedValues) !==
							null &&
						_updatedState5$savedV !== void 0 &&
						_updatedState5$savedV[action.payload]
					) {
						_updatedState5.values[action.payload] =
							_updatedState5.savedValues[action.payload];
					}
				}

				return _updatedState5;
			}

			case "FIELD_ERROR":
				return _objectSpread$8(
					_objectSpread$8({}, state),
					{},
					{
						errors: _objectSpread$8(
							_objectSpread$8({}, state.errors),
							action.payload
						),
					}
				);

			case "REMOVE_FIELD_ERROR":
				var updatedState = _objectSpread$8({}, state);

				delete updatedState.errors[action.payload];
				return updatedState;

			case "FIELD_TOUCHED":
				return _objectSpread$8(
					_objectSpread$8({}, state),
					{},
					{
						touched: _objectSpread$8(
							_objectSpread$8({}, state.touched),
							action.payload
						),
					}
				);
		}

		return state;
	},
	actions: actions,
	selectors: {
		getValues: function getValues(state) {
			return state.values;
		},
		getFieldValue: function getFieldValue(state, name) {
			var _state$values;

			return (_state$values = state.values) === null ||
				_state$values === void 0
				? void 0
				: _state$values[name];
		},
		getSavedFieldValue: function getSavedFieldValue(
			state,
			name,
			comparisonKey
		) {
			var _state$savedValues2, _state$values2, _state$savedValues3;

			if (comparisonKey === null) {
				var _state$savedValues;

				return (_state$savedValues = state.savedValues) === null ||
					_state$savedValues === void 0
					? void 0
					: _state$savedValues[name];
			}

			return ((_state$savedValues2 = state.savedValues) === null ||
			_state$savedValues2 === void 0
				? void 0
				: _state$savedValues2[comparisonKey]) ===
				((_state$values2 = state.values) === null ||
				_state$values2 === void 0
					? void 0
					: _state$values2[comparisonKey])
				? (_state$savedValues3 = state.savedValues) === null ||
				  _state$savedValues3 === void 0
					? void 0
					: _state$savedValues3[name]
				: false;
		},
		isTouched: function isTouched(state, current) {
			var _state$touched;

			return (_state$touched = state.touched) === null ||
				_state$touched === void 0
				? void 0
				: _state$touched[current];
		},
		getError: function getError(state, current) {
			var _state$errors;

			return (_state$errors = state.errors) === null ||
				_state$errors === void 0
				? void 0
				: _state$errors[current];
		},
		isVisible: function isVisible(state, props) {
			if (!props.rules || props.name == undefined) {
				return true;
			}

			var whenVar = when(props.rules, state.values);
			return Boolean(whenVar);
		},
	},
};

var Menu$1 = function Menu(props) {
	var _context$values, _context$values2;

	if (props.tabs === undefined) {
		throw new Error("There are no tabs defined!");
	}

	var active = props.active,
		setActive = props.setActive,
		tabs = props.tabs,
		config = props.config,
		context = props.context;

	var _useState = useState([]),
		_useState2 = _slicedToArray(_useState, 2),
		tabsFields = _useState2[0],
		setTabsFields = _useState2[1];

	useEffect(
		function () {
			var filteredTabs = tabs.filter(function (tab) {
				return isVisible(
					context === null || context === void 0
						? void 0
						: context.values,
					tab
				);
			});
			setTabsFields(filteredTabs);
		},
		[
			tabs,
			context === null || context === void 0
				? void 0
				: (_context$values = context.values) === null ||
				  _context$values === void 0
				? void 0
				: _context$values.source,
		]
	);
	var componentClasses = classNames$1(
		"wprf-tab-menu-wrapper",
		props === null || props === void 0 ? void 0 : props.className,
		{
			"wprf-tab-menu-sidebar":
				config === null || config === void 0 ? void 0 : config.sidebar,
		},
		context === null || context === void 0
			? void 0
			: (_context$values2 = context.values) === null ||
			  _context$values2 === void 0
			? void 0
			: _context$values2.source
	);
	var currentTabIndex = tabsFields.findIndex(function (tab) {
		return tab.id === active;
	});
	return createElement(
		"div",
		{
			className: componentClasses,
		},
		createElement(
			"ul",
			{
				className: "wprf-tab-nav",
			},
			tabsFields.map(function (tab, index) {
				var _classNames,
					_context$icons,
					_context$icons$tab$ic,
					_tab$icon,
					_tab$icon2;

				return createElement(
					"li",
					{
						className: classNames$1(
							"wprf-tab-nav-item",
							((_classNames = {}),
							_defineProperty$1(
								_classNames,
								"".concat(tab.classes),
								tab.classes
							),
							_defineProperty$1(
								_classNames,
								"wprf-active-nav",
								active === tab.id
							),
							_defineProperty$1(
								_classNames,
								"wprf-tab-complete",
								config !== null &&
									config !== void 0 &&
									config.completionTrack
									? index <= currentTabIndex
									: false
							),
							_classNames)
						),
						"data-key": tab.id,
						key: tab.id,
						onClick: function onClick() {
							var _config$clickable;

							return (
								((_config$clickable =
									config === null || config === void 0
										? void 0
										: config.clickable) !== null &&
								_config$clickable !== void 0
									? _config$clickable
									: true) && setActive(tab.id)
							);
						},
					},
					(tab === null || tab === void 0 ? void 0 : tab.icon) &&
						(isString(tab.icon) && !isObject(tab.icon)
							? createElement("img", {
									src: tab.icon,
									alt:
										tab === null || tab === void 0
											? void 0
											: tab.label,
							  })
							: isObject(tab.icon)
							? context === null || context === void 0
								? void 0
								: (_context$icons = context.icons) === null ||
								  _context$icons === void 0
								? void 0
								: (_context$icons$tab$ic =
										_context$icons[
											tab === null || tab === void 0
												? void 0
												: (_tab$icon = tab.icon) ===
														null ||
												  _tab$icon === void 0
												? void 0
												: _tab$icon.type
										]) === null ||
								  _context$icons$tab$ic === void 0
								? void 0
								: _context$icons$tab$ic[
										tab === null || tab === void 0
											? void 0
											: (_tab$icon2 = tab.icon) ===
													null ||
											  _tab$icon2 === void 0
											? void 0
											: _tab$icon2.name
								  ]
							: ""),
					createElement("span", null, tab.label)
				);
			})
		)
	);
};

var BuilderContext = /*#__PURE__*/ createContext(undefined);
BuilderContext.displayName =
	process.env.NODE_ENV === "production" ? "Anonymous" : "BuilderContext";
var BuilderProvider = BuilderContext.Provider;
var BuilderConsumer = BuilderContext.Consumer;
function useBuilderContext() {
	var builderContext = useContext(BuilderContext);
	return builderContext;
}

var useOptions = function useOptions(props) {
	var propertyName =
		arguments.length > 1 && arguments[1] !== undefined
			? arguments[1]
			: "fields";

	if (!(props !== null && props !== void 0 && props[propertyName])) {
		throw new Error(
			"#options param need to set in order to use useOptions hook."
		);
	}

	var savedValue = props.value,
		multiple = props.multiple;
	var builderContext = useBuilderContext();

	var _useState = useState(props[propertyName]),
		_useState2 = _slicedToArray(_useState, 2),
		fieldOptions = _useState2[0],
		setFieldOptions = _useState2[1];

	var _useState3 = useState([]),
		_useState4 = _slicedToArray(_useState3, 2),
		lOptions = _useState4[0],
		setOptions = _useState4[1];

	var _useState5 = useState({
			options: null,
			parentIndex: null,
		}),
		_useState6 = _slicedToArray(_useState5, 2),
		isData = _useState6[0],
		setData = _useState6[1];

	var _useState7 = useState(null),
		_useState8 = _slicedToArray(_useState7, 2),
		selectedOption = _useState8[0],
		setSelectedOption = _useState8[1];

	var _useState9 = useState(null),
		_useState10 = _slicedToArray(_useState9, 2),
		option = _useState10[0],
		setOption = _useState10[1];

	useEffect(
		function () {
			var _builderContext$getTa;

			var newFieldsOptions = props.ajax
				? ((_builderContext$getTa = builderContext.getTabFields(
						props === null || props === void 0
							? void 0
							: props.parentIndex
				  )) === null || _builderContext$getTa === void 0
						? void 0
						: _builderContext$getTa[propertyName]) || fieldOptions
				: fieldOptions; // console.log(props.name, newFieldsOptions);
			// console.log(props.name, 'old', fieldOptions);

			/**
			 * old Options is => fieldOptions, L28, 29, 30 ( remove )
			 * if there is any issue with other fields, then it should be for AJAX on Select only.
			 */

			setOptions(builderContext.eligibleOptions(newFieldsOptions));
			setSelectedOption(
				builderContext.eligibleOption(
					newFieldsOptions,
					savedValue,
					multiple !== null && multiple !== void 0 ? multiple : false
				)
			);
		},
		[savedValue, fieldOptions]
	);
	useEffect(
		function () {
			setFieldOptions(props[propertyName]);
			setOptions(builderContext.eligibleOptions(props[propertyName]));
		},
		[props]
	);
	useEffect(
		function () {
			setOptions(builderContext.eligibleOptions(fieldOptions));
		},
		[fieldOptions]
	);
	useEffect(
		function () {
			if (isData.options != null) {
				// builderContext.setFormField(isData.parentIndex, [...props[propertyName], ...isData.options])
				// setOptions(builderContext.eligibleOptions(isData.options));
				setFieldOptions(isData.options);
			}
		},
		[isData]
	);
	useEffect(
		function () {
			if (selectedOption != null) {
				var opt;

				if (!multiple) {
					opt = selectedOption.value || savedValue;
				} else {
					opt =
						(isArray(selectedOption) &&
							selectedOption.map(function (o) {
								return o.value;
							})) ||
						savedValue;
				}

				setOption(opt);
			}
		},
		[selectedOption]
	);
	useEffect(
		function () {
			if (
				lOptions.filter(function (opt) {
					return opt.value === option;
				}).length === 0
			) {
				var _options$;

				var _options = sortingFields(lOptions);

				setOption(
					(_options === null || _options === void 0
						? void 0
						: (_options$ = _options[0]) === null ||
						  _options$ === void 0
						? void 0
						: _options$.value) || savedValue
				);
			}
		},
		[option, lOptions]
	);
	var options = sortingFields(lOptions);
	return {
		options: options,
		option: option,
		selectedOption: selectedOption,
		setOptions: setOptions,
		setData: setData,
	};
};

var useTrigger = function useTrigger(props) {
	var builderContext = props.context;

	if (
		props !== null &&
		props !== void 0 &&
		props.trigger &&
		isArray(props === null || props === void 0 ? void 0 : props.trigger)
	) {
		props === null || props === void 0
			? void 0
			: props.trigger.map(function (trigger) {
					var triggerType =
						(trigger === null || trigger === void 0
							? void 0
							: trigger.type) || "setFieldValue";

					if (
						trigger !== null &&
						trigger !== void 0 &&
						trigger.action &&
						isObject(
							trigger === null || trigger === void 0
								? void 0
								: trigger.action
						)
					) {
						for (var key in trigger === null || trigger === void 0
							? void 0
							: trigger.action) {
							var eligibleKey = key;

							if (eligibleKey.indexOf(".") > -1) {
								eligibleKey = eligibleKey.split(".");
							}

							var eligibleData =
								trigger === null || trigger === void 0
									? void 0
									: trigger.action[key]; // let eligibleDefaultData = builderContext.getFieldHelpers().getValueForDefault( eligibleKey, props.name );
							// data should be nullable.

							if (eligibleKey != "") {
								// && eligibleData !== ""
								builderContext[triggerType](
									eligibleKey,
									eligibleData
								); //eligibleDefaultData ? eligibleDefaultData :
							}
						}
					}
			  });
	}
};

var useDefaults = function useDefaults(parentName, helpers, value, trigger) {
	if (
		trigger != undefined &&
		(trigger === null || trigger === void 0 ? void 0 : trigger.defaults) !=
			undefined &&
		!isEmptyObj(trigger.defaults)
	) {
		var defaults = trigger.defaults;

		if (defaults != undefined && !isEmptyObj(defaults)) {
			var defaultsData = {};

			if (
				defaults !== null &&
				defaults !== void 0 &&
				defaults[value] &&
				isString(
					defaults === null || defaults === void 0
						? void 0
						: defaults[value]
				)
			) {
				var at = defaults[value].indexOf("@"),
					colon = defaults[value].indexOf(":");

				if (at === 0 && colon > 0) {
					var eligibleKey = defaults[value].substr(1, colon - 1);
					var eligibleDataToSet = defaults[value].substr(colon + 1);
					var eligibleDefaultData = helpers.getValueForDefault(
						eligibleKey,
						parentName
					);

					if (eligibleKey != "" && eligibleDataToSet != "") {
						eligibleDataToSet =
							eligibleDataToSet === "false"
								? false
								: eligibleDataToSet;
						defaultsData[eligibleKey] = eligibleDefaultData
							? eligibleDefaultData
							: eligibleDataToSet;
						helpers.setValue(
							eligibleKey,
							eligibleDefaultData
								? eligibleDefaultData
								: eligibleDataToSet
						);
					}
				}
			} else if (
				defaults !== null &&
				defaults !== void 0 &&
				defaults[value] &&
				(isArray(
					defaults === null || defaults === void 0
						? void 0
						: defaults[value]
				) ||
					isObject(
						defaults === null || defaults === void 0
							? void 0
							: defaults[value]
					))
			) {
				for (
					var _i = 0,
						_Object$values = Object.values(
							defaults === null || defaults === void 0
								? void 0
								: defaults[value]
						);
					_i < _Object$values.length;
					_i++
				) {
					var eachKey = _Object$values[_i];

					var _at = eachKey.indexOf("@"),
						_colon = eachKey.indexOf(":");

					if (_at === 0 && _colon > 0) {
						var _eligibleKey = eachKey.substr(1, _colon - 1);

						var _eligibleDataToSet = eachKey.substr(_colon + 1);

						if (eachKey.indexOf(".") > -1) {
							_eligibleKey = _eligibleKey.split(".");
						}

						var _eligibleDefaultData = helpers.getValueForDefault(
							_eligibleKey,
							parentName
						);

						if (_eligibleKey != "" && _eligibleDataToSet != "") {
							_eligibleDataToSet =
								_eligibleDataToSet === "false"
									? false
									: _eligibleDataToSet;
							defaultsData[_eligibleKey] = _eligibleDefaultData
								? _eligibleDefaultData
								: _eligibleDataToSet;
							helpers.setValue(
								_eligibleKey,
								_eligibleDefaultData
									? _eligibleDefaultData
									: _eligibleDataToSet
							);
						}
					}
				}
			}

			return {
				defaultsData: defaultsData,
			};
		}
	}
};

function ownKeys$8(object, enumerableOnly) {
	var keys = Object.keys(object);
	if (Object.getOwnPropertySymbols) {
		var symbols = Object.getOwnPropertySymbols(object);
		if (enumerableOnly) {
			symbols = symbols.filter(function (sym) {
				return Object.getOwnPropertyDescriptor(object, sym).enumerable;
			});
		}
		keys.push.apply(keys, symbols);
	}
	return keys;
}

function _objectSpread$7(target) {
	for (var i = 1; i < arguments.length; i++) {
		var source = arguments[i] != null ? arguments[i] : {};
		if (i % 2) {
			ownKeys$8(Object(source), true).forEach(function (key) {
				_defineProperty$1(target, key, source[key]);
			});
		} else if (Object.getOwnPropertyDescriptors) {
			Object.defineProperties(
				target,
				Object.getOwnPropertyDescriptors(source)
			);
		} else {
			ownKeys$8(Object(source)).forEach(function (key) {
				Object.defineProperty(
					target,
					key,
					Object.getOwnPropertyDescriptor(source, key)
				);
			});
		}
	}
	return target;
}
var builderReducer = function builderReducer(state, action) {
	switch (action.type) {
		case "SET_CONTEXT":
			return _extends$1(
				{},
				state,
				setIn(state, action.payload.field, action.payload.value)
			);

		case "SET_ACTIVE_TAB":
			return _objectSpread$7(
				_objectSpread$7({}, state),
				{},
				{
					config: _objectSpread$7(
						_objectSpread$7({}, state.config),
						{},
						{
							active: action.payload,
						}
					),
				}
			);

		case "SET_REDIRECT":
			return _objectSpread$7(
				_objectSpread$7({}, state),
				{},
				{
					redirect: _objectSpread$7(
						_objectSpread$7({}, state.redirect),
						action.payload
					),
				}
			);

		case "SET_VALUES":
			return _extends$1(
				{},
				state,
				setIn(state, "values", action.payload)
			);

		case "SET_SAVED_VALUES":
			return _extends$1(
				{},
				state,
				setIn(state, "savedValues", action.payload)
			);

		case "SET_FIELD_VALUE":
			return _extends$1({}, state, {
				values: setIn(
					state.values,
					action.payload.field,
					action.payload.value
				),
			});

		case "SET_TOUCHED":
			return _extends$1({}, state, {
				touched: action.payload,
			});

		case "SET_ERRORS":
			// if (isEqual(state.errors, action.payload)) {
			//     return state;
			// }
			return _extends$1({}, state, {
				errors: action.payload,
			});

		case "SET_STATUS":
			return _extends$1({}, state, {
				status: action.payload,
			});

		case "SET_ISSUBMITTING":
			return _objectSpread$7(
				_objectSpread$7({}, state),
				{},
				{
					isSubmitting: action.payload,
				}
			);

		case "SET_ISVALIDATING":
			return _extends$1({}, state, {
				isValidating: action.payload,
			});

		case "SET_FIELD_TOUCHED":
			return _objectSpread$7(
				_objectSpread$7({}, state),
				{},
				{
					touched: _objectSpread$7(
						_objectSpread$7({}, state.touched),
						{},
						_defineProperty$1(
							{},
							action.payload.field,
							action.payload.value
						)
					),
				}
			);
		// return _extends({}, state, {
		//     touched: setIn(state.touched, action.payload.field, action.payload.value)
		// });

		case "SET_FIELD_ERROR": // return _extends({}, state, {
		//     errors: setIn(state.errors, action.payload.field, action.payload.value)
		// });

		case "RESET_FORM":
			return _extends$1({}, state, action.payload);

		case "SUBMIT_ATTEMPT":
			return _extends$1({}, state, {
				// touched: setNestedObjectValues(state.values, true),
				isSubmitting: true,
				submitCount: state.submitCount + 1,
			});

		case "SUBMIT_FAILURE":
			return _extends$1({}, state, {
				isSubmitting: false,
			});

		case "SUBMIT_SUCCESS":
			return _extends$1({}, state, {
				isSubmitting: false,
			});
		// Tabs Fields SET

		case "SET_FORM_FIELD":
			if (action.payload.field === null) {
				return _extends$1(
					{},
					state,
					setIn(state, "tabs", action.payload.value)
				);
			}

			return _extends$1({}, state, {
				tabs: setIn(
					state.tabs,
					action.payload.field,
					action.payload.value
				),
			});

		case "SET_ICONS":
			return _extends$1({}, state, {
				icons: setIn(
					state.icons,
					action.payload.name,
					action.payload.icons
				),
			});

		case "SET_ALERTS":
			return _extends$1({}, state, {
				alerts: setIn(
					state.alerts,
					action.payload.name,
					action.payload.value
				),
			});

		case "SET_COMMONS":
			return _extends$1({}, state, {
				common: setIn(
					state.common,
					action.payload.name,
					action.payload.value
				),
			});

		default:
			return state;
	}
};

function ownKeys$7(object, enumerableOnly) {
	var keys = Object.keys(object);
	if (Object.getOwnPropertySymbols) {
		var symbols = Object.getOwnPropertySymbols(object);
		if (enumerableOnly) {
			symbols = symbols.filter(function (sym) {
				return Object.getOwnPropertyDescriptor(object, sym).enumerable;
			});
		}
		keys.push.apply(keys, symbols);
	}
	return keys;
}

function _objectSpread$6(target) {
	for (var i = 1; i < arguments.length; i++) {
		var source = arguments[i] != null ? arguments[i] : {};
		if (i % 2) {
			ownKeys$7(Object(source), true).forEach(function (key) {
				_defineProperty$1(target, key, source[key]);
			});
		} else if (Object.getOwnPropertyDescriptors) {
			Object.defineProperties(
				target,
				Object.getOwnPropertyDescriptors(source)
			);
		} else {
			ownKeys$7(Object(source)).forEach(function (key) {
				Object.defineProperty(
					target,
					key,
					Object.getOwnPropertyDescriptor(source, key)
				);
			});
		}
	}
	return target;
}

var useBuilder = function useBuilder(props) {
	// Set is Mounted or NOT
	var isMounted = useRef(null);
	useEffect(function () {
		isMounted.current = true;
		return function () {
			isMounted.current = false;
		};
	}, []);

	var _useReducer = useReducer(
			builderReducer,
			_objectSpread$6(
				_objectSpread$6({}, props),
				{},
				{
					savedValues: props.savedValues || {},
					values: props.values || {},
					errors: props.initialErrors || {},
					touched: props.initialTouched || {},
					icons: props.initialIcons || {},
					common: {},
					alerts: {},
					tabs: sortingFields(props.tabs),
				}
			)
		),
		_useReducer2 = _slicedToArray(_useReducer, 2),
		state = _useReducer2[0],
		dispatch = _useReducer2[1];

	var setContext = useEventCallback(function (field, value, shouldValidate) {
		dispatch({
			type: "SET_CONTEXT",
			payload: {
				field: field,
				value: value,
			},
		});
	});
	var setValues = useEventCallback(function (values, shouldValidate) {
		var resolvedValues =
			typeof values === "function" ? values(state.values) : values;
		dispatch({
			type: "SET_VALUES",
			payload: resolvedValues,
		});
		var willValidate =
			shouldValidate === undefined ? false : shouldValidate;
		return willValidate ? resolvedValues : Promise.resolve();
	});
	var setSavedValues = useEventCallback(function (values, shouldValidate) {
		var resolvedValues =
			typeof values === "function" ? values(state.values) : values;
		dispatch({
			type: "SET_SAVED_VALUES",
			payload: resolvedValues,
		});
		var willValidate =
			shouldValidate === undefined ? false : shouldValidate;
		return willValidate ? resolvedValues : Promise.resolve();
	});
	var setFieldValue = useEventCallback(function (
		field,
		value,
		shouldValidate
	) {
		dispatch({
			type: "SET_FIELD_VALUE",
			payload: {
				field: field,
				value: value,
			},
		});
	});
	var setFormField = useEventCallback(function (field, value) {
		dispatch({
			type: "SET_FORM_FIELD",
			payload: {
				field: field,
				value: value,
			},
		});
	});
	var getFieldValue = useCallback(
		function (name) {
			return getIn(state.values, name);
		},
		[state]
	);
	var setFieldTouched = useEventCallback(function (
		field,
		touched,
		shouldValidate
	) {
		if (!touched) {
			touched = true;
		}

		dispatch({
			type: "SET_FIELD_TOUCHED",
			payload: {
				field: field,
				value: touched,
			},
		}); // var willValidate = shouldValidate === undefined ? validateOnBlur : shouldValidate;
		// return willValidate ? validateFormWithHighPriority(state.values) : Promise.resolve();
	});
	var executeBlur = useCallback(
		function (event) {
			var path =
				arguments.length > 1 && arguments[1] !== undefined
					? arguments[1]
					: false;

			if (event.persist) {
				event.persist();
			}

			var _e$target = event.target,
				name = _e$target.name,
				id = _e$target.id;
			_e$target.outerHTML;
			var field = path ? path : name ? name : id;
			setFieldTouched(field, true);
		},
		[setFieldTouched]
	);
	var handleBlur = useEventCallback(function (eventOrString) {
		if (typeof eventOrString === "string") {
			return function (event) {
				return executeBlur(event, eventOrString);
			};
		} else {
			executeBlur(eventOrString);
		}
	});
	var executeChange$1 = useCallback(
		function (eventOrTextValue, maybePath) {
			var _eChange = executeChange(eventOrTextValue, maybePath),
				field = _eChange.field,
				value = _eChange.val;

			if (field) {
				setFieldValue(field, value);
			}
		},
		[setFieldValue, state.values]
	);
	var handleChange = useEventCallback(function (eventOrString, validProps) {
		if (
			validProps !== null &&
			validProps !== void 0 &&
			validProps.isPro &&
			Boolean(state.is_pro_active) === false
		) {
			var _state$alerts, _state$alerts$pro_ale;

			(_state$alerts = state.alerts) === null || _state$alerts === void 0
				? void 0
				: (_state$alerts$pro_ale = _state$alerts.pro_alert) === null ||
				  _state$alerts$pro_ale === void 0
				? void 0
				: _state$alerts$pro_ale.fire();
			return false;
		}

		if (typeof eventOrString === "string") {
			return function (event) {
				return executeChange$1(eventOrString, event);
			};
		} else {
			executeChange$1(eventOrString);
		}
	});
	var getFieldProps = useCallback(
		function (args) {
			var defaultProps = _objectSpread$6({}, args);

			var validProps = validFieldProps(defaultProps);
			var name = validProps.name;
			var type = validProps.type;
			var parent = validProps.parent;
			var parentType = validProps.parenttype;
			var valueState; // For Badge Is Commented.

			if (
				defaultProps !== null &&
				defaultProps !== void 0 &&
				defaultProps.is_pro
			) {
				validProps.is_pro = !(
					defaultProps !== null &&
					defaultProps !== void 0 &&
					defaultProps.is_pro &&
					Boolean(state.is_pro_active) === true
				);
			}

			if (parent && parentType === "group") {
				var _getIn, _parentValue$name;

				var parentValue =
					(_getIn = getIn(state.values, parent)) !== null &&
					_getIn !== void 0
						? _getIn
						: {};
				valueState =
					(_parentValue$name =
						parentValue === null || parentValue === void 0
							? void 0
							: parentValue[name]) !== null &&
					_parentValue$name !== void 0
						? _parentValue$name
						: defaultProps === null || defaultProps === void 0
						? void 0
						: defaultProps["default"];
			} else if (parent && parentType === "repeater") {
				var _getIn2, _parentValue$validPro, _parentValue$validPro2;

				var _parentValue =
					(_getIn2 = getIn(state.values, parent)) !== null &&
					_getIn2 !== void 0
						? _getIn2
						: [];

				valueState =
					(_parentValue$validPro =
						_parentValue === null || _parentValue === void 0
							? void 0
							: (_parentValue$validPro2 =
									_parentValue[validProps.index]) === null ||
							  _parentValue$validPro2 === void 0
							? void 0
							: _parentValue$validPro2[name]) !== null &&
					_parentValue$validPro !== void 0
						? _parentValue$validPro
						: defaultProps === null || defaultProps === void 0
						? void 0
						: defaultProps["default"];
			} else {
				var _getIn3;

				valueState =
					(_getIn3 = getIn(state.values, name)) !== null &&
					_getIn3 !== void 0
						? _getIn3
						: defaultProps === null || defaultProps === void 0
						? void 0
						: defaultProps["default"];
			}

			validProps.onChange = handleChange;
			validProps.onBlur = handleBlur;
			var valueProp = validProps.value;

			if (type === "checkbox") {
				validProps.checked = !!valueState;
				validProps.value = !!valueState;

				if (isString(valueState) && valueState === "0") {
					validProps.checked = false;
					validProps.value = false;
				} else {
					validProps.checked = Boolean(valueState);
					validProps.value = Boolean(valueState);
				}
			} else if (type === "radio") {
				validProps.checked = valueState === valueProp;
				validProps.value = valueProp;
			} else if (type === "date") {
				validProps.value =
					valueState == undefined ? getTime() : valueState;
			} else {
				validProps.value = valueState;
			}

			validProps.visible = isVisible(state.values, args); //=== "notification-template"
			// if (validProps?.parenttype === 'group') {
			//     // if ("custom_fifth_param" === name) {
			//     let currentIndex = validProps.parentIndex;
			//     let parentIndex = validProps.parentIndex;
			//     const lastIndex = parentIndex.pop() - 1;
			//     parentIndex = [...parentIndex, lastIndex];
			//     const parentField = getIn(state.tabs, parentIndex);
			//     const parentVisibility = isVisible(state.values, getFieldProps(parentField));
			//     console.log("validProps", validProps.name, parentVisibility);
			//     // }
			// }

			return validProps;
		},
		[handleBlur, handleChange, state.values]
	);
	var getFieldMeta = useCallback(
		function (name, props) {
			var parent =
				arguments.length > 2 && arguments[2] !== undefined
					? arguments[2]
					: null;
			var parentValue, value;

			if (parent !== null) {
				var _parentValue2;

				parentValue = getIn(state.values, parent);
				value =
					(_parentValue2 = parentValue) === null ||
					_parentValue2 === void 0
						? void 0
						: _parentValue2[name];
			} else {
				var _props$meta;

				value =
					getIn(state.values, name) ||
					((_props$meta = props.meta) === null ||
					_props$meta === void 0
						? void 0
						: _props$meta["default"]);
			}

			return _objectSpread$6(
				_objectSpread$6({}, props.meta),
				{},
				{
					value: value,
					error: getIn(state.errors, name),
					touched: !!getIn(state.touched, name),
					visible: isVisible(state.values, props),
					initialValue: "",
					// getIn(initialValues.current, name),
					initialTouched: "",
					// !!getIn(initialTouched.current, name),
					initialError: "", // getIn(initialErrors.current, name)
				}
			);
		},
		[state.errors, state.touched, state.values]
	);
	var eligibleOptions = useCallback(
		function (options) {
			if (options.length > 0) {
				var newOptions = [];
				newOptions = options.filter(function (item) {
					if (item !== null && item !== void 0 && item.rules) {
						return when(item.rules, state.values);
					} else {
						return item;
					}
				});
				return newOptions;
			}

			return options;
		},
		[state.errors, state.touched, state.values]
	);
	var eligibleOption = useCallback(
		function (options, value) {
			var multiple =
				arguments.length > 2 && arguments[2] !== undefined
					? arguments[2]
					: false;

			if (options.length) {
				var newOptions = [];

				if (multiple && isArray(value)) {
					newOptions = options.filter(function (option) {
						return value.includes(option.value);
					});
					return newOptions;
				} else {
					newOptions = options.filter(function (option) {
						return option.value == value;
					});
					return newOptions.length > 0 ? newOptions[0] : "";
				}
			}

			return options;
		},
		[state.errors, state.touched, state.values]
	);
	var getFieldHelpers = useCallback(
		function () {
			return {
				setValue: function setValue(name, value) {
					return setFieldValue(name, value);
				},
				getValue: function getValue(name) {
					return getIn(state.values, name);
				},
				getValueForDefault: function getValueForDefault(name) {
					var comparisonKey =
						arguments.length > 1 && arguments[1] !== undefined
							? arguments[1]
							: null;

					if (comparisonKey === null) {
						return getIn(state.savedValues, name);
					}

					var savedValue = getIn(state.savedValues, comparisonKey),
						currentValue = getIn(state.values, comparisonKey);
					return savedValue === currentValue
						? getIn(state.savedValues, name)
						: false;
				},
			};
		},
		[state.errors, state.touched, state.values, state.savedValues]
	);
	var getTabFields = useCallback(
		function (parentIndex) {
			return getIn(state.tabs, parentIndex);
		},
		[state]
	);
	var setSubmitting = useEventCallback(function (submit) {
		dispatch({
			type: "SET_ISSUBMITTING",
			payload: submit,
		});
	});
	var setActiveTab = useEventCallback(function (tab) {
		dispatch({
			type: "SET_ACTIVE_TAB",
			payload: tab,
		});
	});
	var setRedirect = useEventCallback(function (redirectData) {
		dispatch({
			type: "SET_REDIRECT",
			payload: redirectData,
		});
	});
	var registerIcons = useEventCallback(function (name, iconLists) {
		dispatch({
			type: "SET_ICONS",
			payload: {
				name: name,
				icons: iconLists,
			},
		});
	});
	var registerCommon = useEventCallback(function (name, value) {
		dispatch({
			type: "SET_COMMONS",
			payload: {
				name: name,
				value: value,
			},
		});
	});
	var registerAlert = useEventCallback(function (name, value) {
		dispatch({
			type: "SET_ALERTS",
			payload: {
				name: name,
				value: value,
			},
		});
	});

	var context = _objectSpread$6(
		_objectSpread$6(_objectSpread$6({}, props), state),
		{},
		{
			setContext: setContext,
			values: state.values,
			savedValues: state.savedValues,
			errors: state.errors,
			touched: state.touched,
			isSubmitting: false,
			setActiveTab: setActiveTab,
			setRedirect: setRedirect,
			setSubmitting: setSubmitting,
			setValues: setValues,
			setSavedValues: setSavedValues,
			setFieldValue: setFieldValue,
			getFieldValue: getFieldValue,
			handleBlur: handleBlur,
			handleChange: handleChange,
			getFieldProps: getFieldProps,
			getFieldMeta: getFieldMeta,
			getFieldHelpers: getFieldHelpers,
			eligibleOptions: eligibleOptions,
			eligibleOption: eligibleOption,
			getTabFields: getTabFields,
			setFormField: setFormField,
			registerIcons: registerIcons,
			registerCommon: registerCommon,
			registerAlert: registerAlert,
		}
	);

	return context;
};

var useIsomorphicLayoutEffect =
	typeof window !== "undefined" &&
	typeof window.document !== "undefined" &&
	typeof window.document.createElement !== "undefined"
		? useLayoutEffect
		: useEffect;

var useEventCallback = function useEventCallback(fn) {
	var ref = useRef(fn);
	useIsomorphicLayoutEffect(function () {
		ref.current = fn;
	});
	return useCallback(function () {
		for (
			var _len2 = arguments.length, args = new Array(_len2), _key2 = 0;
			_key2 < _len2;
			_key2++
		) {
			args[_key2] = arguments[_key2];
		}

		for (
			var _len = arguments.length, args = new Array(_len), _key = 0;
			_key < _len;
			_key++
		) {
			args[_key] = arguments[_key];
		}

		return ref.current.apply(void 0, args);
	}, []);
};

var Row = function Row(props) {
	var componentClasses = classNames$1(
		"wprf-row clearfix wprf-flex",
		props === null || props === void 0 ? void 0 : props.className
	);
	return createElement(
		"div",
		{
			className: componentClasses,
		},
		props === null || props === void 0 ? void 0 : props.children
	);
};

var Column = function Column(props) {
	var _classNames;

	var componentClasses = classNames$1(
		"wprf-column",
		props === null || props === void 0 ? void 0 : props.className,
		((_classNames = {}),
		_defineProperty$1(
			_classNames,
			"wprf-column-".concat(
				12 /
					(props === null || props === void 0 ? void 0 : props.column)
			),
			(props === null || props === void 0 ? void 0 : props.column) &&
				props.column !== 12
		),
		_defineProperty$1(_classNames, "wprf-column-12", props.column === 12),
		_classNames)
	);
	return createElement(
		"div",
		{
			className: componentClasses,
		},
		props === null || props === void 0 ? void 0 : props.children
	);
};

var Label = function Label(props) {
	var _props$badge, _props$badge2, _props$badge3;

	var componentClasses = classNames$1(
		"wprf-input-label",
		props === null || props === void 0 ? void 0 : props.className
	);
	return createElement(
		"label",
		{
			htmlFor:
				props === null || props === void 0 ? void 0 : props.htmlFor,
			className: componentClasses,
		},
		(props === null || props === void 0
			? void 0
			: (_props$badge = props.badge) === null || _props$badge === void 0
			? void 0
			: _props$badge.value) &&
			createElement(
				"div",
				{
					className: "wprf-badge",
				},
				createElement(
					"sup",
					{
						className: classNames$1("wprf-badge-item", {
							"wprf-badge-active":
								props === null || props === void 0
									? void 0
									: (_props$badge2 = props.badge) === null ||
									  _props$badge2 === void 0
									? void 0
									: _props$badge2.active,
						}),
					},
					props === null || props === void 0
						? void 0
						: (_props$badge3 = props.badge) === null ||
						  _props$badge3 === void 0
						? void 0
						: _props$badge3.label
				)
			),
		!(props !== null && props !== void 0 && props.src) &&
			(props === null || props === void 0 ? void 0 : props.children),
		(props === null || props === void 0 ? void 0 : props.src) &&
			createElement(Image, {
				className: "wprf-label-image",
				src: props.src,
				alt: props === null || props === void 0 ? void 0 : props.label,
			})
	);
};

var Image = function Image(props) {
	if (!(props !== null && props !== void 0 && props.src)) {
		return createElement("p", null, "No Source( src ) Defined");
	}

	var componentClasses = classNames$1([
		"wprf-input-image",
		props === null || props === void 0 ? void 0 : props.className,
	]);
	return createElement("img", {
		className: componentClasses,
		src: props === null || props === void 0 ? void 0 : props.src,
		alt: props === null || props === void 0 ? void 0 : props.alt,
	});
};

var BadgeComp = function BadgeComp(_ref) {
	var componentClasses = _ref.componentClasses,
		label = _ref.label;
	return createElement(
		"div",
		{
			className: "wprf-badge",
		},
		createElement(
			"sup",
			{
				className: componentClasses,
			},
			label
		)
	);
};

var Badge = function Badge(props) {
	var builderContext = useBuilderContext();
	var label = props.label,
		active = props.active,
		_props$position = props.position,
		position = _props$position === void 0 ? "right" : _props$position,
		renderLabel = props.renderLabel,
		renderComponent = props.renderComponent;

	if (label === undefined) {
		label = "Pro";
	}

	var componentClasses = classNames$1("wprf-badge-item", {
		"wprf-badge-active": active,
	});
	var componentProps = {};

	if (!builderContext.is_pro_active) {
		componentProps = {
			onClick: function onClick(e) {
				e.preventDefault();
				builderContext.alerts.pro_alert.fire();
			},
		};
	}

	return createElement(
		"div",
		_extends$2(
			{
				className: classNames$1("wprf-badge-wrapper", {
					"pro-deactivated": !builderContext.is_pro_active,
				}),
			},
			componentProps
		),
		position === "left" &&
			label.length > 0 &&
			createElement(
				Fragment,
				null,
				renderLabel(
					createElement(BadgeComp, {
						componentClasses: componentClasses,
						label: label,
					}),
					"left"
				)
			),
		position === "right" &&
			label.length > 0 &&
			createElement(
				Fragment,
				null,
				renderLabel(
					createElement(BadgeComp, {
						componentClasses: componentClasses,
						label: label,
					}),
					"right"
				)
			),
		renderComponent()
	);
};

var _excluded$5 = ["id", "label", "badge", "badgePosition", "context"];

var ControlLabel = function ControlLabel(props) {
	var _context$icons;

	var id = props.id,
		label = props.label,
		badge = props.badge,
		badgePosition = props.badgePosition,
		context = props.context,
		rest = _objectWithoutProperties$1(props, _excluded$5);

	if (!(label && label.length > 0)) {
		return;
	}
	/**
	 * Icon need to be fixed
	 * context?.icons?.[rest?.icon] through context
	 */

	return createElement(
		"div",
		{
			className: "wprf-control-label",
		},
		badgePosition == "left" && badge,
		createElement(
			"label",
			{
				htmlFor: id,
			},
			label
		),
		(rest === null || rest === void 0 ? void 0 : rest.link) &&
			createElement(
				"a",
				{
					rel: "nofollow",
					target: "_blank",
					href: rest.link,
				},
				context === null || context === void 0
					? void 0
					: (_context$icons = context.icons) === null ||
					  _context$icons === void 0
					? void 0
					: _context$icons.link
			),
		badgePosition == "right" && badge
	);
};

var ControlField = function ControlField(_ref) {
	var position = _ref.position,
		description = _ref.description,
		renderComponent = _ref.renderComponent,
		help = _ref.help;
	return createElement(
		"div",
		{
			className: "wprf-control-field",
		},
		position === "left" &&
			description &&
			createElement("p", {
				className: "wprf-description",
				dangerouslySetInnerHTML: {
					__html: description,
				},
			}),
		renderComponent(),
		position === "right" &&
			description &&
			createElement("p", {
				className: "wprf-description",
				dangerouslySetInnerHTML: {
					__html: description,
				},
			}),
		help &&
			createElement("p", {
				className: "wprf-help",
				dangerouslySetInnerHTML: {
					__html: help,
				},
			})
	);
};

var _excluded$4 = ["label", "id", "name", "type", "style", "is_pro", "badge"];

function ownKeys$6(object, enumerableOnly) {
	var keys = Object.keys(object);
	if (Object.getOwnPropertySymbols) {
		var symbols = Object.getOwnPropertySymbols(object);
		if (enumerableOnly) {
			symbols = symbols.filter(function (sym) {
				return Object.getOwnPropertyDescriptor(object, sym).enumerable;
			});
		}
		keys.push.apply(keys, symbols);
	}
	return keys;
}

function _objectSpread$5(target) {
	for (var i = 1; i < arguments.length; i++) {
		var source = arguments[i] != null ? arguments[i] : {};
		if (i % 2) {
			ownKeys$6(Object(source), true).forEach(function (key) {
				_defineProperty$1(target, key, source[key]);
			});
		} else if (Object.getOwnPropertyDescriptors) {
			Object.defineProperties(
				target,
				Object.getOwnPropertyDescriptors(source)
			);
		} else {
			ownKeys$6(Object(source)).forEach(function (key) {
				Object.defineProperty(
					target,
					key,
					Object.getOwnPropertyDescriptor(source, key)
				);
			});
		}
	}
	return target;
}

var withLabel = function withLabel(WrappedComponent) {
	var WithLabel = function WithLabel(props) {
		var _styles$label,
			_styles$label$positio,
			_styles$label2,
			_classNames,
			_styles$description2;

		var label = props.label,
			id = props.id,
			name = props.name,
			type = props.type,
			prevStyle = props.style,
			is_pro = props.is_pro,
			badge = props.badge,
			rest = _objectWithoutProperties$1(props, _excluded$4); // const instanceId = useInstanceId(withLabel);

		if (id == undefined) {
			id = name;
		}

		var styles = _objectSpread$5(
			{
				description: {
					position: "right",
				},
			},
			prevStyle
		);

		var styleClasses = classNames$1(
			((_classNames = {}),
			_defineProperty$1(
				_classNames,
				"wprf-style-".concat(
					styles === null || styles === void 0 ? void 0 : styles.type
				),
				(styles === null || styles === void 0 ? void 0 : styles.type) ||
					false
			),
			_defineProperty$1(
				_classNames,
				"wprf-label-none",
				label === undefined || label === "" || label.length === 0
			),
			_defineProperty$1(
				_classNames,
				"wprf-".concat(
					(styles === null || styles === void 0
						? void 0
						: (_styles$label = styles.label) === null ||
						  _styles$label === void 0
						? void 0
						: _styles$label.position) || "inline",
					"-label"
				),
				((_styles$label$positio =
					styles === null || styles === void 0
						? void 0
						: (_styles$label2 = styles.label) === null ||
						  _styles$label2 === void 0
						? void 0
						: _styles$label2.position) !== null &&
				_styles$label$positio !== void 0
					? _styles$label$positio
					: true) && label != undefined
			),
			_classNames)
		);

		if (type === "hidden") {
			return createElement(
				WrappedComponent,
				_extends$2({}, props, {
					id: id,
				})
			);
		}

		var validProps = validFieldProps(props, [
			"description",
			"label",
			"help",
			"style",
		]);
		var componentClasses = classNames$1(
			"wprf-control-wrapper",
			"wprf-type-".concat(type),
			styleClasses,
			props === null || props === void 0 ? void 0 : props.classes,
			_defineProperty$1({}, "wprf-name-".concat(name), name)
		);
		return createElement(
			"div",
			{
				className: componentClasses,
			},
			is_pro == true &&
				createElement(
					Badge,
					_extends$2({}, badge, {
						renderLabel: function renderLabel(badge, position) {
							return createElement(
								ControlLabel,
								_extends$2({}, validProps, {
									context:
										rest === null || rest === void 0
											? void 0
											: rest.context,
									id: id,
									label: label,
									badge: badge,
									badgePosition: position,
								})
							);
						},
						renderComponent: function renderComponent() {
							var _styles$description;

							return createElement(ControlField, {
								help:
									props === null || props === void 0
										? void 0
										: props.help,
								description:
									props === null || props === void 0
										? void 0
										: props.description,
								position:
									styles === null || styles === void 0
										? void 0
										: (_styles$description =
												styles.description) === null ||
										  _styles$description === void 0
										? void 0
										: _styles$description.position,
								renderComponent: function renderComponent() {
									return createElement(
										WrappedComponent,
										_extends$2({}, validProps, {
											id: id,
										})
									);
								},
							});
						},
					})
				),
			(is_pro == false || is_pro == undefined) &&
				createElement(
					Fragment,
					null,
					label &&
						label.length > 0 &&
						createElement(
							ControlLabel,
							_extends$2({}, validProps, {
								context:
									rest === null || rest === void 0
										? void 0
										: rest.context,
								label: label,
								id: id,
							})
						),
					createElement(ControlField, {
						help:
							props === null || props === void 0
								? void 0
								: props.help,
						description:
							props === null || props === void 0
								? void 0
								: props.description,
						position:
							styles === null || styles === void 0
								? void 0
								: (_styles$description2 =
										styles.description) === null ||
								  _styles$description2 === void 0
								? void 0
								: _styles$description2.position,
						renderComponent: function renderComponent() {
							return createElement(
								WrappedComponent,
								_extends$2({}, validProps, {
									id: id,
								})
							);
						},
					})
				)
		);
	};

	return WithLabel;
};

var withProps = function withProps(WrappedComponent) {
	var isGeneric =
		arguments.length > 1 && arguments[1] !== undefined
			? arguments[1]
			: false;

	var WithProps = function WithProps(props) {
		var builderContext = useBuilderContext();
		var trigger = props.trigger;
		var field = builderContext.getFieldProps(props);
		var meta = builderContext.getFieldMeta(field.name, props);
		var helpers = builderContext.getFieldHelpers();

		if (
			builderContext !== null &&
			builderContext !== void 0 &&
			builderContext.quickBuilder &&
			builderContext !== null &&
			builderContext !== void 0 &&
			builderContext.show
		) {
			if (!builderContext.show.includes(props.name)) {
				field.classes =
					field !== null && field !== void 0 && field.classes
						? field.classes + " hidden"
						: " hidden";
			}
		}

		var pIndex =
			props !== null && props !== void 0 && props.parentIndex
				? _toConsumableArray(props.parentIndex)
				: [];
		field.parentIndex = pIndex;
		field.context = builderContext;

		if (isFunction(props.onChange)) {
			field.onChange = props.onChange;
		}

		if (isFunction(props.onBlur)) {
			field.onBlur = props.onBlur;
		}

		var isFieldMounted = useRef({});
		useEffect(function () {
			isFieldMounted.current[props.name] = true;
			return function () {
				isFieldMounted.current[props.name] = false;
			};
		}, []);
		useEffect(
			function () {
				if (meta.visible && isFieldMounted.current[props.name]) {
					// Not needed / Confused
					if (!isGeneric && field.type !== "group") {
						helpers.setValue(field.name, field.value);
					} else {
						var parent =
							props === null || props === void 0
								? void 0
								: props.parent;
						var parenttype =
							props === null || props === void 0
								? void 0
								: props.parenttype;

						if (parent && parenttype === "group" && field.value) {
							helpers.setValue([parent, field.name], field.value);
						} // if (parent && parenttype === 'repeater') {
						//     // let parentValues = helpers.getValue(parent) || [];
						//     // if (isArray(parentValues) && parentValues.length > 0) {
						//     //     parentValues[props.index][field.name] = field.value;
						//     //     helpers.setValue(parent, parentValues)
						//     // } else {
						//     //     parentValues = [...parentValues,];
						//     //     parentValues = { ...parentValues, [field.name]: field.value };
						//     //     helpers.setValue(parent, parentValues)
						//     // }
						// }
					}
				}
			},
			[meta.visible]
		);
		useEffect(
			function () {
				if (isFieldMounted.current[props.name]) {
					if (isObject(trigger) && !isEmptyObj(trigger)) {
						useDefaults(field.name, helpers, field.value, trigger);
					}
				}
			},
			[field.value, meta.visible]
		);

		if (!meta.visible) {
			return createElement(Fragment, null);
		}

		return createElement(WrappedComponent, field);
	};

	return WithProps;
};

var Field = function Field(props) {
	if (!props.type || props.type.length === 0) {
		console.error(props);
		throw new Error("Field must have a #type. see documentation.");
	}

	switch (props.type) {
		case "text":
		case "checkbox":
		case "radio":
		case "email":
		case "range":
		case "number":
		case "hidden":
			return createElement(Input$4, props);

		case "textarea":
			return createElement(Textarea$1, props);

		case "message":
			return createElement(Message, props);

		case "select":
			return createElement(Select$1, props);

		case "slider":
			return createElement(Slider, props);

		case "group":
			return createElement(Group$2, props);

		case "radio-card":
			return createElement(Radio, props);

		case "section":
			return createElement(Section$1, props);

		case "date":
			return createElement(Date$1, props);

		case "toggle":
			return createElement(Toggle, props);

		case "colorpicker":
			return createElement(ColorPicker$1, props);

		case "repeater":
			return createElement(Repeater, props);

		case "media":
			return createElement(Media$1, props);

		case "editor":
			return createElement(Editor$1, props);

		case "advanced-template":
			return createElement(AdvancedTemplate, props);

		case "action":
			return createElement(Action, props);

		case "button":
			return createElement(Button$1, props);

		case "modal":
			return createElement(Modal, props);
		// case "test":
		//     return <Test {...props} />;

		default:
			return createElement(Fragment, null);
	}
};

var GenericField = withProps(Field, true);
var Field$1 = withProps(Field);

var DateControl = function DateControl(props) {
	var _props$format;

	var name = props.name,
		value = props.value,
		_onChange = props.onChange;

	var settings = __experimentalGetSettings();

	var format =
		(_props$format =
			props === null || props === void 0 ? void 0 : props.format) !==
			null && _props$format !== void 0
			? _props$format
			: settings.formats.datetime;

	var _value = getTime(value);

	var is12HourTime = /a(?!\\)/i.test(
		settings.formats.datetime
			.toLowerCase()
			.replace(/\\\\/g, "")
			.split("")
			.reverse()
			.join("")
	);
	useEffect(function () {
		if (!value) {
			_onChange({
				target: {
					type: "date",
					name: name,
					value: _value,
				},
			}); //     // helpers.setValue(name, date('c', value))
		}
	}, []);
	return createElement(Dropdown, {
		className: "wprf-control-datetime",
		renderToggle: function renderToggle(_ref) {
			_ref.isOpen;
			var onToggle = _ref.onToggle;
			return createElement(
				Button$2,
				{
					isTertiary: true,
					onClick: onToggle,
				},
				date(format, _value, undefined)
			);
		},
		renderContent: function renderContent() {
			return createElement(
				DateTimePicker, // @ts-ignore
				{
					currentDate: date(format, _value, undefined),
					onChange: function onChange(date) {
						_onChange({
							target: {
								type: "date",
								name: name,
								value: getTime(date, true),
							},
						});
					},
					is12Hour: is12HourTime,
				}
			);
		},
	});
};

var Date$1 = withLabel(DateControl);

function ownKeys$5(object, enumerableOnly) {
	var keys = Object.keys(object);
	if (Object.getOwnPropertySymbols) {
		var symbols = Object.getOwnPropertySymbols(object);
		if (enumerableOnly) {
			symbols = symbols.filter(function (sym) {
				return Object.getOwnPropertyDescriptor(object, sym).enumerable;
			});
		}
		keys.push.apply(keys, symbols);
	}
	return keys;
}

function _objectSpread$4(target) {
	for (var i = 1; i < arguments.length; i++) {
		var source = arguments[i] != null ? arguments[i] : {};
		if (i % 2) {
			ownKeys$5(Object(source), true).forEach(function (key) {
				_defineProperty$1(target, key, source[key]);
			});
		} else if (Object.getOwnPropertyDescriptors) {
			Object.defineProperties(
				target,
				Object.getOwnPropertyDescriptors(source)
			);
		} else {
			ownKeys$5(Object(source)).forEach(function (key) {
				Object.defineProperty(
					target,
					key,
					Object.getOwnPropertyDescriptor(source, key)
				);
			});
		}
	}
	return target;
}

var Input$3 = function Input(props) {
	var validProps = validFieldProps(props, [
		"is_pro",
		"visible",
		"trigger",
		"disable",
		"parentIndex",
		"context",
		"badge",
	]);
	var handleChange = useCallback(
		function (event) {
			return validProps.onChange(event, {
				isPro: !!props.is_pro,
			});
		},
		[
			validProps === null || validProps === void 0
				? void 0
				: validProps.value,
		]
	);

	if (validProps.type === "checkbox") {
		if (validProps !== null && validProps !== void 0 && validProps.name) {
			validProps.checked =
				(validProps === null || validProps === void 0
					? void 0
					: validProps.checked) ||
				(validProps === null || validProps === void 0
					? void 0
					: validProps.value);
		}
	}

	return /*#__PURE__*/ React.createElement(
		"input",
		_objectSpread$4(
			_objectSpread$4({}, validProps),
			{},
			{
				onChange: handleChange,
			}
		)
	);
};

Input$3.defaultProps = {
	type: "text",
};
var GenericInput = /*#__PURE__*/ React.memo(Input$3);
var Input$4 = withLabel(/*#__PURE__*/ React.memo(Input$3));

function ownKeys$4(object, enumerableOnly) {
	var keys = Object.keys(object);
	if (Object.getOwnPropertySymbols) {
		var symbols = Object.getOwnPropertySymbols(object);
		if (enumerableOnly) {
			symbols = symbols.filter(function (sym) {
				return Object.getOwnPropertyDescriptor(object, sym).enumerable;
			});
		}
		keys.push.apply(keys, symbols);
	}
	return keys;
}

function _objectSpread$3(target) {
	for (var i = 1; i < arguments.length; i++) {
		var source = arguments[i] != null ? arguments[i] : {};
		if (i % 2) {
			ownKeys$4(Object(source), true).forEach(function (key) {
				_defineProperty$1(target, key, source[key]);
			});
		} else if (Object.getOwnPropertyDescriptors) {
			Object.defineProperties(
				target,
				Object.getOwnPropertyDescriptors(source)
			);
		} else {
			ownKeys$4(Object(source)).forEach(function (key) {
				Object.defineProperty(
					target,
					key,
					Object.getOwnPropertyDescriptor(source, key)
				);
			});
		}
	}
	return target;
}

var Textarea = function Textarea(props) {
	var validProps = validFieldProps(props, [
		"is_pro",
		"visible",
		"trigger",
		"disable",
		"parentIndex",
		"context",
	]);
	var handleChange = useCallback(
		function (event) {
			return validProps.onChange(event, {
				isPro: !!props.is_pro,
			});
		},
		[
			validProps === null || validProps === void 0
				? void 0
				: validProps.value,
		]
	);
	return /*#__PURE__*/ React.createElement(
		"textarea",
		_objectSpread$3(
			_objectSpread$3({}, validProps),
			{},
			{
				onChange: handleChange,
				rows: 5,
			}
		)
	);
};
var Textarea$1 = withLabel(/*#__PURE__*/ React.memo(Textarea));

var _excluded$3 = ["name", "fields"];

var Group$1 = function Group(props) {
	var fieldName = props.name,
		fields = props.fields,
		rest = _objectWithoutProperties$1(props, _excluded$3);

	if (!fields || !isArray(fields) || fields.length === 0) {
		throw new Error(
			"You should give a #fields arguments to a group field."
		);
	}

	var builderContext = useBuilderContext();
	var handleChange = useCallback(
		function (event) {
			if (event.persist) {
				event.persist();
			}

			var _executeChange = executeChange(event),
				field = _executeChange.field,
				value = _executeChange.val;

			builderContext.setFieldValue([fieldName, field], value);
		},
		[props.value]
	);
	var newFields = sortingFields(fields);
	useEffect(function () {
		builderContext.setFormField(
			[].concat(_toConsumableArray(props.parentIndex), ["fields"]),
			newFields
		);
	}, []);
	var allFields = newFields.map(function (item, index) {
		var parentIndex = [].concat(_toConsumableArray(props.parentIndex), [
			"fields",
			index,
		]);
		return createElement(
			GenericField,
			_extends$2(
				{},
				rest,
				{
					key: item.name,
					index: props.index,
					onChange: handleChange,
				},
				item,
				{
					parenttype: "group",
					parent: fieldName,
					parentIndex: parentIndex,
				}
			)
		);
	});
	var innerClasses = classNames$1("wprf-group-control-inner", {
		"wprf-display-inline":
			(props === null || props === void 0 ? void 0 : props.display) ===
			"inline",
	});
	return createElement(
		"div",
		{
			className: "wprf-group-control",
		},
		createElement(
			"div",
			{
				className: innerClasses,
			},
			allFields
		)
	);
};

var Group$2 = withLabel(Group$1);

/*

Based off glamor's StyleSheet, thanks Sunil ❤️

high performance StyleSheet for css-in-js systems

- uses multiple style tags behind the scenes for millions of rules
- uses `insertRule` for appending in production for *much* faster performance

// usage

import { StyleSheet } from '@emotion/sheet'

let styleSheet = new StyleSheet({ key: '', container: document.head })

styleSheet.insert('#box { border: 1px solid red; }')
- appends a css rule into the stylesheet

styleSheet.flush()
- empties the stylesheet of all its contents

*/
// $FlowFixMe
function sheetForTag(tag) {
	if (tag.sheet) {
		// $FlowFixMe
		return tag.sheet;
	} // this weirdness brought to you by firefox

	/* istanbul ignore next */

	for (var i = 0; i < document.styleSheets.length; i++) {
		if (document.styleSheets[i].ownerNode === tag) {
			// $FlowFixMe
			return document.styleSheets[i];
		}
	}
}

function createStyleElement(options) {
	var tag = document.createElement("style");
	tag.setAttribute("data-emotion", options.key);

	if (options.nonce !== undefined) {
		tag.setAttribute("nonce", options.nonce);
	}

	tag.appendChild(document.createTextNode(""));
	tag.setAttribute("data-s", "");
	return tag;
}

var StyleSheet = /*#__PURE__*/ (function () {
	function StyleSheet(options) {
		var _this = this;

		this._insertTag = function (tag) {
			var before;

			if (_this.tags.length === 0) {
				before = _this.prepend
					? _this.container.firstChild
					: _this.before;
			} else {
				before = _this.tags[_this.tags.length - 1].nextSibling;
			}

			_this.container.insertBefore(tag, before);

			_this.tags.push(tag);
		};

		this.isSpeedy =
			options.speedy === undefined
				? process.env.NODE_ENV === "production"
				: options.speedy;
		this.tags = [];
		this.ctr = 0;
		this.nonce = options.nonce; // key is the value of the data-emotion attribute, it's used to identify different sheets

		this.key = options.key;
		this.container = options.container;
		this.prepend = options.prepend;
		this.before = null;
	}

	var _proto = StyleSheet.prototype;

	_proto.hydrate = function hydrate(nodes) {
		nodes.forEach(this._insertTag);
	};

	_proto.insert = function insert(rule) {
		// the max length is how many rules we have per style tag, it's 65000 in speedy mode
		// it's 1 in dev because we insert source maps that map a single rule to a location
		// and you can only have one source map per style tag
		if (this.ctr % (this.isSpeedy ? 65000 : 1) === 0) {
			this._insertTag(createStyleElement(this));
		}

		var tag = this.tags[this.tags.length - 1];

		if (process.env.NODE_ENV !== "production") {
			var isImportRule =
				rule.charCodeAt(0) === 64 && rule.charCodeAt(1) === 105;

			if (isImportRule && this._alreadyInsertedOrderInsensitiveRule) {
				// this would only cause problem in speedy mode
				// but we don't want enabling speedy to affect the observable behavior
				// so we report this error at all times
				console.error(
					"You're attempting to insert the following rule:\n" +
						rule +
						"\n\n`@import` rules must be before all other types of rules in a stylesheet but other rules have already been inserted. Please ensure that `@import` rules are before all other rules."
				);
			}
			this._alreadyInsertedOrderInsensitiveRule =
				this._alreadyInsertedOrderInsensitiveRule || !isImportRule;
		}

		if (this.isSpeedy) {
			var sheet = sheetForTag(tag);

			try {
				// this is the ultrafast version, works across browsers
				// the big drawback is that the css won't be editable in devtools
				sheet.insertRule(rule, sheet.cssRules.length);
			} catch (e) {
				if (
					process.env.NODE_ENV !== "production" &&
					!/:(-moz-placeholder|-moz-focus-inner|-moz-focusring|-ms-input-placeholder|-moz-read-write|-moz-read-only|-ms-clear){/.test(
						rule
					)
				) {
					console.error(
						'There was a problem inserting the following rule: "' +
							rule +
							'"',
						e
					);
				}
			}
		} else {
			tag.appendChild(document.createTextNode(rule));
		}

		this.ctr++;
	};

	_proto.flush = function flush() {
		// $FlowFixMe
		this.tags.forEach(function (tag) {
			return tag.parentNode.removeChild(tag);
		});
		this.tags = [];
		this.ctr = 0;

		if (process.env.NODE_ENV !== "production") {
			this._alreadyInsertedOrderInsensitiveRule = false;
		}
	};

	return StyleSheet;
})();

var MS = "-ms-";
var MOZ = "-moz-";
var WEBKIT = "-webkit-";

var COMMENT = "comm";
var RULESET = "rule";
var DECLARATION = "decl";
var IMPORT = "@import";
var KEYFRAMES = "@keyframes";

/**
 * @param {number}
 * @return {number}
 */
var abs = Math.abs;

/**
 * @param {number}
 * @return {string}
 */
var from = String.fromCharCode;

/**
 * @param {string} value
 * @param {number} length
 * @return {number}
 */
function hash(value, length) {
	return (
		(((((((length << 2) ^ charat(value, 0)) << 2) ^ charat(value, 1)) <<
			2) ^
			charat(value, 2)) <<
			2) ^
		charat(value, 3)
	);
}

/**
 * @param {string} value
 * @return {string}
 */
function trim(value) {
	return value.trim();
}

/**
 * @param {string} value
 * @param {RegExp} pattern
 * @return {string?}
 */
function match(value, pattern) {
	return (value = pattern.exec(value)) ? value[0] : value;
}

/**
 * @param {string} value
 * @param {(string|RegExp)} pattern
 * @param {string} replacement
 * @return {string}
 */
function replace(value, pattern, replacement) {
	return value.replace(pattern, replacement);
}

/**
 * @param {string} value
 * @param {string} value
 * @return {number}
 */
function indexof(value, search) {
	return value.indexOf(search);
}

/**
 * @param {string} value
 * @param {number} index
 * @return {number}
 */
function charat(value, index) {
	return value.charCodeAt(index) | 0;
}

/**
 * @param {string} value
 * @param {number} begin
 * @param {number} end
 * @return {string}
 */
function substr(value, begin, end) {
	return value.slice(begin, end);
}

/**
 * @param {string} value
 * @return {number}
 */
function strlen(value) {
	return value.length;
}

/**
 * @param {any[]} value
 * @return {number}
 */
function sizeof(value) {
	return value.length;
}

/**
 * @param {any} value
 * @param {any[]} array
 * @return {any}
 */
function append(value, array) {
	return array.push(value), value;
}

/**
 * @param {string[]} array
 * @param {function} callback
 * @return {string}
 */
function combine(array, callback) {
	return array.map(callback).join("");
}

var line = 1;
var column = 1;
var length = 0;
var position = 0;
var character = 0;
var characters = "";

/**
 * @param {string} value
 * @param {object} root
 * @param {object?} parent
 * @param {string} type
 * @param {string[]} props
 * @param {object[]} children
 * @param {number} length
 */
function node(value, root, parent, type, props, children, length) {
	return {
		value: value,
		root: root,
		parent: parent,
		type: type,
		props: props,
		children: children,
		line: line,
		column: column,
		length: length,
		return: "",
	};
}

/**
 * @param {string} value
 * @param {object} root
 * @param {string} type
 */
function copy(value, root, type) {
	return node(
		value,
		root.root,
		root.parent,
		type,
		root.props,
		root.children,
		0
	);
}

/**
 * @return {number}
 */
function char() {
	return character;
}

/**
 * @return {number}
 */
function prev() {
	character = position > 0 ? charat(characters, --position) : 0;

	if ((column--, character === 10)) (column = 1), line--;

	return character;
}

/**
 * @return {number}
 */
function next() {
	character = position < length ? charat(characters, position++) : 0;

	if ((column++, character === 10)) (column = 1), line++;

	return character;
}

/**
 * @return {number}
 */
function peek() {
	return charat(characters, position);
}

/**
 * @return {number}
 */
function caret() {
	return position;
}

/**
 * @param {number} begin
 * @param {number} end
 * @return {string}
 */
function slice(begin, end) {
	return substr(characters, begin, end);
}

/**
 * @param {number} type
 * @return {number}
 */
function token(type) {
	switch (type) {
		// \0 \t \n \r \s whitespace token
		case 0:
		case 9:
		case 10:
		case 13:
		case 32:
			return 5;
		// ! + , / > @ ~ isolate token
		case 33:
		case 43:
		case 44:
		case 47:
		case 62:
		case 64:
		case 126:
		// ; { } breakpoint token
		case 59:
		case 123:
		case 125:
			return 4;
		// : accompanied token
		case 58:
			return 3;
		// " ' ( [ opening delimit token
		case 34:
		case 39:
		case 40:
		case 91:
			return 2;
		// ) ] closing delimit token
		case 41:
		case 93:
			return 1;
	}

	return 0;
}

/**
 * @param {string} value
 * @return {any[]}
 */
function alloc(value) {
	return (
		(line = column = 1),
		(length = strlen((characters = value))),
		(position = 0),
		[]
	);
}

/**
 * @param {any} value
 * @return {any}
 */
function dealloc(value) {
	return (characters = ""), value;
}

/**
 * @param {number} type
 * @return {string}
 */
function delimit(type) {
	return trim(
		slice(
			position - 1,
			delimiter(type === 91 ? type + 2 : type === 40 ? type + 1 : type)
		)
	);
}

/**
 * @param {number} type
 * @return {string}
 */
function whitespace(type) {
	while ((character = peek()))
		if (character < 33) next();
		else break;

	return token(type) > 2 || token(character) > 3 ? "" : " ";
}

/**
 * @param {number} index
 * @param {number} count
 * @return {string}
 */
function escaping(index, count) {
	while (--count && next())
		// not 0-9 A-F a-f
		if (
			character < 48 ||
			character > 102 ||
			(character > 57 && character < 65) ||
			(character > 70 && character < 97)
		)
			break;

	return slice(index, caret() + (count < 6 && peek() == 32 && next() == 32));
}

/**
 * @param {number} type
 * @return {number}
 */
function delimiter(type) {
	while (next())
		switch (character) {
			// ] ) " '
			case type:
				return position;
			// " '
			case 34:
			case 39:
				return delimiter(type === 34 || type === 39 ? type : character);
			// (
			case 40:
				if (type === 41) delimiter(type);
				break;
			// \
			case 92:
				next();
				break;
		}

	return position;
}

/**
 * @param {number} type
 * @param {number} index
 * @return {number}
 */
function commenter(type, index) {
	while (next())
		// //
		if (type + character === 47 + 10) break;
		// /*
		else if (type + character === 42 + 42 && peek() === 47) break;

	return (
		"/*" +
		slice(index, position - 1) +
		"*" +
		from(type === 47 ? type : next())
	);
}

/**
 * @param {number} index
 * @return {string}
 */
function identifier(index) {
	while (!token(peek())) next();

	return slice(index, position);
}

/**
 * @param {string} value
 * @return {object[]}
 */
function compile(value) {
	return dealloc(
		parse("", null, null, null, [""], (value = alloc(value)), 0, [0], value)
	);
}

/**
 * @param {string} value
 * @param {object} root
 * @param {object?} parent
 * @param {string[]} rule
 * @param {string[]} rules
 * @param {string[]} rulesets
 * @param {number[]} pseudo
 * @param {number[]} points
 * @param {string[]} declarations
 * @return {object}
 */
function parse(
	value,
	root,
	parent,
	rule,
	rules,
	rulesets,
	pseudo,
	points,
	declarations
) {
	var index = 0;
	var offset = 0;
	var length = pseudo;
	var atrule = 0;
	var property = 0;
	var previous = 0;
	var variable = 1;
	var scanning = 1;
	var ampersand = 1;
	var character = 0;
	var type = "";
	var props = rules;
	var children = rulesets;
	var reference = rule;
	var characters = type;

	while (scanning)
		switch (((previous = character), (character = next()))) {
			// " ' [ (
			case 34:
			case 39:
			case 91:
			case 40:
				characters += delimit(character);
				break;
			// \t \n \r \s
			case 9:
			case 10:
			case 13:
			case 32:
				characters += whitespace(previous);
				break;
			// \
			case 92:
				characters += escaping(caret() - 1, 7);
				continue;
			// /
			case 47:
				switch (peek()) {
					case 42:
					case 47:
						append(
							comment(commenter(next(), caret()), root, parent),
							declarations
						);
						break;
					default:
						characters += "/";
				}
				break;
			// {
			case 123 * variable:
				points[index++] = strlen(characters) * ampersand;
			// } ; \0
			case 125 * variable:
			case 59:
			case 0:
				switch (character) {
					// \0 }
					case 0:
					case 125:
						scanning = 0;
					// ;
					case 59 + offset:
						if (property > 0 && strlen(characters) - length)
							append(
								property > 32
									? declaration(
											characters + ";",
											rule,
											parent,
											length - 1
									  )
									: declaration(
											replace(characters, " ", "") + ";",
											rule,
											parent,
											length - 2
									  ),
								declarations
							);
						break;
					// @ ;
					case 59:
						characters += ";";
					// { rule/at-rule
					default:
						append(
							(reference = ruleset(
								characters,
								root,
								parent,
								index,
								offset,
								rules,
								points,
								type,
								(props = []),
								(children = []),
								length
							)),
							rulesets
						);

						if (character === 123)
							if (offset === 0)
								parse(
									characters,
									root,
									reference,
									reference,
									props,
									rulesets,
									length,
									points,
									children
								);
							else
								switch (atrule) {
									// d m s
									case 100:
									case 109:
									case 115:
										parse(
											value,
											reference,
											reference,
											rule &&
												append(
													ruleset(
														value,
														reference,
														reference,
														0,
														0,
														rules,
														points,
														type,
														rules,
														(props = []),
														length
													),
													children
												),
											rules,
											children,
											length,
											points,
											rule ? props : children
										);
										break;
									default:
										parse(
											characters,
											reference,
											reference,
											reference,
											[""],
											children,
											length,
											points,
											children
										);
								}
				}

				(index = offset = property = 0),
					(variable = ampersand = 1),
					(type = characters = ""),
					(length = pseudo);
				break;
			// :
			case 58:
				(length = 1 + strlen(characters)), (property = previous);
			default:
				if (variable < 1)
					if (character == 123) --variable;
					else if (
						character == 125 &&
						variable++ == 0 &&
						prev() == 125
					)
						continue;

				switch (
					((characters += from(character)), character * variable)
				) {
					// &
					case 38:
						ampersand = offset > 0 ? 1 : ((characters += "\f"), -1);
						break;
					// ,
					case 44:
						(points[index++] =
							(strlen(characters) - 1) * ampersand),
							(ampersand = 1);
						break;
					// @
					case 64:
						// -
						if (peek() === 45) characters += delimit(next());

						(atrule = peek()),
							(offset = strlen(
								(type = characters += identifier(caret()))
							)),
							character++;
						break;
					// -
					case 45:
						if (previous === 45 && strlen(characters) == 2)
							variable = 0;
				}
		}

	return rulesets;
}

/**
 * @param {string} value
 * @param {object} root
 * @param {object?} parent
 * @param {number} index
 * @param {number} offset
 * @param {string[]} rules
 * @param {number[]} points
 * @param {string} type
 * @param {string[]} props
 * @param {string[]} children
 * @param {number} length
 * @return {object}
 */
function ruleset(
	value,
	root,
	parent,
	index,
	offset,
	rules,
	points,
	type,
	props,
	children,
	length
) {
	var post = offset - 1;
	var rule = offset === 0 ? rules : [""];
	var size = sizeof(rule);

	for (var i = 0, j = 0, k = 0; i < index; ++i)
		for (
			var x = 0,
				y = substr(value, post + 1, (post = abs((j = points[i])))),
				z = value;
			x < size;
			++x
		)
			if (
				(z = trim(
					j > 0 ? rule[x] + " " + y : replace(y, /&\f/g, rule[x])
				))
			)
				props[k++] = z;

	return node(
		value,
		root,
		parent,
		offset === 0 ? RULESET : type,
		props,
		children,
		length
	);
}

/**
 * @param {number} value
 * @param {object} root
 * @param {object?} parent
 * @return {object}
 */
function comment(value, root, parent) {
	return node(
		value,
		root,
		parent,
		COMMENT,
		from(char()),
		substr(value, 2, -2),
		0
	);
}

/**
 * @param {string} value
 * @param {object} root
 * @param {object?} parent
 * @param {number} length
 * @return {object}
 */
function declaration(value, root, parent, length) {
	return node(
		value,
		root,
		parent,
		DECLARATION,
		substr(value, 0, length),
		substr(value, length + 1, -1),
		length
	);
}

/**
 * @param {string} value
 * @param {number} length
 * @return {string}
 */
function prefix(value, length) {
	switch (hash(value, length)) {
		// color-adjust
		case 5103:
			return WEBKIT + "print-" + value + value;
		// animation, animation-(delay|direction|duration|fill-mode|iteration-count|name|play-state|timing-function)
		case 5737:
		case 4201:
		case 3177:
		case 3433:
		case 1641:
		case 4457:
		case 2921:
		// text-decoration, filter, clip-path, backface-visibility, column, box-decoration-break
		case 5572:
		case 6356:
		case 5844:
		case 3191:
		case 6645:
		case 3005:
		// mask, mask-image, mask-(mode|clip|size), mask-(repeat|origin), mask-position, mask-composite,
		case 6391:
		case 5879:
		case 5623:
		case 6135:
		case 4599:
		case 4855:
		// background-clip, columns, column-(count|fill|gap|rule|rule-color|rule-style|rule-width|span|width)
		case 4215:
		case 6389:
		case 5109:
		case 5365:
		case 5621:
		case 3829:
			return WEBKIT + value + value;
		// appearance, user-select, transform, hyphens, text-size-adjust
		case 5349:
		case 4246:
		case 4810:
		case 6968:
		case 2756:
			return WEBKIT + value + MOZ + value + MS + value + value;
		// flex, flex-direction
		case 6828:
		case 4268:
			return WEBKIT + value + MS + value + value;
		// order
		case 6165:
			return WEBKIT + value + MS + "flex-" + value + value;
		// align-items
		case 5187:
			return (
				WEBKIT +
				value +
				replace(
					value,
					/(\w+).+(:[^]+)/,
					WEBKIT + "box-$1$2" + MS + "flex-$1$2"
				) +
				value
			);
		// align-self
		case 5443:
			return (
				WEBKIT +
				value +
				MS +
				"flex-item-" +
				replace(value, /flex-|-self/, "") +
				value
			);
		// align-content
		case 4675:
			return (
				WEBKIT +
				value +
				MS +
				"flex-line-pack" +
				replace(value, /align-content|flex-|-self/, "") +
				value
			);
		// flex-shrink
		case 5548:
			return (
				WEBKIT +
				value +
				MS +
				replace(value, "shrink", "negative") +
				value
			);
		// flex-basis
		case 5292:
			return (
				WEBKIT +
				value +
				MS +
				replace(value, "basis", "preferred-size") +
				value
			);
		// flex-grow
		case 6060:
			return (
				WEBKIT +
				"box-" +
				replace(value, "-grow", "") +
				WEBKIT +
				value +
				MS +
				replace(value, "grow", "positive") +
				value
			);
		// transition
		case 4554:
			return (
				WEBKIT +
				replace(value, /([^-])(transform)/g, "$1" + WEBKIT + "$2") +
				value
			);
		// cursor
		case 6187:
			return (
				replace(
					replace(
						replace(value, /(zoom-|grab)/, WEBKIT + "$1"),
						/(image-set)/,
						WEBKIT + "$1"
					),
					value,
					""
				) + value
			);
		// background, background-image
		case 5495:
		case 3959:
			return replace(value, /(image-set\([^]*)/, WEBKIT + "$1" + "$`$1");
		// justify-content
		case 4968:
			return (
				replace(
					replace(
						value,
						/(.+:)(flex-)?(.*)/,
						WEBKIT + "box-pack:$3" + MS + "flex-pack:$3"
					),
					/s.+-b[^;]+/,
					"justify"
				) +
				WEBKIT +
				value +
				value
			);
		// (margin|padding)-inline-(start|end)
		case 4095:
		case 3583:
		case 4068:
		case 2532:
			return replace(value, /(.+)-inline(.+)/, WEBKIT + "$1$2") + value;
		// (min|max)?(width|height|inline-size|block-size)
		case 8116:
		case 7059:
		case 5753:
		case 5535:
		case 5445:
		case 5701:
		case 4933:
		case 4677:
		case 5533:
		case 5789:
		case 5021:
		case 4765:
			// stretch, max-content, min-content, fill-available
			if (strlen(value) - 1 - length > 6)
				switch (charat(value, length + 1)) {
					// (m)ax-content, (m)in-content
					case 109:
						// -
						if (charat(value, length + 4) !== 45) break;
					// (f)ill-available, (f)it-content
					case 102:
						return (
							replace(
								value,
								/(.+:)(.+)-([^]+)/,
								"$1" +
									WEBKIT +
									"$2-$3" +
									"$1" +
									MOZ +
									(charat(value, length + 3) == 108
										? "$3"
										: "$2-$3")
							) + value
						);
					// (s)tretch
					case 115:
						return ~indexof(value, "stretch")
							? prefix(
									replace(value, "stretch", "fill-available"),
									length
							  ) + value
							: value;
				}
			break;
		// position: sticky
		case 4949:
			// (s)ticky?
			if (charat(value, length + 1) !== 115) break;
		// display: (flex|inline-flex)
		case 6444:
			switch (
				charat(
					value,
					strlen(value) - 3 - (~indexof(value, "!important") && 10)
				)
			) {
				// stic(k)y
				case 107:
					return replace(value, ":", ":" + WEBKIT) + value;
				// (inline-)?fl(e)x
				case 101:
					return (
						replace(
							value,
							/(.+:)([^;!]+)(;|!.+)?/,
							"$1" +
								WEBKIT +
								(charat(value, 14) === 45 ? "inline-" : "") +
								"box$3" +
								"$1" +
								WEBKIT +
								"$2$3" +
								"$1" +
								MS +
								"$2box$3"
						) + value
					);
			}
			break;
		// writing-mode
		case 5936:
			switch (charat(value, length + 11)) {
				// vertical-l(r)
				case 114:
					return (
						WEBKIT +
						value +
						MS +
						replace(value, /[svh]\w+-[tblr]{2}/, "tb") +
						value
					);
				// vertical-r(l)
				case 108:
					return (
						WEBKIT +
						value +
						MS +
						replace(value, /[svh]\w+-[tblr]{2}/, "tb-rl") +
						value
					);
				// horizontal(-)tb
				case 45:
					return (
						WEBKIT +
						value +
						MS +
						replace(value, /[svh]\w+-[tblr]{2}/, "lr") +
						value
					);
			}

			return WEBKIT + value + MS + value + value;
	}

	return value;
}

/**
 * @param {object[]} children
 * @param {function} callback
 * @return {string}
 */
function serialize(children, callback) {
	var output = "";
	var length = sizeof(children);

	for (var i = 0; i < length; i++)
		output += callback(children[i], i, children, callback) || "";

	return output;
}

/**
 * @param {object} element
 * @param {number} index
 * @param {object[]} children
 * @param {function} callback
 * @return {string}
 */
function stringify(element, index, children, callback) {
	switch (element.type) {
		case IMPORT:
		case DECLARATION:
			return (element.return = element.return || element.value);
		case COMMENT:
			return "";
		case RULESET:
			element.value = element.props.join(",");
	}

	return strlen((children = serialize(element.children, callback)))
		? (element.return = element.value + "{" + children + "}")
		: "";
}

/**
 * @param {function[]} collection
 * @return {function}
 */
function middleware(collection) {
	var length = sizeof(collection);

	return function (element, index, children, callback) {
		var output = "";

		for (var i = 0; i < length; i++)
			output += collection[i](element, index, children, callback) || "";

		return output;
	};
}

/**
 * @param {function} callback
 * @return {function}
 */
function rulesheet(callback) {
	return function (element) {
		if (!element.root) if ((element = element.return)) callback(element);
	};
}

/**
 * @param {object} element
 * @param {number} index
 * @param {object[]} children
 * @param {function} callback
 */
function prefixer(element, index, children, callback) {
	if (!element.return)
		switch (element.type) {
			case DECLARATION:
				element.return = prefix(element.value, element.length);
				break;
			case KEYFRAMES:
				return serialize(
					[
						copy(
							replace(element.value, "@", "@" + WEBKIT),
							element,
							""
						),
					],
					callback
				);
			case RULESET:
				if (element.length)
					return combine(element.props, function (value) {
						switch (match(value, /(::plac\w+|:read-\w+)/)) {
							// :read-(only|write)
							case ":read-only":
							case ":read-write":
								return serialize(
									[
										copy(
											replace(
												value,
												/:(read-\w+)/,
												":" + MOZ + "$1"
											),
											element,
											""
										),
									],
									callback
								);
							// :placeholder
							case "::placeholder":
								return serialize(
									[
										copy(
											replace(
												value,
												/:(plac\w+)/,
												":" + WEBKIT + "input-$1"
											),
											element,
											""
										),
										copy(
											replace(
												value,
												/:(plac\w+)/,
												":" + MOZ + "$1"
											),
											element,
											""
										),
										copy(
											replace(
												value,
												/:(plac\w+)/,
												MS + "input-$1"
											),
											element,
											""
										),
									],
									callback
								);
						}

						return "";
					});
		}
}

function memoize(fn) {
	var cache = Object.create(null);
	return function (arg) {
		if (cache[arg] === undefined) cache[arg] = fn(arg);
		return cache[arg];
	};
}

var last = function last(arr) {
	return arr.length ? arr[arr.length - 1] : null;
};

var toRules = function toRules(parsed, points) {
	// pretend we've started with a comma
	var index = -1;
	var character = 44;

	do {
		switch (token(character)) {
			case 0:
				// &\f
				if (character === 38 && peek() === 12) {
					// this is not 100% correct, we don't account for literal sequences here - like for example quoted strings
					// stylis inserts \f after & to know when & where it should replace this sequence with the context selector
					// and when it should just concatenate the outer and inner selectors
					// it's very unlikely for this sequence to actually appear in a different context, so we just leverage this fact here
					points[index] = 1;
				}

				parsed[index] += identifier(position - 1);
				break;

			case 2:
				parsed[index] += delimit(character);
				break;

			case 4:
				// comma
				if (character === 44) {
					// colon
					parsed[++index] = peek() === 58 ? "&\f" : "";
					points[index] = parsed[index].length;
					break;
				}

			// fallthrough

			default:
				parsed[index] += from(character);
		}
	} while ((character = next()));

	return parsed;
};

var getRules = function getRules(value, points) {
	return dealloc(toRules(alloc(value), points));
}; // WeakSet would be more appropriate, but only WeakMap is supported in IE11

var fixedElements = /* #__PURE__ */ new WeakMap();
var compat = function compat(element) {
	if (
		element.type !== "rule" ||
		!element.parent || // .length indicates if this rule contains pseudo or not
		!element.length
	) {
		return;
	}

	var value = element.value,
		parent = element.parent;
	var isImplicitRule =
		element.column === parent.column && element.line === parent.line;

	while (parent.type !== "rule") {
		parent = parent.parent;
		if (!parent) return;
	} // short-circuit for the simplest case

	if (
		element.props.length === 1 &&
		value.charCodeAt(0) !== 58 &&
		/* colon */
		!fixedElements.get(parent)
	) {
		return;
	} // if this is an implicitly inserted rule (the one eagerly inserted at the each new nested level)
	// then the props has already been manipulated beforehand as they that array is shared between it and its "rule parent"

	if (isImplicitRule) {
		return;
	}

	fixedElements.set(element, true);
	var points = [];
	var rules = getRules(value, points);
	var parentRules = parent.props;

	for (var i = 0, k = 0; i < rules.length; i++) {
		for (var j = 0; j < parentRules.length; j++, k++) {
			element.props[k] = points[i]
				? rules[i].replace(/&\f/g, parentRules[j])
				: parentRules[j] + " " + rules[i];
		}
	}
};
var removeLabel = function removeLabel(element) {
	if (element.type === "decl") {
		var value = element.value;

		if (
			// charcode for l
			value.charCodeAt(0) === 108 && // charcode for b
			value.charCodeAt(2) === 98
		) {
			// this ignores label
			element["return"] = "";
			element.value = "";
		}
	}
};
var ignoreFlag =
	"emotion-disable-server-rendering-unsafe-selector-warning-please-do-not-use-this-the-warning-exists-for-a-reason";

var isIgnoringComment = function isIgnoringComment(element) {
	return (
		!!element &&
		element.type === "comm" &&
		element.children.indexOf(ignoreFlag) > -1
	);
};

var createUnsafeSelectorsAlarm = function createUnsafeSelectorsAlarm(cache) {
	return function (element, index, children) {
		if (element.type !== "rule") return;
		var unsafePseudoClasses = element.value.match(
			/(:first|:nth|:nth-last)-child/g
		);

		if (unsafePseudoClasses && cache.compat !== true) {
			var prevElement = index > 0 ? children[index - 1] : null;

			if (prevElement && isIgnoringComment(last(prevElement.children))) {
				return;
			}

			unsafePseudoClasses.forEach(function (unsafePseudoClass) {
				console.error(
					'The pseudo class "' +
						unsafePseudoClass +
						'" is potentially unsafe when doing server-side rendering. Try changing it to "' +
						unsafePseudoClass.split("-child")[0] +
						'-of-type".'
				);
			});
		}
	};
};

var isImportRule = function isImportRule(element) {
	return (
		element.type.charCodeAt(1) === 105 && element.type.charCodeAt(0) === 64
	);
};

var isPrependedWithRegularRules = function isPrependedWithRegularRules(
	index,
	children
) {
	for (var i = index - 1; i >= 0; i--) {
		if (!isImportRule(children[i])) {
			return true;
		}
	}

	return false;
}; // use this to remove incorrect elements from further processing
// so they don't get handed to the `sheet` (or anything else)
// as that could potentially lead to additional logs which in turn could be overhelming to the user

var nullifyElement = function nullifyElement(element) {
	element.type = "";
	element.value = "";
	element["return"] = "";
	element.children = "";
	element.props = "";
};

var incorrectImportAlarm = function incorrectImportAlarm(
	element,
	index,
	children
) {
	if (!isImportRule(element)) {
		return;
	}

	if (element.parent) {
		console.error(
			"`@import` rules can't be nested inside other rules. Please move it to the top level and put it before regular rules. Keep in mind that they can only be used within global styles."
		);
		nullifyElement(element);
	} else if (isPrependedWithRegularRules(index, children)) {
		console.error(
			"`@import` rules can't be after other rules. Please put your `@import` rules before your other rules."
		);
		nullifyElement(element);
	}
};

var defaultStylisPlugins = [prefixer];

var createCache = function createCache(options) {
	var key = options.key;

	if (process.env.NODE_ENV !== "production" && !key) {
		throw new Error(
			"You have to configure `key` for your cache. Please make sure it's unique (and not equal to 'css') as it's used for linking styles to your cache.\n" +
				'If multiple caches share the same key they might "fight" for each other\'s style elements.'
		);
	}

	if (key === "css") {
		var ssrStyles = document.querySelectorAll(
			"style[data-emotion]:not([data-s])"
		); // get SSRed styles out of the way of React's hydration
		// document.head is a safe place to move them to(though note document.head is not necessarily the last place they will be)
		// note this very very intentionally targets all style elements regardless of the key to ensure
		// that creating a cache works inside of render of a React component

		Array.prototype.forEach.call(ssrStyles, function (node) {
			// we want to only move elements which have a space in the data-emotion attribute value
			// because that indicates that it is an Emotion 11 server-side rendered style elements
			// while we will already ignore Emotion 11 client-side inserted styles because of the :not([data-s]) part in the selector
			// Emotion 10 client-side inserted styles did not have data-s (but importantly did not have a space in their data-emotion attributes)
			// so checking for the space ensures that loading Emotion 11 after Emotion 10 has inserted some styles
			// will not result in the Emotion 10 styles being destroyed
			var dataEmotionAttribute = node.getAttribute("data-emotion");

			if (dataEmotionAttribute.indexOf(" ") === -1) {
				return;
			}
			document.head.appendChild(node);
			node.setAttribute("data-s", "");
		});
	}

	var stylisPlugins = options.stylisPlugins || defaultStylisPlugins;

	if (process.env.NODE_ENV !== "production") {
		// $FlowFixMe
		if (/[^a-z-]/.test(key)) {
			throw new Error(
				'Emotion key must only contain lower case alphabetical characters and - but "' +
					key +
					'" was passed'
			);
		}
	}

	var inserted = {}; // $FlowFixMe

	var container;
	var nodesToHydrate = [];

	{
		container = options.container || document.head;
		Array.prototype.forEach.call(
			// this means we will ignore elements which don't have a space in them which
			// means that the style elements we're looking at are only Emotion 11 server-rendered style elements
			document.querySelectorAll('style[data-emotion^="' + key + ' "]'),
			function (node) {
				var attrib = node.getAttribute("data-emotion").split(" "); // $FlowFixMe

				for (var i = 1; i < attrib.length; i++) {
					inserted[attrib[i]] = true;
				}

				nodesToHydrate.push(node);
			}
		);
	}

	var _insert;

	var omnipresentPlugins = [compat, removeLabel];

	if (process.env.NODE_ENV !== "production") {
		omnipresentPlugins.push(
			createUnsafeSelectorsAlarm({
				get compat() {
					return cache.compat;
				},
			}),
			incorrectImportAlarm
		);
	}

	{
		var currentSheet;
		var finalizingPlugins = [
			stringify,
			process.env.NODE_ENV !== "production"
				? function (element) {
						if (!element.root) {
							if (element["return"]) {
								currentSheet.insert(element["return"]);
							} else if (
								element.value &&
								element.type !== COMMENT
							) {
								// insert empty rule in non-production environments
								// so @emotion/jest can grab `key` from the (JS)DOM for caches without any rules inserted yet
								currentSheet.insert(element.value + "{}");
							}
						}
				  }
				: rulesheet(function (rule) {
						currentSheet.insert(rule);
				  }),
		];
		var serializer = middleware(
			omnipresentPlugins.concat(stylisPlugins, finalizingPlugins)
		);

		var stylis = function stylis(styles) {
			return serialize(compile(styles), serializer);
		};

		_insert = function insert(selector, serialized, sheet, shouldCache) {
			currentSheet = sheet;

			if (
				process.env.NODE_ENV !== "production" &&
				serialized.map !== undefined
			) {
				currentSheet = {
					insert: function insert(rule) {
						sheet.insert(rule + serialized.map);
					},
				};
			}

			stylis(
				selector
					? selector + "{" + serialized.styles + "}"
					: serialized.styles
			);

			if (shouldCache) {
				cache.inserted[serialized.name] = true;
			}
		};
	}

	var cache = {
		key: key,
		sheet: new StyleSheet({
			key: key,
			container: container,
			nonce: options.nonce,
			speedy: options.speedy,
			prepend: options.prepend,
		}),
		nonce: options.nonce,
		inserted: inserted,
		registered: {},
		insert: _insert,
	};
	cache.sheet.hydrate(nodesToHydrate);
	return cache;
};

var reactIs$2 = { exports: {} };

var reactIs_production_min$1 = {};

/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var b$1 = "function" === typeof Symbol && Symbol.for,
	c$1 = b$1 ? Symbol.for("react.element") : 60103,
	d$1 = b$1 ? Symbol.for("react.portal") : 60106,
	e$1 = b$1 ? Symbol.for("react.fragment") : 60107,
	f$1 = b$1 ? Symbol.for("react.strict_mode") : 60108,
	g$1 = b$1 ? Symbol.for("react.profiler") : 60114,
	h$1 = b$1 ? Symbol.for("react.provider") : 60109,
	k$1 = b$1 ? Symbol.for("react.context") : 60110,
	l$1 = b$1 ? Symbol.for("react.async_mode") : 60111,
	m$1 = b$1 ? Symbol.for("react.concurrent_mode") : 60111,
	n$1 = b$1 ? Symbol.for("react.forward_ref") : 60112,
	p$1 = b$1 ? Symbol.for("react.suspense") : 60113,
	q$1 = b$1 ? Symbol.for("react.suspense_list") : 60120,
	r$1 = b$1 ? Symbol.for("react.memo") : 60115,
	t$1 = b$1 ? Symbol.for("react.lazy") : 60116,
	v$1 = b$1 ? Symbol.for("react.block") : 60121,
	w$2 = b$1 ? Symbol.for("react.fundamental") : 60117,
	x$1 = b$1 ? Symbol.for("react.responder") : 60118,
	y$1 = b$1 ? Symbol.for("react.scope") : 60119;
function z$1(a) {
	if ("object" === typeof a && null !== a) {
		var u = a.$$typeof;
		switch (u) {
			case c$1:
				switch (((a = a.type), a)) {
					case l$1:
					case m$1:
					case e$1:
					case g$1:
					case f$1:
					case p$1:
						return a;
					default:
						switch (((a = a && a.$$typeof), a)) {
							case k$1:
							case n$1:
							case t$1:
							case r$1:
							case h$1:
								return a;
							default:
								return u;
						}
				}
			case d$1:
				return u;
		}
	}
}
function A$1(a) {
	return z$1(a) === m$1;
}
reactIs_production_min$1.AsyncMode = l$1;
reactIs_production_min$1.ConcurrentMode = m$1;
reactIs_production_min$1.ContextConsumer = k$1;
reactIs_production_min$1.ContextProvider = h$1;
reactIs_production_min$1.Element = c$1;
reactIs_production_min$1.ForwardRef = n$1;
reactIs_production_min$1.Fragment = e$1;
reactIs_production_min$1.Lazy = t$1;
reactIs_production_min$1.Memo = r$1;
reactIs_production_min$1.Portal = d$1;
reactIs_production_min$1.Profiler = g$1;
reactIs_production_min$1.StrictMode = f$1;
reactIs_production_min$1.Suspense = p$1;
reactIs_production_min$1.isAsyncMode = function (a) {
	return A$1(a) || z$1(a) === l$1;
};
reactIs_production_min$1.isConcurrentMode = A$1;
reactIs_production_min$1.isContextConsumer = function (a) {
	return z$1(a) === k$1;
};
reactIs_production_min$1.isContextProvider = function (a) {
	return z$1(a) === h$1;
};
reactIs_production_min$1.isElement = function (a) {
	return "object" === typeof a && null !== a && a.$$typeof === c$1;
};
reactIs_production_min$1.isForwardRef = function (a) {
	return z$1(a) === n$1;
};
reactIs_production_min$1.isFragment = function (a) {
	return z$1(a) === e$1;
};
reactIs_production_min$1.isLazy = function (a) {
	return z$1(a) === t$1;
};
reactIs_production_min$1.isMemo = function (a) {
	return z$1(a) === r$1;
};
reactIs_production_min$1.isPortal = function (a) {
	return z$1(a) === d$1;
};
reactIs_production_min$1.isProfiler = function (a) {
	return z$1(a) === g$1;
};
reactIs_production_min$1.isStrictMode = function (a) {
	return z$1(a) === f$1;
};
reactIs_production_min$1.isSuspense = function (a) {
	return z$1(a) === p$1;
};
reactIs_production_min$1.isValidElementType = function (a) {
	return (
		"string" === typeof a ||
		"function" === typeof a ||
		a === e$1 ||
		a === m$1 ||
		a === g$1 ||
		a === f$1 ||
		a === p$1 ||
		a === q$1 ||
		("object" === typeof a &&
			null !== a &&
			(a.$$typeof === t$1 ||
				a.$$typeof === r$1 ||
				a.$$typeof === h$1 ||
				a.$$typeof === k$1 ||
				a.$$typeof === n$1 ||
				a.$$typeof === w$2 ||
				a.$$typeof === x$1 ||
				a.$$typeof === y$1 ||
				a.$$typeof === v$1))
	);
};
reactIs_production_min$1.typeOf = z$1;

var reactIs_development$1 = {};

/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

if (process.env.NODE_ENV !== "production") {
	(function () {
		// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
		// nor polyfill, then a plain number is used for performance.
		var hasSymbol = typeof Symbol === "function" && Symbol.for;
		var REACT_ELEMENT_TYPE = hasSymbol
			? Symbol.for("react.element")
			: 0xeac7;
		var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for("react.portal") : 0xeaca;
		var REACT_FRAGMENT_TYPE = hasSymbol
			? Symbol.for("react.fragment")
			: 0xeacb;
		var REACT_STRICT_MODE_TYPE = hasSymbol
			? Symbol.for("react.strict_mode")
			: 0xeacc;
		var REACT_PROFILER_TYPE = hasSymbol
			? Symbol.for("react.profiler")
			: 0xead2;
		var REACT_PROVIDER_TYPE = hasSymbol
			? Symbol.for("react.provider")
			: 0xeacd;
		var REACT_CONTEXT_TYPE = hasSymbol
			? Symbol.for("react.context")
			: 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary
		// (unstable) APIs that have been removed. Can we remove the symbols?

		var REACT_ASYNC_MODE_TYPE = hasSymbol
			? Symbol.for("react.async_mode")
			: 0xeacf;
		var REACT_CONCURRENT_MODE_TYPE = hasSymbol
			? Symbol.for("react.concurrent_mode")
			: 0xeacf;
		var REACT_FORWARD_REF_TYPE = hasSymbol
			? Symbol.for("react.forward_ref")
			: 0xead0;
		var REACT_SUSPENSE_TYPE = hasSymbol
			? Symbol.for("react.suspense")
			: 0xead1;
		var REACT_SUSPENSE_LIST_TYPE = hasSymbol
			? Symbol.for("react.suspense_list")
			: 0xead8;
		var REACT_MEMO_TYPE = hasSymbol ? Symbol.for("react.memo") : 0xead3;
		var REACT_LAZY_TYPE = hasSymbol ? Symbol.for("react.lazy") : 0xead4;
		var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for("react.block") : 0xead9;
		var REACT_FUNDAMENTAL_TYPE = hasSymbol
			? Symbol.for("react.fundamental")
			: 0xead5;
		var REACT_RESPONDER_TYPE = hasSymbol
			? Symbol.for("react.responder")
			: 0xead6;
		var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for("react.scope") : 0xead7;

		function isValidElementType(type) {
			return (
				typeof type === "string" ||
				typeof type === "function" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
				type === REACT_FRAGMENT_TYPE ||
				type === REACT_CONCURRENT_MODE_TYPE ||
				type === REACT_PROFILER_TYPE ||
				type === REACT_STRICT_MODE_TYPE ||
				type === REACT_SUSPENSE_TYPE ||
				type === REACT_SUSPENSE_LIST_TYPE ||
				(typeof type === "object" &&
					type !== null &&
					(type.$$typeof === REACT_LAZY_TYPE ||
						type.$$typeof === REACT_MEMO_TYPE ||
						type.$$typeof === REACT_PROVIDER_TYPE ||
						type.$$typeof === REACT_CONTEXT_TYPE ||
						type.$$typeof === REACT_FORWARD_REF_TYPE ||
						type.$$typeof === REACT_FUNDAMENTAL_TYPE ||
						type.$$typeof === REACT_RESPONDER_TYPE ||
						type.$$typeof === REACT_SCOPE_TYPE ||
						type.$$typeof === REACT_BLOCK_TYPE))
			);
		}

		function typeOf(object) {
			if (typeof object === "object" && object !== null) {
				var $$typeof = object.$$typeof;

				switch ($$typeof) {
					case REACT_ELEMENT_TYPE:
						var type = object.type;

						switch (type) {
							case REACT_ASYNC_MODE_TYPE:
							case REACT_CONCURRENT_MODE_TYPE:
							case REACT_FRAGMENT_TYPE:
							case REACT_PROFILER_TYPE:
							case REACT_STRICT_MODE_TYPE:
							case REACT_SUSPENSE_TYPE:
								return type;

							default:
								var $$typeofType = type && type.$$typeof;

								switch ($$typeofType) {
									case REACT_CONTEXT_TYPE:
									case REACT_FORWARD_REF_TYPE:
									case REACT_LAZY_TYPE:
									case REACT_MEMO_TYPE:
									case REACT_PROVIDER_TYPE:
										return $$typeofType;

									default:
										return $$typeof;
								}
						}

					case REACT_PORTAL_TYPE:
						return $$typeof;
				}
			}

			return undefined;
		} // AsyncMode is deprecated along with isAsyncMode

		var AsyncMode = REACT_ASYNC_MODE_TYPE;
		var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
		var ContextConsumer = REACT_CONTEXT_TYPE;
		var ContextProvider = REACT_PROVIDER_TYPE;
		var Element = REACT_ELEMENT_TYPE;
		var ForwardRef = REACT_FORWARD_REF_TYPE;
		var Fragment = REACT_FRAGMENT_TYPE;
		var Lazy = REACT_LAZY_TYPE;
		var Memo = REACT_MEMO_TYPE;
		var Portal = REACT_PORTAL_TYPE;
		var Profiler = REACT_PROFILER_TYPE;
		var StrictMode = REACT_STRICT_MODE_TYPE;
		var Suspense = REACT_SUSPENSE_TYPE;
		var hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated

		function isAsyncMode(object) {
			{
				if (!hasWarnedAboutDeprecatedIsAsyncMode) {
					hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint

					console["warn"](
						"The ReactIs.isAsyncMode() alias has been deprecated, " +
							"and will be removed in React 17+. Update your code to use " +
							"ReactIs.isConcurrentMode() instead. It has the exact same API."
					);
				}
			}

			return (
				isConcurrentMode(object) ||
				typeOf(object) === REACT_ASYNC_MODE_TYPE
			);
		}
		function isConcurrentMode(object) {
			return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
		}
		function isContextConsumer(object) {
			return typeOf(object) === REACT_CONTEXT_TYPE;
		}
		function isContextProvider(object) {
			return typeOf(object) === REACT_PROVIDER_TYPE;
		}
		function isElement(object) {
			return (
				typeof object === "object" &&
				object !== null &&
				object.$$typeof === REACT_ELEMENT_TYPE
			);
		}
		function isForwardRef(object) {
			return typeOf(object) === REACT_FORWARD_REF_TYPE;
		}
		function isFragment(object) {
			return typeOf(object) === REACT_FRAGMENT_TYPE;
		}
		function isLazy(object) {
			return typeOf(object) === REACT_LAZY_TYPE;
		}
		function isMemo(object) {
			return typeOf(object) === REACT_MEMO_TYPE;
		}
		function isPortal(object) {
			return typeOf(object) === REACT_PORTAL_TYPE;
		}
		function isProfiler(object) {
			return typeOf(object) === REACT_PROFILER_TYPE;
		}
		function isStrictMode(object) {
			return typeOf(object) === REACT_STRICT_MODE_TYPE;
		}
		function isSuspense(object) {
			return typeOf(object) === REACT_SUSPENSE_TYPE;
		}

		reactIs_development$1.AsyncMode = AsyncMode;
		reactIs_development$1.ConcurrentMode = ConcurrentMode;
		reactIs_development$1.ContextConsumer = ContextConsumer;
		reactIs_development$1.ContextProvider = ContextProvider;
		reactIs_development$1.Element = Element;
		reactIs_development$1.ForwardRef = ForwardRef;
		reactIs_development$1.Fragment = Fragment;
		reactIs_development$1.Lazy = Lazy;
		reactIs_development$1.Memo = Memo;
		reactIs_development$1.Portal = Portal;
		reactIs_development$1.Profiler = Profiler;
		reactIs_development$1.StrictMode = StrictMode;
		reactIs_development$1.Suspense = Suspense;
		reactIs_development$1.isAsyncMode = isAsyncMode;
		reactIs_development$1.isConcurrentMode = isConcurrentMode;
		reactIs_development$1.isContextConsumer = isContextConsumer;
		reactIs_development$1.isContextProvider = isContextProvider;
		reactIs_development$1.isElement = isElement;
		reactIs_development$1.isForwardRef = isForwardRef;
		reactIs_development$1.isFragment = isFragment;
		reactIs_development$1.isLazy = isLazy;
		reactIs_development$1.isMemo = isMemo;
		reactIs_development$1.isPortal = isPortal;
		reactIs_development$1.isProfiler = isProfiler;
		reactIs_development$1.isStrictMode = isStrictMode;
		reactIs_development$1.isSuspense = isSuspense;
		reactIs_development$1.isValidElementType = isValidElementType;
		reactIs_development$1.typeOf = typeOf;
	})();
}

if (process.env.NODE_ENV === "production") {
	reactIs$2.exports = reactIs_production_min$1;
} else {
	reactIs$2.exports = reactIs_development$1;
}

var reactIs$1 = reactIs$2.exports;
var FORWARD_REF_STATICS = {
	$$typeof: true,
	render: true,
	defaultProps: true,
	displayName: true,
	propTypes: true,
};
var MEMO_STATICS = {
	$$typeof: true,
	compare: true,
	defaultProps: true,
	displayName: true,
	propTypes: true,
	type: true,
};
var TYPE_STATICS = {};
TYPE_STATICS[reactIs$1.ForwardRef] = FORWARD_REF_STATICS;
TYPE_STATICS[reactIs$1.Memo] = MEMO_STATICS;

var isBrowser$1 = "object" !== "undefined";
function getRegisteredStyles(registered, registeredStyles, classNames) {
	var rawClassName = "";
	classNames.split(" ").forEach(function (className) {
		if (registered[className] !== undefined) {
			registeredStyles.push(registered[className] + ";");
		} else {
			rawClassName += className + " ";
		}
	});
	return rawClassName;
}
var insertStyles = function insertStyles(cache, serialized, isStringTag) {
	var className = cache.key + "-" + serialized.name;

	if (
		// we only need to add the styles to the registered cache if the
		// class name could be used further down
		// the tree but if it's a string tag, we know it won't
		// so we don't have to add it to registered cache.
		// this improves memory usage since we can avoid storing the whole style string
		(isStringTag === false || // we need to always store it if we're in compat mode and
			// in node since emotion-server relies on whether a style is in
			// the registered cache to know whether a style is global or not
			// also, note that this check will be dead code eliminated in the browser
			isBrowser$1 === false) &&
		cache.registered[className] === undefined
	) {
		cache.registered[className] = serialized.styles;
	}

	if (cache.inserted[serialized.name] === undefined) {
		var current = serialized;

		do {
			cache.insert(
				serialized === current ? "." + className : "",
				current,
				cache.sheet,
				true
			);

			current = current.next;
		} while (current !== undefined);
	}
};

/* eslint-disable */
// Inspired by https://github.com/garycourt/murmurhash-js
// Ported from https://github.com/aappleby/smhasher/blob/61a0530f28277f2e850bfc39600ce61d02b518de/src/MurmurHash2.cpp#L37-L86
function murmur2(str) {
	// 'm' and 'r' are mixing constants generated offline.
	// They're not really 'magic', they just happen to work well.
	// const m = 0x5bd1e995;
	// const r = 24;
	// Initialize the hash
	var h = 0; // Mix 4 bytes at a time into the hash

	var k,
		i = 0,
		len = str.length;

	for (; len >= 4; ++i, len -= 4) {
		k =
			(str.charCodeAt(i) & 0xff) |
			((str.charCodeAt(++i) & 0xff) << 8) |
			((str.charCodeAt(++i) & 0xff) << 16) |
			((str.charCodeAt(++i) & 0xff) << 24);
		k =
			/* Math.imul(k, m): */
			(k & 0xffff) * 0x5bd1e995 + (((k >>> 16) * 0xe995) << 16);
		k ^=
			/* k >>> r: */
			k >>> 24;
		h =
			/* Math.imul(k, m): */
			((k & 0xffff) * 0x5bd1e995 + (((k >>> 16) * 0xe995) << 16)) ^
			/* Math.imul(h, m): */
			((h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0xe995) << 16));
	} // Handle the last few bytes of the input array

	switch (len) {
		case 3:
			h ^= (str.charCodeAt(i + 2) & 0xff) << 16;

		case 2:
			h ^= (str.charCodeAt(i + 1) & 0xff) << 8;

		case 1:
			h ^= str.charCodeAt(i) & 0xff;
			h =
				/* Math.imul(h, m): */
				(h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0xe995) << 16);
	} // Do a few final mixes of the hash to ensure the last few
	// bytes are well-incorporated.

	h ^= h >>> 13;
	h =
		/* Math.imul(h, m): */
		(h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0xe995) << 16);
	return ((h ^ (h >>> 15)) >>> 0).toString(36);
}

var unitlessKeys = {
	animationIterationCount: 1,
	borderImageOutset: 1,
	borderImageSlice: 1,
	borderImageWidth: 1,
	boxFlex: 1,
	boxFlexGroup: 1,
	boxOrdinalGroup: 1,
	columnCount: 1,
	columns: 1,
	flex: 1,
	flexGrow: 1,
	flexPositive: 1,
	flexShrink: 1,
	flexNegative: 1,
	flexOrder: 1,
	gridRow: 1,
	gridRowEnd: 1,
	gridRowSpan: 1,
	gridRowStart: 1,
	gridColumn: 1,
	gridColumnEnd: 1,
	gridColumnSpan: 1,
	gridColumnStart: 1,
	msGridRow: 1,
	msGridRowSpan: 1,
	msGridColumn: 1,
	msGridColumnSpan: 1,
	fontWeight: 1,
	lineHeight: 1,
	opacity: 1,
	order: 1,
	orphans: 1,
	tabSize: 1,
	widows: 1,
	zIndex: 1,
	zoom: 1,
	WebkitLineClamp: 1,
	// SVG-related properties
	fillOpacity: 1,
	floodOpacity: 1,
	stopOpacity: 1,
	strokeDasharray: 1,
	strokeDashoffset: 1,
	strokeMiterlimit: 1,
	strokeOpacity: 1,
	strokeWidth: 1,
};

var ILLEGAL_ESCAPE_SEQUENCE_ERROR =
	"You have illegal escape sequence in your template literal, most likely inside content's property value.\nBecause you write your CSS inside a JavaScript string you actually have to do double escaping, so for example \"content: '\\00d7';\" should become \"content: '\\\\00d7';\".\nYou can read more about this here:\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences";
var UNDEFINED_AS_OBJECT_KEY_ERROR =
	"You have passed in falsy value as style object's key (can happen when in example you pass unexported component as computed key).";
var hyphenateRegex = /[A-Z]|^ms/g;
var animationRegex = /_EMO_([^_]+?)_([^]*?)_EMO_/g;

var isCustomProperty = function isCustomProperty(property) {
	return property.charCodeAt(1) === 45;
};

var isProcessableValue = function isProcessableValue(value) {
	return value != null && typeof value !== "boolean";
};

var processStyleName = /* #__PURE__ */ memoize(function (styleName) {
	return isCustomProperty(styleName)
		? styleName
		: styleName.replace(hyphenateRegex, "-$&").toLowerCase();
});

var processStyleValue = function processStyleValue(key, value) {
	switch (key) {
		case "animation":
		case "animationName": {
			if (typeof value === "string") {
				return value.replace(animationRegex, function (match, p1, p2) {
					cursor = {
						name: p1,
						styles: p2,
						next: cursor,
					};
					return p1;
				});
			}
		}
	}

	if (
		unitlessKeys[key] !== 1 &&
		!isCustomProperty(key) &&
		typeof value === "number" &&
		value !== 0
	) {
		return value + "px";
	}

	return value;
};

if (process.env.NODE_ENV !== "production") {
	var contentValuePattern =
		/(attr|counters?|url|(((repeating-)?(linear|radial))|conic)-gradient)\(|(no-)?(open|close)-quote/;
	var contentValues = ["normal", "none", "initial", "inherit", "unset"];
	var oldProcessStyleValue = processStyleValue;
	var msPattern = /^-ms-/;
	var hyphenPattern = /-(.)/g;
	var hyphenatedCache = {};

	processStyleValue = function processStyleValue(key, value) {
		if (key === "content") {
			if (
				typeof value !== "string" ||
				(contentValues.indexOf(value) === -1 &&
					!contentValuePattern.test(value) &&
					(value.charAt(0) !== value.charAt(value.length - 1) ||
						(value.charAt(0) !== '"' && value.charAt(0) !== "'")))
			) {
				throw new Error(
					"You seem to be using a value for 'content' without quotes, try replacing it with `content: '\"" +
						value +
						"\"'`"
				);
			}
		}

		var processed = oldProcessStyleValue(key, value);

		if (
			processed !== "" &&
			!isCustomProperty(key) &&
			key.indexOf("-") !== -1 &&
			hyphenatedCache[key] === undefined
		) {
			hyphenatedCache[key] = true;
			console.error(
				"Using kebab-case for css properties in objects is not supported. Did you mean " +
					key
						.replace(msPattern, "ms-")
						.replace(hyphenPattern, function (str, _char) {
							return _char.toUpperCase();
						}) +
					"?"
			);
		}

		return processed;
	};
}

function handleInterpolation(mergedProps, registered, interpolation) {
	if (interpolation == null) {
		return "";
	}

	if (interpolation.__emotion_styles !== undefined) {
		if (
			process.env.NODE_ENV !== "production" &&
			interpolation.toString() === "NO_COMPONENT_SELECTOR"
		) {
			throw new Error(
				"Component selectors can only be used in conjunction with @emotion/babel-plugin."
			);
		}

		return interpolation;
	}

	switch (typeof interpolation) {
		case "boolean": {
			return "";
		}

		case "object": {
			if (interpolation.anim === 1) {
				cursor = {
					name: interpolation.name,
					styles: interpolation.styles,
					next: cursor,
				};
				return interpolation.name;
			}

			if (interpolation.styles !== undefined) {
				var next = interpolation.next;

				if (next !== undefined) {
					// not the most efficient thing ever but this is a pretty rare case
					// and there will be very few iterations of this generally
					while (next !== undefined) {
						cursor = {
							name: next.name,
							styles: next.styles,
							next: cursor,
						};
						next = next.next;
					}
				}

				var styles = interpolation.styles + ";";

				if (
					process.env.NODE_ENV !== "production" &&
					interpolation.map !== undefined
				) {
					styles += interpolation.map;
				}

				return styles;
			}

			return createStringFromObject(
				mergedProps,
				registered,
				interpolation
			);
		}

		case "function": {
			if (mergedProps !== undefined) {
				var previousCursor = cursor;
				var result = interpolation(mergedProps);
				cursor = previousCursor;
				return handleInterpolation(mergedProps, registered, result);
			} else if (process.env.NODE_ENV !== "production") {
				console.error(
					"Functions that are interpolated in css calls will be stringified.\n" +
						"If you want to have a css call based on props, create a function that returns a css call like this\n" +
						"let dynamicStyle = (props) => css`color: ${props.color}`\n" +
						"It can be called directly with props or interpolated in a styled call like this\n" +
						"let SomeComponent = styled('div')`${dynamicStyle}`"
				);
			}

			break;
		}

		case "string":
			if (process.env.NODE_ENV !== "production") {
				var matched = [];
				var replaced = interpolation.replace(
					animationRegex,
					function (match, p1, p2) {
						var fakeVarName = "animation" + matched.length;
						matched.push(
							"const " +
								fakeVarName +
								" = keyframes`" +
								p2.replace(/^@keyframes animation-\w+/, "") +
								"`"
						);
						return "${" + fakeVarName + "}";
					}
				);

				if (matched.length) {
					console.error(
						"`keyframes` output got interpolated into plain string, please wrap it with `css`.\n\n" +
							"Instead of doing this:\n\n" +
							[]
								.concat(matched, ["`" + replaced + "`"])
								.join("\n") +
							"\n\nYou should wrap it with `css` like this:\n\n" +
							("css`" + replaced + "`")
					);
				}
			}

			break;
	} // finalize string values (regular strings and functions interpolated into css calls)

	if (registered == null) {
		return interpolation;
	}

	var cached = registered[interpolation];
	return cached !== undefined ? cached : interpolation;
}

function createStringFromObject(mergedProps, registered, obj) {
	var string = "";

	if (Array.isArray(obj)) {
		for (var i = 0; i < obj.length; i++) {
			string +=
				handleInterpolation(mergedProps, registered, obj[i]) + ";";
		}
	} else {
		for (var _key in obj) {
			var value = obj[_key];

			if (typeof value !== "object") {
				if (registered != null && registered[value] !== undefined) {
					string += _key + "{" + registered[value] + "}";
				} else if (isProcessableValue(value)) {
					string +=
						processStyleName(_key) +
						":" +
						processStyleValue(_key, value) +
						";";
				}
			} else {
				if (
					_key === "NO_COMPONENT_SELECTOR" &&
					process.env.NODE_ENV !== "production"
				) {
					throw new Error(
						"Component selectors can only be used in conjunction with @emotion/babel-plugin."
					);
				}

				if (
					Array.isArray(value) &&
					typeof value[0] === "string" &&
					(registered == null || registered[value[0]] === undefined)
				) {
					for (var _i = 0; _i < value.length; _i++) {
						if (isProcessableValue(value[_i])) {
							string +=
								processStyleName(_key) +
								":" +
								processStyleValue(_key, value[_i]) +
								";";
						}
					}
				} else {
					var interpolated = handleInterpolation(
						mergedProps,
						registered,
						value
					);

					switch (_key) {
						case "animation":
						case "animationName": {
							string +=
								processStyleName(_key) +
								":" +
								interpolated +
								";";
							break;
						}

						default: {
							if (
								process.env.NODE_ENV !== "production" &&
								_key === "undefined"
							) {
								console.error(UNDEFINED_AS_OBJECT_KEY_ERROR);
							}

							string += _key + "{" + interpolated + "}";
						}
					}
				}
			}
		}
	}

	return string;
}

var labelPattern = /label:\s*([^\s;\n{]+)\s*(;|$)/g;
var sourceMapPattern;

if (process.env.NODE_ENV !== "production") {
	sourceMapPattern =
		/\/\*#\ssourceMappingURL=data:application\/json;\S+\s+\*\//g;
} // this is the cursor for keyframes
// keyframes are stored on the SerializedStyles object as a linked list

var cursor;
var serializeStyles = function serializeStyles(args, registered, mergedProps) {
	if (
		args.length === 1 &&
		typeof args[0] === "object" &&
		args[0] !== null &&
		args[0].styles !== undefined
	) {
		return args[0];
	}

	var stringMode = true;
	var styles = "";
	cursor = undefined;
	var strings = args[0];

	if (strings == null || strings.raw === undefined) {
		stringMode = false;
		styles += handleInterpolation(mergedProps, registered, strings);
	} else {
		if (process.env.NODE_ENV !== "production" && strings[0] === undefined) {
			console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);
		}

		styles += strings[0];
	} // we start at 1 since we've already handled the first arg

	for (var i = 1; i < args.length; i++) {
		styles += handleInterpolation(mergedProps, registered, args[i]);

		if (stringMode) {
			if (
				process.env.NODE_ENV !== "production" &&
				strings[i] === undefined
			) {
				console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);
			}

			styles += strings[i];
		}
	}

	var sourceMap;

	if (process.env.NODE_ENV !== "production") {
		styles = styles.replace(sourceMapPattern, function (match) {
			sourceMap = match;
			return "";
		});
	} // using a global regex with .exec is stateful so lastIndex has to be reset each time

	labelPattern.lastIndex = 0;
	var identifierName = "";
	var match; // https://esbench.com/bench/5b809c2cf2949800a0f61fb5

	while ((match = labelPattern.exec(styles)) !== null) {
		identifierName +=
			"-" + // $FlowFixMe we know it's not null
			match[1];
	}

	var name = murmur2(styles) + identifierName;

	if (process.env.NODE_ENV !== "production") {
		// $FlowFixMe SerializedStyles type doesn't have toString property (and we don't want to add it)
		return {
			name: name,
			styles: styles,
			map: sourceMap,
			next: cursor,
			toString: function toString() {
				return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).";
			},
		};
	}

	return {
		name: name,
		styles: styles,
		next: cursor,
	};
};

var hasOwnProperty$1 = Object.prototype.hasOwnProperty;

var EmotionCacheContext = /* #__PURE__ */ createContext(
	// we're doing this to avoid preconstruct's dead code elimination in this one case
	// because this module is primarily intended for the browser and node
	// but it's also required in react native and similar environments sometimes
	// and we could have a special build just for that
	// but this is much easier and the native packages
	// might use a different theme context in the future anyway
	typeof HTMLElement !== "undefined"
		? /* #__PURE__ */ createCache({
				key: "css",
		  })
		: null
);

if (process.env.NODE_ENV !== "production") {
	EmotionCacheContext.displayName = "EmotionCacheContext";
}

EmotionCacheContext.Provider;

var withEmotionCache = function withEmotionCache(func) {
	// $FlowFixMe
	return /*#__PURE__*/ forwardRef(function (props, ref) {
		// the cache will never be null in the browser
		var cache = useContext(EmotionCacheContext);
		return func(props, cache, ref);
	});
};

var ThemeContext = /* #__PURE__ */ createContext({});

if (process.env.NODE_ENV !== "production") {
	ThemeContext.displayName = "EmotionThemeContext";
}

// thus we only need to replace what is a valid character for JS, but not for CSS

var sanitizeIdentifier = function sanitizeIdentifier(identifier) {
	return identifier.replace(/\$/g, "-");
};

var typePropName = "__EMOTION_TYPE_PLEASE_DO_NOT_USE__";
var labelPropName = "__EMOTION_LABEL_PLEASE_DO_NOT_USE__";
var createEmotionProps = function createEmotionProps(type, props) {
	if (
		process.env.NODE_ENV !== "production" &&
		typeof props.css === "string" && // check if there is a css declaration
		props.css.indexOf(":") !== -1
	) {
		throw new Error(
			"Strings are not allowed as css prop values, please wrap it in a css template literal from '@emotion/react' like this: css`" +
				props.css +
				"`"
		);
	}

	var newProps = {};

	for (var key in props) {
		if (hasOwnProperty$1.call(props, key)) {
			newProps[key] = props[key];
		}
	}

	newProps[typePropName] = type;

	if (process.env.NODE_ENV !== "production") {
		var error = new Error();

		if (error.stack) {
			// chrome
			var match = error.stack.match(
				/at (?:Object\.|Module\.|)(?:jsx|createEmotionProps).*\n\s+at (?:Object\.|)([A-Z][A-Za-z0-9$]+) /
			);

			if (!match) {
				// safari and firefox
				match = error.stack.match(/.*\n([A-Z][A-Za-z0-9$]+)@/);
			}

			if (match) {
				newProps[labelPropName] = sanitizeIdentifier(match[1]);
			}
		}
	}

	return newProps;
};
var Emotion = /* #__PURE__ */ withEmotionCache(function (props, cache, ref) {
	var cssProp = props.css; // so that using `css` from `emotion` and passing the result to the css prop works
	// not passing the registered cache to serializeStyles because it would
	// make certain babel optimisations not possible

	if (
		typeof cssProp === "string" &&
		cache.registered[cssProp] !== undefined
	) {
		cssProp = cache.registered[cssProp];
	}

	var type = props[typePropName];
	var registeredStyles = [cssProp];
	var className = "";

	if (typeof props.className === "string") {
		className = getRegisteredStyles(
			cache.registered,
			registeredStyles,
			props.className
		);
	} else if (props.className != null) {
		className = props.className + " ";
	}

	var serialized = serializeStyles(
		registeredStyles,
		undefined,
		useContext(ThemeContext)
	);

	if (
		process.env.NODE_ENV !== "production" &&
		serialized.name.indexOf("-") === -1
	) {
		var labelFromStack = props[labelPropName];

		if (labelFromStack) {
			serialized = serializeStyles([
				serialized,
				"label:" + labelFromStack + ";",
			]);
		}
	}

	insertStyles(cache, serialized, typeof type === "string");
	className += cache.key + "-" + serialized.name;
	var newProps = {};

	for (var key in props) {
		if (
			hasOwnProperty$1.call(props, key) &&
			key !== "css" &&
			key !== typePropName &&
			(process.env.NODE_ENV === "production" || key !== labelPropName)
		) {
			newProps[key] = props[key];
		}
	}

	newProps.ref = ref;
	newProps.className = className;
	var ele = /*#__PURE__*/ createElement(type, newProps);

	return ele;
});

if (process.env.NODE_ENV !== "production") {
	Emotion.displayName = "EmotionCssPropInternal";
}

var pkg = {
	name: "@emotion/react",
	version: "11.4.1",
	main: "dist/emotion-react.cjs.js",
	module: "dist/emotion-react.esm.js",
	browser: {
		"./dist/emotion-react.cjs.js": "./dist/emotion-react.browser.cjs.js",
		"./dist/emotion-react.esm.js": "./dist/emotion-react.browser.esm.js",
	},
	types: "types/index.d.ts",
	files: [
		"src",
		"dist",
		"jsx-runtime",
		"jsx-dev-runtime",
		"isolated-hoist-non-react-statics-do-not-use-this-in-your-code",
		"types/*.d.ts",
		"macro.js",
		"macro.d.ts",
		"macro.js.flow",
	],
	sideEffects: false,
	author: "mitchellhamilton <mitchell@mitchellhamilton.me>",
	license: "MIT",
	scripts: {
		"test:typescript": "dtslint types",
	},
	dependencies: {
		"@babel/runtime": "^7.13.10",
		"@emotion/cache": "^11.4.0",
		"@emotion/serialize": "^1.0.2",
		"@emotion/sheet": "^1.0.2",
		"@emotion/utils": "^1.0.0",
		"@emotion/weak-memoize": "^0.2.5",
		"hoist-non-react-statics": "^3.3.1",
	},
	peerDependencies: {
		"@babel/core": "^7.0.0",
		react: ">=16.8.0",
	},
	peerDependenciesMeta: {
		"@babel/core": {
			optional: true,
		},
		"@types/react": {
			optional: true,
		},
	},
	devDependencies: {
		"@babel/core": "^7.13.10",
		"@emotion/css": "11.1.3",
		"@emotion/css-prettifier": "1.0.0",
		"@emotion/server": "11.4.0",
		"@emotion/styled": "11.3.0",
		"@types/react": "^16.9.11",
		dtslint: "^0.3.0",
		"html-tag-names": "^1.1.2",
		react: "16.14.0",
		"svg-tag-names": "^1.1.1",
	},
	repository:
		"https://github.com/emotion-js/emotion/tree/main/packages/react",
	publishConfig: {
		access: "public",
	},
	"umd:main": "dist/emotion-react.umd.min.js",
	preconstruct: {
		entrypoints: [
			"./index.js",
			"./jsx-runtime.js",
			"./jsx-dev-runtime.js",
			"./isolated-hoist-non-react-statics-do-not-use-this-in-your-code.js",
		],
		umdName: "emotionReact",
	},
};

var jsx = function jsx(type, props) {
	var args = arguments;

	if (props == null || !hasOwnProperty$1.call(props, "css")) {
		// $FlowFixMe
		return createElement.apply(undefined, args);
	}

	var argsLength = args.length;
	var createElementArgArray = new Array(argsLength);
	createElementArgArray[0] = Emotion;
	createElementArgArray[1] = createEmotionProps(type, props);

	for (var i = 2; i < argsLength; i++) {
		createElementArgArray[i] = args[i];
	} // $FlowFixMe

	return createElement.apply(null, createElementArgArray);
};

var warnedAboutCssPropForGlobal = false; // maintain place over rerenders.
// initial render from browser, insertBefore context.sheet.tags[0] or if a style hasn't been inserted there yet, appendChild
// initial client-side render from SSR, use place of hydrating tag

var Global = /* #__PURE__ */ withEmotionCache(function (props, cache) {
	if (
		process.env.NODE_ENV !== "production" &&
		!warnedAboutCssPropForGlobal && // check for className as well since the user is
		// probably using the custom createElement which
		// means it will be turned into a className prop
		// $FlowFixMe I don't really want to add it to the type since it shouldn't be used
		(props.className || props.css)
	) {
		console.error(
			"It looks like you're using the css prop on Global, did you mean to use the styles prop instead?"
		);
		warnedAboutCssPropForGlobal = true;
	}

	var styles = props.styles;
	var serialized = serializeStyles(
		[styles],
		undefined,
		useContext(ThemeContext)
	);
	// but it is based on a constant that will never change at runtime
	// it's effectively like having two implementations and switching them out
	// so it's not actually breaking anything

	var sheetRef = useRef();
	useLayoutEffect(
		function () {
			var key = cache.key + "-global";
			var sheet = new StyleSheet({
				key: key,
				nonce: cache.sheet.nonce,
				container: cache.sheet.container,
				speedy: cache.sheet.isSpeedy,
			});
			var rehydrating = false; // $FlowFixMe

			var node = document.querySelector(
				'style[data-emotion="' + key + " " + serialized.name + '"]'
			);

			if (cache.sheet.tags.length) {
				sheet.before = cache.sheet.tags[0];
			}

			if (node !== null) {
				rehydrating = true; // clear the hash so this node won't be recognizable as rehydratable by other <Global/>s

				node.setAttribute("data-emotion", key);
				sheet.hydrate([node]);
			}

			sheetRef.current = [sheet, rehydrating];
			return function () {
				sheet.flush();
			};
		},
		[cache]
	);
	useLayoutEffect(
		function () {
			var sheetRefCurrent = sheetRef.current;
			var sheet = sheetRefCurrent[0],
				rehydrating = sheetRefCurrent[1];

			if (rehydrating) {
				sheetRefCurrent[1] = false;
				return;
			}

			if (serialized.next !== undefined) {
				// insert keyframes
				insertStyles(cache, serialized.next, true);
			}

			if (sheet.tags.length) {
				// if this doesn't exist then it will be null so the style element will be appended
				var element =
					sheet.tags[sheet.tags.length - 1].nextElementSibling;
				sheet.before = element;
				sheet.flush();
			}

			cache.insert("", serialized, sheet, false);
		},
		[cache, serialized.name]
	);
	return null;
});

if (process.env.NODE_ENV !== "production") {
	Global.displayName = "EmotionGlobal";
}

function css$2() {
	for (
		var _len = arguments.length, args = new Array(_len), _key = 0;
		_key < _len;
		_key++
	) {
		args[_key] = arguments[_key];
	}

	return serializeStyles(args);
}

var keyframes = function keyframes() {
	var insertable = css$2.apply(void 0, arguments);
	var name = "animation-" + insertable.name; // $FlowFixMe

	return {
		name: name,
		styles: "@keyframes " + name + "{" + insertable.styles + "}",
		anim: 1,
		toString: function toString() {
			return "_EMO_" + this.name + "_" + this.styles + "_EMO_";
		},
	};
};

var classnames = function classnames(args) {
	var len = args.length;
	var i = 0;
	var cls = "";

	for (; i < len; i++) {
		var arg = args[i];
		if (arg == null) continue;
		var toAdd = void 0;

		switch (typeof arg) {
			case "boolean":
				break;

			case "object": {
				if (Array.isArray(arg)) {
					toAdd = classnames(arg);
				} else {
					if (
						process.env.NODE_ENV !== "production" &&
						arg.styles !== undefined &&
						arg.name !== undefined
					) {
						console.error(
							"You have passed styles created with `css` from `@emotion/react` package to the `cx`.\n" +
								"`cx` is meant to compose class names (strings) so you should convert those styles to a class name by passing them to the `css` received from <ClassNames/> component."
						);
					}

					toAdd = "";

					for (var k in arg) {
						if (arg[k] && k) {
							toAdd && (toAdd += " ");
							toAdd += k;
						}
					}
				}

				break;
			}

			default: {
				toAdd = arg;
			}
		}

		if (toAdd) {
			cls && (cls += " ");
			cls += toAdd;
		}
	}

	return cls;
};

function merge(registered, css, className) {
	var registeredStyles = [];
	var rawClassName = getRegisteredStyles(
		registered,
		registeredStyles,
		className
	);

	if (registeredStyles.length < 2) {
		return className;
	}

	return rawClassName + css(registeredStyles);
}

var ClassNames = /* #__PURE__ */ withEmotionCache(function (props, cache) {
	var hasRendered = false;

	var css = function css() {
		if (hasRendered && process.env.NODE_ENV !== "production") {
			throw new Error("css can only be used during render");
		}

		for (
			var _len = arguments.length, args = new Array(_len), _key = 0;
			_key < _len;
			_key++
		) {
			args[_key] = arguments[_key];
		}

		var serialized = serializeStyles(args, cache.registered);

		{
			insertStyles(cache, serialized, false);
		}

		return cache.key + "-" + serialized.name;
	};

	var cx = function cx() {
		if (hasRendered && process.env.NODE_ENV !== "production") {
			throw new Error("cx can only be used during render");
		}

		for (
			var _len2 = arguments.length, args = new Array(_len2), _key2 = 0;
			_key2 < _len2;
			_key2++
		) {
			args[_key2] = arguments[_key2];
		}

		return merge(cache.registered, css, classnames(args));
	};

	var content = {
		css: css,
		cx: cx,
		theme: useContext(ThemeContext),
	};
	var ele = props.children(content);
	hasRendered = true;

	return ele;
});

if (process.env.NODE_ENV !== "production") {
	ClassNames.displayName = "EmotionClassNames";
}

if (process.env.NODE_ENV !== "production") {
	var isBrowser = "object" !== "undefined"; // #1727 for some reason Jest evaluates modules twice if some consuming module gets mocked with jest.mock

	var isJest = typeof jest !== "undefined";

	if (isBrowser && !isJest) {
		var globalContext = isBrowser ? window : global;
		var globalKey = "__EMOTION_REACT_" + pkg.version.split(".")[0] + "__";

		if (globalContext[globalKey]) {
			console.warn(
				"You are loading @emotion/react when it is already loaded. Running " +
					"multiple instances may cause problems. This can happen if multiple " +
					"versions are used, or if multiple builds of the same version are " +
					"used."
			);
		}

		globalContext[globalKey] = true;
	}
}

function _taggedTemplateLiteral(strings, raw) {
	if (!raw) {
		raw = strings.slice(0);
	}

	return Object.freeze(
		Object.defineProperties(strings, {
			raw: {
				value: Object.freeze(raw),
			},
		})
	);
}

var AutosizeInput$1 = {};

var propTypes$1 = { exports: {} };

var reactIs = { exports: {} };

var reactIs_production_min = {};

/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var b = "function" === typeof Symbol && Symbol.for,
	c = b ? Symbol.for("react.element") : 60103,
	d = b ? Symbol.for("react.portal") : 60106,
	e = b ? Symbol.for("react.fragment") : 60107,
	f = b ? Symbol.for("react.strict_mode") : 60108,
	g = b ? Symbol.for("react.profiler") : 60114,
	h = b ? Symbol.for("react.provider") : 60109,
	k = b ? Symbol.for("react.context") : 60110,
	l = b ? Symbol.for("react.async_mode") : 60111,
	m = b ? Symbol.for("react.concurrent_mode") : 60111,
	n = b ? Symbol.for("react.forward_ref") : 60112,
	p = b ? Symbol.for("react.suspense") : 60113,
	q = b ? Symbol.for("react.suspense_list") : 60120,
	r = b ? Symbol.for("react.memo") : 60115,
	t = b ? Symbol.for("react.lazy") : 60116,
	v = b ? Symbol.for("react.block") : 60121,
	w$1 = b ? Symbol.for("react.fundamental") : 60117,
	x = b ? Symbol.for("react.responder") : 60118,
	y = b ? Symbol.for("react.scope") : 60119;
function z(a) {
	if ("object" === typeof a && null !== a) {
		var u = a.$$typeof;
		switch (u) {
			case c:
				switch (((a = a.type), a)) {
					case l:
					case m:
					case e:
					case g:
					case f:
					case p:
						return a;
					default:
						switch (((a = a && a.$$typeof), a)) {
							case k:
							case n:
							case t:
							case r:
							case h:
								return a;
							default:
								return u;
						}
				}
			case d:
				return u;
		}
	}
}
function A(a) {
	return z(a) === m;
}
reactIs_production_min.AsyncMode = l;
reactIs_production_min.ConcurrentMode = m;
reactIs_production_min.ContextConsumer = k;
reactIs_production_min.ContextProvider = h;
reactIs_production_min.Element = c;
reactIs_production_min.ForwardRef = n;
reactIs_production_min.Fragment = e;
reactIs_production_min.Lazy = t;
reactIs_production_min.Memo = r;
reactIs_production_min.Portal = d;
reactIs_production_min.Profiler = g;
reactIs_production_min.StrictMode = f;
reactIs_production_min.Suspense = p;
reactIs_production_min.isAsyncMode = function (a) {
	return A(a) || z(a) === l;
};
reactIs_production_min.isConcurrentMode = A;
reactIs_production_min.isContextConsumer = function (a) {
	return z(a) === k;
};
reactIs_production_min.isContextProvider = function (a) {
	return z(a) === h;
};
reactIs_production_min.isElement = function (a) {
	return "object" === typeof a && null !== a && a.$$typeof === c;
};
reactIs_production_min.isForwardRef = function (a) {
	return z(a) === n;
};
reactIs_production_min.isFragment = function (a) {
	return z(a) === e;
};
reactIs_production_min.isLazy = function (a) {
	return z(a) === t;
};
reactIs_production_min.isMemo = function (a) {
	return z(a) === r;
};
reactIs_production_min.isPortal = function (a) {
	return z(a) === d;
};
reactIs_production_min.isProfiler = function (a) {
	return z(a) === g;
};
reactIs_production_min.isStrictMode = function (a) {
	return z(a) === f;
};
reactIs_production_min.isSuspense = function (a) {
	return z(a) === p;
};
reactIs_production_min.isValidElementType = function (a) {
	return (
		"string" === typeof a ||
		"function" === typeof a ||
		a === e ||
		a === m ||
		a === g ||
		a === f ||
		a === p ||
		a === q ||
		("object" === typeof a &&
			null !== a &&
			(a.$$typeof === t ||
				a.$$typeof === r ||
				a.$$typeof === h ||
				a.$$typeof === k ||
				a.$$typeof === n ||
				a.$$typeof === w$1 ||
				a.$$typeof === x ||
				a.$$typeof === y ||
				a.$$typeof === v))
	);
};
reactIs_production_min.typeOf = z;

var reactIs_development = {};

/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

if (process.env.NODE_ENV !== "production") {
	(function () {
		// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
		// nor polyfill, then a plain number is used for performance.
		var hasSymbol = typeof Symbol === "function" && Symbol.for;
		var REACT_ELEMENT_TYPE = hasSymbol
			? Symbol.for("react.element")
			: 0xeac7;
		var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for("react.portal") : 0xeaca;
		var REACT_FRAGMENT_TYPE = hasSymbol
			? Symbol.for("react.fragment")
			: 0xeacb;
		var REACT_STRICT_MODE_TYPE = hasSymbol
			? Symbol.for("react.strict_mode")
			: 0xeacc;
		var REACT_PROFILER_TYPE = hasSymbol
			? Symbol.for("react.profiler")
			: 0xead2;
		var REACT_PROVIDER_TYPE = hasSymbol
			? Symbol.for("react.provider")
			: 0xeacd;
		var REACT_CONTEXT_TYPE = hasSymbol
			? Symbol.for("react.context")
			: 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary
		// (unstable) APIs that have been removed. Can we remove the symbols?

		var REACT_ASYNC_MODE_TYPE = hasSymbol
			? Symbol.for("react.async_mode")
			: 0xeacf;
		var REACT_CONCURRENT_MODE_TYPE = hasSymbol
			? Symbol.for("react.concurrent_mode")
			: 0xeacf;
		var REACT_FORWARD_REF_TYPE = hasSymbol
			? Symbol.for("react.forward_ref")
			: 0xead0;
		var REACT_SUSPENSE_TYPE = hasSymbol
			? Symbol.for("react.suspense")
			: 0xead1;
		var REACT_SUSPENSE_LIST_TYPE = hasSymbol
			? Symbol.for("react.suspense_list")
			: 0xead8;
		var REACT_MEMO_TYPE = hasSymbol ? Symbol.for("react.memo") : 0xead3;
		var REACT_LAZY_TYPE = hasSymbol ? Symbol.for("react.lazy") : 0xead4;
		var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for("react.block") : 0xead9;
		var REACT_FUNDAMENTAL_TYPE = hasSymbol
			? Symbol.for("react.fundamental")
			: 0xead5;
		var REACT_RESPONDER_TYPE = hasSymbol
			? Symbol.for("react.responder")
			: 0xead6;
		var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for("react.scope") : 0xead7;

		function isValidElementType(type) {
			return (
				typeof type === "string" ||
				typeof type === "function" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
				type === REACT_FRAGMENT_TYPE ||
				type === REACT_CONCURRENT_MODE_TYPE ||
				type === REACT_PROFILER_TYPE ||
				type === REACT_STRICT_MODE_TYPE ||
				type === REACT_SUSPENSE_TYPE ||
				type === REACT_SUSPENSE_LIST_TYPE ||
				(typeof type === "object" &&
					type !== null &&
					(type.$$typeof === REACT_LAZY_TYPE ||
						type.$$typeof === REACT_MEMO_TYPE ||
						type.$$typeof === REACT_PROVIDER_TYPE ||
						type.$$typeof === REACT_CONTEXT_TYPE ||
						type.$$typeof === REACT_FORWARD_REF_TYPE ||
						type.$$typeof === REACT_FUNDAMENTAL_TYPE ||
						type.$$typeof === REACT_RESPONDER_TYPE ||
						type.$$typeof === REACT_SCOPE_TYPE ||
						type.$$typeof === REACT_BLOCK_TYPE))
			);
		}

		function typeOf(object) {
			if (typeof object === "object" && object !== null) {
				var $$typeof = object.$$typeof;

				switch ($$typeof) {
					case REACT_ELEMENT_TYPE:
						var type = object.type;

						switch (type) {
							case REACT_ASYNC_MODE_TYPE:
							case REACT_CONCURRENT_MODE_TYPE:
							case REACT_FRAGMENT_TYPE:
							case REACT_PROFILER_TYPE:
							case REACT_STRICT_MODE_TYPE:
							case REACT_SUSPENSE_TYPE:
								return type;

							default:
								var $$typeofType = type && type.$$typeof;

								switch ($$typeofType) {
									case REACT_CONTEXT_TYPE:
									case REACT_FORWARD_REF_TYPE:
									case REACT_LAZY_TYPE:
									case REACT_MEMO_TYPE:
									case REACT_PROVIDER_TYPE:
										return $$typeofType;

									default:
										return $$typeof;
								}
						}

					case REACT_PORTAL_TYPE:
						return $$typeof;
				}
			}

			return undefined;
		} // AsyncMode is deprecated along with isAsyncMode

		var AsyncMode = REACT_ASYNC_MODE_TYPE;
		var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
		var ContextConsumer = REACT_CONTEXT_TYPE;
		var ContextProvider = REACT_PROVIDER_TYPE;
		var Element = REACT_ELEMENT_TYPE;
		var ForwardRef = REACT_FORWARD_REF_TYPE;
		var Fragment = REACT_FRAGMENT_TYPE;
		var Lazy = REACT_LAZY_TYPE;
		var Memo = REACT_MEMO_TYPE;
		var Portal = REACT_PORTAL_TYPE;
		var Profiler = REACT_PROFILER_TYPE;
		var StrictMode = REACT_STRICT_MODE_TYPE;
		var Suspense = REACT_SUSPENSE_TYPE;
		var hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated

		function isAsyncMode(object) {
			{
				if (!hasWarnedAboutDeprecatedIsAsyncMode) {
					hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint

					console["warn"](
						"The ReactIs.isAsyncMode() alias has been deprecated, " +
							"and will be removed in React 17+. Update your code to use " +
							"ReactIs.isConcurrentMode() instead. It has the exact same API."
					);
				}
			}

			return (
				isConcurrentMode(object) ||
				typeOf(object) === REACT_ASYNC_MODE_TYPE
			);
		}
		function isConcurrentMode(object) {
			return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
		}
		function isContextConsumer(object) {
			return typeOf(object) === REACT_CONTEXT_TYPE;
		}
		function isContextProvider(object) {
			return typeOf(object) === REACT_PROVIDER_TYPE;
		}
		function isElement(object) {
			return (
				typeof object === "object" &&
				object !== null &&
				object.$$typeof === REACT_ELEMENT_TYPE
			);
		}
		function isForwardRef(object) {
			return typeOf(object) === REACT_FORWARD_REF_TYPE;
		}
		function isFragment(object) {
			return typeOf(object) === REACT_FRAGMENT_TYPE;
		}
		function isLazy(object) {
			return typeOf(object) === REACT_LAZY_TYPE;
		}
		function isMemo(object) {
			return typeOf(object) === REACT_MEMO_TYPE;
		}
		function isPortal(object) {
			return typeOf(object) === REACT_PORTAL_TYPE;
		}
		function isProfiler(object) {
			return typeOf(object) === REACT_PROFILER_TYPE;
		}
		function isStrictMode(object) {
			return typeOf(object) === REACT_STRICT_MODE_TYPE;
		}
		function isSuspense(object) {
			return typeOf(object) === REACT_SUSPENSE_TYPE;
		}

		reactIs_development.AsyncMode = AsyncMode;
		reactIs_development.ConcurrentMode = ConcurrentMode;
		reactIs_development.ContextConsumer = ContextConsumer;
		reactIs_development.ContextProvider = ContextProvider;
		reactIs_development.Element = Element;
		reactIs_development.ForwardRef = ForwardRef;
		reactIs_development.Fragment = Fragment;
		reactIs_development.Lazy = Lazy;
		reactIs_development.Memo = Memo;
		reactIs_development.Portal = Portal;
		reactIs_development.Profiler = Profiler;
		reactIs_development.StrictMode = StrictMode;
		reactIs_development.Suspense = Suspense;
		reactIs_development.isAsyncMode = isAsyncMode;
		reactIs_development.isConcurrentMode = isConcurrentMode;
		reactIs_development.isContextConsumer = isContextConsumer;
		reactIs_development.isContextProvider = isContextProvider;
		reactIs_development.isElement = isElement;
		reactIs_development.isForwardRef = isForwardRef;
		reactIs_development.isFragment = isFragment;
		reactIs_development.isLazy = isLazy;
		reactIs_development.isMemo = isMemo;
		reactIs_development.isPortal = isPortal;
		reactIs_development.isProfiler = isProfiler;
		reactIs_development.isStrictMode = isStrictMode;
		reactIs_development.isSuspense = isSuspense;
		reactIs_development.isValidElementType = isValidElementType;
		reactIs_development.typeOf = typeOf;
	})();
}

if (process.env.NODE_ENV === "production") {
	reactIs.exports = reactIs_production_min;
} else {
	reactIs.exports = reactIs_development;
}

/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
/* eslint-disable no-unused-vars */
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
	if (val === null || val === undefined) {
		throw new TypeError(
			"Object.assign cannot be called with null or undefined"
		);
	}

	return Object(val);
}

function shouldUseNative() {
	try {
		if (!Object.assign) {
			return false;
		}

		// Detect buggy property enumeration order in older V8 versions.

		// https://bugs.chromium.org/p/v8/issues/detail?id=4118
		var test1 = new String("abc"); // eslint-disable-line no-new-wrappers
		test1[5] = "de";
		if (Object.getOwnPropertyNames(test1)[0] === "5") {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test2 = {};
		for (var i = 0; i < 10; i++) {
			test2["_" + String.fromCharCode(i)] = i;
		}
		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
			return test2[n];
		});
		if (order2.join("") !== "0123456789") {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test3 = {};
		"abcdefghijklmnopqrst".split("").forEach(function (letter) {
			test3[letter] = letter;
		});
		if (
			Object.keys(Object.assign({}, test3)).join("") !==
			"abcdefghijklmnopqrst"
		) {
			return false;
		}

		return true;
	} catch (err) {
		// We don't expect any of the above to throw, but better to be safe.
		return false;
	}
}

var objectAssign = shouldUseNative()
	? Object.assign
	: function (target, source) {
			var from;
			var to = toObject(target);
			var symbols;

			for (var s = 1; s < arguments.length; s++) {
				from = Object(arguments[s]);

				for (var key in from) {
					if (hasOwnProperty.call(from, key)) {
						to[key] = from[key];
					}
				}

				if (getOwnPropertySymbols) {
					symbols = getOwnPropertySymbols(from);
					for (var i = 0; i < symbols.length; i++) {
						if (propIsEnumerable.call(from, symbols[i])) {
							to[symbols[i]] = from[symbols[i]];
						}
					}
				}
			}

			return to;
	  };

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var ReactPropTypesSecret$3 = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";

var ReactPropTypesSecret_1 = ReactPropTypesSecret$3;

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var printWarning$1 = function () {};

if (process.env.NODE_ENV !== "production") {
	var ReactPropTypesSecret$2 = ReactPropTypesSecret_1;
	var loggedTypeFailures = {};
	var has$1 = Function.call.bind(Object.prototype.hasOwnProperty);

	printWarning$1 = function (text) {
		var message = "Warning: " + text;
		if (typeof console !== "undefined") {
			console.error(message);
		}
		try {
			// --- Welcome to debugging React ---
			// This error was thrown as a convenience so that you can use this stack
			// to find the callsite that caused this warning to fire.
			throw new Error(message);
		} catch (x) {}
	};
}

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?Function} getStack Returns the component stack.
 * @private
 */
function checkPropTypes$1(
	typeSpecs,
	values,
	location,
	componentName,
	getStack
) {
	if (process.env.NODE_ENV !== "production") {
		for (var typeSpecName in typeSpecs) {
			if (has$1(typeSpecs, typeSpecName)) {
				var error;
				// Prop type validation may throw. In case they do, we don't want to
				// fail the render phase where it didn't fail before. So we log it.
				// After these have been cleaned up, we'll let them throw.
				try {
					// This is intentionally an invariant that gets caught. It's the same
					// behavior as without this statement except with a better message.
					if (typeof typeSpecs[typeSpecName] !== "function") {
						var err = Error(
							(componentName || "React class") +
								": " +
								location +
								" type `" +
								typeSpecName +
								"` is invalid; " +
								"it must be a function, usually from the `prop-types` package, but received `" +
								typeof typeSpecs[typeSpecName] +
								"`."
						);
						err.name = "Invariant Violation";
						throw err;
					}
					error = typeSpecs[typeSpecName](
						values,
						typeSpecName,
						componentName,
						location,
						null,
						ReactPropTypesSecret$2
					);
				} catch (ex) {
					error = ex;
				}
				if (error && !(error instanceof Error)) {
					printWarning$1(
						(componentName || "React class") +
							": type specification of " +
							location +
							" `" +
							typeSpecName +
							"` is invalid; the type checker " +
							"function must return `null` or an `Error` but returned a " +
							typeof error +
							". " +
							"You may have forgotten to pass an argument to the type checker " +
							"creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and " +
							"shape all require an argument)."
					);
				}
				if (
					error instanceof Error &&
					!(error.message in loggedTypeFailures)
				) {
					// Only monitor this failure once because there tends to be a lot of the
					// same error.
					loggedTypeFailures[error.message] = true;

					var stack = getStack ? getStack() : "";

					printWarning$1(
						"Failed " +
							location +
							" type: " +
							error.message +
							(stack != null ? stack : "")
					);
				}
			}
		}
	}
}

/**
 * Resets warning cache when testing.
 *
 * @private
 */
checkPropTypes$1.resetWarningCache = function () {
	if (process.env.NODE_ENV !== "production") {
		loggedTypeFailures = {};
	}
};

var checkPropTypes_1 = checkPropTypes$1;

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var ReactIs$1 = reactIs.exports;
var assign = objectAssign;

var ReactPropTypesSecret$1 = ReactPropTypesSecret_1;
var checkPropTypes = checkPropTypes_1;

var has = Function.call.bind(Object.prototype.hasOwnProperty);
var printWarning = function () {};

if (process.env.NODE_ENV !== "production") {
	printWarning = function (text) {
		var message = "Warning: " + text;
		if (typeof console !== "undefined") {
			console.error(message);
		}
		try {
			// --- Welcome to debugging React ---
			// This error was thrown as a convenience so that you can use this stack
			// to find the callsite that caused this warning to fire.
			throw new Error(message);
		} catch (x) {}
	};
}

function emptyFunctionThatReturnsNull() {
	return null;
}

var factoryWithTypeCheckers = function (isValidElement, throwOnDirectAccess) {
	/* global Symbol */
	var ITERATOR_SYMBOL = typeof Symbol === "function" && Symbol.iterator;
	var FAUX_ITERATOR_SYMBOL = "@@iterator"; // Before Symbol spec.

	/**
	 * Returns the iterator method function contained on the iterable object.
	 *
	 * Be sure to invoke the function with the iterable as context:
	 *
	 *     var iteratorFn = getIteratorFn(myIterable);
	 *     if (iteratorFn) {
	 *       var iterator = iteratorFn.call(myIterable);
	 *       ...
	 *     }
	 *
	 * @param {?object} maybeIterable
	 * @return {?function}
	 */
	function getIteratorFn(maybeIterable) {
		var iteratorFn =
			maybeIterable &&
			((ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL]) ||
				maybeIterable[FAUX_ITERATOR_SYMBOL]);
		if (typeof iteratorFn === "function") {
			return iteratorFn;
		}
	}

	/**
	 * Collection of methods that allow declaration and validation of props that are
	 * supplied to React components. Example usage:
	 *
	 *   var Props = require('ReactPropTypes');
	 *   var MyArticle = React.createClass({
	 *     propTypes: {
	 *       // An optional string prop named "description".
	 *       description: Props.string,
	 *
	 *       // A required enum prop named "category".
	 *       category: Props.oneOf(['News','Photos']).isRequired,
	 *
	 *       // A prop named "dialog" that requires an instance of Dialog.
	 *       dialog: Props.instanceOf(Dialog).isRequired
	 *     },
	 *     render: function() { ... }
	 *   });
	 *
	 * A more formal specification of how these methods are used:
	 *
	 *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
	 *   decl := ReactPropTypes.{type}(.isRequired)?
	 *
	 * Each and every declaration produces a function with the same signature. This
	 * allows the creation of custom validation functions. For example:
	 *
	 *  var MyLink = React.createClass({
	 *    propTypes: {
	 *      // An optional string or URI prop named "href".
	 *      href: function(props, propName, componentName) {
	 *        var propValue = props[propName];
	 *        if (propValue != null && typeof propValue !== 'string' &&
	 *            !(propValue instanceof URI)) {
	 *          return new Error(
	 *            'Expected a string or an URI for ' + propName + ' in ' +
	 *            componentName
	 *          );
	 *        }
	 *      }
	 *    },
	 *    render: function() {...}
	 *  });
	 *
	 * @internal
	 */

	var ANONYMOUS = "<<anonymous>>";

	// Important!
	// Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
	var ReactPropTypes = {
		array: createPrimitiveTypeChecker("array"),
		bool: createPrimitiveTypeChecker("boolean"),
		func: createPrimitiveTypeChecker("function"),
		number: createPrimitiveTypeChecker("number"),
		object: createPrimitiveTypeChecker("object"),
		string: createPrimitiveTypeChecker("string"),
		symbol: createPrimitiveTypeChecker("symbol"),

		any: createAnyTypeChecker(),
		arrayOf: createArrayOfTypeChecker,
		element: createElementTypeChecker(),
		elementType: createElementTypeTypeChecker(),
		instanceOf: createInstanceTypeChecker,
		node: createNodeChecker(),
		objectOf: createObjectOfTypeChecker,
		oneOf: createEnumTypeChecker,
		oneOfType: createUnionTypeChecker,
		shape: createShapeTypeChecker,
		exact: createStrictShapeTypeChecker,
	};

	/**
	 * inlined Object.is polyfill to avoid requiring consumers ship their own
	 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	 */
	/*eslint-disable no-self-compare*/
	function is(x, y) {
		// SameValue algorithm
		if (x === y) {
			// Steps 1-5, 7-10
			// Steps 6.b-6.e: +0 != -0
			return x !== 0 || 1 / x === 1 / y;
		} else {
			// Step 6.a: NaN == NaN
			return x !== x && y !== y;
		}
	}
	/*eslint-enable no-self-compare*/

	/**
	 * We use an Error-like object for backward compatibility as people may call
	 * PropTypes directly and inspect their output. However, we don't use real
	 * Errors anymore. We don't inspect their stack anyway, and creating them
	 * is prohibitively expensive if they are created too often, such as what
	 * happens in oneOfType() for any type before the one that matched.
	 */
	function PropTypeError(message) {
		this.message = message;
		this.stack = "";
	}
	// Make `instanceof Error` still work for returned errors.
	PropTypeError.prototype = Error.prototype;

	function createChainableTypeChecker(validate) {
		if (process.env.NODE_ENV !== "production") {
			var manualPropTypeCallCache = {};
			var manualPropTypeWarningCount = 0;
		}
		function checkType(
			isRequired,
			props,
			propName,
			componentName,
			location,
			propFullName,
			secret
		) {
			componentName = componentName || ANONYMOUS;
			propFullName = propFullName || propName;

			if (secret !== ReactPropTypesSecret$1) {
				if (throwOnDirectAccess) {
					// New behavior only for users of `prop-types` package
					var err = new Error(
						"Calling PropTypes validators directly is not supported by the `prop-types` package. " +
							"Use `PropTypes.checkPropTypes()` to call them. " +
							"Read more at http://fb.me/use-check-prop-types"
					);
					err.name = "Invariant Violation";
					throw err;
				} else if (
					process.env.NODE_ENV !== "production" &&
					typeof console !== "undefined"
				) {
					// Old behavior for people using React.PropTypes
					var cacheKey = componentName + ":" + propName;
					if (
						!manualPropTypeCallCache[cacheKey] &&
						// Avoid spamming the console because they are often not actionable except for lib authors
						manualPropTypeWarningCount < 3
					) {
						printWarning(
							"You are manually calling a React.PropTypes validation " +
								"function for the `" +
								propFullName +
								"` prop on `" +
								componentName +
								"`. This is deprecated " +
								"and will throw in the standalone `prop-types` package. " +
								"You may be seeing this warning due to a third-party PropTypes " +
								"library. See https://fb.me/react-warning-dont-call-proptypes " +
								"for details."
						);
						manualPropTypeCallCache[cacheKey] = true;
						manualPropTypeWarningCount++;
					}
				}
			}
			if (props[propName] == null) {
				if (isRequired) {
					if (props[propName] === null) {
						return new PropTypeError(
							"The " +
								location +
								" `" +
								propFullName +
								"` is marked as required " +
								("in `" +
									componentName +
									"`, but its value is `null`.")
						);
					}
					return new PropTypeError(
						"The " +
							location +
							" `" +
							propFullName +
							"` is marked as required in " +
							("`" +
								componentName +
								"`, but its value is `undefined`.")
					);
				}
				return null;
			} else {
				return validate(
					props,
					propName,
					componentName,
					location,
					propFullName
				);
			}
		}

		var chainedCheckType = checkType.bind(null, false);
		chainedCheckType.isRequired = checkType.bind(null, true);

		return chainedCheckType;
	}

	function createPrimitiveTypeChecker(expectedType) {
		function validate(
			props,
			propName,
			componentName,
			location,
			propFullName,
			secret
		) {
			var propValue = props[propName];
			var propType = getPropType(propValue);
			if (propType !== expectedType) {
				// `propValue` being instance of, say, date/regexp, pass the 'object'
				// check, but we can offer a more precise error message here rather than
				// 'of type `object`'.
				var preciseType = getPreciseType(propValue);

				return new PropTypeError(
					"Invalid " +
						location +
						" `" +
						propFullName +
						"` of type " +
						("`" +
							preciseType +
							"` supplied to `" +
							componentName +
							"`, expected ") +
						("`" + expectedType + "`.")
				);
			}
			return null;
		}
		return createChainableTypeChecker(validate);
	}

	function createAnyTypeChecker() {
		return createChainableTypeChecker(emptyFunctionThatReturnsNull);
	}

	function createArrayOfTypeChecker(typeChecker) {
		function validate(
			props,
			propName,
			componentName,
			location,
			propFullName
		) {
			if (typeof typeChecker !== "function") {
				return new PropTypeError(
					"Property `" +
						propFullName +
						"` of component `" +
						componentName +
						"` has invalid PropType notation inside arrayOf."
				);
			}
			var propValue = props[propName];
			if (!Array.isArray(propValue)) {
				var propType = getPropType(propValue);
				return new PropTypeError(
					"Invalid " +
						location +
						" `" +
						propFullName +
						"` of type " +
						("`" +
							propType +
							"` supplied to `" +
							componentName +
							"`, expected an array.")
				);
			}
			for (var i = 0; i < propValue.length; i++) {
				var error = typeChecker(
					propValue,
					i,
					componentName,
					location,
					propFullName + "[" + i + "]",
					ReactPropTypesSecret$1
				);
				if (error instanceof Error) {
					return error;
				}
			}
			return null;
		}
		return createChainableTypeChecker(validate);
	}

	function createElementTypeChecker() {
		function validate(
			props,
			propName,
			componentName,
			location,
			propFullName
		) {
			var propValue = props[propName];
			if (!isValidElement(propValue)) {
				var propType = getPropType(propValue);
				return new PropTypeError(
					"Invalid " +
						location +
						" `" +
						propFullName +
						"` of type " +
						("`" +
							propType +
							"` supplied to `" +
							componentName +
							"`, expected a single ReactElement.")
				);
			}
			return null;
		}
		return createChainableTypeChecker(validate);
	}

	function createElementTypeTypeChecker() {
		function validate(
			props,
			propName,
			componentName,
			location,
			propFullName
		) {
			var propValue = props[propName];
			if (!ReactIs$1.isValidElementType(propValue)) {
				var propType = getPropType(propValue);
				return new PropTypeError(
					"Invalid " +
						location +
						" `" +
						propFullName +
						"` of type " +
						("`" +
							propType +
							"` supplied to `" +
							componentName +
							"`, expected a single ReactElement type.")
				);
			}
			return null;
		}
		return createChainableTypeChecker(validate);
	}

	function createInstanceTypeChecker(expectedClass) {
		function validate(
			props,
			propName,
			componentName,
			location,
			propFullName
		) {
			if (!(props[propName] instanceof expectedClass)) {
				var expectedClassName = expectedClass.name || ANONYMOUS;
				var actualClassName = getClassName(props[propName]);
				return new PropTypeError(
					"Invalid " +
						location +
						" `" +
						propFullName +
						"` of type " +
						("`" +
							actualClassName +
							"` supplied to `" +
							componentName +
							"`, expected ") +
						("instance of `" + expectedClassName + "`.")
				);
			}
			return null;
		}
		return createChainableTypeChecker(validate);
	}

	function createEnumTypeChecker(expectedValues) {
		if (!Array.isArray(expectedValues)) {
			if (process.env.NODE_ENV !== "production") {
				if (arguments.length > 1) {
					printWarning(
						"Invalid arguments supplied to oneOf, expected an array, got " +
							arguments.length +
							" arguments. " +
							"A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z])."
					);
				} else {
					printWarning(
						"Invalid argument supplied to oneOf, expected an array."
					);
				}
			}
			return emptyFunctionThatReturnsNull;
		}

		function validate(
			props,
			propName,
			componentName,
			location,
			propFullName
		) {
			var propValue = props[propName];
			for (var i = 0; i < expectedValues.length; i++) {
				if (is(propValue, expectedValues[i])) {
					return null;
				}
			}

			var valuesString = JSON.stringify(
				expectedValues,
				function replacer(key, value) {
					var type = getPreciseType(value);
					if (type === "symbol") {
						return String(value);
					}
					return value;
				}
			);
			return new PropTypeError(
				"Invalid " +
					location +
					" `" +
					propFullName +
					"` of value `" +
					String(propValue) +
					"` " +
					("supplied to `" +
						componentName +
						"`, expected one of " +
						valuesString +
						".")
			);
		}
		return createChainableTypeChecker(validate);
	}

	function createObjectOfTypeChecker(typeChecker) {
		function validate(
			props,
			propName,
			componentName,
			location,
			propFullName
		) {
			if (typeof typeChecker !== "function") {
				return new PropTypeError(
					"Property `" +
						propFullName +
						"` of component `" +
						componentName +
						"` has invalid PropType notation inside objectOf."
				);
			}
			var propValue = props[propName];
			var propType = getPropType(propValue);
			if (propType !== "object") {
				return new PropTypeError(
					"Invalid " +
						location +
						" `" +
						propFullName +
						"` of type " +
						("`" +
							propType +
							"` supplied to `" +
							componentName +
							"`, expected an object.")
				);
			}
			for (var key in propValue) {
				if (has(propValue, key)) {
					var error = typeChecker(
						propValue,
						key,
						componentName,
						location,
						propFullName + "." + key,
						ReactPropTypesSecret$1
					);
					if (error instanceof Error) {
						return error;
					}
				}
			}
			return null;
		}
		return createChainableTypeChecker(validate);
	}

	function createUnionTypeChecker(arrayOfTypeCheckers) {
		if (!Array.isArray(arrayOfTypeCheckers)) {
			process.env.NODE_ENV !== "production"
				? printWarning(
						"Invalid argument supplied to oneOfType, expected an instance of array."
				  )
				: void 0;
			return emptyFunctionThatReturnsNull;
		}

		for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
			var checker = arrayOfTypeCheckers[i];
			if (typeof checker !== "function") {
				printWarning(
					"Invalid argument supplied to oneOfType. Expected an array of check functions, but " +
						"received " +
						getPostfixForTypeWarning(checker) +
						" at index " +
						i +
						"."
				);
				return emptyFunctionThatReturnsNull;
			}
		}

		function validate(
			props,
			propName,
			componentName,
			location,
			propFullName
		) {
			for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
				var checker = arrayOfTypeCheckers[i];
				if (
					checker(
						props,
						propName,
						componentName,
						location,
						propFullName,
						ReactPropTypesSecret$1
					) == null
				) {
					return null;
				}
			}

			return new PropTypeError(
				"Invalid " +
					location +
					" `" +
					propFullName +
					"` supplied to " +
					("`" + componentName + "`.")
			);
		}
		return createChainableTypeChecker(validate);
	}

	function createNodeChecker() {
		function validate(
			props,
			propName,
			componentName,
			location,
			propFullName
		) {
			if (!isNode(props[propName])) {
				return new PropTypeError(
					"Invalid " +
						location +
						" `" +
						propFullName +
						"` supplied to " +
						("`" + componentName + "`, expected a ReactNode.")
				);
			}
			return null;
		}
		return createChainableTypeChecker(validate);
	}

	function createShapeTypeChecker(shapeTypes) {
		function validate(
			props,
			propName,
			componentName,
			location,
			propFullName
		) {
			var propValue = props[propName];
			var propType = getPropType(propValue);
			if (propType !== "object") {
				return new PropTypeError(
					"Invalid " +
						location +
						" `" +
						propFullName +
						"` of type `" +
						propType +
						"` " +
						("supplied to `" +
							componentName +
							"`, expected `object`.")
				);
			}
			for (var key in shapeTypes) {
				var checker = shapeTypes[key];
				if (!checker) {
					continue;
				}
				var error = checker(
					propValue,
					key,
					componentName,
					location,
					propFullName + "." + key,
					ReactPropTypesSecret$1
				);
				if (error) {
					return error;
				}
			}
			return null;
		}
		return createChainableTypeChecker(validate);
	}

	function createStrictShapeTypeChecker(shapeTypes) {
		function validate(
			props,
			propName,
			componentName,
			location,
			propFullName
		) {
			var propValue = props[propName];
			var propType = getPropType(propValue);
			if (propType !== "object") {
				return new PropTypeError(
					"Invalid " +
						location +
						" `" +
						propFullName +
						"` of type `" +
						propType +
						"` " +
						("supplied to `" +
							componentName +
							"`, expected `object`.")
				);
			}
			// We need to check all keys in case some are required but missing from
			// props.
			var allKeys = assign({}, props[propName], shapeTypes);
			for (var key in allKeys) {
				var checker = shapeTypes[key];
				if (!checker) {
					return new PropTypeError(
						"Invalid " +
							location +
							" `" +
							propFullName +
							"` key `" +
							key +
							"` supplied to `" +
							componentName +
							"`." +
							"\nBad object: " +
							JSON.stringify(props[propName], null, "  ") +
							"\nValid keys: " +
							JSON.stringify(Object.keys(shapeTypes), null, "  ")
					);
				}
				var error = checker(
					propValue,
					key,
					componentName,
					location,
					propFullName + "." + key,
					ReactPropTypesSecret$1
				);
				if (error) {
					return error;
				}
			}
			return null;
		}

		return createChainableTypeChecker(validate);
	}

	function isNode(propValue) {
		switch (typeof propValue) {
			case "number":
			case "string":
			case "undefined":
				return true;
			case "boolean":
				return !propValue;
			case "object":
				if (Array.isArray(propValue)) {
					return propValue.every(isNode);
				}
				if (propValue === null || isValidElement(propValue)) {
					return true;
				}

				var iteratorFn = getIteratorFn(propValue);
				if (iteratorFn) {
					var iterator = iteratorFn.call(propValue);
					var step;
					if (iteratorFn !== propValue.entries) {
						while (!(step = iterator.next()).done) {
							if (!isNode(step.value)) {
								return false;
							}
						}
					} else {
						// Iterator will provide entry [k,v] tuples rather than values.
						while (!(step = iterator.next()).done) {
							var entry = step.value;
							if (entry) {
								if (!isNode(entry[1])) {
									return false;
								}
							}
						}
					}
				} else {
					return false;
				}

				return true;
			default:
				return false;
		}
	}

	function isSymbol(propType, propValue) {
		// Native Symbol.
		if (propType === "symbol") {
			return true;
		}

		// falsy value can't be a Symbol
		if (!propValue) {
			return false;
		}

		// 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
		if (propValue["@@toStringTag"] === "Symbol") {
			return true;
		}

		// Fallback for non-spec compliant Symbols which are polyfilled.
		if (typeof Symbol === "function" && propValue instanceof Symbol) {
			return true;
		}

		return false;
	}

	// Equivalent of `typeof` but with special handling for array and regexp.
	function getPropType(propValue) {
		var propType = typeof propValue;
		if (Array.isArray(propValue)) {
			return "array";
		}
		if (propValue instanceof RegExp) {
			// Old webkits (at least until Android 4.0) return 'function' rather than
			// 'object' for typeof a RegExp. We'll normalize this here so that /bla/
			// passes PropTypes.object.
			return "object";
		}
		if (isSymbol(propType, propValue)) {
			return "symbol";
		}
		return propType;
	}

	// This handles more types than `getPropType`. Only used for error messages.
	// See `createPrimitiveTypeChecker`.
	function getPreciseType(propValue) {
		if (typeof propValue === "undefined" || propValue === null) {
			return "" + propValue;
		}
		var propType = getPropType(propValue);
		if (propType === "object") {
			if (propValue instanceof Date) {
				return "date";
			} else if (propValue instanceof RegExp) {
				return "regexp";
			}
		}
		return propType;
	}

	// Returns a string that is postfixed to a warning about an invalid type.
	// For example, "undefined" or "of type array"
	function getPostfixForTypeWarning(value) {
		var type = getPreciseType(value);
		switch (type) {
			case "array":
			case "object":
				return "an " + type;
			case "boolean":
			case "date":
			case "regexp":
				return "a " + type;
			default:
				return type;
		}
	}

	// Returns class name of the object, if any.
	function getClassName(propValue) {
		if (!propValue.constructor || !propValue.constructor.name) {
			return ANONYMOUS;
		}
		return propValue.constructor.name;
	}

	ReactPropTypes.checkPropTypes = checkPropTypes;
	ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
	ReactPropTypes.PropTypes = ReactPropTypes;

	return ReactPropTypes;
};

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var ReactPropTypesSecret = ReactPropTypesSecret_1;

function emptyFunction() {}
function emptyFunctionWithReset() {}
emptyFunctionWithReset.resetWarningCache = emptyFunction;

var factoryWithThrowingShims = function () {
	function shim(
		props,
		propName,
		componentName,
		location,
		propFullName,
		secret
	) {
		if (secret === ReactPropTypesSecret) {
			// It is still safe when called from React.
			return;
		}
		var err = new Error(
			"Calling PropTypes validators directly is not supported by the `prop-types` package. " +
				"Use PropTypes.checkPropTypes() to call them. " +
				"Read more at http://fb.me/use-check-prop-types"
		);
		err.name = "Invariant Violation";
		throw err;
	}
	shim.isRequired = shim;
	function getShim() {
		return shim;
	} // Important!
	// Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
	var ReactPropTypes = {
		array: shim,
		bool: shim,
		func: shim,
		number: shim,
		object: shim,
		string: shim,
		symbol: shim,

		any: shim,
		arrayOf: getShim,
		element: shim,
		elementType: shim,
		instanceOf: getShim,
		node: shim,
		objectOf: getShim,
		oneOf: getShim,
		oneOfType: getShim,
		shape: getShim,
		exact: getShim,

		checkPropTypes: emptyFunctionWithReset,
		resetWarningCache: emptyFunction,
	};

	ReactPropTypes.PropTypes = ReactPropTypes;

	return ReactPropTypes;
};

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

if (process.env.NODE_ENV !== "production") {
	var ReactIs = reactIs.exports;

	// By explicitly using `prop-types` you are opting into new development behavior.
	// http://fb.me/prop-types-in-prod
	var throwOnDirectAccess = true;
	propTypes$1.exports = factoryWithTypeCheckers(
		ReactIs.isElement,
		throwOnDirectAccess
	);
} else {
	// By explicitly using `prop-types` you are opting into new production behavior.
	// http://fb.me/prop-types-in-prod
	propTypes$1.exports = factoryWithThrowingShims();
}

Object.defineProperty(AutosizeInput$1, "__esModule", {
	value: true,
});

var _extends =
	Object.assign ||
	function (target) {
		for (var i = 1; i < arguments.length; i++) {
			var source = arguments[i];
			for (var key in source) {
				if (Object.prototype.hasOwnProperty.call(source, key)) {
					target[key] = source[key];
				}
			}
		}
		return target;
	};

var _createClass = (function () {
	function defineProperties(target, props) {
		for (var i = 0; i < props.length; i++) {
			var descriptor = props[i];
			descriptor.enumerable = descriptor.enumerable || false;
			descriptor.configurable = true;
			if ("value" in descriptor) descriptor.writable = true;
			Object.defineProperty(target, descriptor.key, descriptor);
		}
	}
	return function (Constructor, protoProps, staticProps) {
		if (protoProps) defineProperties(Constructor.prototype, protoProps);
		if (staticProps) defineProperties(Constructor, staticProps);
		return Constructor;
	};
})();

var _react = React;

var _react2 = _interopRequireDefault(_react);

var _propTypes = propTypes$1.exports;

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) {
	return obj && obj.__esModule ? obj : { default: obj };
}

function _objectWithoutProperties(obj, keys) {
	var target = {};
	for (var i in obj) {
		if (keys.indexOf(i) >= 0) continue;
		if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
		target[i] = obj[i];
	}
	return target;
}

function _classCallCheck(instance, Constructor) {
	if (!(instance instanceof Constructor)) {
		throw new TypeError("Cannot call a class as a function");
	}
}

function _possibleConstructorReturn$1(self, call) {
	if (!self) {
		throw new ReferenceError(
			"this hasn't been initialised - super() hasn't been called"
		);
	}
	return call && (typeof call === "object" || typeof call === "function")
		? call
		: self;
}

function _inherits(subClass, superClass) {
	if (typeof superClass !== "function" && superClass !== null) {
		throw new TypeError(
			"Super expression must either be null or a function, not " +
				typeof superClass
		);
	}
	subClass.prototype = Object.create(superClass && superClass.prototype, {
		constructor: {
			value: subClass,
			enumerable: false,
			writable: true,
			configurable: true,
		},
	});
	if (superClass)
		Object.setPrototypeOf
			? Object.setPrototypeOf(subClass, superClass)
			: (subClass.__proto__ = superClass);
}

var sizerStyle = {
	position: "absolute",
	top: 0,
	left: 0,
	visibility: "hidden",
	height: 0,
	overflow: "scroll",
	whiteSpace: "pre",
};

var INPUT_PROPS_BLACKLIST = [
	"extraWidth",
	"injectStyles",
	"inputClassName",
	"inputRef",
	"inputStyle",
	"minWidth",
	"onAutosize",
	"placeholderIsMinWidth",
];

var cleanInputProps = function cleanInputProps(inputProps) {
	INPUT_PROPS_BLACKLIST.forEach(function (field) {
		return delete inputProps[field];
	});
	return inputProps;
};

var copyStyles = function copyStyles(styles, node) {
	node.style.fontSize = styles.fontSize;
	node.style.fontFamily = styles.fontFamily;
	node.style.fontWeight = styles.fontWeight;
	node.style.fontStyle = styles.fontStyle;
	node.style.letterSpacing = styles.letterSpacing;
	node.style.textTransform = styles.textTransform;
};

var isIE =
	typeof window !== "undefined" && window.navigator
		? /MSIE |Trident\/|Edge\//.test(window.navigator.userAgent)
		: false;

var generateId = function generateId() {
	// we only need an auto-generated ID for stylesheet injection, which is only
	// used for IE. so if the browser is not IE, this should return undefined.
	return isIE ? "_" + Math.random().toString(36).substr(2, 12) : undefined;
};

var AutosizeInput = (function (_Component) {
	_inherits(AutosizeInput, _Component);

	_createClass(AutosizeInput, null, [
		{
			key: "getDerivedStateFromProps",
			value: function getDerivedStateFromProps(props, state) {
				var id = props.id;

				return id !== state.prevId
					? { inputId: id || generateId(), prevId: id }
					: null;
			},
		},
	]);

	function AutosizeInput(props) {
		_classCallCheck(this, AutosizeInput);

		var _this = _possibleConstructorReturn$1(
			this,
			(
				AutosizeInput.__proto__ || Object.getPrototypeOf(AutosizeInput)
			).call(this, props)
		);

		_this.inputRef = function (el) {
			_this.input = el;
			if (typeof _this.props.inputRef === "function") {
				_this.props.inputRef(el);
			}
		};

		_this.placeHolderSizerRef = function (el) {
			_this.placeHolderSizer = el;
		};

		_this.sizerRef = function (el) {
			_this.sizer = el;
		};

		_this.state = {
			inputWidth: props.minWidth,
			inputId: props.id || generateId(),
			prevId: props.id,
		};
		return _this;
	}

	_createClass(AutosizeInput, [
		{
			key: "componentDidMount",
			value: function componentDidMount() {
				this.mounted = true;
				this.copyInputStyles();
				this.updateInputWidth();
			},
		},
		{
			key: "componentDidUpdate",
			value: function componentDidUpdate(prevProps, prevState) {
				if (prevState.inputWidth !== this.state.inputWidth) {
					if (typeof this.props.onAutosize === "function") {
						this.props.onAutosize(this.state.inputWidth);
					}
				}
				this.updateInputWidth();
			},
		},
		{
			key: "componentWillUnmount",
			value: function componentWillUnmount() {
				this.mounted = false;
			},
		},
		{
			key: "copyInputStyles",
			value: function copyInputStyles() {
				if (!this.mounted || !window.getComputedStyle) {
					return;
				}
				var inputStyles =
					this.input && window.getComputedStyle(this.input);
				if (!inputStyles) {
					return;
				}
				copyStyles(inputStyles, this.sizer);
				if (this.placeHolderSizer) {
					copyStyles(inputStyles, this.placeHolderSizer);
				}
			},
		},
		{
			key: "updateInputWidth",
			value: function updateInputWidth() {
				if (
					!this.mounted ||
					!this.sizer ||
					typeof this.sizer.scrollWidth === "undefined"
				) {
					return;
				}
				var newInputWidth = void 0;
				if (
					this.props.placeholder &&
					(!this.props.value ||
						(this.props.value && this.props.placeholderIsMinWidth))
				) {
					newInputWidth =
						Math.max(
							this.sizer.scrollWidth,
							this.placeHolderSizer.scrollWidth
						) + 2;
				} else {
					newInputWidth = this.sizer.scrollWidth + 2;
				}
				// add extraWidth to the detected width. for number types, this defaults to 16 to allow for the stepper UI
				var extraWidth =
					this.props.type === "number" &&
					this.props.extraWidth === undefined
						? 16
						: parseInt(this.props.extraWidth) || 0;
				newInputWidth += extraWidth;
				if (newInputWidth < this.props.minWidth) {
					newInputWidth = this.props.minWidth;
				}
				if (newInputWidth !== this.state.inputWidth) {
					this.setState({
						inputWidth: newInputWidth,
					});
				}
			},
		},
		{
			key: "getInput",
			value: function getInput() {
				return this.input;
			},
		},
		{
			key: "focus",
			value: function focus() {
				this.input.focus();
			},
		},
		{
			key: "blur",
			value: function blur() {
				this.input.blur();
			},
		},
		{
			key: "select",
			value: function select() {
				this.input.select();
			},
		},
		{
			key: "renderStyles",
			value: function renderStyles() {
				// this method injects styles to hide IE's clear indicator, which messes
				// with input size detection. the stylesheet is only injected when the
				// browser is IE, and can also be disabled by the `injectStyles` prop.
				var injectStyles = this.props.injectStyles;

				return isIE && injectStyles
					? _react2.default.createElement("style", {
							dangerouslySetInnerHTML: {
								__html:
									"input#" +
									this.state.inputId +
									"::-ms-clear {display: none;}",
							},
					  })
					: null;
			},
		},
		{
			key: "render",
			value: function render() {
				var sizerValue = [
					this.props.defaultValue,
					this.props.value,
					"",
				].reduce(function (previousValue, currentValue) {
					if (previousValue !== null && previousValue !== undefined) {
						return previousValue;
					}
					return currentValue;
				});

				var wrapperStyle = _extends({}, this.props.style);
				if (!wrapperStyle.display)
					wrapperStyle.display = "inline-block";

				var inputStyle = _extends(
					{
						boxSizing: "content-box",
						width: this.state.inputWidth + "px",
					},
					this.props.inputStyle
				);

				var inputProps = _objectWithoutProperties(this.props, []);

				cleanInputProps(inputProps);
				inputProps.className = this.props.inputClassName;
				inputProps.id = this.state.inputId;
				inputProps.style = inputStyle;

				return _react2.default.createElement(
					"div",
					{ className: this.props.className, style: wrapperStyle },
					this.renderStyles(),
					_react2.default.createElement(
						"input",
						_extends({}, inputProps, { ref: this.inputRef })
					),
					_react2.default.createElement(
						"div",
						{ ref: this.sizerRef, style: sizerStyle },
						sizerValue
					),
					this.props.placeholder
						? _react2.default.createElement(
								"div",
								{
									ref: this.placeHolderSizerRef,
									style: sizerStyle,
								},
								this.props.placeholder
						  )
						: null
				);
			},
		},
	]);

	return AutosizeInput;
})(_react.Component);

AutosizeInput.propTypes = {
	className: _propTypes2.default.string, // className for the outer element
	defaultValue: _propTypes2.default.any, // default field value
	extraWidth: _propTypes2.default.oneOfType([
		// additional width for input element
		_propTypes2.default.number,
		_propTypes2.default.string,
	]),
	id: _propTypes2.default.string, // id to use for the input, can be set for consistent snapshots
	injectStyles: _propTypes2.default.bool, // inject the custom stylesheet to hide clear UI, defaults to true
	inputClassName: _propTypes2.default.string, // className for the input element
	inputRef: _propTypes2.default.func, // ref callback for the input element
	inputStyle: _propTypes2.default.object, // css styles for the input element
	minWidth: _propTypes2.default.oneOfType([
		// minimum width for input element
		_propTypes2.default.number,
		_propTypes2.default.string,
	]),
	onAutosize: _propTypes2.default.func, // onAutosize handler: function(newWidth) {}
	onChange: _propTypes2.default.func, // onChange handler: function(event) {}
	placeholder: _propTypes2.default.string, // placeholder text
	placeholderIsMinWidth: _propTypes2.default.bool, // don't collapse size to less than the placeholder
	style: _propTypes2.default.object, // css styles for the outer element
	value: _propTypes2.default.any, // field value
};
AutosizeInput.defaultProps = {
	minWidth: 1,
	injectStyles: true,
};

var _default$1 = (AutosizeInput$1.default = AutosizeInput);

function _defineProperty(obj, key, value) {
	if (key in obj) {
		Object.defineProperty(obj, key, {
			value: value,
			enumerable: true,
			configurable: true,
			writable: true,
		});
	} else {
		obj[key] = value;
	}

	return obj;
}

function ownKeys$3(object, enumerableOnly) {
	var keys = Object.keys(object);

	if (Object.getOwnPropertySymbols) {
		var symbols = Object.getOwnPropertySymbols(object);
		if (enumerableOnly)
			symbols = symbols.filter(function (sym) {
				return Object.getOwnPropertyDescriptor(object, sym).enumerable;
			});
		keys.push.apply(keys, symbols);
	}

	return keys;
}

function _objectSpread2(target) {
	for (var i = 1; i < arguments.length; i++) {
		var source = arguments[i] != null ? arguments[i] : {};

		if (i % 2) {
			ownKeys$3(Object(source), true).forEach(function (key) {
				_defineProperty(target, key, source[key]);
			});
		} else if (Object.getOwnPropertyDescriptors) {
			Object.defineProperties(
				target,
				Object.getOwnPropertyDescriptors(source)
			);
		} else {
			ownKeys$3(Object(source)).forEach(function (key) {
				Object.defineProperty(
					target,
					key,
					Object.getOwnPropertyDescriptor(source, key)
				);
			});
		}
	}

	return target;
}

function _getPrototypeOf(o) {
	_getPrototypeOf = Object.setPrototypeOf
		? Object.getPrototypeOf
		: function _getPrototypeOf(o) {
				return o.__proto__ || Object.getPrototypeOf(o);
		  };
	return _getPrototypeOf(o);
}

function _isNativeReflectConstruct() {
	if (typeof Reflect === "undefined" || !Reflect.construct) return false;
	if (Reflect.construct.sham) return false;
	if (typeof Proxy === "function") return true;

	try {
		Date.prototype.toString.call(
			Reflect.construct(Date, [], function () {})
		);
		return true;
	} catch (e) {
		return false;
	}
}

function _assertThisInitialized(self) {
	if (self === void 0) {
		throw new ReferenceError(
			"this hasn't been initialised - super() hasn't been called"
		);
	}

	return self;
}

function _possibleConstructorReturn(self, call) {
	if (call && (typeof call === "object" || typeof call === "function")) {
		return call;
	}

	return _assertThisInitialized(self);
}

function _createSuper(Derived) {
	var hasNativeReflectConstruct = _isNativeReflectConstruct();
	return function _createSuperInternal() {
		var Super = _getPrototypeOf(Derived),
			result;

		if (hasNativeReflectConstruct) {
			var NewTarget = _getPrototypeOf(this).constructor;
			result = Reflect.construct(Super, arguments, NewTarget);
		} else {
			result = Super.apply(this, arguments);
		}

		return _possibleConstructorReturn(this, result);
	};
}

// ==============================
// NO OP
// ==============================
var noop = function noop() {};
// Class Name Prefixer
// ==============================

/**
 String representation of component state for styling with class names.

 Expects an array of strings OR a string/object pair:
 - className(['comp', 'comp-arg', 'comp-arg-2'])
   @returns 'react-select__comp react-select__comp-arg react-select__comp-arg-2'
 - className('comp', { some: true, state: false })
   @returns 'react-select__comp react-select__comp--some'
*/

function applyPrefixToName(prefix, name) {
	if (!name) {
		return prefix;
	} else if (name[0] === "-") {
		return prefix + name;
	} else {
		return prefix + "__" + name;
	}
}

function classNames(prefix, state, className) {
	var arr = [className];

	if (state && prefix) {
		for (var key in state) {
			if (state.hasOwnProperty(key) && state[key]) {
				arr.push("".concat(applyPrefixToName(prefix, key)));
			}
		}
	}

	return arr
		.filter(function (i) {
			return i;
		})
		.map(function (i) {
			return String(i).trim();
		})
		.join(" ");
} // ==============================
// Clean Value
// ==============================

var cleanValue = function cleanValue(value) {
	if (Array.isArray(value)) return value.filter(Boolean);
	if (_typeof$1(value) === "object" && value !== null) return [value];
	return [];
}; // ==============================
// Clean Common Props
// ==============================

var cleanCommonProps = function cleanCommonProps(props) {
	//className
	props.className;
	props.clearValue;
	props.cx;
	props.getStyles;
	props.getValue;
	props.hasValue;
	props.isMulti;
	props.isRtl;
	props.options;
	props.selectOption;
	props.selectProps;
	props.setValue;
	props.theme;
	var innerProps = _objectWithoutProperties$1(props, [
		"className",
		"clearValue",
		"cx",
		"getStyles",
		"getValue",
		"hasValue",
		"isMulti",
		"isRtl",
		"options",
		"selectOption",
		"selectProps",
		"setValue",
		"theme",
	]);

	return _objectSpread2({}, innerProps);
}; // ==============================
// Scroll Helpers
// ==============================

function isDocumentElement(el) {
	return [document.documentElement, document.body, window].indexOf(el) > -1;
} // Normalized Scroll Top
// ------------------------------

function getScrollTop(el) {
	if (isDocumentElement(el)) {
		return window.pageYOffset;
	}

	return el.scrollTop;
}
function scrollTo(el, top) {
	// with a scroll distance, we perform scroll on the element
	if (isDocumentElement(el)) {
		window.scrollTo(0, top);
		return;
	}

	el.scrollTop = top;
} // Get Scroll Parent
// ------------------------------

function getScrollParent(element) {
	var style = getComputedStyle(element);
	var excludeStaticParent = style.position === "absolute";
	var overflowRx = /(auto|scroll)/;
	var docEl = document.documentElement; // suck it, flow...

	if (style.position === "fixed") return docEl;

	for (var parent = element; (parent = parent.parentElement); ) {
		style = getComputedStyle(parent);

		if (excludeStaticParent && style.position === "static") {
			continue;
		}

		if (
			overflowRx.test(style.overflow + style.overflowY + style.overflowX)
		) {
			return parent;
		}
	}

	return docEl;
} // Animated Scroll To
// ------------------------------

/**
  @param t: time (elapsed)
  @param b: initial value
  @param c: amount of change
  @param d: duration
*/

function easeOutCubic(t, b, c, d) {
	return c * ((t = t / d - 1) * t * t + 1) + b;
}

function animatedScrollTo(element, to) {
	var duration =
		arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 200;
	var callback =
		arguments.length > 3 && arguments[3] !== undefined
			? arguments[3]
			: noop;
	var start = getScrollTop(element);
	var change = to - start;
	var increment = 10;
	var currentTime = 0;

	function animateScroll() {
		currentTime += increment;
		var val = easeOutCubic(currentTime, start, change, duration);
		scrollTo(element, val);

		if (currentTime < duration) {
			window.requestAnimationFrame(animateScroll);
		} else {
			callback(element);
		}
	}

	animateScroll();
} // Scroll Into View
// ------------------------------

function scrollIntoView(menuEl, focusedEl) {
	var menuRect = menuEl.getBoundingClientRect();
	var focusedRect = focusedEl.getBoundingClientRect();
	var overScroll = focusedEl.offsetHeight / 3;

	if (focusedRect.bottom + overScroll > menuRect.bottom) {
		scrollTo(
			menuEl,
			Math.min(
				focusedEl.offsetTop +
					focusedEl.clientHeight -
					menuEl.offsetHeight +
					overScroll,
				menuEl.scrollHeight
			)
		);
	} else if (focusedRect.top - overScroll < menuRect.top) {
		scrollTo(menuEl, Math.max(focusedEl.offsetTop - overScroll, 0));
	}
} // ==============================
// Get bounding client object
// ==============================
// cannot get keys using array notation with DOMRect

function getBoundingClientObj(element) {
	var rect = element.getBoundingClientRect();
	return {
		bottom: rect.bottom,
		height: rect.height,
		left: rect.left,
		right: rect.right,
		top: rect.top,
		width: rect.width,
	};
}
// Touch Capability Detector
// ==============================

function isTouchCapable() {
	try {
		document.createEvent("TouchEvent");
		return true;
	} catch (e) {
		return false;
	}
} // ==============================
// Mobile Device Detector
// ==============================

function isMobileDevice() {
	try {
		return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(
			navigator.userAgent
		);
	} catch (e) {
		return false;
	}
} // ==============================
// Passive Event Detector
// ==============================
// https://github.com/rafgraph/detect-it/blob/main/src/index.ts#L19-L36

var passiveOptionAccessed = false;
var options = {
	get passive() {
		return (passiveOptionAccessed = true);
	},
}; // check for SSR

var w = typeof window !== "undefined" ? window : {};

if (w.addEventListener && w.removeEventListener) {
	w.addEventListener("p", noop, options);
	w.removeEventListener("p", noop, false);
}

var supportsPassiveEvents = passiveOptionAccessed;

function getMenuPlacement(_ref) {
	var maxHeight = _ref.maxHeight,
		menuEl = _ref.menuEl,
		minHeight = _ref.minHeight,
		placement = _ref.placement,
		shouldScroll = _ref.shouldScroll,
		isFixedPosition = _ref.isFixedPosition,
		theme = _ref.theme;
	var spacing = theme.spacing;
	var scrollParent = getScrollParent(menuEl);
	var defaultState = {
		placement: "bottom",
		maxHeight: maxHeight,
	}; // something went wrong, return default state

	if (!menuEl || !menuEl.offsetParent) return defaultState; // we can't trust `scrollParent.scrollHeight` --> it may increase when
	// the menu is rendered

	var _scrollParent$getBoun = scrollParent.getBoundingClientRect(),
		scrollHeight = _scrollParent$getBoun.height;

	var _menuEl$getBoundingCl = menuEl.getBoundingClientRect(),
		menuBottom = _menuEl$getBoundingCl.bottom,
		menuHeight = _menuEl$getBoundingCl.height,
		menuTop = _menuEl$getBoundingCl.top;

	var _menuEl$offsetParent$ = menuEl.offsetParent.getBoundingClientRect(),
		containerTop = _menuEl$offsetParent$.top;

	var viewHeight = window.innerHeight;
	var scrollTop = getScrollTop(scrollParent);
	var marginBottom = parseInt(getComputedStyle(menuEl).marginBottom, 10);
	var marginTop = parseInt(getComputedStyle(menuEl).marginTop, 10);
	var viewSpaceAbove = containerTop - marginTop;
	var viewSpaceBelow = viewHeight - menuTop;
	var scrollSpaceAbove = viewSpaceAbove + scrollTop;
	var scrollSpaceBelow = scrollHeight - scrollTop - menuTop;
	var scrollDown = menuBottom - viewHeight + scrollTop + marginBottom;
	var scrollUp = scrollTop + menuTop - marginTop;
	var scrollDuration = 160;

	switch (placement) {
		case "auto":
		case "bottom":
			// 1: the menu will fit, do nothing
			if (viewSpaceBelow >= menuHeight) {
				return {
					placement: "bottom",
					maxHeight: maxHeight,
				};
			} // 2: the menu will fit, if scrolled

			if (scrollSpaceBelow >= menuHeight && !isFixedPosition) {
				if (shouldScroll) {
					animatedScrollTo(scrollParent, scrollDown, scrollDuration);
				}

				return {
					placement: "bottom",
					maxHeight: maxHeight,
				};
			} // 3: the menu will fit, if constrained

			if (
				(!isFixedPosition && scrollSpaceBelow >= minHeight) ||
				(isFixedPosition && viewSpaceBelow >= minHeight)
			) {
				if (shouldScroll) {
					animatedScrollTo(scrollParent, scrollDown, scrollDuration);
				} // we want to provide as much of the menu as possible to the user,
				// so give them whatever is available below rather than the minHeight.

				var constrainedHeight = isFixedPosition
					? viewSpaceBelow - marginBottom
					: scrollSpaceBelow - marginBottom;
				return {
					placement: "bottom",
					maxHeight: constrainedHeight,
				};
			} // 4. Forked beviour when there isn't enough space below
			// AUTO: flip the menu, render above

			if (placement === "auto" || isFixedPosition) {
				// may need to be constrained after flipping
				var _constrainedHeight = maxHeight;
				var spaceAbove = isFixedPosition
					? viewSpaceAbove
					: scrollSpaceAbove;

				if (spaceAbove >= minHeight) {
					_constrainedHeight = Math.min(
						spaceAbove - marginBottom - spacing.controlHeight,
						maxHeight
					);
				}

				return {
					placement: "top",
					maxHeight: _constrainedHeight,
				};
			} // BOTTOM: allow browser to increase scrollable area and immediately set scroll

			if (placement === "bottom") {
				if (shouldScroll) {
					scrollTo(scrollParent, scrollDown);
				}

				return {
					placement: "bottom",
					maxHeight: maxHeight,
				};
			}

			break;

		case "top":
			// 1: the menu will fit, do nothing
			if (viewSpaceAbove >= menuHeight) {
				return {
					placement: "top",
					maxHeight: maxHeight,
				};
			} // 2: the menu will fit, if scrolled

			if (scrollSpaceAbove >= menuHeight && !isFixedPosition) {
				if (shouldScroll) {
					animatedScrollTo(scrollParent, scrollUp, scrollDuration);
				}

				return {
					placement: "top",
					maxHeight: maxHeight,
				};
			} // 3: the menu will fit, if constrained

			if (
				(!isFixedPosition && scrollSpaceAbove >= minHeight) ||
				(isFixedPosition && viewSpaceAbove >= minHeight)
			) {
				var _constrainedHeight2 = maxHeight; // we want to provide as much of the menu as possible to the user,
				// so give them whatever is available below rather than the minHeight.

				if (
					(!isFixedPosition && scrollSpaceAbove >= minHeight) ||
					(isFixedPosition && viewSpaceAbove >= minHeight)
				) {
					_constrainedHeight2 = isFixedPosition
						? viewSpaceAbove - marginTop
						: scrollSpaceAbove - marginTop;
				}

				if (shouldScroll) {
					animatedScrollTo(scrollParent, scrollUp, scrollDuration);
				}

				return {
					placement: "top",
					maxHeight: _constrainedHeight2,
				};
			} // 4. not enough space, the browser WILL NOT increase scrollable area when
			// absolutely positioned element rendered above the viewport (only below).
			// Flip the menu, render below

			return {
				placement: "bottom",
				maxHeight: maxHeight,
			};

		default:
			throw new Error(
				'Invalid placement provided "'.concat(placement, '".')
			);
	} // fulfil contract with flow: implicit return value of undefined

	return defaultState;
} // Menu Component
// ------------------------------

function alignToControl(placement) {
	var placementToCSSProp = {
		bottom: "top",
		top: "bottom",
	};
	return placement ? placementToCSSProp[placement] : "bottom";
}

var coercePlacement = function coercePlacement(p) {
	return p === "auto" ? "bottom" : p;
};

var menuCSS = function menuCSS(_ref2) {
	var _ref3;

	var placement = _ref2.placement,
		_ref2$theme = _ref2.theme,
		borderRadius = _ref2$theme.borderRadius,
		spacing = _ref2$theme.spacing,
		colors = _ref2$theme.colors;
	return (
		(_ref3 = {
			label: "menu",
		}),
		_defineProperty$1(_ref3, alignToControl(placement), "100%"),
		_defineProperty$1(_ref3, "backgroundColor", colors.neutral0),
		_defineProperty$1(_ref3, "borderRadius", borderRadius),
		_defineProperty$1(
			_ref3,
			"boxShadow",
			"0 0 0 1px hsla(0, 0%, 0%, 0.1), 0 4px 11px hsla(0, 0%, 0%, 0.1)"
		),
		_defineProperty$1(_ref3, "marginBottom", spacing.menuGutter),
		_defineProperty$1(_ref3, "marginTop", spacing.menuGutter),
		_defineProperty$1(_ref3, "position", "absolute"),
		_defineProperty$1(_ref3, "width", "100%"),
		_defineProperty$1(_ref3, "zIndex", 1),
		_ref3
	);
};
var PortalPlacementContext = /*#__PURE__*/ createContext({
	getPortalPlacement: null,
}); // NOTE: internal only

var MenuPlacer = /*#__PURE__*/ (function (_Component) {
	_inherits$1(MenuPlacer, _Component);

	var _super = _createSuper(MenuPlacer);

	function MenuPlacer() {
		var _this;

		_classCallCheck$1(this, MenuPlacer);

		for (
			var _len = arguments.length, args = new Array(_len), _key = 0;
			_key < _len;
			_key++
		) {
			args[_key] = arguments[_key];
		}

		_this = _super.call.apply(_super, [this].concat(args));
		_this.state = {
			maxHeight: _this.props.maxMenuHeight,
			placement: null,
		};

		_this.getPlacement = function (ref) {
			var _this$props = _this.props,
				minMenuHeight = _this$props.minMenuHeight,
				maxMenuHeight = _this$props.maxMenuHeight,
				menuPlacement = _this$props.menuPlacement,
				menuPosition = _this$props.menuPosition,
				menuShouldScrollIntoView = _this$props.menuShouldScrollIntoView,
				theme = _this$props.theme;
			if (!ref) return; // DO NOT scroll if position is fixed

			var isFixedPosition = menuPosition === "fixed";
			var shouldScroll = menuShouldScrollIntoView && !isFixedPosition;
			var state = getMenuPlacement({
				maxHeight: maxMenuHeight,
				menuEl: ref,
				minHeight: minMenuHeight,
				placement: menuPlacement,
				shouldScroll: shouldScroll,
				isFixedPosition: isFixedPosition,
				theme: theme,
			});
			var getPortalPlacement = _this.context.getPortalPlacement;
			if (getPortalPlacement) getPortalPlacement(state);

			_this.setState(state);
		};

		_this.getUpdatedProps = function () {
			var menuPlacement = _this.props.menuPlacement;
			var placement =
				_this.state.placement || coercePlacement(menuPlacement);
			return _objectSpread2(
				_objectSpread2({}, _this.props),
				{},
				{
					placement: placement,
					maxHeight: _this.state.maxHeight,
				}
			);
		};

		return _this;
	}

	_createClass$1(MenuPlacer, [
		{
			key: "render",
			value: function render() {
				var children = this.props.children;
				return children({
					ref: this.getPlacement,
					placerProps: this.getUpdatedProps(),
				});
			},
		},
	]);

	return MenuPlacer;
})(Component);
MenuPlacer.contextType = PortalPlacementContext;

var Menu = function Menu(props) {
	var children = props.children,
		className = props.className,
		cx = props.cx,
		getStyles = props.getStyles,
		innerRef = props.innerRef,
		innerProps = props.innerProps;
	return jsx(
		"div",
		_extends$2(
			{
				css: getStyles("menu", props),
				className: cx(
					{
						menu: true,
					},
					className
				),
				ref: innerRef,
			},
			innerProps
		),
		children
	);
};
// Menu List
// ==============================

var menuListCSS = function menuListCSS(_ref4) {
	var maxHeight = _ref4.maxHeight,
		baseUnit = _ref4.theme.spacing.baseUnit;
	return {
		maxHeight: maxHeight,
		overflowY: "auto",
		paddingBottom: baseUnit,
		paddingTop: baseUnit,
		position: "relative",
		// required for offset[Height, Top] > keyboard scroll
		WebkitOverflowScrolling: "touch",
	};
};
var MenuList = function MenuList(props) {
	var children = props.children,
		className = props.className,
		cx = props.cx,
		getStyles = props.getStyles,
		innerProps = props.innerProps,
		innerRef = props.innerRef,
		isMulti = props.isMulti;
	return jsx(
		"div",
		_extends$2(
			{
				css: getStyles("menuList", props),
				className: cx(
					{
						"menu-list": true,
						"menu-list--is-multi": isMulti,
					},
					className
				),
				ref: innerRef,
			},
			innerProps
		),
		children
	);
}; // ==============================
// Menu Notices
// ==============================

var noticeCSS = function noticeCSS(_ref5) {
	var _ref5$theme = _ref5.theme,
		baseUnit = _ref5$theme.spacing.baseUnit,
		colors = _ref5$theme.colors;
	return {
		color: colors.neutral40,
		padding: "".concat(baseUnit * 2, "px ").concat(baseUnit * 3, "px"),
		textAlign: "center",
	};
};

var noOptionsMessageCSS = noticeCSS;
var loadingMessageCSS = noticeCSS;
var NoOptionsMessage = function NoOptionsMessage(props) {
	var children = props.children,
		className = props.className,
		cx = props.cx,
		getStyles = props.getStyles,
		innerProps = props.innerProps;
	return jsx(
		"div",
		_extends$2(
			{
				css: getStyles("noOptionsMessage", props),
				className: cx(
					{
						"menu-notice": true,
						"menu-notice--no-options": true,
					},
					className
				),
			},
			innerProps
		),
		children
	);
};
NoOptionsMessage.defaultProps = {
	children: "No options",
};
var LoadingMessage = function LoadingMessage(props) {
	var children = props.children,
		className = props.className,
		cx = props.cx,
		getStyles = props.getStyles,
		innerProps = props.innerProps;
	return jsx(
		"div",
		_extends$2(
			{
				css: getStyles("loadingMessage", props),
				className: cx(
					{
						"menu-notice": true,
						"menu-notice--loading": true,
					},
					className
				),
			},
			innerProps
		),
		children
	);
};
LoadingMessage.defaultProps = {
	children: "Loading...",
}; // ==============================
// Menu Portal
// ==============================

var menuPortalCSS = function menuPortalCSS(_ref6) {
	var rect = _ref6.rect,
		offset = _ref6.offset,
		position = _ref6.position;
	return {
		left: rect.left,
		position: position,
		top: offset,
		width: rect.width,
		zIndex: 1,
	};
};
var MenuPortal = /*#__PURE__*/ (function (_Component2) {
	_inherits$1(MenuPortal, _Component2);

	var _super2 = _createSuper(MenuPortal);

	function MenuPortal() {
		var _this2;

		_classCallCheck$1(this, MenuPortal);

		for (
			var _len2 = arguments.length, args = new Array(_len2), _key2 = 0;
			_key2 < _len2;
			_key2++
		) {
			args[_key2] = arguments[_key2];
		}

		_this2 = _super2.call.apply(_super2, [this].concat(args));
		_this2.state = {
			placement: null,
		};

		_this2.getPortalPlacement = function (_ref7) {
			var placement = _ref7.placement;
			var initialPlacement = coercePlacement(_this2.props.menuPlacement); // avoid re-renders if the placement has not changed

			if (placement !== initialPlacement) {
				_this2.setState({
					placement: placement,
				});
			}
		};

		return _this2;
	}

	_createClass$1(MenuPortal, [
		{
			key: "render",
			value: function render() {
				var _this$props2 = this.props,
					appendTo = _this$props2.appendTo,
					children = _this$props2.children,
					className = _this$props2.className,
					controlElement = _this$props2.controlElement,
					cx = _this$props2.cx,
					innerProps = _this$props2.innerProps,
					menuPlacement = _this$props2.menuPlacement,
					position = _this$props2.menuPosition,
					getStyles = _this$props2.getStyles;
				var isFixed = position === "fixed"; // bail early if required elements aren't present

				if ((!appendTo && !isFixed) || !controlElement) {
					return null;
				}

				var placement =
					this.state.placement || coercePlacement(menuPlacement);
				var rect = getBoundingClientObj(controlElement);
				var scrollDistance = isFixed ? 0 : window.pageYOffset;
				var offset = rect[placement] + scrollDistance;
				var state = {
					offset: offset,
					position: position,
					rect: rect,
				}; // same wrapper element whether fixed or portalled

				var menuWrapper = jsx(
					"div",
					_extends$2(
						{
							css: getStyles("menuPortal", state),
							className: cx(
								{
									"menu-portal": true,
								},
								className
							),
						},
						innerProps
					),
					children
				);
				return jsx(
					PortalPlacementContext.Provider,
					{
						value: {
							getPortalPlacement: this.getPortalPlacement,
						},
					},
					appendTo
						? /*#__PURE__*/ createPortal(menuWrapper, appendTo)
						: menuWrapper
				);
			},
		},
	]);

	return MenuPortal;
})(Component);

var containerCSS = function containerCSS(_ref) {
	var isDisabled = _ref.isDisabled,
		isRtl = _ref.isRtl;
	return {
		label: "container",
		direction: isRtl ? "rtl" : null,
		pointerEvents: isDisabled ? "none" : null,
		// cancel mouse events when disabled
		position: "relative",
	};
};
var SelectContainer = function SelectContainer(props) {
	var children = props.children,
		className = props.className,
		cx = props.cx,
		getStyles = props.getStyles,
		innerProps = props.innerProps,
		isDisabled = props.isDisabled,
		isRtl = props.isRtl;
	return jsx(
		"div",
		_extends$2(
			{
				css: getStyles("container", props),
				className: cx(
					{
						"--is-disabled": isDisabled,
						"--is-rtl": isRtl,
					},
					className
				),
			},
			innerProps
		),
		children
	);
}; // ==============================
// Value Container
// ==============================

var valueContainerCSS = function valueContainerCSS(_ref2) {
	var spacing = _ref2.theme.spacing;
	return {
		alignItems: "center",
		display: "flex",
		flex: 1,
		flexWrap: "wrap",
		padding: ""
			.concat(spacing.baseUnit / 2, "px ")
			.concat(spacing.baseUnit * 2, "px"),
		WebkitOverflowScrolling: "touch",
		position: "relative",
		overflow: "hidden",
	};
};
var ValueContainer = function ValueContainer(props) {
	var children = props.children,
		className = props.className,
		cx = props.cx,
		innerProps = props.innerProps,
		isMulti = props.isMulti,
		getStyles = props.getStyles,
		hasValue = props.hasValue;
	return jsx(
		"div",
		_extends$2(
			{
				css: getStyles("valueContainer", props),
				className: cx(
					{
						"value-container": true,
						"value-container--is-multi": isMulti,
						"value-container--has-value": hasValue,
					},
					className
				),
			},
			innerProps
		),
		children
	);
}; // ==============================
// Indicator Container
// ==============================

var indicatorsContainerCSS = function indicatorsContainerCSS() {
	return {
		alignItems: "center",
		alignSelf: "stretch",
		display: "flex",
		flexShrink: 0,
	};
};
var IndicatorsContainer = function IndicatorsContainer(props) {
	var children = props.children,
		className = props.className,
		cx = props.cx,
		innerProps = props.innerProps,
		getStyles = props.getStyles;
	return jsx(
		"div",
		_extends$2(
			{
				css: getStyles("indicatorsContainer", props),
				className: cx(
					{
						indicators: true,
					},
					className
				),
			},
			innerProps
		),
		children
	);
};

var _templateObject;

function _EMOTION_STRINGIFIED_CSS_ERROR__$2() {
	return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).";
}

var _ref2$1 =
	process.env.NODE_ENV === "production"
		? {
				name: "8mmkcg",
				styles: "display:inline-block;fill:currentColor;line-height:1;stroke:currentColor;stroke-width:0",
		  }
		: {
				name: "tj5bde-Svg",
				styles: "display:inline-block;fill:currentColor;line-height:1;stroke:currentColor;stroke-width:0;label:Svg;",
				map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
				toString: _EMOTION_STRINGIFIED_CSS_ERROR__$2,
		  };

// ==============================
// Dropdown & Clear Icons
// ==============================
var Svg = function Svg(_ref) {
	var size = _ref.size,
		props = _objectWithoutProperties$1(_ref, ["size"]);

	return jsx(
		"svg",
		_extends$2(
			{
				height: size,
				width: size,
				viewBox: "0 0 20 20",
				"aria-hidden": "true",
				focusable: "false",
				css: _ref2$1,
			},
			props
		)
	);
};

var CrossIcon = function CrossIcon(props) {
	return jsx(
		Svg,
		_extends$2(
			{
				size: 20,
			},
			props
		),
		jsx("path", {
			d: "M14.348 14.849c-0.469 0.469-1.229 0.469-1.697 0l-2.651-3.030-2.651 3.029c-0.469 0.469-1.229 0.469-1.697 0-0.469-0.469-0.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-0.469-0.469-0.469-1.228 0-1.697s1.228-0.469 1.697 0l2.652 3.031 2.651-3.031c0.469-0.469 1.228-0.469 1.697 0s0.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c0.469 0.469 0.469 1.229 0 1.698z",
		})
	);
};
var DownChevron = function DownChevron(props) {
	return jsx(
		Svg,
		_extends$2(
			{
				size: 20,
			},
			props
		),
		jsx("path", {
			d: "M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z",
		})
	);
}; // ==============================
// Dropdown & Clear Buttons
// ==============================

var baseCSS = function baseCSS(_ref3) {
	var isFocused = _ref3.isFocused,
		_ref3$theme = _ref3.theme,
		baseUnit = _ref3$theme.spacing.baseUnit,
		colors = _ref3$theme.colors;
	return {
		label: "indicatorContainer",
		color: isFocused ? colors.neutral60 : colors.neutral20,
		display: "flex",
		padding: baseUnit * 2,
		transition: "color 150ms",
		":hover": {
			color: isFocused ? colors.neutral80 : colors.neutral40,
		},
	};
};

var dropdownIndicatorCSS = baseCSS;
var DropdownIndicator = function DropdownIndicator(props) {
	var children = props.children,
		className = props.className,
		cx = props.cx,
		getStyles = props.getStyles,
		innerProps = props.innerProps;
	return jsx(
		"div",
		_extends$2(
			{
				css: getStyles("dropdownIndicator", props),
				className: cx(
					{
						indicator: true,
						"dropdown-indicator": true,
					},
					className
				),
			},
			innerProps
		),
		children || jsx(DownChevron, null)
	);
};
var clearIndicatorCSS = baseCSS;
var ClearIndicator = function ClearIndicator(props) {
	var children = props.children,
		className = props.className,
		cx = props.cx,
		getStyles = props.getStyles,
		innerProps = props.innerProps;
	return jsx(
		"div",
		_extends$2(
			{
				css: getStyles("clearIndicator", props),
				className: cx(
					{
						indicator: true,
						"clear-indicator": true,
					},
					className
				),
			},
			innerProps
		),
		children || jsx(CrossIcon, null)
	);
}; // ==============================
// Separator
// ==============================

var indicatorSeparatorCSS = function indicatorSeparatorCSS(_ref4) {
	var isDisabled = _ref4.isDisabled,
		_ref4$theme = _ref4.theme,
		baseUnit = _ref4$theme.spacing.baseUnit,
		colors = _ref4$theme.colors;
	return {
		label: "indicatorSeparator",
		alignSelf: "stretch",
		backgroundColor: isDisabled ? colors.neutral10 : colors.neutral20,
		marginBottom: baseUnit * 2,
		marginTop: baseUnit * 2,
		width: 1,
	};
};
var IndicatorSeparator = function IndicatorSeparator(props) {
	var className = props.className,
		cx = props.cx,
		getStyles = props.getStyles,
		innerProps = props.innerProps;
	return jsx(
		"span",
		_extends$2({}, innerProps, {
			css: getStyles("indicatorSeparator", props),
			className: cx(
				{
					"indicator-separator": true,
				},
				className
			),
		})
	);
}; // ==============================
// Loading
// ==============================

var loadingDotAnimations = keyframes(
	_templateObject ||
		(_templateObject = _taggedTemplateLiteral([
			"\n  0%, 80%, 100% { opacity: 0; }\n  40% { opacity: 1; }\n",
		]))
);
var loadingIndicatorCSS = function loadingIndicatorCSS(_ref5) {
	var isFocused = _ref5.isFocused,
		size = _ref5.size,
		_ref5$theme = _ref5.theme,
		colors = _ref5$theme.colors,
		baseUnit = _ref5$theme.spacing.baseUnit;
	return {
		label: "loadingIndicator",
		color: isFocused ? colors.neutral60 : colors.neutral20,
		display: "flex",
		padding: baseUnit * 2,
		transition: "color 150ms",
		alignSelf: "center",
		fontSize: size,
		lineHeight: 1,
		marginRight: size,
		textAlign: "center",
		verticalAlign: "middle",
	};
};

var LoadingDot = function LoadingDot(_ref6) {
	var delay = _ref6.delay,
		offset = _ref6.offset;
	return jsx("span", {
		css: /*#__PURE__*/ css$2(
			{
				animation: ""
					.concat(loadingDotAnimations, " 1s ease-in-out ")
					.concat(delay, "ms infinite;"),
				backgroundColor: "currentColor",
				borderRadius: "1em",
				display: "inline-block",
				marginLeft: offset ? "1em" : null,
				height: "1em",
				verticalAlign: "top",
				width: "1em",
			},
			process.env.NODE_ENV === "production" ? "" : ";label:LoadingDot;",
			process.env.NODE_ENV === "production"
				? ""
				: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"
		),
	});
};

var LoadingIndicator = function LoadingIndicator(props) {
	var className = props.className,
		cx = props.cx,
		getStyles = props.getStyles,
		innerProps = props.innerProps,
		isRtl = props.isRtl;
	return jsx(
		"div",
		_extends$2(
			{
				css: getStyles("loadingIndicator", props),
				className: cx(
					{
						indicator: true,
						"loading-indicator": true,
					},
					className
				),
			},
			innerProps
		),
		jsx(LoadingDot, {
			delay: 0,
			offset: isRtl,
		}),
		jsx(LoadingDot, {
			delay: 160,
			offset: true,
		}),
		jsx(LoadingDot, {
			delay: 320,
			offset: !isRtl,
		})
	);
};
LoadingIndicator.defaultProps = {
	size: 4,
};

var css = function css(_ref) {
	var isDisabled = _ref.isDisabled,
		isFocused = _ref.isFocused,
		_ref$theme = _ref.theme,
		colors = _ref$theme.colors,
		borderRadius = _ref$theme.borderRadius,
		spacing = _ref$theme.spacing;
	return {
		label: "control",
		alignItems: "center",
		backgroundColor: isDisabled ? colors.neutral5 : colors.neutral0,
		borderColor: isDisabled
			? colors.neutral10
			: isFocused
			? colors.primary
			: colors.neutral20,
		borderRadius: borderRadius,
		borderStyle: "solid",
		borderWidth: 1,
		boxShadow: isFocused ? "0 0 0 1px ".concat(colors.primary) : null,
		cursor: "default",
		display: "flex",
		flexWrap: "wrap",
		justifyContent: "space-between",
		minHeight: spacing.controlHeight,
		outline: "0 !important",
		position: "relative",
		transition: "all 100ms",
		"&:hover": {
			borderColor: isFocused ? colors.primary : colors.neutral30,
		},
	};
};

var Control = function Control(props) {
	var children = props.children,
		cx = props.cx,
		getStyles = props.getStyles,
		className = props.className,
		isDisabled = props.isDisabled,
		isFocused = props.isFocused,
		innerRef = props.innerRef,
		innerProps = props.innerProps,
		menuIsOpen = props.menuIsOpen;
	return jsx(
		"div",
		_extends$2(
			{
				ref: innerRef,
				css: getStyles("control", props),
				className: cx(
					{
						control: true,
						"control--is-disabled": isDisabled,
						"control--is-focused": isFocused,
						"control--menu-is-open": menuIsOpen,
					},
					className
				),
			},
			innerProps
		),
		children
	);
};

var groupCSS = function groupCSS(_ref) {
	var spacing = _ref.theme.spacing;
	return {
		paddingBottom: spacing.baseUnit * 2,
		paddingTop: spacing.baseUnit * 2,
	};
};

var Group = function Group(props) {
	var children = props.children,
		className = props.className,
		cx = props.cx,
		getStyles = props.getStyles,
		Heading = props.Heading,
		headingProps = props.headingProps,
		innerProps = props.innerProps,
		label = props.label,
		theme = props.theme,
		selectProps = props.selectProps;
	return jsx(
		"div",
		_extends$2(
			{
				css: getStyles("group", props),
				className: cx(
					{
						group: true,
					},
					className
				),
			},
			innerProps
		),
		jsx(
			Heading,
			_extends$2({}, headingProps, {
				selectProps: selectProps,
				theme: theme,
				getStyles: getStyles,
				cx: cx,
			}),
			label
		),
		jsx("div", null, children)
	);
};

var groupHeadingCSS = function groupHeadingCSS(_ref2) {
	var spacing = _ref2.theme.spacing;
	return {
		label: "group",
		color: "#999",
		cursor: "default",
		display: "block",
		fontSize: "75%",
		fontWeight: "500",
		marginBottom: "0.25em",
		paddingLeft: spacing.baseUnit * 3,
		paddingRight: spacing.baseUnit * 3,
		textTransform: "uppercase",
	};
};
var GroupHeading = function GroupHeading(props) {
	var getStyles = props.getStyles,
		cx = props.cx,
		className = props.className;

	var _cleanCommonProps = cleanCommonProps(props);
	_cleanCommonProps.data;
	var innerProps = _objectWithoutProperties$1(_cleanCommonProps, ["data"]);

	return jsx(
		"div",
		_extends$2(
			{
				css: getStyles("groupHeading", props),
				className: cx(
					{
						"group-heading": true,
					},
					className
				),
			},
			innerProps
		)
	);
};

var inputCSS = function inputCSS(_ref) {
	var isDisabled = _ref.isDisabled,
		_ref$theme = _ref.theme,
		spacing = _ref$theme.spacing,
		colors = _ref$theme.colors;
	return {
		margin: spacing.baseUnit / 2,
		paddingBottom: spacing.baseUnit / 2,
		paddingTop: spacing.baseUnit / 2,
		visibility: isDisabled ? "hidden" : "visible",
		color: colors.neutral80,
	};
};

var inputStyle = function inputStyle(isHidden) {
	return {
		label: "input",
		background: 0,
		border: 0,
		fontSize: "inherit",
		opacity: isHidden ? 0 : 1,
		outline: 0,
		padding: 0,
		color: "inherit",
	};
};

var Input$2 = function Input(props) {
	var className = props.className,
		cx = props.cx,
		getStyles = props.getStyles;

	var _cleanCommonProps = cleanCommonProps(props),
		innerRef = _cleanCommonProps.innerRef,
		isDisabled = _cleanCommonProps.isDisabled,
		isHidden = _cleanCommonProps.isHidden,
		innerProps = _objectWithoutProperties$1(_cleanCommonProps, [
			"innerRef",
			"isDisabled",
			"isHidden",
		]);

	return jsx(
		"div",
		{
			css: getStyles("input", props),
		},
		jsx(
			_default$1,
			_extends$2(
				{
					className: cx(
						{
							input: true,
						},
						className
					),
					inputRef: innerRef,
					inputStyle: inputStyle(isHidden),
					disabled: isDisabled,
				},
				innerProps
			)
		)
	);
};

var multiValueCSS = function multiValueCSS(_ref) {
	var _ref$theme = _ref.theme,
		spacing = _ref$theme.spacing,
		borderRadius = _ref$theme.borderRadius,
		colors = _ref$theme.colors;
	return {
		label: "multiValue",
		backgroundColor: colors.neutral10,
		borderRadius: borderRadius / 2,
		display: "flex",
		margin: spacing.baseUnit / 2,
		minWidth: 0, // resolves flex/text-overflow bug
	};
};
var multiValueLabelCSS = function multiValueLabelCSS(_ref2) {
	var _ref2$theme = _ref2.theme,
		borderRadius = _ref2$theme.borderRadius,
		colors = _ref2$theme.colors,
		cropWithEllipsis = _ref2.cropWithEllipsis;
	return {
		borderRadius: borderRadius / 2,
		color: colors.neutral80,
		fontSize: "85%",
		overflow: "hidden",
		padding: 3,
		paddingLeft: 6,
		textOverflow: cropWithEllipsis ? "ellipsis" : null,
		whiteSpace: "nowrap",
	};
};
var multiValueRemoveCSS = function multiValueRemoveCSS(_ref3) {
	var _ref3$theme = _ref3.theme,
		spacing = _ref3$theme.spacing,
		borderRadius = _ref3$theme.borderRadius,
		colors = _ref3$theme.colors,
		isFocused = _ref3.isFocused;
	return {
		alignItems: "center",
		borderRadius: borderRadius / 2,
		backgroundColor: isFocused && colors.dangerLight,
		display: "flex",
		paddingLeft: spacing.baseUnit,
		paddingRight: spacing.baseUnit,
		":hover": {
			backgroundColor: colors.dangerLight,
			color: colors.danger,
		},
	};
};
var MultiValueGeneric = function MultiValueGeneric(_ref4) {
	var children = _ref4.children,
		innerProps = _ref4.innerProps;
	return jsx("div", innerProps, children);
};
var MultiValueContainer = MultiValueGeneric;
var MultiValueLabel = MultiValueGeneric;
function MultiValueRemove(_ref5) {
	var children = _ref5.children,
		innerProps = _ref5.innerProps;
	return jsx(
		"div",
		innerProps,
		children ||
			jsx(CrossIcon, {
				size: 14,
			})
	);
}

var MultiValue = function MultiValue(props) {
	var children = props.children,
		className = props.className,
		components = props.components,
		cx = props.cx,
		data = props.data,
		getStyles = props.getStyles,
		innerProps = props.innerProps,
		isDisabled = props.isDisabled,
		removeProps = props.removeProps,
		selectProps = props.selectProps;
	var Container = components.Container,
		Label = components.Label,
		Remove = components.Remove;
	return jsx(ClassNames, null, function (_ref6) {
		var css = _ref6.css,
			emotionCx = _ref6.cx;
		return jsx(
			Container,
			{
				data: data,
				innerProps: _objectSpread2(
					{
						className: emotionCx(
							css(getStyles("multiValue", props)),
							cx(
								{
									"multi-value": true,
									"multi-value--is-disabled": isDisabled,
								},
								className
							)
						),
					},
					innerProps
				),
				selectProps: selectProps,
			},
			jsx(
				Label,
				{
					data: data,
					innerProps: {
						className: emotionCx(
							css(getStyles("multiValueLabel", props)),
							cx(
								{
									"multi-value__label": true,
								},
								className
							)
						),
					},
					selectProps: selectProps,
				},
				children
			),
			jsx(Remove, {
				data: data,
				innerProps: _objectSpread2(
					{
						className: emotionCx(
							css(getStyles("multiValueRemove", props)),
							cx(
								{
									"multi-value__remove": true,
								},
								className
							)
						),
					},
					removeProps
				),
				selectProps: selectProps,
			})
		);
	});
};

MultiValue.defaultProps = {
	cropWithEllipsis: true,
};

var optionCSS = function optionCSS(_ref) {
	var isDisabled = _ref.isDisabled,
		isFocused = _ref.isFocused,
		isSelected = _ref.isSelected,
		_ref$theme = _ref.theme,
		spacing = _ref$theme.spacing,
		colors = _ref$theme.colors;
	return {
		label: "option",
		backgroundColor: isSelected
			? colors.primary
			: isFocused
			? colors.primary25
			: "transparent",
		color: isDisabled
			? colors.neutral20
			: isSelected
			? colors.neutral0
			: "inherit",
		cursor: "default",
		display: "block",
		fontSize: "inherit",
		padding: ""
			.concat(spacing.baseUnit * 2, "px ")
			.concat(spacing.baseUnit * 3, "px"),
		width: "100%",
		userSelect: "none",
		WebkitTapHighlightColor: "rgba(0, 0, 0, 0)",
		// provide some affordance on touch devices
		":active": {
			backgroundColor:
				!isDisabled && (isSelected ? colors.primary : colors.primary50),
		},
	};
};

var Option = function Option(props) {
	var children = props.children,
		className = props.className,
		cx = props.cx,
		getStyles = props.getStyles,
		isDisabled = props.isDisabled,
		isFocused = props.isFocused,
		isSelected = props.isSelected,
		innerRef = props.innerRef,
		innerProps = props.innerProps;
	return jsx(
		"div",
		_extends$2(
			{
				css: getStyles("option", props),
				className: cx(
					{
						option: true,
						"option--is-disabled": isDisabled,
						"option--is-focused": isFocused,
						"option--is-selected": isSelected,
					},
					className
				),
				ref: innerRef,
			},
			innerProps
		),
		children
	);
};

var placeholderCSS = function placeholderCSS(_ref) {
	var _ref$theme = _ref.theme,
		spacing = _ref$theme.spacing,
		colors = _ref$theme.colors;
	return {
		label: "placeholder",
		color: colors.neutral50,
		marginLeft: spacing.baseUnit / 2,
		marginRight: spacing.baseUnit / 2,
		position: "absolute",
		top: "50%",
		transform: "translateY(-50%)",
	};
};

var Placeholder = function Placeholder(props) {
	var children = props.children,
		className = props.className,
		cx = props.cx,
		getStyles = props.getStyles,
		innerProps = props.innerProps;
	return jsx(
		"div",
		_extends$2(
			{
				css: getStyles("placeholder", props),
				className: cx(
					{
						placeholder: true,
					},
					className
				),
			},
			innerProps
		),
		children
	);
};

var css$1 = function css(_ref) {
	var isDisabled = _ref.isDisabled,
		_ref$theme = _ref.theme,
		spacing = _ref$theme.spacing,
		colors = _ref$theme.colors;
	return {
		label: "singleValue",
		color: isDisabled ? colors.neutral40 : colors.neutral80,
		marginLeft: spacing.baseUnit / 2,
		marginRight: spacing.baseUnit / 2,
		maxWidth: "calc(100% - ".concat(spacing.baseUnit * 2, "px)"),
		overflow: "hidden",
		position: "absolute",
		textOverflow: "ellipsis",
		whiteSpace: "nowrap",
		top: "50%",
		transform: "translateY(-50%)",
	};
};

var SingleValue = function SingleValue(props) {
	var children = props.children,
		className = props.className,
		cx = props.cx,
		getStyles = props.getStyles,
		isDisabled = props.isDisabled,
		innerProps = props.innerProps;
	return jsx(
		"div",
		_extends$2(
			{
				css: getStyles("singleValue", props),
				className: cx(
					{
						"single-value": true,
						"single-value--is-disabled": isDisabled,
					},
					className
				),
			},
			innerProps
		),
		children
	);
};

var components = {
	ClearIndicator: ClearIndicator,
	Control: Control,
	DropdownIndicator: DropdownIndicator,
	DownChevron: DownChevron,
	CrossIcon: CrossIcon,
	Group: Group,
	GroupHeading: GroupHeading,
	IndicatorsContainer: IndicatorsContainer,
	IndicatorSeparator: IndicatorSeparator,
	Input: Input$2,
	LoadingIndicator: LoadingIndicator,
	Menu: Menu,
	MenuList: MenuList,
	MenuPortal: MenuPortal,
	LoadingMessage: LoadingMessage,
	NoOptionsMessage: NoOptionsMessage,
	MultiValue: MultiValue,
	MultiValueContainer: MultiValueContainer,
	MultiValueLabel: MultiValueLabel,
	MultiValueRemove: MultiValueRemove,
	Option: Option,
	Placeholder: Placeholder,
	SelectContainer: SelectContainer,
	SingleValue: SingleValue,
	ValueContainer: ValueContainer,
};
var defaultComponents = function defaultComponents(props) {
	return _objectSpread2(_objectSpread2({}, components), props.components);
};

var safeIsNaN =
	Number.isNaN ||
	function ponyfill(value) {
		return typeof value === "number" && value !== value;
	};
function isEqual(first, second) {
	if (first === second) {
		return true;
	}
	if (safeIsNaN(first) && safeIsNaN(second)) {
		return true;
	}
	return false;
}
function areInputsEqual(newInputs, lastInputs) {
	if (newInputs.length !== lastInputs.length) {
		return false;
	}
	for (var i = 0; i < newInputs.length; i++) {
		if (!isEqual(newInputs[i], lastInputs[i])) {
			return false;
		}
	}
	return true;
}

function memoizeOne(resultFn, isEqual) {
	if (isEqual === void 0) {
		isEqual = areInputsEqual;
	}
	var lastThis;
	var lastArgs = [];
	var lastResult;
	var calledOnce = false;
	function memoized() {
		var newArgs = [];
		for (var _i = 0; _i < arguments.length; _i++) {
			newArgs[_i] = arguments[_i];
		}
		if (calledOnce && lastThis === this && isEqual(newArgs, lastArgs)) {
			return lastResult;
		}
		lastResult = resultFn.apply(this, newArgs);
		calledOnce = true;
		lastThis = this;
		lastArgs = newArgs;
		return lastResult;
	}
	return memoized;
}

function _EMOTION_STRINGIFIED_CSS_ERROR__() {
	return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).";
}

var _ref =
	process.env.NODE_ENV === "production"
		? {
				name: "7pg0cj-a11yText",
				styles: "label:a11yText;z-index:9999;border:0;clip:rect(1px, 1px, 1px, 1px);height:1px;width:1px;position:absolute;overflow:hidden;padding:0;white-space:nowrap",
		  }
		: {
				name: "1f43avz-a11yText-A11yText",
				styles: "label:a11yText;z-index:9999;border:0;clip:rect(1px, 1px, 1px, 1px);height:1px;width:1px;position:absolute;overflow:hidden;padding:0;white-space:nowrap;label:A11yText;",
				map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkExMXlUZXh0LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQVFJIiwiZmlsZSI6IkExMXlUZXh0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQGZsb3dcbi8qKiBAanN4IGpzeCAqL1xuaW1wb3J0IHsgdHlwZSBFbGVtZW50Q29uZmlnIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsganN4IH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuXG4vLyBBc3Npc3RpdmUgdGV4dCB0byBkZXNjcmliZSB2aXN1YWwgZWxlbWVudHMuIEhpZGRlbiBmb3Igc2lnaHRlZCB1c2Vycy5cbmNvbnN0IEExMXlUZXh0ID0gKHByb3BzOiBFbGVtZW50Q29uZmlnPCdzcGFuJz4pID0+IChcbiAgPHNwYW5cbiAgICBjc3M9e3tcbiAgICAgIGxhYmVsOiAnYTExeVRleHQnLFxuICAgICAgekluZGV4OiA5OTk5LFxuICAgICAgYm9yZGVyOiAwLFxuICAgICAgY2xpcDogJ3JlY3QoMXB4LCAxcHgsIDFweCwgMXB4KScsXG4gICAgICBoZWlnaHQ6IDEsXG4gICAgICB3aWR0aDogMSxcbiAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgICAgb3ZlcmZsb3c6ICdoaWRkZW4nLFxuICAgICAgcGFkZGluZzogMCxcbiAgICAgIHdoaXRlU3BhY2U6ICdub3dyYXAnLFxuICAgIH19XG4gICAgey4uLnByb3BzfVxuICAvPlxuKTtcblxuZXhwb3J0IGRlZmF1bHQgQTExeVRleHQ7XG4iXX0= */",
				toString: _EMOTION_STRINGIFIED_CSS_ERROR__,
		  };

var A11yText = function A11yText(props) {
	return jsx(
		"span",
		_extends$2(
			{
				css: _ref,
			},
			props
		)
	);
};

var defaultAriaLiveMessages = {
	guidance: function guidance(props) {
		var isSearchable = props.isSearchable,
			isMulti = props.isMulti,
			isDisabled = props.isDisabled,
			tabSelectsValue = props.tabSelectsValue,
			context = props.context;

		switch (context) {
			case "menu":
				return "Use Up and Down to choose options"
					.concat(
						isDisabled
							? ""
							: ", press Enter to select the currently focused option",
						", press Escape to exit the menu"
					)
					.concat(
						tabSelectsValue
							? ", press Tab to select the option and exit the menu"
							: "",
						"."
					);

			case "input":
				return ""
					.concat(props["aria-label"] || "Select", " is focused ")
					.concat(
						isSearchable ? ",type to refine list" : "",
						", press Down to open the menu, "
					)
					.concat(
						isMulti ? " press left to focus selected values" : ""
					);

			case "value":
				return "Use left and right to toggle between focused values, press Backspace to remove the currently focused value";

			default:
				return "";
		}
	},
	onChange: function onChange(props) {
		var action = props.action,
			_props$label = props.label,
			label = _props$label === void 0 ? "" : _props$label,
			isDisabled = props.isDisabled;

		switch (action) {
			case "deselect-option":
			case "pop-value":
			case "remove-value":
				return "option ".concat(label, ", deselected.");

			case "select-option":
				return isDisabled
					? "option ".concat(
							label,
							" is disabled. Select another option."
					  )
					: "option ".concat(label, ", selected.");

			default:
				return "";
		}
	},
	onFocus: function onFocus(props) {
		var context = props.context,
			_props$focused = props.focused,
			focused = _props$focused === void 0 ? {} : _props$focused,
			options = props.options,
			_props$label2 = props.label,
			label = _props$label2 === void 0 ? "" : _props$label2,
			selectValue = props.selectValue,
			isDisabled = props.isDisabled,
			isSelected = props.isSelected;

		var getArrayIndex = function getArrayIndex(arr, item) {
			return arr && arr.length
				? "".concat(arr.indexOf(item) + 1, " of ").concat(arr.length)
				: "";
		};

		if (context === "value" && selectValue) {
			return "value "
				.concat(label, " focused, ")
				.concat(getArrayIndex(selectValue, focused), ".");
		}

		if (context === "menu") {
			var disabled = isDisabled ? " disabled" : "";
			var status = ""
				.concat(isSelected ? "selected" : "focused")
				.concat(disabled);
			return "option "
				.concat(label, " ")
				.concat(status, ", ")
				.concat(getArrayIndex(options, focused), ".");
		}

		return "";
	},
	onFilter: function onFilter(props) {
		var inputValue = props.inputValue,
			resultsMessage = props.resultsMessage;
		return ""
			.concat(resultsMessage)
			.concat(inputValue ? " for search term " + inputValue : "", ".");
	},
};

var LiveRegion = function LiveRegion(props) {
	var ariaSelection = props.ariaSelection,
		focusedOption = props.focusedOption,
		focusedValue = props.focusedValue,
		focusableOptions = props.focusableOptions,
		isFocused = props.isFocused,
		selectValue = props.selectValue,
		selectProps = props.selectProps;
	var ariaLiveMessages = selectProps.ariaLiveMessages,
		getOptionLabel = selectProps.getOptionLabel,
		inputValue = selectProps.inputValue,
		isMulti = selectProps.isMulti,
		isOptionDisabled = selectProps.isOptionDisabled,
		isSearchable = selectProps.isSearchable,
		menuIsOpen = selectProps.menuIsOpen,
		options = selectProps.options,
		screenReaderStatus = selectProps.screenReaderStatus,
		tabSelectsValue = selectProps.tabSelectsValue;
	var ariaLabel = selectProps["aria-label"];
	var ariaLive = selectProps["aria-live"]; // Update aria live message configuration when prop changes

	var messages = useMemo(
		function () {
			return _objectSpread2(
				_objectSpread2({}, defaultAriaLiveMessages),
				ariaLiveMessages || {}
			);
		},
		[ariaLiveMessages]
	); // Update aria live selected option when prop changes

	var ariaSelected = useMemo(
		function () {
			var message = "";

			if (ariaSelection && messages.onChange) {
				var option = ariaSelection.option,
					removedValue = ariaSelection.removedValue,
					value = ariaSelection.value; // select-option when !isMulti does not return option so we assume selected option is value

				var asOption = function asOption(val) {
					return !Array.isArray(val) ? val : null;
				};

				var selected = removedValue || option || asOption(value);

				var onChangeProps = _objectSpread2(
					{
						isDisabled: selected && isOptionDisabled(selected),
						label: selected ? getOptionLabel(selected) : "",
					},
					ariaSelection
				);

				message = messages.onChange(onChangeProps);
			}

			return message;
		},
		[ariaSelection, isOptionDisabled, getOptionLabel, messages]
	);
	var ariaFocused = useMemo(
		function () {
			var focusMsg = "";
			var focused = focusedOption || focusedValue;
			var isSelected = !!(
				focusedOption &&
				selectValue &&
				selectValue.includes(focusedOption)
			);

			if (focused && messages.onFocus) {
				var onFocusProps = {
					focused: focused,
					label: getOptionLabel(focused),
					isDisabled: isOptionDisabled(focused),
					isSelected: isSelected,
					options: options,
					context: focused === focusedOption ? "menu" : "value",
					selectValue: selectValue,
				};
				focusMsg = messages.onFocus(onFocusProps);
			}

			return focusMsg;
		},
		[
			focusedOption,
			focusedValue,
			getOptionLabel,
			isOptionDisabled,
			messages,
			options,
			selectValue,
		]
	);
	var ariaResults = useMemo(
		function () {
			var resultsMsg = "";

			if (menuIsOpen && options.length && messages.onFilter) {
				var resultsMessage = screenReaderStatus({
					count: focusableOptions.length,
				});
				resultsMsg = messages.onFilter({
					inputValue: inputValue,
					resultsMessage: resultsMessage,
				});
			}

			return resultsMsg;
		},
		[
			focusableOptions,
			inputValue,
			menuIsOpen,
			messages,
			options,
			screenReaderStatus,
		]
	);
	var ariaGuidance = useMemo(
		function () {
			var guidanceMsg = "";

			if (messages.guidance) {
				var context = focusedValue
					? "value"
					: menuIsOpen
					? "menu"
					: "input";
				guidanceMsg = messages.guidance({
					"aria-label": ariaLabel,
					context: context,
					isDisabled:
						focusedOption && isOptionDisabled(focusedOption),
					isMulti: isMulti,
					isSearchable: isSearchable,
					tabSelectsValue: tabSelectsValue,
				});
			}

			return guidanceMsg;
		},
		[
			ariaLabel,
			focusedOption,
			focusedValue,
			isMulti,
			isOptionDisabled,
			isSearchable,
			menuIsOpen,
			messages,
			tabSelectsValue,
		]
	);
	var ariaContext = ""
		.concat(ariaFocused, " ")
		.concat(ariaResults, " ")
		.concat(ariaGuidance);
	return jsx(
		A11yText,
		{
			"aria-live": ariaLive,
			"aria-atomic": "false",
			"aria-relevant": "additions text",
		},
		isFocused &&
			jsx(
				React.Fragment,
				null,
				jsx(
					"span",
					{
						id: "aria-selection",
					},
					ariaSelected
				),
				jsx(
					"span",
					{
						id: "aria-context",
					},
					ariaContext
				)
			)
	);
};

var diacritics = [
	{
		base: "A",
		letters:
			"A\u24B6\uFF21\xC0\xC1\xC2\u1EA6\u1EA4\u1EAA\u1EA8\xC3\u0100\u0102\u1EB0\u1EAE\u1EB4\u1EB2\u0226\u01E0\xC4\u01DE\u1EA2\xC5\u01FA\u01CD\u0200\u0202\u1EA0\u1EAC\u1EB6\u1E00\u0104\u023A\u2C6F",
	},
	{
		base: "AA",
		letters: "\uA732",
	},
	{
		base: "AE",
		letters: "\xC6\u01FC\u01E2",
	},
	{
		base: "AO",
		letters: "\uA734",
	},
	{
		base: "AU",
		letters: "\uA736",
	},
	{
		base: "AV",
		letters: "\uA738\uA73A",
	},
	{
		base: "AY",
		letters: "\uA73C",
	},
	{
		base: "B",
		letters: "B\u24B7\uFF22\u1E02\u1E04\u1E06\u0243\u0182\u0181",
	},
	{
		base: "C",
		letters:
			"C\u24B8\uFF23\u0106\u0108\u010A\u010C\xC7\u1E08\u0187\u023B\uA73E",
	},
	{
		base: "D",
		letters:
			"D\u24B9\uFF24\u1E0A\u010E\u1E0C\u1E10\u1E12\u1E0E\u0110\u018B\u018A\u0189\uA779",
	},
	{
		base: "DZ",
		letters: "\u01F1\u01C4",
	},
	{
		base: "Dz",
		letters: "\u01F2\u01C5",
	},
	{
		base: "E",
		letters:
			"E\u24BA\uFF25\xC8\xC9\xCA\u1EC0\u1EBE\u1EC4\u1EC2\u1EBC\u0112\u1E14\u1E16\u0114\u0116\xCB\u1EBA\u011A\u0204\u0206\u1EB8\u1EC6\u0228\u1E1C\u0118\u1E18\u1E1A\u0190\u018E",
	},
	{
		base: "F",
		letters: "F\u24BB\uFF26\u1E1E\u0191\uA77B",
	},
	{
		base: "G",
		letters:
			"G\u24BC\uFF27\u01F4\u011C\u1E20\u011E\u0120\u01E6\u0122\u01E4\u0193\uA7A0\uA77D\uA77E",
	},
	{
		base: "H",
		letters:
			"H\u24BD\uFF28\u0124\u1E22\u1E26\u021E\u1E24\u1E28\u1E2A\u0126\u2C67\u2C75\uA78D",
	},
	{
		base: "I",
		letters:
			"I\u24BE\uFF29\xCC\xCD\xCE\u0128\u012A\u012C\u0130\xCF\u1E2E\u1EC8\u01CF\u0208\u020A\u1ECA\u012E\u1E2C\u0197",
	},
	{
		base: "J",
		letters: "J\u24BF\uFF2A\u0134\u0248",
	},
	{
		base: "K",
		letters:
			"K\u24C0\uFF2B\u1E30\u01E8\u1E32\u0136\u1E34\u0198\u2C69\uA740\uA742\uA744\uA7A2",
	},
	{
		base: "L",
		letters:
			"L\u24C1\uFF2C\u013F\u0139\u013D\u1E36\u1E38\u013B\u1E3C\u1E3A\u0141\u023D\u2C62\u2C60\uA748\uA746\uA780",
	},
	{
		base: "LJ",
		letters: "\u01C7",
	},
	{
		base: "Lj",
		letters: "\u01C8",
	},
	{
		base: "M",
		letters: "M\u24C2\uFF2D\u1E3E\u1E40\u1E42\u2C6E\u019C",
	},
	{
		base: "N",
		letters:
			"N\u24C3\uFF2E\u01F8\u0143\xD1\u1E44\u0147\u1E46\u0145\u1E4A\u1E48\u0220\u019D\uA790\uA7A4",
	},
	{
		base: "NJ",
		letters: "\u01CA",
	},
	{
		base: "Nj",
		letters: "\u01CB",
	},
	{
		base: "O",
		letters:
			"O\u24C4\uFF2F\xD2\xD3\xD4\u1ED2\u1ED0\u1ED6\u1ED4\xD5\u1E4C\u022C\u1E4E\u014C\u1E50\u1E52\u014E\u022E\u0230\xD6\u022A\u1ECE\u0150\u01D1\u020C\u020E\u01A0\u1EDC\u1EDA\u1EE0\u1EDE\u1EE2\u1ECC\u1ED8\u01EA\u01EC\xD8\u01FE\u0186\u019F\uA74A\uA74C",
	},
	{
		base: "OI",
		letters: "\u01A2",
	},
	{
		base: "OO",
		letters: "\uA74E",
	},
	{
		base: "OU",
		letters: "\u0222",
	},
	{
		base: "P",
		letters: "P\u24C5\uFF30\u1E54\u1E56\u01A4\u2C63\uA750\uA752\uA754",
	},
	{
		base: "Q",
		letters: "Q\u24C6\uFF31\uA756\uA758\u024A",
	},
	{
		base: "R",
		letters:
			"R\u24C7\uFF32\u0154\u1E58\u0158\u0210\u0212\u1E5A\u1E5C\u0156\u1E5E\u024C\u2C64\uA75A\uA7A6\uA782",
	},
	{
		base: "S",
		letters:
			"S\u24C8\uFF33\u1E9E\u015A\u1E64\u015C\u1E60\u0160\u1E66\u1E62\u1E68\u0218\u015E\u2C7E\uA7A8\uA784",
	},
	{
		base: "T",
		letters:
			"T\u24C9\uFF34\u1E6A\u0164\u1E6C\u021A\u0162\u1E70\u1E6E\u0166\u01AC\u01AE\u023E\uA786",
	},
	{
		base: "TZ",
		letters: "\uA728",
	},
	{
		base: "U",
		letters:
			"U\u24CA\uFF35\xD9\xDA\xDB\u0168\u1E78\u016A\u1E7A\u016C\xDC\u01DB\u01D7\u01D5\u01D9\u1EE6\u016E\u0170\u01D3\u0214\u0216\u01AF\u1EEA\u1EE8\u1EEE\u1EEC\u1EF0\u1EE4\u1E72\u0172\u1E76\u1E74\u0244",
	},
	{
		base: "V",
		letters: "V\u24CB\uFF36\u1E7C\u1E7E\u01B2\uA75E\u0245",
	},
	{
		base: "VY",
		letters: "\uA760",
	},
	{
		base: "W",
		letters: "W\u24CC\uFF37\u1E80\u1E82\u0174\u1E86\u1E84\u1E88\u2C72",
	},
	{
		base: "X",
		letters: "X\u24CD\uFF38\u1E8A\u1E8C",
	},
	{
		base: "Y",
		letters:
			"Y\u24CE\uFF39\u1EF2\xDD\u0176\u1EF8\u0232\u1E8E\u0178\u1EF6\u1EF4\u01B3\u024E\u1EFE",
	},
	{
		base: "Z",
		letters:
			"Z\u24CF\uFF3A\u0179\u1E90\u017B\u017D\u1E92\u1E94\u01B5\u0224\u2C7F\u2C6B\uA762",
	},
	{
		base: "a",
		letters:
			"a\u24D0\uFF41\u1E9A\xE0\xE1\xE2\u1EA7\u1EA5\u1EAB\u1EA9\xE3\u0101\u0103\u1EB1\u1EAF\u1EB5\u1EB3\u0227\u01E1\xE4\u01DF\u1EA3\xE5\u01FB\u01CE\u0201\u0203\u1EA1\u1EAD\u1EB7\u1E01\u0105\u2C65\u0250",
	},
	{
		base: "aa",
		letters: "\uA733",
	},
	{
		base: "ae",
		letters: "\xE6\u01FD\u01E3",
	},
	{
		base: "ao",
		letters: "\uA735",
	},
	{
		base: "au",
		letters: "\uA737",
	},
	{
		base: "av",
		letters: "\uA739\uA73B",
	},
	{
		base: "ay",
		letters: "\uA73D",
	},
	{
		base: "b",
		letters: "b\u24D1\uFF42\u1E03\u1E05\u1E07\u0180\u0183\u0253",
	},
	{
		base: "c",
		letters:
			"c\u24D2\uFF43\u0107\u0109\u010B\u010D\xE7\u1E09\u0188\u023C\uA73F\u2184",
	},
	{
		base: "d",
		letters:
			"d\u24D3\uFF44\u1E0B\u010F\u1E0D\u1E11\u1E13\u1E0F\u0111\u018C\u0256\u0257\uA77A",
	},
	{
		base: "dz",
		letters: "\u01F3\u01C6",
	},
	{
		base: "e",
		letters:
			"e\u24D4\uFF45\xE8\xE9\xEA\u1EC1\u1EBF\u1EC5\u1EC3\u1EBD\u0113\u1E15\u1E17\u0115\u0117\xEB\u1EBB\u011B\u0205\u0207\u1EB9\u1EC7\u0229\u1E1D\u0119\u1E19\u1E1B\u0247\u025B\u01DD",
	},
	{
		base: "f",
		letters: "f\u24D5\uFF46\u1E1F\u0192\uA77C",
	},
	{
		base: "g",
		letters:
			"g\u24D6\uFF47\u01F5\u011D\u1E21\u011F\u0121\u01E7\u0123\u01E5\u0260\uA7A1\u1D79\uA77F",
	},
	{
		base: "h",
		letters:
			"h\u24D7\uFF48\u0125\u1E23\u1E27\u021F\u1E25\u1E29\u1E2B\u1E96\u0127\u2C68\u2C76\u0265",
	},
	{
		base: "hv",
		letters: "\u0195",
	},
	{
		base: "i",
		letters:
			"i\u24D8\uFF49\xEC\xED\xEE\u0129\u012B\u012D\xEF\u1E2F\u1EC9\u01D0\u0209\u020B\u1ECB\u012F\u1E2D\u0268\u0131",
	},
	{
		base: "j",
		letters: "j\u24D9\uFF4A\u0135\u01F0\u0249",
	},
	{
		base: "k",
		letters:
			"k\u24DA\uFF4B\u1E31\u01E9\u1E33\u0137\u1E35\u0199\u2C6A\uA741\uA743\uA745\uA7A3",
	},
	{
		base: "l",
		letters:
			"l\u24DB\uFF4C\u0140\u013A\u013E\u1E37\u1E39\u013C\u1E3D\u1E3B\u017F\u0142\u019A\u026B\u2C61\uA749\uA781\uA747",
	},
	{
		base: "lj",
		letters: "\u01C9",
	},
	{
		base: "m",
		letters: "m\u24DC\uFF4D\u1E3F\u1E41\u1E43\u0271\u026F",
	},
	{
		base: "n",
		letters:
			"n\u24DD\uFF4E\u01F9\u0144\xF1\u1E45\u0148\u1E47\u0146\u1E4B\u1E49\u019E\u0272\u0149\uA791\uA7A5",
	},
	{
		base: "nj",
		letters: "\u01CC",
	},
	{
		base: "o",
		letters:
			"o\u24DE\uFF4F\xF2\xF3\xF4\u1ED3\u1ED1\u1ED7\u1ED5\xF5\u1E4D\u022D\u1E4F\u014D\u1E51\u1E53\u014F\u022F\u0231\xF6\u022B\u1ECF\u0151\u01D2\u020D\u020F\u01A1\u1EDD\u1EDB\u1EE1\u1EDF\u1EE3\u1ECD\u1ED9\u01EB\u01ED\xF8\u01FF\u0254\uA74B\uA74D\u0275",
	},
	{
		base: "oi",
		letters: "\u01A3",
	},
	{
		base: "ou",
		letters: "\u0223",
	},
	{
		base: "oo",
		letters: "\uA74F",
	},
	{
		base: "p",
		letters: "p\u24DF\uFF50\u1E55\u1E57\u01A5\u1D7D\uA751\uA753\uA755",
	},
	{
		base: "q",
		letters: "q\u24E0\uFF51\u024B\uA757\uA759",
	},
	{
		base: "r",
		letters:
			"r\u24E1\uFF52\u0155\u1E59\u0159\u0211\u0213\u1E5B\u1E5D\u0157\u1E5F\u024D\u027D\uA75B\uA7A7\uA783",
	},
	{
		base: "s",
		letters:
			"s\u24E2\uFF53\xDF\u015B\u1E65\u015D\u1E61\u0161\u1E67\u1E63\u1E69\u0219\u015F\u023F\uA7A9\uA785\u1E9B",
	},
	{
		base: "t",
		letters:
			"t\u24E3\uFF54\u1E6B\u1E97\u0165\u1E6D\u021B\u0163\u1E71\u1E6F\u0167\u01AD\u0288\u2C66\uA787",
	},
	{
		base: "tz",
		letters: "\uA729",
	},
	{
		base: "u",
		letters:
			"u\u24E4\uFF55\xF9\xFA\xFB\u0169\u1E79\u016B\u1E7B\u016D\xFC\u01DC\u01D8\u01D6\u01DA\u1EE7\u016F\u0171\u01D4\u0215\u0217\u01B0\u1EEB\u1EE9\u1EEF\u1EED\u1EF1\u1EE5\u1E73\u0173\u1E77\u1E75\u0289",
	},
	{
		base: "v",
		letters: "v\u24E5\uFF56\u1E7D\u1E7F\u028B\uA75F\u028C",
	},
	{
		base: "vy",
		letters: "\uA761",
	},
	{
		base: "w",
		letters:
			"w\u24E6\uFF57\u1E81\u1E83\u0175\u1E87\u1E85\u1E98\u1E89\u2C73",
	},
	{
		base: "x",
		letters: "x\u24E7\uFF58\u1E8B\u1E8D",
	},
	{
		base: "y",
		letters:
			"y\u24E8\uFF59\u1EF3\xFD\u0177\u1EF9\u0233\u1E8F\xFF\u1EF7\u1E99\u1EF5\u01B4\u024F\u1EFF",
	},
	{
		base: "z",
		letters:
			"z\u24E9\uFF5A\u017A\u1E91\u017C\u017E\u1E93\u1E95\u01B6\u0225\u0240\u2C6C\uA763",
	},
];
var anyDiacritic = new RegExp(
	"[" +
		diacritics
			.map(function (d) {
				return d.letters;
			})
			.join("") +
		"]",
	"g"
);
var diacriticToBase = {};

for (var i = 0; i < diacritics.length; i++) {
	var diacritic = diacritics[i];

	for (var j = 0; j < diacritic.letters.length; j++) {
		diacriticToBase[diacritic.letters[j]] = diacritic.base;
	}
}

var stripDiacritics = function stripDiacritics(str) {
	return str.replace(anyDiacritic, function (match) {
		return diacriticToBase[match];
	});
};

var memoizedStripDiacriticsForInput = memoizeOne(stripDiacritics);

var trimString = function trimString(str) {
	return str.replace(/^\s+|\s+$/g, "");
};

var defaultStringify = function defaultStringify(option) {
	return "".concat(option.label, " ").concat(option.value);
};

var createFilter = function createFilter(config) {
	return function (option, rawInput) {
		var _ignoreCase$ignoreAcc = _objectSpread2(
				{
					ignoreCase: true,
					ignoreAccents: true,
					stringify: defaultStringify,
					trim: true,
					matchFrom: "any",
				},
				config
			),
			ignoreCase = _ignoreCase$ignoreAcc.ignoreCase,
			ignoreAccents = _ignoreCase$ignoreAcc.ignoreAccents,
			stringify = _ignoreCase$ignoreAcc.stringify,
			trim = _ignoreCase$ignoreAcc.trim,
			matchFrom = _ignoreCase$ignoreAcc.matchFrom;

		var input = trim ? trimString(rawInput) : rawInput;
		var candidate = trim
			? trimString(stringify(option))
			: stringify(option);

		if (ignoreCase) {
			input = input.toLowerCase();
			candidate = candidate.toLowerCase();
		}

		if (ignoreAccents) {
			input = memoizedStripDiacriticsForInput(input);
			candidate = stripDiacritics(candidate);
		}

		return matchFrom === "start"
			? candidate.substr(0, input.length) === input
			: candidate.indexOf(input) > -1;
	};
};

function DummyInput(_ref) {
	_ref.in;
	_ref.out;
	_ref.onExited;
	_ref.appear;
	_ref.enter;
	_ref.exit;
	var innerRef = _ref.innerRef;
	_ref.emotion;
	var props = _objectWithoutProperties$1(_ref, [
		"in",
		"out",
		"onExited",
		"appear",
		"enter",
		"exit",
		"innerRef",
		"emotion",
	]);

	return jsx(
		"input",
		_extends$2(
			{
				ref: innerRef,
			},
			props,
			{
				css: /*#__PURE__*/ css$2(
					{
						label: "dummyInput",
						// get rid of any default styles
						background: 0,
						border: 0,
						fontSize: "inherit",
						outline: 0,
						padding: 0,
						// important! without `width` browsers won't allow focus
						width: 1,
						// remove cursor on desktop
						color: "transparent",
						// remove cursor on mobile whilst maintaining "scroll into view" behaviour
						left: -100,
						opacity: 0,
						position: "relative",
						transform: "scale(0)",
					},
					process.env.NODE_ENV === "production"
						? ""
						: ";label:DummyInput;",
					process.env.NODE_ENV === "production"
						? ""
						: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkR1bW15SW5wdXQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBbUJNIiwiZmlsZSI6IkR1bW15SW5wdXQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAZmxvd1xuLyoqIEBqc3gganN4ICovXG5pbXBvcnQgeyBqc3ggfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIER1bW15SW5wdXQoe1xuICBpbjogaW5Qcm9wLFxuICBvdXQsXG4gIG9uRXhpdGVkLFxuICBhcHBlYXIsXG4gIGVudGVyLFxuICBleGl0LFxuICBpbm5lclJlZixcbiAgZW1vdGlvbixcbiAgLi4ucHJvcHNcbn06IGFueSkge1xuICByZXR1cm4gKFxuICAgIDxpbnB1dFxuICAgICAgcmVmPXtpbm5lclJlZn1cbiAgICAgIHsuLi5wcm9wc31cbiAgICAgIGNzcz17e1xuICAgICAgICBsYWJlbDogJ2R1bW15SW5wdXQnLFxuICAgICAgICAvLyBnZXQgcmlkIG9mIGFueSBkZWZhdWx0IHN0eWxlc1xuICAgICAgICBiYWNrZ3JvdW5kOiAwLFxuICAgICAgICBib3JkZXI6IDAsXG4gICAgICAgIGZvbnRTaXplOiAnaW5oZXJpdCcsXG4gICAgICAgIG91dGxpbmU6IDAsXG4gICAgICAgIHBhZGRpbmc6IDAsXG4gICAgICAgIC8vIGltcG9ydGFudCEgd2l0aG91dCBgd2lkdGhgIGJyb3dzZXJzIHdvbid0IGFsbG93IGZvY3VzXG4gICAgICAgIHdpZHRoOiAxLFxuXG4gICAgICAgIC8vIHJlbW92ZSBjdXJzb3Igb24gZGVza3RvcFxuICAgICAgICBjb2xvcjogJ3RyYW5zcGFyZW50JyxcblxuICAgICAgICAvLyByZW1vdmUgY3Vyc29yIG9uIG1vYmlsZSB3aGlsc3QgbWFpbnRhaW5pbmcgXCJzY3JvbGwgaW50byB2aWV3XCIgYmVoYXZpb3VyXG4gICAgICAgIGxlZnQ6IC0xMDAsXG4gICAgICAgIG9wYWNpdHk6IDAsXG4gICAgICAgIHBvc2l0aW9uOiAncmVsYXRpdmUnLFxuICAgICAgICB0cmFuc2Zvcm06ICdzY2FsZSgwKScsXG4gICAgICB9fVxuICAgIC8+XG4gICk7XG59XG4iXX0= */"
				),
			}
		)
	);
}

var cancelScroll = function cancelScroll(event) {
	event.preventDefault();
	event.stopPropagation();
};

function useScrollCapture(_ref) {
	var isEnabled = _ref.isEnabled,
		onBottomArrive = _ref.onBottomArrive,
		onBottomLeave = _ref.onBottomLeave,
		onTopArrive = _ref.onTopArrive,
		onTopLeave = _ref.onTopLeave;
	var isBottom = useRef(false);
	var isTop = useRef(false);
	var touchStart = useRef(0);
	var scrollTarget = useRef(null);
	var handleEventDelta = useCallback(function (event, delta) {
		// Reference should never be `null` at this point, but flow complains otherwise
		if (scrollTarget.current === null) return;
		var _scrollTarget$current = scrollTarget.current,
			scrollTop = _scrollTarget$current.scrollTop,
			scrollHeight = _scrollTarget$current.scrollHeight,
			clientHeight = _scrollTarget$current.clientHeight;
		var target = scrollTarget.current;
		var isDeltaPositive = delta > 0;
		var availableScroll = scrollHeight - clientHeight - scrollTop;
		var shouldCancelScroll = false; // reset bottom/top flags

		if (availableScroll > delta && isBottom.current) {
			if (onBottomLeave) onBottomLeave(event);
			isBottom.current = false;
		}

		if (isDeltaPositive && isTop.current) {
			if (onTopLeave) onTopLeave(event);
			isTop.current = false;
		} // bottom limit

		if (isDeltaPositive && delta > availableScroll) {
			if (onBottomArrive && !isBottom.current) {
				onBottomArrive(event);
			}

			target.scrollTop = scrollHeight;
			shouldCancelScroll = true;
			isBottom.current = true; // top limit
		} else if (!isDeltaPositive && -delta > scrollTop) {
			if (onTopArrive && !isTop.current) {
				onTopArrive(event);
			}

			target.scrollTop = 0;
			shouldCancelScroll = true;
			isTop.current = true;
		} // cancel scroll

		if (shouldCancelScroll) {
			cancelScroll(event);
		}
	}, []);
	var onWheel = useCallback(
		function (event) {
			handleEventDelta(event, event.deltaY);
		},
		[handleEventDelta]
	);
	var onTouchStart = useCallback(function (event) {
		// set touch start so we can calculate touchmove delta
		touchStart.current = event.changedTouches[0].clientY;
	}, []);
	var onTouchMove = useCallback(
		function (event) {
			var deltaY = touchStart.current - event.changedTouches[0].clientY;
			handleEventDelta(event, deltaY);
		},
		[handleEventDelta]
	);
	var startListening = useCallback(
		function (el) {
			// bail early if no element is available to attach to
			if (!el) return;
			var notPassive = supportsPassiveEvents
				? {
						passive: false,
				  }
				: false; // all the if statements are to appease Flow 😢

			if (typeof el.addEventListener === "function") {
				el.addEventListener("wheel", onWheel, notPassive);
			}

			if (typeof el.addEventListener === "function") {
				el.addEventListener("touchstart", onTouchStart, notPassive);
			}

			if (typeof el.addEventListener === "function") {
				el.addEventListener("touchmove", onTouchMove, notPassive);
			}
		},
		[onTouchMove, onTouchStart, onWheel]
	);
	var stopListening = useCallback(
		function (el) {
			// bail early if no element is available to detach from
			if (!el) return; // all the if statements are to appease Flow 😢

			if (typeof el.removeEventListener === "function") {
				el.removeEventListener("wheel", onWheel, false);
			}

			if (typeof el.removeEventListener === "function") {
				el.removeEventListener("touchstart", onTouchStart, false);
			}

			if (typeof el.removeEventListener === "function") {
				el.removeEventListener("touchmove", onTouchMove, false);
			}
		},
		[onTouchMove, onTouchStart, onWheel]
	);
	useEffect(
		function () {
			if (!isEnabled) return;
			var element = scrollTarget.current;
			startListening(element);
			return function () {
				stopListening(element);
			};
		},
		[isEnabled, startListening, stopListening]
	);
	return function (element) {
		scrollTarget.current = element;
	};
}

var STYLE_KEYS = [
	"boxSizing",
	"height",
	"overflow",
	"paddingRight",
	"position",
];
var LOCK_STYLES = {
	boxSizing: "border-box",
	// account for possible declaration `width: 100%;` on body
	overflow: "hidden",
	position: "relative",
	height: "100%",
};

function preventTouchMove(e) {
	e.preventDefault();
}

function allowTouchMove(e) {
	e.stopPropagation();
}

function preventInertiaScroll() {
	var top = this.scrollTop;
	var totalScroll = this.scrollHeight;
	var currentScroll = top + this.offsetHeight;

	if (top === 0) {
		this.scrollTop = 1;
	} else if (currentScroll === totalScroll) {
		this.scrollTop = top - 1;
	}
} // `ontouchstart` check works on most browsers
// `maxTouchPoints` works on IE10/11 and Surface

function isTouchDevice() {
	return "ontouchstart" in window || navigator.maxTouchPoints;
}

var canUseDOM = !!(
	typeof window !== "undefined" &&
	window.document &&
	window.document.createElement
);
var activeScrollLocks = 0;
var listenerOptions = {
	capture: false,
	passive: false,
};
function useScrollLock(_ref) {
	var isEnabled = _ref.isEnabled,
		_ref$accountForScroll = _ref.accountForScrollbars,
		accountForScrollbars =
			_ref$accountForScroll === void 0 ? true : _ref$accountForScroll;
	var originalStyles = useRef({});
	var scrollTarget = useRef(null);
	var addScrollLock = useCallback(function (touchScrollTarget) {
		if (!canUseDOM) return;
		var target = document.body;
		var targetStyle = target && target.style;

		if (accountForScrollbars) {
			// store any styles already applied to the body
			STYLE_KEYS.forEach(function (key) {
				var val = targetStyle && targetStyle[key];
				originalStyles.current[key] = val;
			});
		} // apply the lock styles and padding if this is the first scroll lock

		if (accountForScrollbars && activeScrollLocks < 1) {
			var currentPadding =
				parseInt(originalStyles.current.paddingRight, 10) || 0;
			var clientWidth = document.body ? document.body.clientWidth : 0;
			var adjustedPadding =
				window.innerWidth - clientWidth + currentPadding || 0;
			Object.keys(LOCK_STYLES).forEach(function (key) {
				var val = LOCK_STYLES[key];

				if (targetStyle) {
					targetStyle[key] = val;
				}
			});

			if (targetStyle) {
				targetStyle.paddingRight = "".concat(adjustedPadding, "px");
			}
		} // account for touch devices

		if (target && isTouchDevice()) {
			// Mobile Safari ignores { overflow: hidden } declaration on the body.
			target.addEventListener(
				"touchmove",
				preventTouchMove,
				listenerOptions
			); // Allow scroll on provided target

			if (touchScrollTarget) {
				touchScrollTarget.addEventListener(
					"touchstart",
					preventInertiaScroll,
					listenerOptions
				);
				touchScrollTarget.addEventListener(
					"touchmove",
					allowTouchMove,
					listenerOptions
				);
			}
		} // increment active scroll locks

		activeScrollLocks += 1;
	}, []);
	var removeScrollLock = useCallback(function (touchScrollTarget) {
		if (!canUseDOM) return;
		var target = document.body;
		var targetStyle = target && target.style; // safely decrement active scroll locks

		activeScrollLocks = Math.max(activeScrollLocks - 1, 0); // reapply original body styles, if any

		if (accountForScrollbars && activeScrollLocks < 1) {
			STYLE_KEYS.forEach(function (key) {
				var val = originalStyles.current[key];

				if (targetStyle) {
					targetStyle[key] = val;
				}
			});
		} // remove touch listeners

		if (target && isTouchDevice()) {
			target.removeEventListener(
				"touchmove",
				preventTouchMove,
				listenerOptions
			);

			if (touchScrollTarget) {
				touchScrollTarget.removeEventListener(
					"touchstart",
					preventInertiaScroll,
					listenerOptions
				);
				touchScrollTarget.removeEventListener(
					"touchmove",
					allowTouchMove,
					listenerOptions
				);
			}
		}
	}, []);
	useEffect(
		function () {
			if (!isEnabled) return;
			var element = scrollTarget.current;
			addScrollLock(element);
			return function () {
				removeScrollLock(element);
			};
		},
		[isEnabled, addScrollLock, removeScrollLock]
	);
	return function (element) {
		scrollTarget.current = element;
	};
}

function _EMOTION_STRINGIFIED_CSS_ERROR__$1() {
	return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).";
}

var blurSelectInput = function blurSelectInput() {
	return document.activeElement && document.activeElement.blur();
};

var _ref2 =
	process.env.NODE_ENV === "production"
		? {
				name: "1kfdb0e",
				styles: "position:fixed;left:0;bottom:0;right:0;top:0",
		  }
		: {
				name: "bp8cua-ScrollManager",
				styles: "position:fixed;left:0;bottom:0;right:0;top:0;label:ScrollManager;",
				map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNjcm9sbE1hbmFnZXIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBa0RVIiwiZmlsZSI6IlNjcm9sbE1hbmFnZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAZmxvd1xuLyoqIEBqc3gganN4ICovXG5pbXBvcnQgeyBqc3ggfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5pbXBvcnQgUmVhY3QsIHsgdHlwZSBFbGVtZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHVzZVNjcm9sbENhcHR1cmUgZnJvbSAnLi91c2VTY3JvbGxDYXB0dXJlJztcbmltcG9ydCB1c2VTY3JvbGxMb2NrIGZyb20gJy4vdXNlU2Nyb2xsTG9jayc7XG5cbnR5cGUgUmVmQ2FsbGJhY2s8VD4gPSAoVCB8IG51bGwpID0+IHZvaWQ7XG5cbnR5cGUgUHJvcHMgPSB7XG4gIGNoaWxkcmVuOiAoUmVmQ2FsbGJhY2s8SFRNTEVsZW1lbnQ+KSA9PiBFbGVtZW50PCo+LFxuICBsb2NrRW5hYmxlZDogYm9vbGVhbixcbiAgY2FwdHVyZUVuYWJsZWQ6IGJvb2xlYW4sXG4gIG9uQm90dG9tQXJyaXZlPzogKGV2ZW50OiBTeW50aGV0aWNFdmVudDxIVE1MRWxlbWVudD4pID0+IHZvaWQsXG4gIG9uQm90dG9tTGVhdmU/OiAoZXZlbnQ6IFN5bnRoZXRpY0V2ZW50PEhUTUxFbGVtZW50PikgPT4gdm9pZCxcbiAgb25Ub3BBcnJpdmU/OiAoZXZlbnQ6IFN5bnRoZXRpY0V2ZW50PEhUTUxFbGVtZW50PikgPT4gdm9pZCxcbiAgb25Ub3BMZWF2ZT86IChldmVudDogU3ludGhldGljRXZlbnQ8SFRNTEVsZW1lbnQ+KSA9PiB2b2lkLFxufTtcblxuY29uc3QgYmx1clNlbGVjdElucHV0ID0gKCkgPT5cbiAgZG9jdW1lbnQuYWN0aXZlRWxlbWVudCAmJiBkb2N1bWVudC5hY3RpdmVFbGVtZW50LmJsdXIoKTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gU2Nyb2xsTWFuYWdlcih7XG4gIGNoaWxkcmVuLFxuICBsb2NrRW5hYmxlZCxcbiAgY2FwdHVyZUVuYWJsZWQgPSB0cnVlLFxuICBvbkJvdHRvbUFycml2ZSxcbiAgb25Cb3R0b21MZWF2ZSxcbiAgb25Ub3BBcnJpdmUsXG4gIG9uVG9wTGVhdmUsXG59OiBQcm9wcykge1xuICBjb25zdCBzZXRTY3JvbGxDYXB0dXJlVGFyZ2V0ID0gdXNlU2Nyb2xsQ2FwdHVyZSh7XG4gICAgaXNFbmFibGVkOiBjYXB0dXJlRW5hYmxlZCxcbiAgICBvbkJvdHRvbUFycml2ZSxcbiAgICBvbkJvdHRvbUxlYXZlLFxuICAgIG9uVG9wQXJyaXZlLFxuICAgIG9uVG9wTGVhdmUsXG4gIH0pO1xuICBjb25zdCBzZXRTY3JvbGxMb2NrVGFyZ2V0ID0gdXNlU2Nyb2xsTG9jayh7IGlzRW5hYmxlZDogbG9ja0VuYWJsZWQgfSk7XG5cbiAgY29uc3QgdGFyZ2V0UmVmID0gZWxlbWVudCA9PiB7XG4gICAgc2V0U2Nyb2xsQ2FwdHVyZVRhcmdldChlbGVtZW50KTtcbiAgICBzZXRTY3JvbGxMb2NrVGFyZ2V0KGVsZW1lbnQpO1xuICB9O1xuXG4gIHJldHVybiAoXG4gICAgPFJlYWN0LkZyYWdtZW50PlxuICAgICAge2xvY2tFbmFibGVkICYmIChcbiAgICAgICAgPGRpdlxuICAgICAgICAgIG9uQ2xpY2s9e2JsdXJTZWxlY3RJbnB1dH1cbiAgICAgICAgICBjc3M9e3sgcG9zaXRpb246ICdmaXhlZCcsIGxlZnQ6IDAsIGJvdHRvbTogMCwgcmlnaHQ6IDAsIHRvcDogMCB9fVxuICAgICAgICAvPlxuICAgICAgKX1cbiAgICAgIHtjaGlsZHJlbih0YXJnZXRSZWYpfVxuICAgIDwvUmVhY3QuRnJhZ21lbnQ+XG4gICk7XG59XG4iXX0= */",
				toString: _EMOTION_STRINGIFIED_CSS_ERROR__$1,
		  };

function ScrollManager(_ref) {
	var children = _ref.children,
		lockEnabled = _ref.lockEnabled,
		_ref$captureEnabled = _ref.captureEnabled,
		captureEnabled =
			_ref$captureEnabled === void 0 ? true : _ref$captureEnabled,
		onBottomArrive = _ref.onBottomArrive,
		onBottomLeave = _ref.onBottomLeave,
		onTopArrive = _ref.onTopArrive,
		onTopLeave = _ref.onTopLeave;
	var setScrollCaptureTarget = useScrollCapture({
		isEnabled: captureEnabled,
		onBottomArrive: onBottomArrive,
		onBottomLeave: onBottomLeave,
		onTopArrive: onTopArrive,
		onTopLeave: onTopLeave,
	});
	var setScrollLockTarget = useScrollLock({
		isEnabled: lockEnabled,
	});

	var targetRef = function targetRef(element) {
		setScrollCaptureTarget(element);
		setScrollLockTarget(element);
	};

	return jsx(
		React.Fragment,
		null,
		lockEnabled &&
			jsx("div", {
				onClick: blurSelectInput,
				css: _ref2,
			}),
		children(targetRef)
	);
}

var formatGroupLabel = function formatGroupLabel(group) {
	return group.label;
};
var getOptionLabel = function getOptionLabel(option) {
	return option.label;
};
var getOptionValue = function getOptionValue(option) {
	return option.value;
};
var isOptionDisabled = function isOptionDisabled(option) {
	return !!option.isDisabled;
};

var defaultStyles = {
	clearIndicator: clearIndicatorCSS,
	container: containerCSS,
	control: css,
	dropdownIndicator: dropdownIndicatorCSS,
	group: groupCSS,
	groupHeading: groupHeadingCSS,
	indicatorsContainer: indicatorsContainerCSS,
	indicatorSeparator: indicatorSeparatorCSS,
	input: inputCSS,
	loadingIndicator: loadingIndicatorCSS,
	loadingMessage: loadingMessageCSS,
	menu: menuCSS,
	menuList: menuListCSS,
	menuPortal: menuPortalCSS,
	multiValue: multiValueCSS,
	multiValueLabel: multiValueLabelCSS,
	multiValueRemove: multiValueRemoveCSS,
	noOptionsMessage: noOptionsMessageCSS,
	option: optionCSS,
	placeholder: placeholderCSS,
	singleValue: css$1,
	valueContainer: valueContainerCSS,
}; // Merge Utility

var colors = {
	primary: "#2684FF",
	primary75: "#4C9AFF",
	primary50: "#B2D4FF",
	primary25: "#DEEBFF",
	danger: "#DE350B",
	dangerLight: "#FFBDAD",
	neutral0: "hsl(0, 0%, 100%)",
	neutral5: "hsl(0, 0%, 95%)",
	neutral10: "hsl(0, 0%, 90%)",
	neutral20: "hsl(0, 0%, 80%)",
	neutral30: "hsl(0, 0%, 70%)",
	neutral40: "hsl(0, 0%, 60%)",
	neutral50: "hsl(0, 0%, 50%)",
	neutral60: "hsl(0, 0%, 40%)",
	neutral70: "hsl(0, 0%, 30%)",
	neutral80: "hsl(0, 0%, 20%)",
	neutral90: "hsl(0, 0%, 10%)",
};
var borderRadius = 4; // Used to calculate consistent margin/padding on elements

var baseUnit = 4; // The minimum height of the control

var controlHeight = 38; // The amount of space between the control and menu */

var menuGutter = baseUnit * 2;
var spacing = {
	baseUnit: baseUnit,
	controlHeight: controlHeight,
	menuGutter: menuGutter,
};
var defaultTheme = {
	borderRadius: borderRadius,
	colors: colors,
	spacing: spacing,
};

var defaultProps$2 = {
	"aria-live": "polite",
	backspaceRemovesValue: true,
	blurInputOnSelect: isTouchCapable(),
	captureMenuScroll: !isTouchCapable(),
	closeMenuOnSelect: true,
	closeMenuOnScroll: false,
	components: {},
	controlShouldRenderValue: true,
	escapeClearsValue: false,
	filterOption: createFilter(),
	formatGroupLabel: formatGroupLabel,
	getOptionLabel: getOptionLabel,
	getOptionValue: getOptionValue,
	isDisabled: false,
	isLoading: false,
	isMulti: false,
	isRtl: false,
	isSearchable: true,
	isOptionDisabled: isOptionDisabled,
	loadingMessage: function loadingMessage() {
		return "Loading...";
	},
	maxMenuHeight: 300,
	minMenuHeight: 140,
	menuIsOpen: false,
	menuPlacement: "bottom",
	menuPosition: "absolute",
	menuShouldBlockScroll: false,
	menuShouldScrollIntoView: !isMobileDevice(),
	noOptionsMessage: function noOptionsMessage() {
		return "No options";
	},
	openMenuOnFocus: false,
	openMenuOnClick: true,
	options: [],
	pageSize: 5,
	placeholder: "Select...",
	screenReaderStatus: function screenReaderStatus(_ref) {
		var count = _ref.count;
		return ""
			.concat(count, " result")
			.concat(count !== 1 ? "s" : "", " available");
	},
	styles: {},
	tabIndex: "0",
	tabSelectsValue: true,
};

function toCategorizedOption(props, option, selectValue, index) {
	var isDisabled = _isOptionDisabled(props, option, selectValue);

	var isSelected = _isOptionSelected(props, option, selectValue);

	var label = getOptionLabel$1(props, option);
	var value = getOptionValue$1(props, option);
	return {
		type: "option",
		data: option,
		isDisabled: isDisabled,
		isSelected: isSelected,
		label: label,
		value: value,
		index: index,
	};
}

function buildCategorizedOptions(props, selectValue) {
	return props.options
		.map(function (groupOrOption, groupOrOptionIndex) {
			if (groupOrOption.options) {
				var categorizedOptions = groupOrOption.options
					.map(function (option, optionIndex) {
						return toCategorizedOption(
							props,
							option,
							selectValue,
							optionIndex
						);
					})
					.filter(function (categorizedOption) {
						return isFocusable(props, categorizedOption);
					});
				return categorizedOptions.length > 0
					? {
							type: "group",
							data: groupOrOption,
							options: categorizedOptions,
							index: groupOrOptionIndex,
					  }
					: undefined;
			}

			var categorizedOption = toCategorizedOption(
				props,
				groupOrOption,
				selectValue,
				groupOrOptionIndex
			);
			return isFocusable(props, categorizedOption)
				? categorizedOption
				: undefined;
		}) // Flow limitation (see https://github.com/facebook/flow/issues/1414)
		.filter(function (categorizedOption) {
			return !!categorizedOption;
		});
}

function buildFocusableOptionsFromCategorizedOptions(categorizedOptions) {
	return categorizedOptions.reduce(function (
		optionsAccumulator,
		categorizedOption
	) {
		if (categorizedOption.type === "group") {
			optionsAccumulator.push.apply(
				optionsAccumulator,
				_toConsumableArray(
					categorizedOption.options.map(function (option) {
						return option.data;
					})
				)
			);
		} else {
			optionsAccumulator.push(categorizedOption.data);
		}

		return optionsAccumulator;
	},
	[]);
}

function buildFocusableOptions(props, selectValue) {
	return buildFocusableOptionsFromCategorizedOptions(
		buildCategorizedOptions(props, selectValue)
	);
}

function isFocusable(props, categorizedOption) {
	var _props$inputValue = props.inputValue,
		inputValue = _props$inputValue === void 0 ? "" : _props$inputValue;
	var data = categorizedOption.data,
		isSelected = categorizedOption.isSelected,
		label = categorizedOption.label,
		value = categorizedOption.value;
	return (
		(!shouldHideSelectedOptions(props) || !isSelected) &&
		_filterOption(
			props,
			{
				label: label,
				value: value,
				data: data,
			},
			inputValue
		)
	);
}

function getNextFocusedValue(state, nextSelectValue) {
	var focusedValue = state.focusedValue,
		lastSelectValue = state.selectValue;
	var lastFocusedIndex = lastSelectValue.indexOf(focusedValue);

	if (lastFocusedIndex > -1) {
		var nextFocusedIndex = nextSelectValue.indexOf(focusedValue);

		if (nextFocusedIndex > -1) {
			// the focused value is still in the selectValue, return it
			return focusedValue;
		} else if (lastFocusedIndex < nextSelectValue.length) {
			// the focusedValue is not present in the next selectValue array by
			// reference, so return the new value at the same index
			return nextSelectValue[lastFocusedIndex];
		}
	}

	return null;
}

function getNextFocusedOption(state, options) {
	var lastFocusedOption = state.focusedOption;
	return lastFocusedOption && options.indexOf(lastFocusedOption) > -1
		? lastFocusedOption
		: options[0];
}

var getOptionLabel$1 = function getOptionLabel(props, data) {
	return props.getOptionLabel(data);
};

var getOptionValue$1 = function getOptionValue(props, data) {
	return props.getOptionValue(data);
};

function _isOptionDisabled(props, option, selectValue) {
	return typeof props.isOptionDisabled === "function"
		? props.isOptionDisabled(option, selectValue)
		: false;
}

function _isOptionSelected(props, option, selectValue) {
	if (selectValue.indexOf(option) > -1) return true;

	if (typeof props.isOptionSelected === "function") {
		return props.isOptionSelected(option, selectValue);
	}

	var candidate = getOptionValue$1(props, option);
	return selectValue.some(function (i) {
		return getOptionValue$1(props, i) === candidate;
	});
}

function _filterOption(props, option, inputValue) {
	return props.filterOption ? props.filterOption(option, inputValue) : true;
}

var shouldHideSelectedOptions = function shouldHideSelectedOptions(props) {
	var hideSelectedOptions = props.hideSelectedOptions,
		isMulti = props.isMulti;
	if (hideSelectedOptions === undefined) return isMulti;
	return hideSelectedOptions;
};

var instanceId = 1;

var Select$2 = /*#__PURE__*/ (function (_Component) {
	_inherits$1(Select, _Component);

	var _super = _createSuper(Select);

	// Misc. Instance Properties
	// ------------------------------
	// TODO
	// Refs
	// ------------------------------
	// Lifecycle
	// ------------------------------
	function Select(_props) {
		var _this;

		_classCallCheck$1(this, Select);

		_this = _super.call(this, _props);
		_this.state = {
			ariaSelection: null,
			focusedOption: null,
			focusedValue: null,
			inputIsHidden: false,
			isFocused: false,
			selectValue: [],
			clearFocusValueOnUpdate: false,
			inputIsHiddenAfterUpdate: undefined,
			prevProps: undefined,
		};
		_this.blockOptionHover = false;
		_this.isComposing = false;
		_this.commonProps = void 0;
		_this.initialTouchX = 0;
		_this.initialTouchY = 0;
		_this.instancePrefix = "";
		_this.openAfterFocus = false;
		_this.scrollToFocusedOptionOnUpdate = false;
		_this.userIsDragging = void 0;
		_this.controlRef = null;

		_this.getControlRef = function (ref) {
			_this.controlRef = ref;
		};

		_this.focusedOptionRef = null;

		_this.getFocusedOptionRef = function (ref) {
			_this.focusedOptionRef = ref;
		};

		_this.menuListRef = null;

		_this.getMenuListRef = function (ref) {
			_this.menuListRef = ref;
		};

		_this.inputRef = null;

		_this.getInputRef = function (ref) {
			_this.inputRef = ref;
		};

		_this.focus = _this.focusInput;
		_this.blur = _this.blurInput;

		_this.onChange = function (newValue, actionMeta) {
			var _this$props = _this.props,
				onChange = _this$props.onChange,
				name = _this$props.name;
			actionMeta.name = name;

			_this.ariaOnChange(newValue, actionMeta);

			onChange(newValue, actionMeta);
		};

		_this.setValue = function (newValue) {
			var action =
				arguments.length > 1 && arguments[1] !== undefined
					? arguments[1]
					: "set-value";
			var option = arguments.length > 2 ? arguments[2] : undefined;
			var _this$props2 = _this.props,
				closeMenuOnSelect = _this$props2.closeMenuOnSelect,
				isMulti = _this$props2.isMulti;

			_this.onInputChange("", {
				action: "set-value",
			});

			if (closeMenuOnSelect) {
				_this.setState({
					inputIsHiddenAfterUpdate: !isMulti,
				});

				_this.onMenuClose();
			} // when the select value should change, we should reset focusedValue

			_this.setState({
				clearFocusValueOnUpdate: true,
			});

			_this.onChange(newValue, {
				action: action,
				option: option,
			});
		};

		_this.selectOption = function (newValue) {
			var _this$props3 = _this.props,
				blurInputOnSelect = _this$props3.blurInputOnSelect,
				isMulti = _this$props3.isMulti,
				name = _this$props3.name;
			var selectValue = _this.state.selectValue;

			var deselected =
				isMulti && _this.isOptionSelected(newValue, selectValue);

			var isDisabled = _this.isOptionDisabled(newValue, selectValue);

			if (deselected) {
				var candidate = _this.getOptionValue(newValue);

				_this.setValue(
					selectValue.filter(function (i) {
						return _this.getOptionValue(i) !== candidate;
					}),
					"deselect-option",
					newValue
				);
			} else if (!isDisabled) {
				// Select option if option is not disabled
				if (isMulti) {
					_this.setValue(
						[].concat(_toConsumableArray(selectValue), [newValue]),
						"select-option",
						newValue
					);
				} else {
					_this.setValue(newValue, "select-option");
				}
			} else {
				_this.ariaOnChange(newValue, {
					action: "select-option",
					name: name,
				});

				return;
			}

			if (blurInputOnSelect) {
				_this.blurInput();
			}
		};

		_this.removeValue = function (removedValue) {
			var isMulti = _this.props.isMulti;
			var selectValue = _this.state.selectValue;

			var candidate = _this.getOptionValue(removedValue);

			var newValueArray = selectValue.filter(function (i) {
				return _this.getOptionValue(i) !== candidate;
			});
			var newValue = isMulti ? newValueArray : newValueArray[0] || null;

			_this.onChange(newValue, {
				action: "remove-value",
				removedValue: removedValue,
			});

			_this.focusInput();
		};

		_this.clearValue = function () {
			var selectValue = _this.state.selectValue;

			_this.onChange(_this.props.isMulti ? [] : null, {
				action: "clear",
				removedValues: selectValue,
			});
		};

		_this.popValue = function () {
			var isMulti = _this.props.isMulti;
			var selectValue = _this.state.selectValue;
			var lastSelectedValue = selectValue[selectValue.length - 1];
			var newValueArray = selectValue.slice(0, selectValue.length - 1);
			var newValue = isMulti ? newValueArray : newValueArray[0] || null;

			_this.onChange(newValue, {
				action: "pop-value",
				removedValue: lastSelectedValue,
			});
		};

		_this.getValue = function () {
			return _this.state.selectValue;
		};

		_this.cx = function () {
			for (
				var _len = arguments.length, args = new Array(_len), _key = 0;
				_key < _len;
				_key++
			) {
				args[_key] = arguments[_key];
			}

			return classNames.apply(
				void 0,
				[_this.props.classNamePrefix].concat(args)
			);
		};

		_this.getOptionLabel = function (data) {
			return getOptionLabel$1(_this.props, data);
		};

		_this.getOptionValue = function (data) {
			return getOptionValue$1(_this.props, data);
		};

		_this.getStyles = function (key, props) {
			var base = defaultStyles[key](props);
			base.boxSizing = "border-box";
			var custom = _this.props.styles[key];
			return custom ? custom(base, props) : base;
		};

		_this.getElementId = function (element) {
			return "".concat(_this.instancePrefix, "-").concat(element);
		};

		_this.getComponents = function () {
			return defaultComponents(_this.props);
		};

		_this.buildCategorizedOptions = function () {
			return buildCategorizedOptions(
				_this.props,
				_this.state.selectValue
			);
		};

		_this.getCategorizedOptions = function () {
			return _this.props.menuIsOpen
				? _this.buildCategorizedOptions()
				: [];
		};

		_this.buildFocusableOptions = function () {
			return buildFocusableOptionsFromCategorizedOptions(
				_this.buildCategorizedOptions()
			);
		};

		_this.getFocusableOptions = function () {
			return _this.props.menuIsOpen ? _this.buildFocusableOptions() : [];
		};

		_this.ariaOnChange = function (value, actionMeta) {
			_this.setState({
				ariaSelection: _objectSpread2(
					{
						value: value,
					},
					actionMeta
				),
			});
		};

		_this.onMenuMouseDown = function (event) {
			if (event.button !== 0) {
				return;
			}

			event.stopPropagation();
			event.preventDefault();

			_this.focusInput();
		};

		_this.onMenuMouseMove = function (event) {
			_this.blockOptionHover = false;
		};

		_this.onControlMouseDown = function (event) {
			var openMenuOnClick = _this.props.openMenuOnClick;

			if (!_this.state.isFocused) {
				if (openMenuOnClick) {
					_this.openAfterFocus = true;
				}

				_this.focusInput();
			} else if (!_this.props.menuIsOpen) {
				if (openMenuOnClick) {
					_this.openMenu("first");
				}
			} else {
				if (
					// $FlowFixMe
					event.target.tagName !== "INPUT" &&
					event.target.tagName !== "TEXTAREA"
				) {
					_this.onMenuClose();
				}
			}

			if (
				// $FlowFixMe
				event.target.tagName !== "INPUT" &&
				event.target.tagName !== "TEXTAREA"
			) {
				event.preventDefault();
			}
		};

		_this.onDropdownIndicatorMouseDown = function (event) {
			// ignore mouse events that weren't triggered by the primary button
			if (event && event.type === "mousedown" && event.button !== 0) {
				return;
			}

			if (_this.props.isDisabled) return;
			var _this$props4 = _this.props,
				isMulti = _this$props4.isMulti,
				menuIsOpen = _this$props4.menuIsOpen;

			_this.focusInput();

			if (menuIsOpen) {
				_this.setState({
					inputIsHiddenAfterUpdate: !isMulti,
				});

				_this.onMenuClose();
			} else {
				_this.openMenu("first");
			}

			event.preventDefault();
			event.stopPropagation();
		};

		_this.onClearIndicatorMouseDown = function (event) {
			// ignore mouse events that weren't triggered by the primary button
			if (event && event.type === "mousedown" && event.button !== 0) {
				return;
			}

			_this.clearValue();

			event.stopPropagation();
			_this.openAfterFocus = false;

			if (event.type === "touchend") {
				_this.focusInput();
			} else {
				setTimeout(function () {
					return _this.focusInput();
				});
			}
		};

		_this.onScroll = function (event) {
			if (typeof _this.props.closeMenuOnScroll === "boolean") {
				if (
					event.target instanceof HTMLElement &&
					isDocumentElement(event.target)
				) {
					_this.props.onMenuClose();
				}
			} else if (typeof _this.props.closeMenuOnScroll === "function") {
				if (_this.props.closeMenuOnScroll(event)) {
					_this.props.onMenuClose();
				}
			}
		};

		_this.onCompositionStart = function () {
			_this.isComposing = true;
		};

		_this.onCompositionEnd = function () {
			_this.isComposing = false;
		};

		_this.onTouchStart = function (_ref2) {
			var touches = _ref2.touches;
			var touch = touches && touches.item(0);

			if (!touch) {
				return;
			}

			_this.initialTouchX = touch.clientX;
			_this.initialTouchY = touch.clientY;
			_this.userIsDragging = false;
		};

		_this.onTouchMove = function (_ref3) {
			var touches = _ref3.touches;
			var touch = touches && touches.item(0);

			if (!touch) {
				return;
			}

			var deltaX = Math.abs(touch.clientX - _this.initialTouchX);
			var deltaY = Math.abs(touch.clientY - _this.initialTouchY);
			var moveThreshold = 5;
			_this.userIsDragging =
				deltaX > moveThreshold || deltaY > moveThreshold;
		};

		_this.onTouchEnd = function (event) {
			if (_this.userIsDragging) return; // close the menu if the user taps outside
			// we're checking on event.target here instead of event.currentTarget, because we want to assert information
			// on events on child elements, not the document (which we've attached this handler to).

			if (
				_this.controlRef &&
				!_this.controlRef.contains(event.target) &&
				_this.menuListRef &&
				!_this.menuListRef.contains(event.target)
			) {
				_this.blurInput();
			} // reset move vars

			_this.initialTouchX = 0;
			_this.initialTouchY = 0;
		};

		_this.onControlTouchEnd = function (event) {
			if (_this.userIsDragging) return;

			_this.onControlMouseDown(event);
		};

		_this.onClearIndicatorTouchEnd = function (event) {
			if (_this.userIsDragging) return;

			_this.onClearIndicatorMouseDown(event);
		};

		_this.onDropdownIndicatorTouchEnd = function (event) {
			if (_this.userIsDragging) return;

			_this.onDropdownIndicatorMouseDown(event);
		};

		_this.handleInputChange = function (event) {
			var inputValue = event.currentTarget.value;

			_this.setState({
				inputIsHiddenAfterUpdate: false,
			});

			_this.onInputChange(inputValue, {
				action: "input-change",
			});

			if (!_this.props.menuIsOpen) {
				_this.onMenuOpen();
			}
		};

		_this.onInputFocus = function (event) {
			if (_this.props.onFocus) {
				_this.props.onFocus(event);
			}

			_this.setState({
				inputIsHiddenAfterUpdate: false,
				isFocused: true,
			});

			if (_this.openAfterFocus || _this.props.openMenuOnFocus) {
				_this.openMenu("first");
			}

			_this.openAfterFocus = false;
		};

		_this.onInputBlur = function (event) {
			if (
				_this.menuListRef &&
				_this.menuListRef.contains(document.activeElement)
			) {
				_this.inputRef.focus();

				return;
			}

			if (_this.props.onBlur) {
				_this.props.onBlur(event);
			}

			_this.onInputChange("", {
				action: "input-blur",
			});

			_this.onMenuClose();

			_this.setState({
				focusedValue: null,
				isFocused: false,
			});
		};

		_this.onOptionHover = function (focusedOption) {
			if (
				_this.blockOptionHover ||
				_this.state.focusedOption === focusedOption
			) {
				return;
			}

			_this.setState({
				focusedOption: focusedOption,
			});
		};

		_this.shouldHideSelectedOptions = function () {
			return shouldHideSelectedOptions(_this.props);
		};

		_this.onKeyDown = function (event) {
			var _this$props5 = _this.props,
				isMulti = _this$props5.isMulti,
				backspaceRemovesValue = _this$props5.backspaceRemovesValue,
				escapeClearsValue = _this$props5.escapeClearsValue,
				inputValue = _this$props5.inputValue,
				isClearable = _this$props5.isClearable,
				isDisabled = _this$props5.isDisabled,
				menuIsOpen = _this$props5.menuIsOpen,
				onKeyDown = _this$props5.onKeyDown,
				tabSelectsValue = _this$props5.tabSelectsValue,
				openMenuOnFocus = _this$props5.openMenuOnFocus;
			var _this$state = _this.state,
				focusedOption = _this$state.focusedOption,
				focusedValue = _this$state.focusedValue,
				selectValue = _this$state.selectValue;
			if (isDisabled) return;

			if (typeof onKeyDown === "function") {
				onKeyDown(event);

				if (event.defaultPrevented) {
					return;
				}
			} // Block option hover events when the user has just pressed a key

			_this.blockOptionHover = true;

			switch (event.key) {
				case "ArrowLeft":
					if (!isMulti || inputValue) return;

					_this.focusValue("previous");

					break;

				case "ArrowRight":
					if (!isMulti || inputValue) return;

					_this.focusValue("next");

					break;

				case "Delete":
				case "Backspace":
					if (inputValue) return;

					if (focusedValue) {
						_this.removeValue(focusedValue);
					} else {
						if (!backspaceRemovesValue) return;

						if (isMulti) {
							_this.popValue();
						} else if (isClearable) {
							_this.clearValue();
						}
					}

					break;

				case "Tab":
					if (_this.isComposing) return;

					if (
						event.shiftKey ||
						!menuIsOpen ||
						!tabSelectsValue ||
						!focusedOption || // don't capture the event if the menu opens on focus and the focused
						// option is already selected; it breaks the flow of navigation
						(openMenuOnFocus &&
							_this.isOptionSelected(focusedOption, selectValue))
					) {
						return;
					}

					_this.selectOption(focusedOption);

					break;

				case "Enter":
					if (event.keyCode === 229) {
						// ignore the keydown event from an Input Method Editor(IME)
						// ref. https://www.w3.org/TR/uievents/#determine-keydown-keyup-keyCode
						break;
					}

					if (menuIsOpen) {
						if (!focusedOption) return;
						if (_this.isComposing) return;

						_this.selectOption(focusedOption);

						break;
					}

					return;

				case "Escape":
					if (menuIsOpen) {
						_this.setState({
							inputIsHiddenAfterUpdate: false,
						});

						_this.onInputChange("", {
							action: "menu-close",
						});

						_this.onMenuClose();
					} else if (isClearable && escapeClearsValue) {
						_this.clearValue();
					}

					break;

				case " ":
					// space
					if (inputValue) {
						return;
					}

					if (!menuIsOpen) {
						_this.openMenu("first");

						break;
					}

					if (!focusedOption) return;

					_this.selectOption(focusedOption);

					break;

				case "ArrowUp":
					if (menuIsOpen) {
						_this.focusOption("up");
					} else {
						_this.openMenu("last");
					}

					break;

				case "ArrowDown":
					if (menuIsOpen) {
						_this.focusOption("down");
					} else {
						_this.openMenu("first");
					}

					break;

				case "PageUp":
					if (!menuIsOpen) return;

					_this.focusOption("pageup");

					break;

				case "PageDown":
					if (!menuIsOpen) return;

					_this.focusOption("pagedown");

					break;

				case "Home":
					if (!menuIsOpen) return;

					_this.focusOption("first");

					break;

				case "End":
					if (!menuIsOpen) return;

					_this.focusOption("last");

					break;

				default:
					return;
			}

			event.preventDefault();
		};

		_this.instancePrefix =
			"react-select-" + (_this.props.instanceId || ++instanceId);
		_this.state.selectValue = cleanValue(_props.value);
		return _this;
	}

	_createClass$1(
		Select,
		[
			{
				key: "componentDidMount",
				value: function componentDidMount() {
					this.startListeningComposition();
					this.startListeningToTouch();

					if (
						this.props.closeMenuOnScroll &&
						document &&
						document.addEventListener
					) {
						// Listen to all scroll events, and filter them out inside of 'onScroll'
						document.addEventListener(
							"scroll",
							this.onScroll,
							true
						);
					}

					if (this.props.autoFocus) {
						this.focusInput();
					}
				},
			},
			{
				key: "componentDidUpdate",
				value: function componentDidUpdate(prevProps) {
					var _this$props6 = this.props,
						isDisabled = _this$props6.isDisabled,
						menuIsOpen = _this$props6.menuIsOpen;
					var isFocused = this.state.isFocused;

					if (
						// ensure focus is restored correctly when the control becomes enabled
						(isFocused && !isDisabled && prevProps.isDisabled) || // ensure focus is on the Input when the menu opens
						(isFocused && menuIsOpen && !prevProps.menuIsOpen)
					) {
						this.focusInput();
					}

					if (isFocused && isDisabled && !prevProps.isDisabled) {
						// ensure select state gets blurred in case Select is programatically disabled while focused
						this.setState(
							{
								isFocused: false,
							},
							this.onMenuClose
						);
					} // scroll the focused option into view if necessary

					if (
						this.menuListRef &&
						this.focusedOptionRef &&
						this.scrollToFocusedOptionOnUpdate
					) {
						scrollIntoView(this.menuListRef, this.focusedOptionRef);
						this.scrollToFocusedOptionOnUpdate = false;
					}
				},
			},
			{
				key: "componentWillUnmount",
				value: function componentWillUnmount() {
					this.stopListeningComposition();
					this.stopListeningToTouch();
					document.removeEventListener("scroll", this.onScroll, true);
				}, // ==============================
				// Consumer Handlers
				// ==============================
			},
			{
				key: "onMenuOpen",
				value: function onMenuOpen() {
					this.props.onMenuOpen();
				},
			},
			{
				key: "onMenuClose",
				value: function onMenuClose() {
					this.onInputChange("", {
						action: "menu-close",
					});
					this.props.onMenuClose();
				},
			},
			{
				key: "onInputChange",
				value: function onInputChange(newValue, actionMeta) {
					this.props.onInputChange(newValue, actionMeta);
				}, // ==============================
				// Methods
				// ==============================
			},
			{
				key: "focusInput",
				value: function focusInput() {
					if (!this.inputRef) return;
					this.inputRef.focus();
				},
			},
			{
				key: "blurInput",
				value: function blurInput() {
					if (!this.inputRef) return;
					this.inputRef.blur();
				}, // aliased for consumers
			},
			{
				key: "openMenu",
				value: function openMenu(focusOption) {
					var _this2 = this;

					var _this$state2 = this.state,
						selectValue = _this$state2.selectValue,
						isFocused = _this$state2.isFocused;
					var focusableOptions = this.buildFocusableOptions();
					var openAtIndex =
						focusOption === "first"
							? 0
							: focusableOptions.length - 1;

					if (!this.props.isMulti) {
						var selectedIndex = focusableOptions.indexOf(
							selectValue[0]
						);

						if (selectedIndex > -1) {
							openAtIndex = selectedIndex;
						}
					} // only scroll if the menu isn't already open

					this.scrollToFocusedOptionOnUpdate = !(
						isFocused && this.menuListRef
					);
					this.setState(
						{
							inputIsHiddenAfterUpdate: false,
							focusedValue: null,
							focusedOption: focusableOptions[openAtIndex],
						},
						function () {
							return _this2.onMenuOpen();
						}
					);
				},
			},
			{
				key: "focusValue",
				value: function focusValue(direction) {
					var _this$state3 = this.state,
						selectValue = _this$state3.selectValue,
						focusedValue = _this$state3.focusedValue; // Only multiselects support value focusing

					if (!this.props.isMulti) return;
					this.setState({
						focusedOption: null,
					});
					var focusedIndex = selectValue.indexOf(focusedValue);

					if (!focusedValue) {
						focusedIndex = -1;
					}

					var lastIndex = selectValue.length - 1;
					var nextFocus = -1;
					if (!selectValue.length) return;

					switch (direction) {
						case "previous":
							if (focusedIndex === 0) {
								// don't cycle from the start to the end
								nextFocus = 0;
							} else if (focusedIndex === -1) {
								// if nothing is focused, focus the last value first
								nextFocus = lastIndex;
							} else {
								nextFocus = focusedIndex - 1;
							}

							break;

						case "next":
							if (focusedIndex > -1 && focusedIndex < lastIndex) {
								nextFocus = focusedIndex + 1;
							}

							break;
					}

					this.setState({
						inputIsHidden: nextFocus !== -1,
						focusedValue: selectValue[nextFocus],
					});
				},
			},
			{
				key: "focusOption",
				value: function focusOption() {
					var direction =
						arguments.length > 0 && arguments[0] !== undefined
							? arguments[0]
							: "first";
					var pageSize = this.props.pageSize;
					var focusedOption = this.state.focusedOption;
					var options = this.getFocusableOptions();
					if (!options.length) return;
					var nextFocus = 0; // handles 'first'

					var focusedIndex = options.indexOf(focusedOption);

					if (!focusedOption) {
						focusedIndex = -1;
					}

					if (direction === "up") {
						nextFocus =
							focusedIndex > 0
								? focusedIndex - 1
								: options.length - 1;
					} else if (direction === "down") {
						nextFocus = (focusedIndex + 1) % options.length;
					} else if (direction === "pageup") {
						nextFocus = focusedIndex - pageSize;
						if (nextFocus < 0) nextFocus = 0;
					} else if (direction === "pagedown") {
						nextFocus = focusedIndex + pageSize;
						if (nextFocus > options.length - 1)
							nextFocus = options.length - 1;
					} else if (direction === "last") {
						nextFocus = options.length - 1;
					}

					this.scrollToFocusedOptionOnUpdate = true;
					this.setState({
						focusedOption: options[nextFocus],
						focusedValue: null,
					});
				},
			},
			{
				key: "getTheme",
				// ==============================
				value:
					// Getters
					// ==============================
					function getTheme() {
						// Use the default theme if there are no customizations.
						if (!this.props.theme) {
							return defaultTheme;
						} // If the theme prop is a function, assume the function
						// knows how to merge the passed-in default theme with
						// its own modifications.

						if (typeof this.props.theme === "function") {
							return this.props.theme(defaultTheme);
						} // Otherwise, if a plain theme object was passed in,
						// overlay it with the default theme.

						return _objectSpread2(
							_objectSpread2({}, defaultTheme),
							this.props.theme
						);
					},
			},
			{
				key: "getCommonProps",
				value: function getCommonProps() {
					var clearValue = this.clearValue,
						cx = this.cx,
						getStyles = this.getStyles,
						getValue = this.getValue,
						selectOption = this.selectOption,
						setValue = this.setValue,
						props = this.props;
					var isMulti = props.isMulti,
						isRtl = props.isRtl,
						options = props.options;
					var hasValue = this.hasValue();
					return {
						clearValue: clearValue,
						cx: cx,
						getStyles: getStyles,
						getValue: getValue,
						hasValue: hasValue,
						isMulti: isMulti,
						isRtl: isRtl,
						options: options,
						selectOption: selectOption,
						selectProps: props,
						setValue: setValue,
						theme: this.getTheme(),
					};
				},
			},
			{
				key: "hasValue",
				value: function hasValue() {
					var selectValue = this.state.selectValue;
					return selectValue.length > 0;
				},
			},
			{
				key: "hasOptions",
				value: function hasOptions() {
					return !!this.getFocusableOptions().length;
				},
			},
			{
				key: "isClearable",
				value: function isClearable() {
					var _this$props7 = this.props,
						isClearable = _this$props7.isClearable,
						isMulti = _this$props7.isMulti; // single select, by default, IS NOT clearable
					// multi select, by default, IS clearable

					if (isClearable === undefined) return isMulti;
					return isClearable;
				},
			},
			{
				key: "isOptionDisabled",
				value: function isOptionDisabled(option, selectValue) {
					return _isOptionDisabled(this.props, option, selectValue);
				},
			},
			{
				key: "isOptionSelected",
				value: function isOptionSelected(option, selectValue) {
					return _isOptionSelected(this.props, option, selectValue);
				},
			},
			{
				key: "filterOption",
				value: function filterOption(option, inputValue) {
					return _filterOption(this.props, option, inputValue);
				},
			},
			{
				key: "formatOptionLabel",
				value: function formatOptionLabel(data, context) {
					if (typeof this.props.formatOptionLabel === "function") {
						var inputValue = this.props.inputValue;
						var selectValue = this.state.selectValue;
						return this.props.formatOptionLabel(data, {
							context: context,
							inputValue: inputValue,
							selectValue: selectValue,
						});
					} else {
						return this.getOptionLabel(data);
					}
				},
			},
			{
				key: "formatGroupLabel",
				value: function formatGroupLabel(data) {
					return this.props.formatGroupLabel(data);
				}, // ==============================
				// Mouse Handlers
				// ==============================
			},
			{
				key: "startListeningComposition",
				// ==============================
				value:
					// Composition Handlers
					// ==============================
					function startListeningComposition() {
						if (document && document.addEventListener) {
							document.addEventListener(
								"compositionstart",
								this.onCompositionStart,
								false
							);
							document.addEventListener(
								"compositionend",
								this.onCompositionEnd,
								false
							);
						}
					},
			},
			{
				key: "stopListeningComposition",
				value: function stopListeningComposition() {
					if (document && document.removeEventListener) {
						document.removeEventListener(
							"compositionstart",
							this.onCompositionStart
						);
						document.removeEventListener(
							"compositionend",
							this.onCompositionEnd
						);
					}
				},
			},
			{
				key: "startListeningToTouch",
				// ==============================
				value:
					// Touch Handlers
					// ==============================
					function startListeningToTouch() {
						if (document && document.addEventListener) {
							document.addEventListener(
								"touchstart",
								this.onTouchStart,
								false
							);
							document.addEventListener(
								"touchmove",
								this.onTouchMove,
								false
							);
							document.addEventListener(
								"touchend",
								this.onTouchEnd,
								false
							);
						}
					},
			},
			{
				key: "stopListeningToTouch",
				value: function stopListeningToTouch() {
					if (document && document.removeEventListener) {
						document.removeEventListener(
							"touchstart",
							this.onTouchStart
						);
						document.removeEventListener(
							"touchmove",
							this.onTouchMove
						);
						document.removeEventListener(
							"touchend",
							this.onTouchEnd
						);
					}
				},
			},
			{
				key: "renderInput",
				// ==============================
				value:
					// Renderers
					// ==============================
					function renderInput() {
						var _this$props8 = this.props,
							isDisabled = _this$props8.isDisabled,
							isSearchable = _this$props8.isSearchable,
							inputId = _this$props8.inputId,
							inputValue = _this$props8.inputValue,
							tabIndex = _this$props8.tabIndex,
							form = _this$props8.form;

						var _this$getComponents = this.getComponents(),
							Input = _this$getComponents.Input;

						var inputIsHidden = this.state.inputIsHidden;
						var commonProps = this.commonProps;
						var id = inputId || this.getElementId("input"); // aria attributes makes the JSX "noisy", separated for clarity

						var ariaAttributes = {
							"aria-autocomplete": "list",
							"aria-label": this.props["aria-label"],
							"aria-labelledby": this.props["aria-labelledby"],
						};

						if (!isSearchable) {
							// use a dummy input to maintain focus/blur functionality
							return /*#__PURE__*/ React.createElement(
								DummyInput,
								_extends$2(
									{
										id: id,
										innerRef: this.getInputRef,
										onBlur: this.onInputBlur,
										onChange: noop,
										onFocus: this.onInputFocus,
										readOnly: true,
										disabled: isDisabled,
										tabIndex: tabIndex,
										form: form,
										value: "",
									},
									ariaAttributes
								)
							);
						}

						return /*#__PURE__*/ React.createElement(
							Input,
							_extends$2(
								{},
								commonProps,
								{
									autoCapitalize: "none",
									autoComplete: "off",
									autoCorrect: "off",
									id: id,
									innerRef: this.getInputRef,
									isDisabled: isDisabled,
									isHidden: inputIsHidden,
									onBlur: this.onInputBlur,
									onChange: this.handleInputChange,
									onFocus: this.onInputFocus,
									spellCheck: "false",
									tabIndex: tabIndex,
									form: form,
									type: "text",
									value: inputValue,
								},
								ariaAttributes
							)
						);
					},
			},
			{
				key: "renderPlaceholderOrValue",
				value: function renderPlaceholderOrValue() {
					var _this3 = this;

					var _this$getComponents2 = this.getComponents(),
						MultiValue = _this$getComponents2.MultiValue,
						MultiValueContainer =
							_this$getComponents2.MultiValueContainer,
						MultiValueLabel = _this$getComponents2.MultiValueLabel,
						MultiValueRemove =
							_this$getComponents2.MultiValueRemove,
						SingleValue = _this$getComponents2.SingleValue,
						Placeholder = _this$getComponents2.Placeholder;

					var commonProps = this.commonProps;
					var _this$props9 = this.props,
						controlShouldRenderValue =
							_this$props9.controlShouldRenderValue,
						isDisabled = _this$props9.isDisabled,
						isMulti = _this$props9.isMulti,
						inputValue = _this$props9.inputValue,
						placeholder = _this$props9.placeholder;
					var _this$state4 = this.state,
						selectValue = _this$state4.selectValue,
						focusedValue = _this$state4.focusedValue,
						isFocused = _this$state4.isFocused;

					if (!this.hasValue() || !controlShouldRenderValue) {
						return inputValue
							? null
							: /*#__PURE__*/ React.createElement(
									Placeholder,
									_extends$2({}, commonProps, {
										key: "placeholder",
										isDisabled: isDisabled,
										isFocused: isFocused,
									}),
									placeholder
							  );
					}

					if (isMulti) {
						var selectValues = selectValue.map(function (
							opt,
							index
						) {
							var isOptionFocused = opt === focusedValue;
							return /*#__PURE__*/ React.createElement(
								MultiValue,
								_extends$2({}, commonProps, {
									components: {
										Container: MultiValueContainer,
										Label: MultiValueLabel,
										Remove: MultiValueRemove,
									},
									isFocused: isOptionFocused,
									isDisabled: isDisabled,
									key: ""
										.concat(_this3.getOptionValue(opt))
										.concat(index),
									index: index,
									removeProps: {
										onClick: function onClick() {
											return _this3.removeValue(opt);
										},
										onTouchEnd: function onTouchEnd() {
											return _this3.removeValue(opt);
										},
										onMouseDown: function onMouseDown(e) {
											e.preventDefault();
											e.stopPropagation();
										},
									},
									data: opt,
								}),
								_this3.formatOptionLabel(opt, "value")
							);
						});
						return selectValues;
					}

					if (inputValue) {
						return null;
					}

					var singleValue = selectValue[0];
					return /*#__PURE__*/ React.createElement(
						SingleValue,
						_extends$2({}, commonProps, {
							data: singleValue,
							isDisabled: isDisabled,
						}),
						this.formatOptionLabel(singleValue, "value")
					);
				},
			},
			{
				key: "renderClearIndicator",
				value: function renderClearIndicator() {
					var _this$getComponents3 = this.getComponents(),
						ClearIndicator = _this$getComponents3.ClearIndicator;

					var commonProps = this.commonProps;
					var _this$props10 = this.props,
						isDisabled = _this$props10.isDisabled,
						isLoading = _this$props10.isLoading;
					var isFocused = this.state.isFocused;

					if (
						!this.isClearable() ||
						!ClearIndicator ||
						isDisabled ||
						!this.hasValue() ||
						isLoading
					) {
						return null;
					}

					var innerProps = {
						onMouseDown: this.onClearIndicatorMouseDown,
						onTouchEnd: this.onClearIndicatorTouchEnd,
						"aria-hidden": "true",
					};
					return /*#__PURE__*/ React.createElement(
						ClearIndicator,
						_extends$2({}, commonProps, {
							innerProps: innerProps,
							isFocused: isFocused,
						})
					);
				},
			},
			{
				key: "renderLoadingIndicator",
				value: function renderLoadingIndicator() {
					var _this$getComponents4 = this.getComponents(),
						LoadingIndicator =
							_this$getComponents4.LoadingIndicator;

					var commonProps = this.commonProps;
					var _this$props11 = this.props,
						isDisabled = _this$props11.isDisabled,
						isLoading = _this$props11.isLoading;
					var isFocused = this.state.isFocused;
					if (!LoadingIndicator || !isLoading) return null;
					var innerProps = {
						"aria-hidden": "true",
					};
					return /*#__PURE__*/ React.createElement(
						LoadingIndicator,
						_extends$2({}, commonProps, {
							innerProps: innerProps,
							isDisabled: isDisabled,
							isFocused: isFocused,
						})
					);
				},
			},
			{
				key: "renderIndicatorSeparator",
				value: function renderIndicatorSeparator() {
					var _this$getComponents5 = this.getComponents(),
						DropdownIndicator =
							_this$getComponents5.DropdownIndicator,
						IndicatorSeparator =
							_this$getComponents5.IndicatorSeparator; // separator doesn't make sense without the dropdown indicator

					if (!DropdownIndicator || !IndicatorSeparator) return null;
					var commonProps = this.commonProps;
					var isDisabled = this.props.isDisabled;
					var isFocused = this.state.isFocused;
					return /*#__PURE__*/ React.createElement(
						IndicatorSeparator,
						_extends$2({}, commonProps, {
							isDisabled: isDisabled,
							isFocused: isFocused,
						})
					);
				},
			},
			{
				key: "renderDropdownIndicator",
				value: function renderDropdownIndicator() {
					var _this$getComponents6 = this.getComponents(),
						DropdownIndicator =
							_this$getComponents6.DropdownIndicator;

					if (!DropdownIndicator) return null;
					var commonProps = this.commonProps;
					var isDisabled = this.props.isDisabled;
					var isFocused = this.state.isFocused;
					var innerProps = {
						onMouseDown: this.onDropdownIndicatorMouseDown,
						onTouchEnd: this.onDropdownIndicatorTouchEnd,
						"aria-hidden": "true",
					};
					return /*#__PURE__*/ React.createElement(
						DropdownIndicator,
						_extends$2({}, commonProps, {
							innerProps: innerProps,
							isDisabled: isDisabled,
							isFocused: isFocused,
						})
					);
				},
			},
			{
				key: "renderMenu",
				value: function renderMenu() {
					var _this4 = this;

					var _this$getComponents7 = this.getComponents(),
						Group = _this$getComponents7.Group,
						GroupHeading = _this$getComponents7.GroupHeading,
						Menu = _this$getComponents7.Menu,
						MenuList = _this$getComponents7.MenuList,
						MenuPortal = _this$getComponents7.MenuPortal,
						LoadingMessage = _this$getComponents7.LoadingMessage,
						NoOptionsMessage =
							_this$getComponents7.NoOptionsMessage,
						Option = _this$getComponents7.Option;

					var commonProps = this.commonProps;
					var focusedOption = this.state.focusedOption;
					var _this$props12 = this.props,
						captureMenuScroll = _this$props12.captureMenuScroll,
						inputValue = _this$props12.inputValue,
						isLoading = _this$props12.isLoading,
						loadingMessage = _this$props12.loadingMessage,
						minMenuHeight = _this$props12.minMenuHeight,
						maxMenuHeight = _this$props12.maxMenuHeight,
						menuIsOpen = _this$props12.menuIsOpen,
						menuPlacement = _this$props12.menuPlacement,
						menuPosition = _this$props12.menuPosition,
						menuPortalTarget = _this$props12.menuPortalTarget,
						menuShouldBlockScroll =
							_this$props12.menuShouldBlockScroll,
						menuShouldScrollIntoView =
							_this$props12.menuShouldScrollIntoView,
						noOptionsMessage = _this$props12.noOptionsMessage,
						onMenuScrollToTop = _this$props12.onMenuScrollToTop,
						onMenuScrollToBottom =
							_this$props12.onMenuScrollToBottom;
					if (!menuIsOpen) return null; // TODO: Internal Option Type here

					var render = function render(props, id) {
						var type = props.type,
							data = props.data,
							isDisabled = props.isDisabled,
							isSelected = props.isSelected,
							label = props.label,
							value = props.value;
						var isFocused = focusedOption === data;
						var onHover = isDisabled
							? undefined
							: function () {
									return _this4.onOptionHover(data);
							  };
						var onSelect = isDisabled
							? undefined
							: function () {
									return _this4.selectOption(data);
							  };
						var optionId = ""
							.concat(_this4.getElementId("option"), "-")
							.concat(id);
						var innerProps = {
							id: optionId,
							onClick: onSelect,
							onMouseMove: onHover,
							onMouseOver: onHover,
							tabIndex: -1,
						};
						return /*#__PURE__*/ React.createElement(
							Option,
							_extends$2({}, commonProps, {
								innerProps: innerProps,
								data: data,
								isDisabled: isDisabled,
								isSelected: isSelected,
								key: optionId,
								label: label,
								type: type,
								value: value,
								isFocused: isFocused,
								innerRef: isFocused
									? _this4.getFocusedOptionRef
									: undefined,
							}),
							_this4.formatOptionLabel(props.data, "menu")
						);
					};

					var menuUI;

					if (this.hasOptions()) {
						menuUI = this.getCategorizedOptions().map(function (
							item
						) {
							if (item.type === "group") {
								var data = item.data,
									options = item.options,
									groupIndex = item.index;
								var groupId = ""
									.concat(_this4.getElementId("group"), "-")
									.concat(groupIndex);
								var headingId = "".concat(groupId, "-heading");
								return /*#__PURE__*/ React.createElement(
									Group,
									_extends$2({}, commonProps, {
										key: groupId,
										data: data,
										options: options,
										Heading: GroupHeading,
										headingProps: {
											id: headingId,
											data: item.data,
										},
										label: _this4.formatGroupLabel(
											item.data
										),
									}),
									item.options.map(function (option) {
										return render(
											option,
											""
												.concat(groupIndex, "-")
												.concat(option.index)
										);
									})
								);
							} else if (item.type === "option") {
								return render(item, "".concat(item.index));
							}
						});
					} else if (isLoading) {
						var message = loadingMessage({
							inputValue: inputValue,
						});
						if (message === null) return null;
						menuUI = /*#__PURE__*/ React.createElement(
							LoadingMessage,
							commonProps,
							message
						);
					} else {
						var _message = noOptionsMessage({
							inputValue: inputValue,
						});

						if (_message === null) return null;
						menuUI = /*#__PURE__*/ React.createElement(
							NoOptionsMessage,
							commonProps,
							_message
						);
					}

					var menuPlacementProps = {
						minMenuHeight: minMenuHeight,
						maxMenuHeight: maxMenuHeight,
						menuPlacement: menuPlacement,
						menuPosition: menuPosition,
						menuShouldScrollIntoView: menuShouldScrollIntoView,
					};
					var menuElement = /*#__PURE__*/ React.createElement(
						MenuPlacer,
						_extends$2({}, commonProps, menuPlacementProps),
						function (_ref4) {
							var ref = _ref4.ref,
								_ref4$placerProps = _ref4.placerProps,
								placement = _ref4$placerProps.placement,
								maxHeight = _ref4$placerProps.maxHeight;
							return /*#__PURE__*/ React.createElement(
								Menu,
								_extends$2(
									{},
									commonProps,
									menuPlacementProps,
									{
										innerRef: ref,
										innerProps: {
											onMouseDown: _this4.onMenuMouseDown,
											onMouseMove: _this4.onMenuMouseMove,
										},
										isLoading: isLoading,
										placement: placement,
									}
								),
								/*#__PURE__*/ React.createElement(
									ScrollManager,
									{
										captureEnabled: captureMenuScroll,
										onTopArrive: onMenuScrollToTop,
										onBottomArrive: onMenuScrollToBottom,
										lockEnabled: menuShouldBlockScroll,
									},
									function (scrollTargetRef) {
										return /*#__PURE__*/ React.createElement(
											MenuList,
											_extends$2({}, commonProps, {
												innerRef: function innerRef(
													instance
												) {
													_this4.getMenuListRef(
														instance
													);

													scrollTargetRef(instance);
												},
												isLoading: isLoading,
												maxHeight: maxHeight,
												focusedOption: focusedOption,
											}),
											menuUI
										);
									}
								)
							);
						}
					); // positioning behaviour is almost identical for portalled and fixed,
					// so we use the same component. the actual portalling logic is forked
					// within the component based on `menuPosition`

					return menuPortalTarget || menuPosition === "fixed"
						? /*#__PURE__*/ React.createElement(
								MenuPortal,
								_extends$2({}, commonProps, {
									appendTo: menuPortalTarget,
									controlElement: this.controlRef,
									menuPlacement: menuPlacement,
									menuPosition: menuPosition,
								}),
								menuElement
						  )
						: menuElement;
				},
			},
			{
				key: "renderFormField",
				value: function renderFormField() {
					var _this5 = this;

					var _this$props13 = this.props,
						delimiter = _this$props13.delimiter,
						isDisabled = _this$props13.isDisabled,
						isMulti = _this$props13.isMulti,
						name = _this$props13.name;
					var selectValue = this.state.selectValue;
					if (!name || isDisabled) return;

					if (isMulti) {
						if (delimiter) {
							var value = selectValue
								.map(function (opt) {
									return _this5.getOptionValue(opt);
								})
								.join(delimiter);
							return /*#__PURE__*/ React.createElement("input", {
								name: name,
								type: "hidden",
								value: value,
							});
						} else {
							var input =
								selectValue.length > 0
									? selectValue.map(function (opt, i) {
											return /*#__PURE__*/ React.createElement(
												"input",
												{
													key: "i-".concat(i),
													name: name,
													type: "hidden",
													value: _this5.getOptionValue(
														opt
													),
												}
											);
									  })
									: /*#__PURE__*/ React.createElement(
											"input",
											{
												name: name,
												type: "hidden",
											}
									  );
							return /*#__PURE__*/ React.createElement(
								"div",
								null,
								input
							);
						}
					} else {
						var _value = selectValue[0]
							? this.getOptionValue(selectValue[0])
							: "";

						return /*#__PURE__*/ React.createElement("input", {
							name: name,
							type: "hidden",
							value: _value,
						});
					}
				},
			},
			{
				key: "renderLiveRegion",
				value: function renderLiveRegion() {
					var commonProps = this.commonProps;
					var _this$state5 = this.state,
						ariaSelection = _this$state5.ariaSelection,
						focusedOption = _this$state5.focusedOption,
						focusedValue = _this$state5.focusedValue,
						isFocused = _this$state5.isFocused,
						selectValue = _this$state5.selectValue;
					var focusableOptions = this.getFocusableOptions();
					return /*#__PURE__*/ React.createElement(
						LiveRegion,
						_extends$2({}, commonProps, {
							ariaSelection: ariaSelection,
							focusedOption: focusedOption,
							focusedValue: focusedValue,
							isFocused: isFocused,
							selectValue: selectValue,
							focusableOptions: focusableOptions,
						})
					);
				},
			},
			{
				key: "render",
				value: function render() {
					var _this$getComponents8 = this.getComponents(),
						Control = _this$getComponents8.Control,
						IndicatorsContainer =
							_this$getComponents8.IndicatorsContainer,
						SelectContainer = _this$getComponents8.SelectContainer,
						ValueContainer = _this$getComponents8.ValueContainer;

					var _this$props14 = this.props,
						className = _this$props14.className,
						id = _this$props14.id,
						isDisabled = _this$props14.isDisabled,
						menuIsOpen = _this$props14.menuIsOpen;
					var isFocused = this.state.isFocused;
					var commonProps = (this.commonProps =
						this.getCommonProps());
					return /*#__PURE__*/ React.createElement(
						SelectContainer,
						_extends$2({}, commonProps, {
							className: className,
							innerProps: {
								id: id,
								onKeyDown: this.onKeyDown,
							},
							isDisabled: isDisabled,
							isFocused: isFocused,
						}),
						this.renderLiveRegion(),
						/*#__PURE__*/ React.createElement(
							Control,
							_extends$2({}, commonProps, {
								innerRef: this.getControlRef,
								innerProps: {
									onMouseDown: this.onControlMouseDown,
									onTouchEnd: this.onControlTouchEnd,
								},
								isDisabled: isDisabled,
								isFocused: isFocused,
								menuIsOpen: menuIsOpen,
							}),
							/*#__PURE__*/ React.createElement(
								ValueContainer,
								_extends$2({}, commonProps, {
									isDisabled: isDisabled,
								}),
								this.renderPlaceholderOrValue(),
								this.renderInput()
							),
							/*#__PURE__*/ React.createElement(
								IndicatorsContainer,
								_extends$2({}, commonProps, {
									isDisabled: isDisabled,
								}),
								this.renderClearIndicator(),
								this.renderLoadingIndicator(),
								this.renderIndicatorSeparator(),
								this.renderDropdownIndicator()
							)
						),
						this.renderMenu(),
						this.renderFormField()
					);
				},
			},
		],
		[
			{
				key: "getDerivedStateFromProps",
				value: function getDerivedStateFromProps(props, state) {
					var prevProps = state.prevProps,
						clearFocusValueOnUpdate = state.clearFocusValueOnUpdate,
						inputIsHiddenAfterUpdate =
							state.inputIsHiddenAfterUpdate;
					var options = props.options,
						value = props.value,
						menuIsOpen = props.menuIsOpen,
						inputValue = props.inputValue;
					var newMenuOptionsState = {};

					if (
						prevProps &&
						(value !== prevProps.value ||
							options !== prevProps.options ||
							menuIsOpen !== prevProps.menuIsOpen ||
							inputValue !== prevProps.inputValue)
					) {
						var selectValue = cleanValue(value);
						var focusableOptions = menuIsOpen
							? buildFocusableOptions(props, selectValue)
							: [];
						var focusedValue = clearFocusValueOnUpdate
							? getNextFocusedValue(state, selectValue)
							: null;
						var focusedOption = getNextFocusedOption(
							state,
							focusableOptions
						);
						newMenuOptionsState = {
							selectValue: selectValue,
							focusedOption: focusedOption,
							focusedValue: focusedValue,
							clearFocusValueOnUpdate: false,
						};
					} // some updates should toggle the state of the input visibility

					var newInputIsHiddenState =
						inputIsHiddenAfterUpdate != null && props !== prevProps
							? {
									inputIsHidden: inputIsHiddenAfterUpdate,
									inputIsHiddenAfterUpdate: undefined,
							  }
							: {};
					return _objectSpread2(
						_objectSpread2(
							_objectSpread2({}, newMenuOptionsState),
							newInputIsHiddenState
						),
						{},
						{
							prevProps: props,
						}
					);
				},
			},
		]
	);

	return Select;
})(Component);

Select$2.defaultProps = defaultProps$2;

var defaultProps$1 = {
	defaultInputValue: "",
	defaultMenuIsOpen: false,
	defaultValue: null,
};

var manageState = function manageState(SelectComponent) {
	var _class, _temp;

	return (
		(_temp = _class =
			/*#__PURE__*/ (function (_Component) {
				_inherits$1(StateManager, _Component);

				var _super = _createSuper(StateManager);

				function StateManager() {
					var _this;

					_classCallCheck$1(this, StateManager);

					for (
						var _len = arguments.length,
							args = new Array(_len),
							_key = 0;
						_key < _len;
						_key++
					) {
						args[_key] = arguments[_key];
					}

					_this = _super.call.apply(_super, [this].concat(args));
					_this.select = void 0;
					_this.state = {
						inputValue:
							_this.props.inputValue !== undefined
								? _this.props.inputValue
								: _this.props.defaultInputValue,
						menuIsOpen:
							_this.props.menuIsOpen !== undefined
								? _this.props.menuIsOpen
								: _this.props.defaultMenuIsOpen,
						value:
							_this.props.value !== undefined
								? _this.props.value
								: _this.props.defaultValue,
					};

					_this.onChange = function (value, actionMeta) {
						_this.callProp("onChange", value, actionMeta);

						_this.setState({
							value: value,
						});
					};

					_this.onInputChange = function (value, actionMeta) {
						// TODO: for backwards compatibility, we allow the prop to return a new
						// value, but now inputValue is a controllable prop we probably shouldn't
						var newValue = _this.callProp(
							"onInputChange",
							value,
							actionMeta
						);

						_this.setState({
							inputValue:
								newValue !== undefined ? newValue : value,
						});
					};

					_this.onMenuOpen = function () {
						_this.callProp("onMenuOpen");

						_this.setState({
							menuIsOpen: true,
						});
					};

					_this.onMenuClose = function () {
						_this.callProp("onMenuClose");

						_this.setState({
							menuIsOpen: false,
						});
					};

					return _this;
				}

				_createClass$1(StateManager, [
					{
						key: "focus",
						value: function focus() {
							this.select.focus();
						},
					},
					{
						key: "blur",
						value: function blur() {
							this.select.blur();
						}, // FIXME: untyped flow code, return any
					},
					{
						key: "getProp",
						value: function getProp(key) {
							return this.props[key] !== undefined
								? this.props[key]
								: this.state[key];
						}, // FIXME: untyped flow code, return any
					},
					{
						key: "callProp",
						value: function callProp(name) {
							if (typeof this.props[name] === "function") {
								var _this$props;

								for (
									var _len2 = arguments.length,
										args = new Array(
											_len2 > 1 ? _len2 - 1 : 0
										),
										_key2 = 1;
									_key2 < _len2;
									_key2++
								) {
									args[_key2 - 1] = arguments[_key2];
								}

								return (_this$props = this.props)[name].apply(
									_this$props,
									args
								);
							}
						},
					},
					{
						key: "render",
						value: function render() {
							var _this2 = this;

							var _this$props2 = this.props;
							_this$props2.defaultInputValue;
							_this$props2.defaultMenuIsOpen;
							_this$props2.defaultValue;
							var props = _objectWithoutProperties$1(
								_this$props2,
								[
									"defaultInputValue",
									"defaultMenuIsOpen",
									"defaultValue",
								]
							);

							return /*#__PURE__*/ React.createElement(
								SelectComponent,
								_extends$2({}, props, {
									ref: function ref(_ref) {
										_this2.select = _ref;
									},
									inputValue: this.getProp("inputValue"),
									menuIsOpen: this.getProp("menuIsOpen"),
									onChange: this.onChange,
									onInputChange: this.onInputChange,
									onMenuClose: this.onMenuClose,
									onMenuOpen: this.onMenuOpen,
									value: this.getProp("value"),
								})
							);
						},
					},
				]);

				return StateManager;
			})(Component)),
		(_class.defaultProps = defaultProps$1),
		_temp
	);
};

var index = manageState(Select$2);

var ReactSelect = index;

var Select = function Select(props) {
	var builderContext = useBuilderContext();
	var id = props.id,
		name = props.name,
		multiple = props.multiple,
		placeholder = props.placeholder,
		_props$search = props.search,
		search = _props$search === void 0 ? false : _props$search,
		onChange = props.onChange,
		parentIndex = props.parentIndex;

	var _useOptions = useOptions(props, "options"),
		options = _useOptions.options,
		selectedOption = _useOptions.selectedOption,
		setData = _useOptions.setData;

	var _useState = useState(null),
		_useState2 = _slicedToArray(_useState, 2),
		sOption = _useState2[0],
		setSOption = _useState2[1];

	var _useState3 = useState(false),
		_useState4 = _slicedToArray(_useState3, 2),
		isLoading = _useState4[0],
		setIsLoading = _useState4[1];

	var _useState5 = useState(false),
		_useState6 = _slicedToArray(_useState5, 2),
		isAjaxComplete = _useState6[0];
	_useState6[1];

	var handleMenuOpen = function handleMenuOpen() {
		var _props$ajax;

		// AJAX
		if (
			props !== null &&
			props !== void 0 &&
			props.ajax &&
			when(
				props === null || props === void 0
					? void 0
					: (_props$ajax = props.ajax) === null ||
					  _props$ajax === void 0
					? void 0
					: _props$ajax.rules,
				builderContext.values
			)
		) {
			setIsLoading(true);
			var data = {};
			Object.keys(
				props === null || props === void 0 ? void 0 : props.ajax.data
			).map(function (singleData) {
				if (
					(props === null || props === void 0
						? void 0
						: props.ajax.data[singleData].indexOf("@")) > -1
				) {
					var _builderContext$value;

					var eligibleKey =
						props === null || props === void 0
							? void 0
							: props.ajax.data[singleData].substr(1);
					data[singleData] =
						(_builderContext$value = builderContext.values) ===
							null || _builderContext$value === void 0
							? void 0
							: _builderContext$value[eligibleKey];
				} else {
					data[singleData] =
						props === null || props === void 0
							? void 0
							: props.ajax.data[singleData];
				}
			});

			if (!isAjaxComplete) {
				return wpFetch({
					path:
						props === null || props === void 0
							? void 0
							: props.ajax.api,
					data: data,
				}).then(function (response) {
					setIsLoading(false);
					var arrayMerge = merge$1(props.options, response, "value");
					builderContext.setFormField(
						[].concat(_toConsumableArray(parentIndex), ["options"]),
						arrayMerge
					);
					setData({
						options: arrayMerge,
						parentIndex: [].concat(
							_toConsumableArray(parentIndex),
							["options"]
						),
					}); // setIsAjaxComplete(true);

					return response;
				});
			}
		}
	};

	var handleMenuClose = function handleMenuClose() {
		setIsLoading(false);
	};

	useEffect(
		function () {
			if (!isArray(sOption) && isObject(sOption)) {
				onChange({
					target: {
						type: "select",
						name: name,
						value: sOption.value,
						options: options,
						multiple: multiple,
					},
				});
			}

			if (isArray(sOption)) {
				onChange({
					target: {
						type: "select",
						name: name,
						value: sOption.map(function (item) {
							return item.value;
						}),
						options: options,
						multiple: multiple,
					},
				});
			}
		},
		[sOption]
	);
	useEffect(function () {
		handleMenuOpen();
	}, []);
	useEffect(
		function () {
			if (props !== null && props !== void 0 && props.menuOpen) {
				handleMenuOpen();
			}
		},
		[props === null || props === void 0 ? void 0 : props.menuOpen]
	);
	return createElement(
		"div",
		{
			className: "wprf-select-wrapper",
		},
		createElement(ReactSelect, {
			isDisabled:
				props === null || props === void 0 ? void 0 : props.disable,
			classNamePrefix: "wprf-select",
			isSearchable: search !== null && search !== void 0 ? search : false,
			id: id,
			name: name,
			isMulti:
				multiple !== null && multiple !== void 0 ? multiple : false,
			placeholder: placeholder,
			isLoading: isLoading,
			options: options,
			value: selectedOption,
			onMenuOpen: handleMenuOpen,
			onMenuClose: handleMenuClose,
			isOptionDisabled: function isOptionDisabled(option) {
				return option === null || option === void 0
					? void 0
					: option.disabled;
			},
			onChange: function onChange(option) {
				return setSOption(option);
			}, // option or options
		})
	);
};

var Select$1 = withLabel(Select);

// Disable reason: Object and object are distinctly different types in TypeScript and we mean the lowercase object in thise case
/**
 * @type {WeakMap<object, number>}
 */

const instanceMap = new WeakMap();
/**
 * Creates a new id for a given object.
 *
 * @param {object} object Object reference to create an id for.
 * @return {number} The instance id (index).
 */

function createId(object) {
	const instances = instanceMap.get(object) || 0;
	instanceMap.set(object, instances + 1);
	return instances;
}
/**
 * Provides a unique instance ID.
 *
 * @param {object}          object           Object reference to create an id for.
 * @param {string}          [prefix]         Prefix for the unique id.
 * @param {string | number} [preferredId=''] Default ID to use.
 * @return {string | number} The unique instance id.
 */

function useInstanceId(object, prefix, preferredId = "") {
	return useMemo(() => {
		if (preferredId) return preferredId;
		const id = createId(object);
		return prefix ? `${prefix}-${id}` : id;
	}, [object]);
}
/* eslint-enable jsdoc/check-types */

var RepeaterField = function RepeaterField(props) {
	var fields = props.fields,
		_onChange = props.onChange,
		index = props.index,
		parent = props.parent;

	var _useState = useState(props.isOpen),
		_useState2 = _slicedToArray(_useState, 2),
		isCollapse = _useState2[0],
		setIsCollapse = _useState2[1];

	var instanceId = useInstanceId(RepeaterField); // onClick={() => setIsCollapse(!isCollapse)}

	return createElement(
		"div",
		{
			className: "wprf-repeater-field",
		},
		createElement(
			"div",
			{
				className: "wprf-repeater-field-title",
				onClick: function onClick() {
					return setIsCollapse(!isCollapse);
				},
			},
			createElement("h4", null, "#ID: ", props.index),
			createElement(
				"div",
				{
					className: "wprf-repeater-field-controls",
				},
				createElement(Icon, {
					onClick: function onClick() {
						return props.clone(props.index);
					},
					icon: "admin-page",
				}),
				createElement(Icon, {
					onClick: function onClick() {
						return props.remove(props.index);
					},
					icon: "trash",
				})
			)
		),
		isCollapse &&
			createElement(
				"div",
				{
					className: "wprf-repeater-inner-field",
				},
				fields.map(function (field, fieldIndex) {
					return createElement(
						GenericField,
						_extends$2(
							{
								key: "field-"
									.concat(index, "-")
									.concat(fieldIndex),
							},
							field,
							{
								id: "field-"
									.concat(instanceId, "-")
									.concat(index, "-")
									.concat(fieldIndex),
								index: index,
								parenttype: "repeater",
								parent: parent,
								onChange: function onChange(event) {
									return _onChange(event, index);
								},
							}
						)
					);
				})
			)
	);
};

function ownKeys$2(object, enumerableOnly) {
	var keys = Object.keys(object);
	if (Object.getOwnPropertySymbols) {
		var symbols = Object.getOwnPropertySymbols(object);
		if (enumerableOnly) {
			symbols = symbols.filter(function (sym) {
				return Object.getOwnPropertyDescriptor(object, sym).enumerable;
			});
		}
		keys.push.apply(keys, symbols);
	}
	return keys;
}

function _objectSpread$2(target) {
	for (var i = 1; i < arguments.length; i++) {
		var source = arguments[i] != null ? arguments[i] : {};
		if (i % 2) {
			ownKeys$2(Object(source), true).forEach(function (key) {
				_defineProperty$1(target, key, source[key]);
			});
		} else if (Object.getOwnPropertyDescriptors) {
			Object.defineProperties(
				target,
				Object.getOwnPropertyDescriptors(source)
			);
		} else {
			ownKeys$2(Object(source)).forEach(function (key) {
				Object.defineProperty(
					target,
					key,
					Object.getOwnPropertyDescriptor(source, key)
				);
			});
		}
	}
	return target;
}

var GenericToggle = function GenericToggle(props) {
	var _styles$label, _styles$label2, _classNames;

	var prevStyles = props.style;

	var styles = _objectSpread$2(
		{
			type: "",
			// card
			label: {
				position: "right",
			},
			column: 4,
		},
		prevStyles
	);

	var isChecked = useMemo(
		function () {
			var _isChecked = false;

			if (
				props !== null &&
				props !== void 0 &&
				props.checked &&
				isObject(props.checked) &&
				isString(
					props === null || props === void 0 ? void 0 : props.value
				)
			) {
				_isChecked = props.checked[props.value];
			} else {
				if (!isString(props.value)) {
					_isChecked = props.value;
				}
			}

			return _isChecked;
		},
		[
			props === null || props === void 0 ? void 0 : props.checked,
			props.value,
		]
	);
	var componentClasses = classNames$1(
		"wprf-toggle-wrap",
		((_classNames = {}),
		_defineProperty$1(
			_classNames,
			"wprf-".concat(
				styles === null || styles === void 0 ? void 0 : styles.type
			),
			(styles === null || styles === void 0
				? void 0
				: styles.type.length) > 0
		),
		_defineProperty$1(_classNames, "wprf-checked", Boolean(isChecked)),
		_defineProperty$1(
			_classNames,
			"wprf-label-position-".concat(
				styles === null || styles === void 0
					? void 0
					: (_styles$label = styles.label) === null ||
					  _styles$label === void 0
					? void 0
					: _styles$label.position
			),
			styles === null || styles === void 0
				? void 0
				: (_styles$label2 = styles.label) === null ||
				  _styles$label2 === void 0
				? void 0
				: _styles$label2.position
		),
		_classNames),
		props === null || props === void 0 ? void 0 : props.classes
	);
	return createElement(
		"div",
		{
			className: componentClasses,
		},
		createElement(
			GenericInput,
			_objectSpread$2(
				_objectSpread$2({}, props),
				{},
				{
					type: "checkbox",
					placeholder: undefined,
				}
			)
		),
		createElement(Label, {
			htmlFor: props.id,
		})
	);
};

var GenericToggle$1 = withLabel(GenericToggle);

var ModalContent = function ModalContent(props) {
	var _props$body;

	var isLoading = props.isLoading;
	props.closeModal;

	var _useState = useState([]),
		_useState2 = _slicedToArray(_useState, 2),
		fields = _useState2[0],
		setFields = _useState2[1];

	useEffect(function () {
		var newFields = sortingFields(props.body.fields); // context.setFormField([...props.parentIndex, 'fields'], newFields);

		var allFields = newFields.map(function (item, index) {
			var parentIndex = [].concat(_toConsumableArray(props.parentIndex), [
				"fields",
				index,
			]);
			return createElement(
				Field$1,
				_extends$2(
					{
						key: item.name,
					},
					item,
					{
						parentIndex: parentIndex,
					}
				)
			);
		});
		setFields(allFields);
	}, []);
	return createElement(
		"div",
		{
			className: "wprf-modal-body",
		},
		isLoading && createElement(Loading, null),
		!isLoading &&
			createElement(
				Fragment,
				null,
				createElement(
					"div",
					{
						className: "wprf-modal-content",
					},
					fields.length > 0 && fields
				),
				createElement(
					"div",
					{
						className: "wprf-modal-footer clearfix",
					},
					createElement(
						"div",
						{
							className: "wprf-modal-footer-left",
						},
						((_props$body = props.body) === null ||
						_props$body === void 0
							? void 0
							: _props$body.footer) &&
							isString(props.body.footer) &&
							createElement("p", null, props.body.footer),
						createElement(
							GenericField,
							_extends$2(
								{
									type: "button",
								},
								props === null || props === void 0
									? void 0
									: props.confirm_button
							)
						)
					)
				)
			)
	);
};

var ModalHeader = function ModalHeader(_ref) {
	var content = _ref.content;
	return createElement(
		"div",
		{
			className: "wprf-modal-header",
		},
		content && isString(content) && createElement("h3", null, content)
	);
};

var Loading = function Loading(props) {
	return createElement("p", null, "Loading...");
};

var toolbarOptions = {
	options: ["inline", "blockType", "textAlign", "colorPicker", "link"],
	inline: {
		options: ["bold", "italic", "underline", "strikethrough", "monospace"],
	},
	blockType: {
		inDropdown: true,
		options: [
			"Normal",
			"H1",
			"H2",
			"H3",
			"H4",
			"H5",
			"H6",
			"Blockquote",
			"Code",
		],
		className: undefined,
		component: undefined,
		dropdownClassName: undefined,
	},
};

function _createForOfIteratorHelper(o, allowArrayLike) {
	var it =
		(typeof Symbol !== "undefined" && o[Symbol.iterator]) ||
		o["@@iterator"];
	if (!it) {
		if (
			Array.isArray(o) ||
			(it = _unsupportedIterableToArray(o)) ||
			(allowArrayLike && o && typeof o.length === "number")
		) {
			if (it) o = it;
			var i = 0;
			var F = function F() {};
			return {
				s: F,
				n: function n() {
					if (i >= o.length) return { done: true };
					return { done: false, value: o[i++] };
				},
				e: function e(_e) {
					throw _e;
				},
				f: F,
			};
		}
		throw new TypeError(
			"Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."
		);
	}
	var normalCompletion = true,
		didErr = false,
		err;
	return {
		s: function s() {
			it = it.call(o);
		},
		n: function n() {
			var step = it.next();
			normalCompletion = step.done;
			return step;
		},
		e: function e(_e2) {
			didErr = true;
			err = _e2;
		},
		f: function f() {
			try {
				if (!normalCompletion && it["return"] != null) it["return"]();
			} finally {
				if (didErr) throw err;
			}
		},
	};
}

function _unsupportedIterableToArray(o, minLen) {
	if (!o) return;
	if (typeof o === "string") return _arrayLikeToArray(o, minLen);
	var n = Object.prototype.toString.call(o).slice(8, -1);
	if (n === "Object" && o.constructor) n = o.constructor.name;
	if (n === "Map" || n === "Set") return Array.from(o);
	if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
		return _arrayLikeToArray(o, minLen);
}

function _arrayLikeToArray(arr, len) {
	if (len == null || len > arr.length) len = arr.length;
	for (var i = 0, arr2 = new Array(len); i < len; i++) {
		arr2[i] = arr[i];
	}
	return arr2;
}

function ownKeys$1(object, enumerableOnly) {
	var keys = Object.keys(object);
	if (Object.getOwnPropertySymbols) {
		var symbols = Object.getOwnPropertySymbols(object);
		if (enumerableOnly) {
			symbols = symbols.filter(function (sym) {
				return Object.getOwnPropertyDescriptor(object, sym).enumerable;
			});
		}
		keys.push.apply(keys, symbols);
	}
	return keys;
}

function _objectSpread$1(target) {
	for (var i = 1; i < arguments.length; i++) {
		var source = arguments[i] != null ? arguments[i] : {};
		if (i % 2) {
			ownKeys$1(Object(source), true).forEach(function (key) {
				_defineProperty$1(target, key, source[key]);
			});
		} else if (Object.getOwnPropertyDescriptors) {
			Object.defineProperties(
				target,
				Object.getOwnPropertyDescriptors(source)
			);
		} else {
			ownKeys$1(Object(source)).forEach(function (key) {
				Object.defineProperty(
					target,
					key,
					Object.getOwnPropertyDescriptor(source, key)
				);
			});
		}
	}
	return target;
}
var Toggle = function Toggle(props) {
	var passedOptions = props.options,
		value = props.value,
		multiple = props.multiple,
		prevStyles = props.style;
	var options = sortingFields(passedOptions);

	var styles = _objectSpread$1(
		{
			column: 4,
		},
		prevStyles
	);

	if (multiple) {
		var _useState = useState({}),
			_useState2 = _slicedToArray(_useState, 2),
			localState = _useState2[0],
			setLocalState = _useState2[1];

		var handleChange = function handleChange(event) {
			var target = event.target ? event.target : event.currentTarget;
			setLocalState(function (prevState) {
				return _objectSpread$1(
					_objectSpread$1({}, prevState),
					{},
					_defineProperty$1({}, target.value, target.checked)
				);
			});
		};

		useEffect(
			function () {
				props.onChange({
					target: {
						type: "toggle",
						name: props.name,
						value: localState,
					},
				});
			},
			[localState]
		);
		useEffect(function () {
			if (!isObject(value)) {
				var lState = {};

				var _iterator = _createForOfIteratorHelper(options),
					_step;

				try {
					for (_iterator.s(); !(_step = _iterator.n()).done; ) {
						var option = _step.value;
						lState[option.value] = value;
					}
				} catch (err) {
					_iterator.e(err);
				} finally {
					_iterator.f();
				}

				setLocalState(lState);
			} else {
				setLocalState(value);
			}
		}, []);
		return createElement(
			"div",
			{
				className: "wprf-toggle-wrapper wprf-control",
			},
			createElement(
				Row,
				null,
				options.map(function (item) {
					return createElement(
						Column,
						{
							key: item.value,
							column: styles.column,
						},
						createElement(
							GenericToggle$1,
							_objectSpread$1(
								_objectSpread$1({}, item),
								{},
								{
									context:
										props === null || props === void 0
											? void 0
											: props.context,
									id: item.value,
									checked:
										localState !== null &&
										localState !== void 0 &&
										localState[item.value]
											? value
											: !!(
													localState !== null &&
													localState !== void 0 &&
													localState[item.value]
											  ),
									type: "checkbox",
									onChange: handleChange,
									style: styles,
								}
							)
						)
					);
				})
			)
		);
	}

	return createElement(GenericToggle$1, props);
};

var _excluded$2 = ["label", "value", "icon", "is_pro"];

function ownKeys(object, enumerableOnly) {
	var keys = Object.keys(object);
	if (Object.getOwnPropertySymbols) {
		var symbols = Object.getOwnPropertySymbols(object);
		if (enumerableOnly) {
			symbols = symbols.filter(function (sym) {
				return Object.getOwnPropertyDescriptor(object, sym).enumerable;
			});
		}
		keys.push.apply(keys, symbols);
	}
	return keys;
}

function _objectSpread(target) {
	for (var i = 1; i < arguments.length; i++) {
		var source = arguments[i] != null ? arguments[i] : {};
		if (i % 2) {
			ownKeys(Object(source), true).forEach(function (key) {
				_defineProperty$1(target, key, source[key]);
			});
		} else if (Object.getOwnPropertyDescriptors) {
			Object.defineProperties(
				target,
				Object.getOwnPropertyDescriptors(source)
			);
		} else {
			ownKeys(Object(source)).forEach(function (key) {
				Object.defineProperty(
					target,
					key,
					Object.getOwnPropertyDescriptor(source, key)
				);
			});
		}
	}
	return target;
}

var RadioCard = function RadioCard(props) {
	var builderContext = useBuilderContext();

	var _useOptions = useOptions(props, "options"),
		options = _useOptions.options,
		option = _useOptions.option;

	if (!options) {
		throw new Error(
			"#options is a required arguments for RadioCard field."
		);
	}

	var instanceId = useInstanceId(RadioCard);
	var componentClasses = classNames$1([
		"wprf-control",
		"wprf-radio-card",
		"wprf-input-radio-set-wrap",
		props === null || props === void 0 ? void 0 : props.className,
	]);

	var styles = _objectSpread(
		{},
		props === null || props === void 0 ? void 0 : props.style
	);

	var validProps = validFieldProps(props, [
		"options",
		"placeholder",
		"style",
		"trigger",
	]);
	useEffect(
		function () {
			if (option) {
				props.onChange({
					target: {
						type: "radio-card",
						name: props.name,
						value: option,
					},
				});
			}
		},
		[option]
	);
	return createElement(
		"div",
		{
			className: componentClasses,
		},
		createElement(
			Row,
			null,
			options.map(function (_ref, index) {
				var _ref2;

				var label = _ref.label,
					value = _ref.value,
					icon = _ref.icon,
					is_pro = _ref.is_pro,
					rest = _objectWithoutProperties$1(_ref, _excluded$2);

				return createElement(
					Column,
					{
						column:
							+(rest === null || rest === void 0
								? void 0
								: rest.column) || 4,
						key: index,
					},
					createElement(
						"div",
						{
							className: classNames$1("wprf-input-radio-option", {
								"wprf-option-has-image":
									icon !== null && icon !== void 0
										? icon
										: false,
								"wprf-option-selected": value == option,
							}),
						},
						createElement(
							Label,
							{
								className: classNames$1(
									_defineProperty$1(
										{
											"wprf-label-has-image":
												icon !== null && icon !== void 0
													? icon
													: false,
										},
										"wprf-size-".concat(styles.size),
										(_ref2 =
											icon &&
											(styles === null ||
											styles === void 0
												? void 0
												: styles.size)) !== null &&
											_ref2 !== void 0
											? _ref2
											: false
									)
								),
								htmlFor: "wprf-input-radio-"
									.concat(instanceId, "-")
									.concat(index),
								src: icon,
								badge: {
									label: is_pro ? "Pro" : "Free",
									value: is_pro,
									active: Boolean(
										builderContext.is_pro_active
									),
								},
							},
							label
						),
						createElement(
							GenericInput,
							_extends$2({}, validProps, {
								is_pro: is_pro,
								type: "radio",
								value: value,
								checked: value === option,
								id: "wprf-input-radio-"
									.concat(instanceId, "-")
									.concat(index),
							})
						)
					)
				);
			})
		)
	);
};

var Radio = withLabel(RadioCard);

var Section = function Section(props) {
	var _props$collapsed;

	var builderContext = useBuilderContext();

	var _useState = useState(
			(_props$collapsed = props.collapsed) !== null &&
				_props$collapsed !== void 0
				? _props$collapsed
				: false
		),
		_useState2 = _slicedToArray(_useState, 2),
		isCollapse = _useState2[0],
		setCollapse = _useState2[1];

	var _useState3 = useState([]),
		_useState4 = _slicedToArray(_useState3, 2),
		fields = _useState4[0],
		setFields = _useState4[1];

	useEffect(function () {
		var newFields = sortingFields(props.fields);
		/**
		 * FIXME: the line below the doc:
		 * Commented for Issue#11, Cycle 7
		 * Uncommented for Issue #38, Cycle 7
		 */

		builderContext.setFormField(
			[].concat(_toConsumableArray(props.parentIndex), ["fields"]),
			newFields
		); // builderContext.setFormField([...props.parentIndex, 'sorted'], true);

		var allFields = newFields.map(function (item, index) {
			var parentIndex = [].concat(_toConsumableArray(props.parentIndex), [
				"fields",
				index,
			]);
			return createElement(
				Field$1,
				_extends$2(
					{
						key: item.name,
					},
					item,
					{
						parentIndex: parentIndex,
					}
				)
			);
		});
		setFields(allFields);
	}, []);
	var componentClasses = classNames$1(
		"wprf-control-section",
		props === null || props === void 0 ? void 0 : props.classes,
		props === null || props === void 0 ? void 0 : props.name,
		{
			"wprf-section-collapsed":
				(props === null || props === void 0
					? void 0
					: props.collapsible) && isCollapse,
		}
	);
	return createElement(
		"div",
		{
			className: componentClasses,
		},
		props.placeholder &&
			createElement(
				"div",
				{
					className: "wprf-section-title",
				},
				createElement("h4", null, props.placeholder),
				props.collapsible &&
					createElement(
						"button",
						{
							onClick: function onClick() {
								return setCollapse(!isCollapse);
							},
						},
						"Icon"
					)
			),
		createElement(
			"div",
			{
				className: "wprf-section-fields",
			},
			fields
		)
	);
};

var Section$1 = /*#__PURE__*/ React.memo(Section);

var Repeater = function Repeater(props) {
	var _builderContext$value, _builderContext$value4;

	var fieldName = props.name;
	props.value;
	var button = props.button,
		fields = props.fields;
	var builderContext = useBuilderContext();

	var _useState = useState(
			(_builderContext$value = builderContext.values) === null ||
				_builderContext$value === void 0
				? void 0
				: _builderContext$value[fieldName]
		),
		_useState2 = _slicedToArray(_useState, 2),
		localMemoizedValue = _useState2[0],
		setLocalMemoizedValue = _useState2[1]; // const localMemoizedValue = useMemo(() => {
	//     let localS = builderContext.values?.[fieldName];
	//     return localS;
	// }, [builderContext.values?.[fieldName], refresh])

	useEffect(
		function () {
			var _builderContext$value2;

			if (
				((_builderContext$value2 = builderContext.values) === null ||
				_builderContext$value2 === void 0
					? void 0
					: _builderContext$value2[fieldName]) != undefined
			) {
				var _builderContext$value3;

				setLocalMemoizedValue(
					(_builderContext$value3 = builderContext.values) === null ||
						_builderContext$value3 === void 0
						? void 0
						: _builderContext$value3[fieldName]
				);
			}
		},
		[
			(_builderContext$value4 = builderContext.values) === null ||
			_builderContext$value4 === void 0
				? void 0
				: _builderContext$value4[fieldName],
		]
	);

	var handleChange = function handleChange(event, index) {
		if (event.persist) {
			event.persist();
		}

		var _executeChange = executeChange(event),
			field = _executeChange.field,
			value = _executeChange.val;

		builderContext.setFieldValue([fieldName, index, field], value);
	};

	var handleRemove = useCallback(
		function (index) {
			var lValue = _toConsumableArray(localMemoizedValue);

			lValue.splice(index, 1);
			builderContext.setFieldValue(fieldName, lValue);
		},
		[localMemoizedValue]
	);
	var handleClone = useCallback(
		function (index) {
			var lValue = _toConsumableArray(localMemoizedValue);

			if (lValue.length > 0) {
				var indexedCopy =
					(lValue === null || lValue === void 0
						? void 0
						: lValue[index]) || {};
				builderContext.setFieldValue(
					[fieldName, localMemoizedValue.length],
					indexedCopy
				);
			}
		},
		[localMemoizedValue]
	);
	useEffect(function () {
		if (localMemoizedValue == undefined) {
			setLocalMemoizedValue([{}]);
		}
	}, []);
	return createElement(
		"div",
		{
			className: "wprf-repeater-control",
		},
		createElement(
			"div",
			{
				className: "wprf-repeater-content",
			},
			localMemoizedValue &&
				(localMemoizedValue === null || localMemoizedValue === void 0
					? void 0
					: localMemoizedValue.length) > 0 &&
				localMemoizedValue.map(function (value, index) {
					return createElement(RepeaterField, {
						isOpen: true,
						key: index,
						fields: fields,
						index: index,
						parent: fieldName,
						clone: handleClone,
						remove: handleRemove,
						onChange: function onChange(event) {
							return handleChange(event, index);
						},
					});
				})
		),
		createElement(
			"div",
			{
				className: "wprf-repeater-label",
			},
			createElement(
				"button",
				{
					className: "wprf-repeater-button",
					onClick: function onClick() {
						return builderContext.setFieldValue(
							fieldName,
							[].concat(_toConsumableArray(localMemoizedValue), [
								{},
							])
						);
					},
				},
				button === null || button === void 0 ? void 0 : button.label
			)
		)
	);
};

var Slider = function Slider(props) {
	var name = props.name,
		id = props.id,
		label = props.label,
		units = props.units,
		value = props.value,
		min = props.min,
		max = props.max,
		unit = props.unit;
	props.tooltip;
	var reset = props.reset;

	var _useState = useState(value || 0),
		_useState2 = _slicedToArray(_useState, 2),
		isValue = _useState2[0],
		setValue = _useState2[1];

	var _useState3 = useState(unit),
		_useState4 = _slicedToArray(_useState3, 2),
		sunit = _useState4[0],
		setSunit = _useState4[1];

	useEffect(
		function () {
			if (isValue) {
				var finalValue;

				if (isNumber(isValue)) {
					if (sunit) {
						finalValue = "".concat(isValue).concat(sunit);
					} else {
						finalValue = "".concat(isValue);
					}
				} else if (isString(isValue)) {
					if (!(isValue.indexOf(sunit) > -1)) {
						finalValue = "".concat(isValue).concat(sunit);
					} else {
						finalValue = "".concat(isValue);
					}
				}

				props.onChange({
					target: {
						type: "slider",
						name: name,
						value: finalValue,
					},
				});
			}
		},
		[isValue, sunit]
	);
	return createElement(
		"div",
		{
			className: "wprf-slider-wrap",
		},
		createElement(
			"div",
			{
				className: "wprf-slider-control-head",
			},
			createElement(
				Label,
				{
					htmlFor: id || name,
				},
				label
			),
			isArray(units) &&
				units.length > 0 &&
				createElement(
					"div",
					{
						className: "wprf-slider-units",
					},
					units.map(function (unit, index) {
						return createElement(
							Button$2,
							{
								key: index,
								isSmall: true,
								isPrimary: true,
								onClick: function onClick() {
									return setSunit(unit);
								},
								className: unit == sunit ? "unit-active" : "",
							},
							unit
						);
					})
				)
		),
		createElement(
			"div",
			{
				className: "wprf-slider-control",
			},
			createElement(RangeControl, {
				allowReset: reset !== null && reset !== void 0 ? reset : true,
				value: parseInt(isValue),
				min: min,
				max: max, // showTooltip={tooltip ?? false}
				onChange: function onChange(value) {
					return setValue(value);
				},
			})
		)
	);
};

var ColorPicker = function ColorPicker(props) {
	var value = props.value,
		name = props.name,
		id = props.id,
		onChange = props.onChange;

	var _useState = useState(false),
		_useState2 = _slicedToArray(_useState, 2),
		showPicker = _useState2[0],
		setShowPicker = _useState2[1];

	var _useState3 = useState(value || null),
		_useState4 = _slicedToArray(_useState3, 2),
		color = _useState4[0],
		setColor = _useState4[1];

	var _useState5 = useState(null),
		_useState6 = _slicedToArray(_useState5, 2),
		defaultColor = _useState6[0],
		setDefaultColor = _useState6[1];

	var closeRef = useRef(null);
	useEffect(function () {
		setDefaultColor(value);
	}, []);

	var handleCloseRef = function handleCloseRef(ref) {
		useEffect(
			function () {
				var handleClickOutside = function handleClickOutside(ev) {
					if (ref.current && !ref.current.contains(ev.target)) {
						setShowPicker(false);
					}
				};

				document.addEventListener("mousedown", handleClickOutside);
				return function () {
					document.removeEventListener(
						"mousedown",
						handleClickOutside
					);
				};
			},
			[ref]
		);
	};

	useEffect(
		function () {
			onChange({
				target: {
					type: "colorpicker",
					name: name,
					value: color,
				},
			});
		},
		[color]
	);
	handleCloseRef(closeRef);
	return createElement(
		Fragment,
		null,
		createElement(
			"div",
			{
				className: "wprf-colorpicker-wrap",
				ref: closeRef,
			},
			createElement("input", {
				type: "hidden",
				value: value,
				name: name,
				id: id,
			}),
			createElement("span", {
				className: "wprf-picker-display",
				style: {
					backgroundColor: value,
					borderColor: value,
				},
				onClick: function onClick() {
					return setShowPicker(!showPicker);
				},
			}),
			showPicker &&
				createElement(
					Fragment,
					null,
					createElement(
						"button",
						{
							className: "wprf-colorpicker-reset",
							onClick: function onClick(e) {
								e.preventDefault();
								setColor(defaultColor);
								setShowPicker(false);
							},
						},
						__$2("Reset", "wprf")
					),
					createElement(ColorPicker$2, {
						color: value,
						onChangeComplete: function onChangeComplete(event) {
							return setColor(event.hex);
						},
					})
				)
		)
	);
};

var ColorPicker$1 = withLabel(ColorPicker);

var Action = function Action(props) {
	return createElement(Fragment, null, applyFilters(props.action, props));
};

/**
 * External dependencies
 */
/**
 * Log to console, once per message; or more precisely, per referentially equal
 * argument set. Because Jed throws errors, we log these to the console instead
 * to avoid crashing the application.
 *
 * @param {...*} args Arguments to pass to `console.error`
 */

memize_1(console.error); // eslint-disable-line no-console

/**
 * External dependencies
 */
/**
 * @typedef {Record<string,any>} LocaleData
 */

/**
 * Default locale data to use for Tannin domain when not otherwise provided.
 * Assumes an English plural forms expression.
 *
 * @type {LocaleData}
 */

const DEFAULT_LOCALE_DATA = {
	"": {
		/** @param {number} n */
		plural_forms(n) {
			return n === 1 ? 0 : 1;
		},
	},
};
/*
 * Regular expression that matches i18n hooks like `i18n.gettext`, `i18n.ngettext`,
 * `i18n.gettext_domain` or `i18n.ngettext_with_context` or `i18n.has_translation`.
 */

const I18N_HOOK_REGEXP = /^i18n\.(n?gettext|has_translation)(_|$)/;
/**
 * @typedef {(domain?: string) => LocaleData} GetLocaleData
 *
 * Returns locale data by domain in a
 * Jed-formatted JSON object shape.
 *
 * @see http://messageformat.github.io/Jed/
 */

/**
 * @typedef {(data?: LocaleData, domain?: string) => void} SetLocaleData
 *
 * Merges locale data into the Tannin instance by domain. Accepts data in a
 * Jed-formatted JSON object shape.
 *
 * @see http://messageformat.github.io/Jed/
 */

/**
 * @typedef {(data?: LocaleData, domain?: string) => void} ResetLocaleData
 *
 * Resets all current Tannin instance locale data and sets the specified
 * locale data for the domain. Accepts data in a Jed-formatted JSON object shape.
 *
 * @see http://messageformat.github.io/Jed/
 */

/** @typedef {() => void} SubscribeCallback */

/** @typedef {() => void} UnsubscribeCallback */

/**
 * @typedef {(callback: SubscribeCallback) => UnsubscribeCallback} Subscribe
 *
 * Subscribes to changes of locale data
 */

/**
 * @typedef {(domain?: string) => string} GetFilterDomain
 * Retrieve the domain to use when calling domain-specific filters.
 */

/**
 * @typedef {(text: string, domain?: string) => string} __
 *
 * Retrieve the translation of text.
 *
 * @see https://developer.wordpress.org/reference/functions/__/
 */

/**
 * @typedef {(text: string, context: string, domain?: string) => string} _x
 *
 * Retrieve translated string with gettext context.
 *
 * @see https://developer.wordpress.org/reference/functions/_x/
 */

/**
 * @typedef {(single: string, plural: string, number: number, domain?: string) => string} _n
 *
 * Translates and retrieves the singular or plural form based on the supplied
 * number.
 *
 * @see https://developer.wordpress.org/reference/functions/_n/
 */

/**
 * @typedef {(single: string, plural: string, number: number, context: string, domain?: string) => string} _nx
 *
 * Translates and retrieves the singular or plural form based on the supplied
 * number, with gettext context.
 *
 * @see https://developer.wordpress.org/reference/functions/_nx/
 */

/**
 * @typedef {() => boolean} IsRtl
 *
 * Check if current locale is RTL.
 *
 * **RTL (Right To Left)** is a locale property indicating that text is written from right to left.
 * For example, the `he` locale (for Hebrew) specifies right-to-left. Arabic (ar) is another common
 * language written RTL. The opposite of RTL, LTR (Left To Right) is used in other languages,
 * including English (`en`, `en-US`, `en-GB`, etc.), Spanish (`es`), and French (`fr`).
 */

/**
 * @typedef {(single: string, context?: string, domain?: string) => boolean} HasTranslation
 *
 * Check if there is a translation for a given string in singular form.
 */

/** @typedef {import('@wordpress/hooks').Hooks} Hooks */

/**
 * An i18n instance
 *
 * @typedef I18n
 * @property {GetLocaleData}   getLocaleData   Returns locale data by domain in a Jed-formatted JSON object shape.
 * @property {SetLocaleData}   setLocaleData   Merges locale data into the Tannin instance by domain. Accepts data in a
 *                                             Jed-formatted JSON object shape.
 * @property {ResetLocaleData} resetLocaleData Resets all current Tannin instance locale data and sets the specified
 *                                             locale data for the domain. Accepts data in a Jed-formatted JSON object shape.
 * @property {Subscribe}       subscribe       Subscribes to changes of Tannin locale data.
 * @property {__}              __              Retrieve the translation of text.
 * @property {_x}              _x              Retrieve translated string with gettext context.
 * @property {_n}              _n              Translates and retrieves the singular or plural form based on the supplied
 *                                             number.
 * @property {_nx}             _nx             Translates and retrieves the singular or plural form based on the supplied
 *                                             number, with gettext context.
 * @property {IsRtl}           isRTL           Check if current locale is RTL.
 * @property {HasTranslation}  hasTranslation  Check if there is a translation for a given string.
 */

/**
 * Create an i18n instance
 *
 * @param {LocaleData} [initialData]   Locale data configuration.
 * @param {string}     [initialDomain] Domain for which configuration applies.
 * @param {Hooks}      [hooks]         Hooks implementation.
 *
 * @return {I18n} I18n instance.
 */

const createI18n = (initialData, initialDomain, hooks) => {
	/**
	 * The underlying instance of Tannin to which exported functions interface.
	 *
	 * @type {Tannin}
	 */
	const tannin = new Tannin({});
	const listeners = new Set();

	const notifyListeners = () => {
		listeners.forEach((listener) => listener());
	};
	/**
	 * Subscribe to changes of locale data.
	 *
	 * @param {SubscribeCallback} callback Subscription callback.
	 * @return {UnsubscribeCallback} Unsubscribe callback.
	 */

	const subscribe = (callback) => {
		listeners.add(callback);
		return () => listeners.delete(callback);
	};
	/** @type {GetLocaleData} */

	const getLocaleData = (domain = "default") => tannin.data[domain];
	/**
	 * @param {LocaleData} [data]
	 * @param {string}     [domain]
	 */

	const doSetLocaleData = (data, domain = "default") => {
		tannin.data[domain] = {
			...DEFAULT_LOCALE_DATA,
			...tannin.data[domain],
			...data,
		}; // Populate default domain configuration (supported locale date which omits
		// a plural forms expression).

		tannin.data[domain][""] = {
			...DEFAULT_LOCALE_DATA[""],
			...tannin.data[domain][""],
		};
	};
	/** @type {SetLocaleData} */

	const setLocaleData = (data, domain) => {
		doSetLocaleData(data, domain);
		notifyListeners();
	};
	/** @type {ResetLocaleData} */

	const resetLocaleData = (data, domain) => {
		// Reset all current Tannin locale data.
		tannin.data = {}; // Reset cached plural forms functions cache.

		tannin.pluralForms = {};
		setLocaleData(data, domain);
	};
	/**
	 * Wrapper for Tannin's `dcnpgettext`. Populates default locale data if not
	 * otherwise previously assigned.
	 *
	 * @param {string|undefined} domain   Domain to retrieve the translated text.
	 * @param {string|undefined} context  Context information for the translators.
	 * @param {string}           single   Text to translate if non-plural. Used as
	 *                                    fallback return value on a caught error.
	 * @param {string}           [plural] The text to be used if the number is
	 *                                    plural.
	 * @param {number}           [number] The number to compare against to use
	 *                                    either the singular or plural form.
	 *
	 * @return {string} The translated string.
	 */

	const dcnpgettext = (
		domain = "default",
		context,
		single,
		plural,
		number
	) => {
		if (!tannin.data[domain]) {
			// use `doSetLocaleData` to set silently, without notifying listeners
			doSetLocaleData(undefined, domain);
		}

		return tannin.dcnpgettext(domain, context, single, plural, number);
	};
	/** @type {GetFilterDomain} */

	const getFilterDomain = (domain = "default") => domain;
	/** @type {__} */

	const __ = (text, domain) => {
		let translation = dcnpgettext(domain, undefined, text);

		if (!hooks) {
			return translation;
		}
		/**
		 * Filters text with its translation.
		 *
		 * @param {string} translation Translated text.
		 * @param {string} text        Text to translate.
		 * @param {string} domain      Text domain. Unique identifier for retrieving translated strings.
		 */

		translation =
			/** @type {string} */

			/** @type {*} */
			hooks.applyFilters("i18n.gettext", translation, text, domain);
		return (
			/** @type {string} */

			/** @type {*} */
			hooks.applyFilters(
				"i18n.gettext_" + getFilterDomain(domain),
				translation,
				text,
				domain
			)
		);
	};
	/** @type {_x} */

	const _x = (text, context, domain) => {
		let translation = dcnpgettext(domain, context, text);

		if (!hooks) {
			return translation;
		}
		/**
		 * Filters text with its translation based on context information.
		 *
		 * @param {string} translation Translated text.
		 * @param {string} text        Text to translate.
		 * @param {string} context     Context information for the translators.
		 * @param {string} domain      Text domain. Unique identifier for retrieving translated strings.
		 */

		translation =
			/** @type {string} */

			/** @type {*} */
			hooks.applyFilters(
				"i18n.gettext_with_context",
				translation,
				text,
				context,
				domain
			);
		return (
			/** @type {string} */

			/** @type {*} */
			hooks.applyFilters(
				"i18n.gettext_with_context_" + getFilterDomain(domain),
				translation,
				text,
				context,
				domain
			)
		);
	};
	/** @type {_n} */

	const _n = (single, plural, number, domain) => {
		let translation = dcnpgettext(
			domain,
			undefined,
			single,
			plural,
			number
		);

		if (!hooks) {
			return translation;
		}
		/**
		 * Filters the singular or plural form of a string.
		 *
		 * @param {string} translation Translated text.
		 * @param {string} single      The text to be used if the number is singular.
		 * @param {string} plural      The text to be used if the number is plural.
		 * @param {string} number      The number to compare against to use either the singular or plural form.
		 * @param {string} domain      Text domain. Unique identifier for retrieving translated strings.
		 */

		translation =
			/** @type {string} */

			/** @type {*} */
			hooks.applyFilters(
				"i18n.ngettext",
				translation,
				single,
				plural,
				number,
				domain
			);
		return (
			/** @type {string} */

			/** @type {*} */
			hooks.applyFilters(
				"i18n.ngettext_" + getFilterDomain(domain),
				translation,
				single,
				plural,
				number,
				domain
			)
		);
	};
	/** @type {_nx} */

	const _nx = (single, plural, number, context, domain) => {
		let translation = dcnpgettext(domain, context, single, plural, number);

		if (!hooks) {
			return translation;
		}
		/**
		 * Filters the singular or plural form of a string with gettext context.
		 *
		 * @param {string} translation Translated text.
		 * @param {string} single      The text to be used if the number is singular.
		 * @param {string} plural      The text to be used if the number is plural.
		 * @param {string} number      The number to compare against to use either the singular or plural form.
		 * @param {string} context     Context information for the translators.
		 * @param {string} domain      Text domain. Unique identifier for retrieving translated strings.
		 */

		translation =
			/** @type {string} */

			/** @type {*} */
			hooks.applyFilters(
				"i18n.ngettext_with_context",
				translation,
				single,
				plural,
				number,
				context,
				domain
			);
		return (
			/** @type {string} */

			/** @type {*} */
			hooks.applyFilters(
				"i18n.ngettext_with_context_" + getFilterDomain(domain),
				translation,
				single,
				plural,
				number,
				context,
				domain
			)
		);
	};
	/** @type {IsRtl} */

	const isRTL = () => {
		return "rtl" === _x("ltr", "text direction");
	};
	/** @type {HasTranslation} */

	const hasTranslation = (single, context, domain) => {
		var _tannin$data, _tannin$data2;

		const key = context ? context + "\u0004" + single : single;
		let result = !!(
			(_tannin$data = tannin.data) !== null &&
			_tannin$data !== void 0 &&
			(_tannin$data2 =
				_tannin$data[
					domain !== null && domain !== void 0 ? domain : "default"
				]) !== null &&
			_tannin$data2 !== void 0 &&
			_tannin$data2[key]
		);

		if (hooks) {
			/**
			 * Filters the presence of a translation in the locale data.
			 *
			 * @param {boolean} hasTranslation Whether the translation is present or not..
			 * @param {string}  single         The singular form of the translated text (used as key in locale data)
			 * @param {string}  context        Context information for the translators.
			 * @param {string}  domain         Text domain. Unique identifier for retrieving translated strings.
			 */
			result =
				/** @type { boolean } */

				/** @type {*} */
				hooks.applyFilters(
					"i18n.has_translation",
					result,
					single,
					context,
					domain
				);
			result =
				/** @type { boolean } */

				/** @type {*} */
				hooks.applyFilters(
					"i18n.has_translation_" + getFilterDomain(domain),
					result,
					single,
					context,
					domain
				);
		}

		return result;
	};

	if (initialData) {
		setLocaleData(initialData, initialDomain);
	}

	if (hooks) {
		/**
		 * @param {string} hookName
		 */
		const onHookAddedOrRemoved = (hookName) => {
			if (I18N_HOOK_REGEXP.test(hookName)) {
				notifyListeners();
			}
		};

		hooks.addAction("hookAdded", "core/i18n", onHookAddedOrRemoved);
		hooks.addAction("hookRemoved", "core/i18n", onHookAddedOrRemoved);
	}

	return {
		getLocaleData,
		setLocaleData,
		resetLocaleData,
		subscribe,
		__,
		_x,
		_n,
		_nx,
		isRTL,
		hasTranslation,
	};
};

/**
 * Internal dependencies
 */
const i18n = createI18n(undefined, undefined, defaultHooks);
/*
 * Comments in this file are duplicated from ./i18n due to
 * https://github.com/WordPress/gutenberg/pull/20318#issuecomment-590837722
 */

/**
 * @typedef {import('./create-i18n').LocaleData} LocaleData
 * @typedef {import('./create-i18n').SubscribeCallback} SubscribeCallback
 * @typedef {import('./create-i18n').UnsubscribeCallback} UnsubscribeCallback
 */

/**
 * Returns locale data by domain in a Jed-formatted JSON object shape.
 *
 * @see http://messageformat.github.io/Jed/
 *
 * @param {string} [domain] Domain for which to get the data.
 * @return {LocaleData} Locale data.
 */

i18n.getLocaleData.bind(i18n);
/**
 * Merges locale data into the Tannin instance by domain. Accepts data in a
 * Jed-formatted JSON object shape.
 *
 * @see http://messageformat.github.io/Jed/
 *
 * @param {LocaleData} [data]   Locale data configuration.
 * @param {string}     [domain] Domain for which configuration applies.
 */

i18n.setLocaleData.bind(i18n);
/**
 * Resets all current Tannin instance locale data and sets the specified
 * locale data for the domain. Accepts data in a Jed-formatted JSON object shape.
 *
 * @see http://messageformat.github.io/Jed/
 *
 * @param {LocaleData} [data]   Locale data configuration.
 * @param {string}     [domain] Domain for which configuration applies.
 */

i18n.resetLocaleData.bind(i18n);
/**
 * Subscribes to changes of locale data
 *
 * @param {SubscribeCallback} callback Subscription callback
 * @return {UnsubscribeCallback} Unsubscribe callback
 */

i18n.subscribe.bind(i18n);
/**
 * Retrieve the translation of text.
 *
 * @see https://developer.wordpress.org/reference/functions/__/
 *
 * @param {string} text     Text to translate.
 * @param {string} [domain] Domain to retrieve the translated text.
 *
 * @return {string} Translated text.
 */

const __ = i18n.__.bind(i18n);
/**
 * Retrieve translated string with gettext context.
 *
 * @see https://developer.wordpress.org/reference/functions/_x/
 *
 * @param {string} text     Text to translate.
 * @param {string} context  Context information for the translators.
 * @param {string} [domain] Domain to retrieve the translated text.
 *
 * @return {string} Translated context string without pipe.
 */

i18n._x.bind(i18n);
/**
 * Translates and retrieves the singular or plural form based on the supplied
 * number.
 *
 * @see https://developer.wordpress.org/reference/functions/_n/
 *
 * @param {string} single   The text to be used if the number is singular.
 * @param {string} plural   The text to be used if the number is plural.
 * @param {number} number   The number to compare against to use either the
 *                          singular or plural form.
 * @param {string} [domain] Domain to retrieve the translated text.
 *
 * @return {string} The translated singular or plural form.
 */

i18n._n.bind(i18n);
/**
 * Translates and retrieves the singular or plural form based on the supplied
 * number, with gettext context.
 *
 * @see https://developer.wordpress.org/reference/functions/_nx/
 *
 * @param {string} single   The text to be used if the number is singular.
 * @param {string} plural   The text to be used if the number is plural.
 * @param {number} number   The number to compare against to use either the
 *                          singular or plural form.
 * @param {string} context  Context information for the translators.
 * @param {string} [domain] Domain to retrieve the translated text.
 *
 * @return {string} The translated singular or plural form.
 */

i18n._nx.bind(i18n);
/**
 * Check if current locale is RTL.
 *
 * **RTL (Right To Left)** is a locale property indicating that text is written from right to left.
 * For example, the `he` locale (for Hebrew) specifies right-to-left. Arabic (ar) is another common
 * language written RTL. The opposite of RTL, LTR (Left To Right) is used in other languages,
 * including English (`en`, `en-US`, `en-GB`, etc.), Spanish (`es`), and French (`fr`).
 *
 * @return {boolean} Whether locale is RTL.
 */

i18n.isRTL.bind(i18n);
/**
 * Check if there is a translation for a given string (in singular form).
 *
 * @param {string} single    Singular form of the string to look up.
 * @param {string} [context] Context information for the translators.
 * @param {string} [domain]  Domain to retrieve the translated text.
 * @return {boolean} Whether the translation exists or not.
 */

i18n.hasTranslation.bind(i18n);

/**
 * External dependencies
 */
const { wp } = window;
const DEFAULT_EMPTY_GALLERY = [];
/**
 * Prepares the Featured Image toolbars and frames.
 *
 * @return {wp.media.view.MediaFrame.Select} The default media workflow.
 */

const getFeaturedImageMediaFrame = () => {
	return wp.media.view.MediaFrame.Select.extend({
		/**
		 * Enables the Set Featured Image Button.
		 *
		 * @param {Object} toolbar toolbar for featured image state
		 * @return {void}
		 */
		featuredImageToolbar(toolbar) {
			this.createSelectToolbar(toolbar, {
				text: wp.media.view.l10n.setFeaturedImage,
				state: this.options.state,
			});
		},

		/**
		 * Handle the edit state requirements of selected media item.
		 *
		 * @return {void}
		 */
		editState() {
			const selection = this.state("featured-image").get("selection");
			const view = new wp.media.view.EditImage({
				model: selection.single(),
				controller: this,
			}).render(); // Set the view to the EditImage frame using the selected image.

			this.content.set(view); // After bringing in the frame, load the actual editor via an ajax call.

			view.loadEditor();
		},

		/**
		 * Create the default states.
		 *
		 * @return {void}
		 */
		createStates: function createStates() {
			this.on(
				"toolbar:create:featured-image",
				this.featuredImageToolbar,
				this
			);
			this.on("content:render:edit-image", this.editState, this);
			this.states.add([
				new wp.media.controller.FeaturedImage(),
				new wp.media.controller.EditImage({
					model: this.options.editImage,
				}),
			]);
		},
	});
};
/**
 * Prepares the Gallery toolbars and frames.
 *
 * @return {wp.media.view.MediaFrame.Post} The default media workflow.
 */

const getGalleryDetailsMediaFrame = () => {
	/**
	 * Custom gallery details frame.
	 *
	 * @see https://github.com/xwp/wp-core-media-widgets/blob/905edbccfc2a623b73a93dac803c5335519d7837/wp-admin/js/widgets/media-gallery-widget.js
	 * @class GalleryDetailsMediaFrame
	 * @class
	 */
	return wp.media.view.MediaFrame.Post.extend({
		/**
		 * Set up gallery toolbar.
		 *
		 * @return {void}
		 */
		galleryToolbar() {
			const editing = this.state().get("editing");
			this.toolbar.set(
				new wp.media.view.Toolbar({
					controller: this,
					items: {
						insert: {
							style: "primary",
							text: editing
								? wp.media.view.l10n.updateGallery
								: wp.media.view.l10n.insertGallery,
							priority: 80,
							requires: {
								library: true,
							},

							/**
							 * @fires wp.media.controller.State#update
							 */
							click() {
								const controller = this.controller,
									state = controller.state();
								controller.close();
								state.trigger("update", state.get("library")); // Restore and reset the default state.

								controller.setState(controller.options.state);
								controller.reset();
							},
						},
					},
				})
			);
		},

		/**
		 * Handle the edit state requirements of selected media item.
		 *
		 * @return {void}
		 */
		editState() {
			const selection = this.state("gallery").get("selection");
			const view = new wp.media.view.EditImage({
				model: selection.single(),
				controller: this,
			}).render(); // Set the view to the EditImage frame using the selected image.

			this.content.set(view); // After bringing in the frame, load the actual editor via an ajax call.

			view.loadEditor();
		},

		/**
		 * Create the default states.
		 *
		 * @return {void}
		 */
		createStates: function createStates() {
			this.on("toolbar:create:main-gallery", this.galleryToolbar, this);
			this.on("content:render:edit-image", this.editState, this);
			this.states.add([
				new wp.media.controller.Library({
					id: "gallery",
					title: wp.media.view.l10n.createGalleryTitle,
					priority: 40,
					toolbar: "main-gallery",
					filterable: "uploaded",
					multiple: "add",
					editable: false,
					library: wp.media.query(
						defaults(
							{
								type: "image",
							},
							this.options.library
						)
					),
				}),
				new wp.media.controller.EditImage({
					model: this.options.editImage,
				}),
				new wp.media.controller.GalleryEdit({
					library: this.options.selection,
					editing: this.options.editing,
					menu: "gallery",
					displaySettings: false,
					multiple: true,
				}),
				new wp.media.controller.GalleryAdd(),
			]);
		},
	});
}; // the media library image object contains numerous attributes
// we only need this set to display the image in the library

const slimImageObject = (img) => {
	const attrSet = [
		"sizes",
		"mime",
		"type",
		"subtype",
		"id",
		"url",
		"alt",
		"link",
		"caption",
	];
	return pick(img, attrSet);
};

const getAttachmentsCollection = (ids) => {
	return wp.media.query({
		order: "ASC",
		orderby: "post__in",
		post__in: ids,
		posts_per_page: -1,
		query: true,
		type: "image",
	});
};

class MediaUpload extends Component {
	constructor({
		allowedTypes,
		gallery = false,
		unstableFeaturedImageFlow = false,
		modalClass,
		multiple = false,
		title = __("Select or Upload Media"),
	}) {
		super(...arguments);
		this.openModal = this.openModal.bind(this);
		this.onOpen = this.onOpen.bind(this);
		this.onSelect = this.onSelect.bind(this);
		this.onUpdate = this.onUpdate.bind(this);
		this.onClose = this.onClose.bind(this);

		if (gallery) {
			this.buildAndSetGalleryFrame();
		} else {
			const frameConfig = {
				title,
				multiple,
			};

			if (!!allowedTypes) {
				frameConfig.library = {
					type: allowedTypes,
				};
			}

			this.frame = wp.media(frameConfig);
		}

		if (modalClass) {
			this.frame.$el.addClass(modalClass);
		}

		if (unstableFeaturedImageFlow) {
			this.buildAndSetFeatureImageFrame();
		}

		this.initializeListeners();
	}

	initializeListeners() {
		// When an image is selected in the media frame...
		this.frame.on("select", this.onSelect);
		this.frame.on("update", this.onUpdate);
		this.frame.on("open", this.onOpen);
		this.frame.on("close", this.onClose);
	}
	/**
	 * Sets the Gallery frame and initializes listeners.
	 *
	 * @return {void}
	 */

	buildAndSetGalleryFrame() {
		const {
			addToGallery = false,
			allowedTypes,
			multiple = false,
			value = DEFAULT_EMPTY_GALLERY,
		} = this.props; // If the value did not changed there is no need to rebuild the frame,
		// we can continue to use the existing one.

		if (value === this.lastGalleryValue) {
			return;
		}

		this.lastGalleryValue = value; // If a frame already existed remove it.

		if (this.frame) {
			this.frame.remove();
		}

		let currentState;

		if (addToGallery) {
			currentState = "gallery-library";
		} else {
			currentState = value && value.length ? "gallery-edit" : "gallery";
		}

		if (!this.GalleryDetailsMediaFrame) {
			this.GalleryDetailsMediaFrame = getGalleryDetailsMediaFrame();
		}

		const attachments = getAttachmentsCollection(value);
		const selection = new wp.media.model.Selection(attachments.models, {
			props: attachments.props.toJSON(),
			multiple,
		});
		this.frame = new this.GalleryDetailsMediaFrame({
			mimeType: allowedTypes,
			state: currentState,
			multiple,
			selection,
			editing: value && value.length ? true : false,
		});
		wp.media.frame = this.frame;
		this.initializeListeners();
	}
	/**
	 * Initializes the Media Library requirements for the featured image flow.
	 *
	 * @return {void}
	 */

	buildAndSetFeatureImageFrame() {
		const featuredImageFrame = getFeaturedImageMediaFrame();
		const attachments = getAttachmentsCollection(this.props.value);
		const selection = new wp.media.model.Selection(attachments.models, {
			props: attachments.props.toJSON(),
		});
		this.frame = new featuredImageFrame({
			mimeType: this.props.allowedTypes,
			state: "featured-image",
			multiple: this.props.multiple,
			selection,
			editing: this.props.value ? true : false,
		});
		wp.media.frame = this.frame;
	}

	componentWillUnmount() {
		this.frame.remove();
	}

	onUpdate(selections) {
		const { onSelect, multiple = false } = this.props;
		const state = this.frame.state();
		const selectedImages = selections || state.get("selection");

		if (!selectedImages || !selectedImages.models.length) {
			return;
		}

		if (multiple) {
			onSelect(
				selectedImages.models.map((model) =>
					slimImageObject(model.toJSON())
				)
			);
		} else {
			onSelect(slimImageObject(selectedImages.models[0].toJSON()));
		}
	}

	onSelect() {
		const { onSelect, multiple = false } = this.props; // Get media attachment details from the frame state

		const attachment = this.frame.state().get("selection").toJSON();
		onSelect(multiple ? attachment : attachment[0]);
	}

	onOpen() {
		var _this$props$value;

		this.updateCollection(); // Handle both this.props.value being either (number[]) multiple ids
		// (for galleries) or a (number) singular id (e.g. image block).

		const hasMedia = Array.isArray(this.props.value)
			? !!(
					(_this$props$value = this.props.value) !== null &&
					_this$props$value !== void 0 &&
					_this$props$value.length
			  )
			: !!this.props.value;

		if (!hasMedia) {
			return;
		}

		if (!this.props.gallery) {
			const selection = this.frame.state().get("selection");
			castArray(this.props.value).forEach((id) => {
				selection.add(wp.media.attachment(id));
			});
		} // load the images so they are available in the media modal.

		getAttachmentsCollection(castArray(this.props.value)).more();
	}

	onClose() {
		const { onClose } = this.props;

		if (onClose) {
			onClose();
		}
	}

	updateCollection() {
		const frameContent = this.frame.content.get();

		if (frameContent && frameContent.collection) {
			const collection = frameContent.collection; // clean all attachments we have in memory.

			collection
				.toArray()
				.forEach((model) => model.trigger("destroy", model)); // reset has more flag, if library had small amount of items all items may have been loaded before.

			collection.mirroring._hasMore = true; // request items

			collection.more();
		}
	}

	openModal() {
		if (this.props.gallery) {
			this.buildAndSetGalleryFrame();
		}

		this.frame.open();
	}

	render() {
		return this.props.render({
			open: this.openModal,
		});
	}
}

var Media = function Media(props) {
	var _props$value;

	var _useState = useState(
			(_props$value = props.value) !== null &&
				_props$value !== void 0 &&
				_props$value.url
				? props.value
				: null
		),
		_useState2 = _slicedToArray(_useState, 2),
		imageData = _useState2[0],
		setImageData = _useState2[1];

	useEffect(
		function () {
			props.onChange({
				target: {
					type: "media",
					name: props.name,
					value: imageData,
				},
			});
		},
		[imageData]
	);
	return createElement(
		"div",
		{
			className: "wprf-control wprf-media",
		},
		imageData != null &&
			createElement(
				"div",
				{
					className: "wprf-image-preview",
				},
				imageData != null &&
					(imageData === null || imageData === void 0
						? void 0
						: imageData.url) &&
					createElement("img", {
						src: imageData.url,
						alt: imageData.title,
					})
			),
		createElement(
			"div",
			{
				className: "wprf-image-uploader",
			},
			createElement(MediaUpload, {
				onSelect: function onSelect(media) {
					setImageData({
						id: media.id,
						title: media.title,
						url: media.url,
					});
				},
				multiple: false,
				allowedTypes: ["image"],
				value: imageData,
				render: function render(_ref) {
					var open = _ref.open;
					return createElement(
						Fragment,
						null,
						imageData != null &&
							createElement(
								"button",
								{
									className: "wprf-btn wprf-image-remove-btn",
									onClick: function onClick() {
										return setImageData(null);
									},
								},
								(props === null || props === void 0
									? void 0
									: props.remove) || "Remove"
							),
						createElement(
							"button",
							{
								className: "wprf-btn wprf-image-upload-btn",
								onClick: open,
							},
							imageData != null
								? (props === null || props === void 0
										? void 0
										: props.reset) || "Change Image"
								: (props === null || props === void 0
										? void 0
										: props.button) || "Upload"
						)
					);
				},
			})
		)
	);
};

var Media$1 = withLabel(Media);

var draftjsToHtml = { exports: {} };

(function (module, exports) {
	(function (global, factory) {
		module.exports = factory();
	})(commonjsGlobal, function () {
		/**
		 * Utility function to execute callback for eack key->value pair.
		 */
		function forEach(obj, callback) {
			if (obj) {
				for (var key in obj) {
					// eslint-disable-line no-restricted-syntax
					if ({}.hasOwnProperty.call(obj, key)) {
						callback(key, obj[key]);
					}
				}
			}
		}
		/**
		 * The function returns true if the string passed to it has no content.
		 */

		function isEmptyString(str) {
			if (
				str === undefined ||
				str === null ||
				str.length === 0 ||
				str.trim().length === 0
			) {
				return true;
			}

			return false;
		}

		/**
		 * Mapping block-type to corresponding html tag.
		 */

		var blockTypesMapping = {
			unstyled: "p",
			"header-one": "h1",
			"header-two": "h2",
			"header-three": "h3",
			"header-four": "h4",
			"header-five": "h5",
			"header-six": "h6",
			"unordered-list-item": "ul",
			"ordered-list-item": "ol",
			blockquote: "blockquote",
			code: "pre",
		};
		/**
		 * Function will return HTML tag for a block.
		 */

		function getBlockTag(type) {
			return type && blockTypesMapping[type];
		}
		/**
		 * Function will return style string for a block.
		 */

		function getBlockStyle(data) {
			var styles = "";
			forEach(data, function (key, value) {
				if (value) {
					styles += "".concat(key, ":").concat(value, ";");
				}
			});
			return styles;
		}
		/**
		 * The function returns an array of hashtag-sections in blocks.
		 * These will be areas in block which have hashtags applicable to them.
		 */

		function getHashtagRanges(blockText, hashtagConfig) {
			var sections = [];

			if (hashtagConfig) {
				var counter = 0;
				var startIndex = 0;
				var text = blockText;
				var trigger = hashtagConfig.trigger || "#";
				var separator = hashtagConfig.separator || " ";

				for (; text.length > 0 && startIndex >= 0; ) {
					if (text[0] === trigger) {
						startIndex = 0;
						counter = 0;
						text = text.substr(trigger.length);
					} else {
						startIndex = text.indexOf(separator + trigger);

						if (startIndex >= 0) {
							text = text.substr(
								startIndex + (separator + trigger).length
							);
							counter += startIndex + separator.length;
						}
					}

					if (startIndex >= 0) {
						var endIndex =
							text.indexOf(separator) >= 0
								? text.indexOf(separator)
								: text.length;
						var hashtag = text.substr(0, endIndex);

						if (hashtag && hashtag.length > 0) {
							sections.push({
								offset: counter,
								length: hashtag.length + trigger.length,
								type: "HASHTAG",
							});
						}

						counter += trigger.length;
					}
				}
			}

			return sections;
		}
		/**
		 * The function returns an array of entity-sections in blocks.
		 * These will be areas in block which have same entity or no entity applicable to them.
		 */

		function getSections(block, hashtagConfig) {
			var sections = [];
			var lastOffset = 0;
			var sectionRanges = block.entityRanges.map(function (range) {
				var offset = range.offset,
					length = range.length,
					key = range.key;
				return {
					offset: offset,
					length: length,
					key: key,
					type: "ENTITY",
				};
			});
			sectionRanges = sectionRanges.concat(
				getHashtagRanges(block.text, hashtagConfig)
			);
			sectionRanges = sectionRanges.sort(function (s1, s2) {
				return s1.offset - s2.offset;
			});
			sectionRanges.forEach(function (r) {
				if (r.offset > lastOffset) {
					sections.push({
						start: lastOffset,
						end: r.offset,
					});
				}

				sections.push({
					start: r.offset,
					end: r.offset + r.length,
					entityKey: r.key,
					type: r.type,
				});
				lastOffset = r.offset + r.length;
			});

			if (lastOffset < block.text.length) {
				sections.push({
					start: lastOffset,
					end: block.text.length,
				});
			}

			return sections;
		}
		/**
		 * Function to check if the block is an atomic entity block.
		 */

		function isAtomicEntityBlock(block) {
			if (
				block.entityRanges.length > 0 &&
				(isEmptyString(block.text) || block.type === "atomic")
			) {
				return true;
			}

			return false;
		}
		/**
		 * The function will return array of inline styles applicable to the block.
		 */

		function getStyleArrayForBlock(block) {
			var text = block.text,
				inlineStyleRanges = block.inlineStyleRanges;
			var inlineStyles = {
				BOLD: new Array(text.length),
				ITALIC: new Array(text.length),
				UNDERLINE: new Array(text.length),
				STRIKETHROUGH: new Array(text.length),
				CODE: new Array(text.length),
				SUPERSCRIPT: new Array(text.length),
				SUBSCRIPT: new Array(text.length),
				COLOR: new Array(text.length),
				BGCOLOR: new Array(text.length),
				FONTSIZE: new Array(text.length),
				FONTFAMILY: new Array(text.length),
				length: text.length,
			};

			if (inlineStyleRanges && inlineStyleRanges.length > 0) {
				inlineStyleRanges.forEach(function (range) {
					var offset = range.offset;
					var length = offset + range.length;

					for (var i = offset; i < length; i += 1) {
						if (range.style.indexOf("color-") === 0) {
							inlineStyles.COLOR[i] = range.style.substring(6);
						} else if (range.style.indexOf("bgcolor-") === 0) {
							inlineStyles.BGCOLOR[i] = range.style.substring(8);
						} else if (range.style.indexOf("fontsize-") === 0) {
							inlineStyles.FONTSIZE[i] = range.style.substring(9);
						} else if (range.style.indexOf("fontfamily-") === 0) {
							inlineStyles.FONTFAMILY[i] =
								range.style.substring(11);
						} else if (inlineStyles[range.style]) {
							inlineStyles[range.style][i] = true;
						}
					}
				});
			}

			return inlineStyles;
		}
		/**
		 * The function will return inline style applicable at some offset within a block.
		 */

		function getStylesAtOffset(inlineStyles, offset) {
			var styles = {};

			if (inlineStyles.COLOR[offset]) {
				styles.COLOR = inlineStyles.COLOR[offset];
			}

			if (inlineStyles.BGCOLOR[offset]) {
				styles.BGCOLOR = inlineStyles.BGCOLOR[offset];
			}

			if (inlineStyles.FONTSIZE[offset]) {
				styles.FONTSIZE = inlineStyles.FONTSIZE[offset];
			}

			if (inlineStyles.FONTFAMILY[offset]) {
				styles.FONTFAMILY = inlineStyles.FONTFAMILY[offset];
			}

			if (inlineStyles.UNDERLINE[offset]) {
				styles.UNDERLINE = true;
			}

			if (inlineStyles.ITALIC[offset]) {
				styles.ITALIC = true;
			}

			if (inlineStyles.BOLD[offset]) {
				styles.BOLD = true;
			}

			if (inlineStyles.STRIKETHROUGH[offset]) {
				styles.STRIKETHROUGH = true;
			}

			if (inlineStyles.CODE[offset]) {
				styles.CODE = true;
			}

			if (inlineStyles.SUBSCRIPT[offset]) {
				styles.SUBSCRIPT = true;
			}

			if (inlineStyles.SUPERSCRIPT[offset]) {
				styles.SUPERSCRIPT = true;
			}

			return styles;
		}
		/**
		 * Function returns true for a set of styles if the value of these styles at an offset
		 * are same as that on the previous offset.
		 */

		function sameStyleAsPrevious(inlineStyles, styles, index) {
			var sameStyled = true;

			if (index > 0 && index < inlineStyles.length) {
				styles.forEach(function (style) {
					sameStyled =
						sameStyled &&
						inlineStyles[style][index] ===
							inlineStyles[style][index - 1];
				});
			} else {
				sameStyled = false;
			}

			return sameStyled;
		}
		/**
		 * Function returns html for text depending on inline style tags applicable to it.
		 */

		function addInlineStyleMarkup(style, content) {
			if (style === "BOLD") {
				return "<strong>".concat(content, "</strong>");
			}

			if (style === "ITALIC") {
				return "<em>".concat(content, "</em>");
			}

			if (style === "UNDERLINE") {
				return "<ins>".concat(content, "</ins>");
			}

			if (style === "STRIKETHROUGH") {
				return "<del>".concat(content, "</del>");
			}

			if (style === "CODE") {
				return "<code>".concat(content, "</code>");
			}

			if (style === "SUPERSCRIPT") {
				return "<sup>".concat(content, "</sup>");
			}

			if (style === "SUBSCRIPT") {
				return "<sub>".concat(content, "</sub>");
			}

			return content;
		}
		/**
		 * The function returns text for given section of block after doing required character replacements.
		 */

		function getSectionText(text) {
			if (text && text.length > 0) {
				var chars = text.map(function (ch) {
					switch (ch) {
						case "\n":
							return "<br>";

						case "&":
							return "&amp;";

						case "<":
							return "&lt;";

						case ">":
							return "&gt;";

						default:
							return ch;
					}
				});
				return chars.join("");
			}

			return "";
		}
		/**
		 * Function returns html for text depending on inline style tags applicable to it.
		 */

		function addStylePropertyMarkup(styles, text) {
			if (
				styles &&
				(styles.COLOR ||
					styles.BGCOLOR ||
					styles.FONTSIZE ||
					styles.FONTFAMILY)
			) {
				var styleString = 'style="';

				if (styles.COLOR) {
					styleString += "color: ".concat(styles.COLOR, ";");
				}

				if (styles.BGCOLOR) {
					styleString += "background-color: ".concat(
						styles.BGCOLOR,
						";"
					);
				}

				if (styles.FONTSIZE) {
					styleString += "font-size: "
						.concat(styles.FONTSIZE)
						.concat(/^\d+$/.test(styles.FONTSIZE) ? "px" : "", ";");
				}

				if (styles.FONTFAMILY) {
					styleString += "font-family: ".concat(
						styles.FONTFAMILY,
						";"
					);
				}

				styleString += '"';
				return "<span "
					.concat(styleString, ">")
					.concat(text, "</span>");
			}

			return text;
		}
		/**
		 * Function will return markup for Entity.
		 */

		function getEntityMarkup(
			entityMap,
			entityKey,
			text,
			customEntityTransform
		) {
			var entity = entityMap[entityKey];

			if (typeof customEntityTransform === "function") {
				var html = customEntityTransform(entity, text);

				if (html) {
					return html;
				}
			}

			if (entity.type === "MENTION") {
				return '<a href="'
					.concat(
						entity.data.url,
						'" class="wysiwyg-mention" data-mention data-value="'
					)
					.concat(entity.data.value, '">')
					.concat(text, "</a>");
			}

			if (entity.type === "LINK") {
				var targetOption = entity.data.targetOption || "_self";
				return '<a href="'
					.concat(entity.data.url, '" target="')
					.concat(targetOption, '">')
					.concat(text, "</a>");
			}

			if (entity.type === "IMAGE") {
				var alignment = entity.data.alignment;

				if (alignment && alignment.length) {
					return '<div style="text-align:'
						.concat(alignment, ';"><img src="')
						.concat(entity.data.src, '" alt="')
						.concat(entity.data.alt, '" style="height: ')
						.concat(entity.data.height, ";width: ")
						.concat(entity.data.width, '"/></div>');
				}

				return '<img src="'
					.concat(entity.data.src, '" alt="')
					.concat(entity.data.alt, '" style="height: ')
					.concat(entity.data.height, ";width: ")
					.concat(entity.data.width, '"/>');
			}

			if (entity.type === "EMBEDDED_LINK") {
				return '<iframe width="'
					.concat(entity.data.width, '" height="')
					.concat(entity.data.height, '" src="')
					.concat(entity.data.src, '" frameBorder="0"></iframe>');
			}

			return text;
		}
		/**
		 * For a given section in a block the function will return a further list of sections,
		 * with similar inline styles applicable to them.
		 */

		function getInlineStyleSections(block, styles, start, end) {
			var styleSections = [];
			var text = Array.from(block.text);

			if (text.length > 0) {
				var inlineStyles = getStyleArrayForBlock(block);
				var section;

				for (var i = start; i < end; i += 1) {
					if (
						i !== start &&
						sameStyleAsPrevious(inlineStyles, styles, i)
					) {
						section.text.push(text[i]);
						section.end = i + 1;
					} else {
						section = {
							styles: getStylesAtOffset(inlineStyles, i),
							text: [text[i]],
							start: i,
							end: i + 1,
						};
						styleSections.push(section);
					}
				}
			}

			return styleSections;
		}
		/**
		 * Replace leading blank spaces by &nbsp;
		 */

		function trimLeadingZeros(sectionText) {
			if (sectionText) {
				var replacedText = sectionText;

				for (var i = 0; i < replacedText.length; i += 1) {
					if (sectionText[i] === " ") {
						replacedText = replacedText.replace(" ", "&nbsp;");
					} else {
						break;
					}
				}

				return replacedText;
			}

			return sectionText;
		}
		/**
		 * Replace trailing blank spaces by &nbsp;
		 */

		function trimTrailingZeros(sectionText) {
			if (sectionText) {
				var replacedText = sectionText;

				for (var i = replacedText.length - 1; i >= 0; i -= 1) {
					if (replacedText[i] === " ") {
						replacedText = ""
							.concat(replacedText.substring(0, i), "&nbsp;")
							.concat(replacedText.substring(i + 1));
					} else {
						break;
					}
				}

				return replacedText;
			}

			return sectionText;
		}
		/**
		 * The method returns markup for section to which inline styles
		 * like BOLD, ITALIC, UNDERLINE, STRIKETHROUGH, CODE, SUPERSCRIPT, SUBSCRIPT are applicable.
		 */

		function getStyleTagSectionMarkup(styleSection) {
			var styles = styleSection.styles,
				text = styleSection.text;
			var content = getSectionText(text);
			forEach(styles, function (style, value) {
				content = addInlineStyleMarkup(style, content);
			});
			return content;
		}
		/**
  * The method returns markup for section to which inline styles
  like color, background-color, font-size are applicable.
  */

		function getInlineStyleSectionMarkup(block, styleSection) {
			var styleTagSections = getInlineStyleSections(
				block,
				[
					"BOLD",
					"ITALIC",
					"UNDERLINE",
					"STRIKETHROUGH",
					"CODE",
					"SUPERSCRIPT",
					"SUBSCRIPT",
				],
				styleSection.start,
				styleSection.end
			);
			var styleSectionText = "";
			styleTagSections.forEach(function (stylePropertySection) {
				styleSectionText +=
					getStyleTagSectionMarkup(stylePropertySection);
			});
			styleSectionText = addStylePropertyMarkup(
				styleSection.styles,
				styleSectionText
			);
			return styleSectionText;
		}
		/*
		 * The method returns markup for an entity section.
		 * An entity section is a continuous section in a block
		 * to which same entity or no entity is applicable.
		 */

		function getSectionMarkup(
			block,
			entityMap,
			section,
			customEntityTransform
		) {
			var entityInlineMarkup = [];
			var inlineStyleSections = getInlineStyleSections(
				block,
				["COLOR", "BGCOLOR", "FONTSIZE", "FONTFAMILY"],
				section.start,
				section.end
			);
			inlineStyleSections.forEach(function (styleSection) {
				entityInlineMarkup.push(
					getInlineStyleSectionMarkup(block, styleSection)
				);
			});
			var sectionText = entityInlineMarkup.join("");

			if (section.type === "ENTITY") {
				if (
					section.entityKey !== undefined &&
					section.entityKey !== null
				) {
					sectionText = getEntityMarkup(
						entityMap,
						section.entityKey,
						sectionText,
						customEntityTransform
					); // eslint-disable-line max-len
				}
			} else if (section.type === "HASHTAG") {
				sectionText = '<a href="'
					.concat(sectionText, '" class="wysiwyg-hashtag">')
					.concat(sectionText, "</a>");
			}

			return sectionText;
		}
		/**
		 * Function will return the markup for block preserving the inline styles and
		 * special characters like newlines or blank spaces.
		 */

		function getBlockInnerMarkup(
			block,
			entityMap,
			hashtagConfig,
			customEntityTransform
		) {
			var blockMarkup = [];
			var sections = getSections(block, hashtagConfig);
			sections.forEach(function (section, index) {
				var sectionText = getSectionMarkup(
					block,
					entityMap,
					section,
					customEntityTransform
				);

				if (index === 0) {
					sectionText = trimLeadingZeros(sectionText);
				}

				if (index === sections.length - 1) {
					sectionText = trimTrailingZeros(sectionText);
				}

				blockMarkup.push(sectionText);
			});
			return blockMarkup.join("");
		}
		/**
		 * Function will return html for the block.
		 */

		function getBlockMarkup(
			block,
			entityMap,
			hashtagConfig,
			directional,
			customEntityTransform
		) {
			var blockHtml = [];

			if (isAtomicEntityBlock(block)) {
				blockHtml.push(
					getEntityMarkup(
						entityMap,
						block.entityRanges[0].key,
						undefined,
						customEntityTransform
					)
				);
			} else {
				var blockTag = getBlockTag(block.type);

				if (blockTag) {
					blockHtml.push("<".concat(blockTag));
					var blockStyle = getBlockStyle(block.data);

					if (blockStyle) {
						blockHtml.push(' style="'.concat(blockStyle, '"'));
					}

					if (directional) {
						blockHtml.push(' dir = "auto"');
					}

					blockHtml.push(">");
					blockHtml.push(
						getBlockInnerMarkup(
							block,
							entityMap,
							hashtagConfig,
							customEntityTransform
						)
					);
					blockHtml.push("</".concat(blockTag, ">"));
				}
			}

			blockHtml.push("\n");
			return blockHtml.join("");
		}

		/**
		 * Function to check if a block is of type list.
		 */

		function isList(blockType) {
			return (
				blockType === "unordered-list-item" ||
				blockType === "ordered-list-item"
			);
		}
		/**
		 * Function will return html markup for a list block.
		 */

		function getListMarkup(
			listBlocks,
			entityMap,
			hashtagConfig,
			directional,
			customEntityTransform
		) {
			var listHtml = [];
			var nestedListBlock = [];
			var previousBlock;
			listBlocks.forEach(function (block) {
				var nestedBlock = false;

				if (!previousBlock) {
					listHtml.push("<".concat(getBlockTag(block.type), ">\n"));
				} else if (previousBlock.type !== block.type) {
					listHtml.push(
						"</".concat(getBlockTag(previousBlock.type), ">\n")
					);
					listHtml.push("<".concat(getBlockTag(block.type), ">\n"));
				} else if (previousBlock.depth === block.depth) {
					if (nestedListBlock && nestedListBlock.length > 0) {
						listHtml.push(
							getListMarkup(
								nestedListBlock,
								entityMap,
								hashtagConfig,
								directional,
								customEntityTransform
							)
						);
						nestedListBlock = [];
					}
				} else {
					nestedBlock = true;
					nestedListBlock.push(block);
				}

				if (!nestedBlock) {
					listHtml.push("<li");
					var blockStyle = getBlockStyle(block.data);

					if (blockStyle) {
						listHtml.push(' style="'.concat(blockStyle, '"'));
					}

					if (directional) {
						listHtml.push(' dir = "auto"');
					}

					listHtml.push(">");
					listHtml.push(
						getBlockInnerMarkup(
							block,
							entityMap,
							hashtagConfig,
							customEntityTransform
						)
					);
					listHtml.push("</li>\n");
					previousBlock = block;
				}
			});

			if (nestedListBlock && nestedListBlock.length > 0) {
				listHtml.push(
					getListMarkup(
						nestedListBlock,
						entityMap,
						hashtagConfig,
						directional,
						customEntityTransform
					)
				);
			}

			listHtml.push("</".concat(getBlockTag(previousBlock.type), ">\n"));
			return listHtml.join("");
		}

		/**
		 * The function will generate html markup for given draftjs editorContent.
		 */

		function draftToHtml(
			editorContent,
			hashtagConfig,
			directional,
			customEntityTransform
		) {
			var html = [];

			if (editorContent) {
				var blocks = editorContent.blocks,
					entityMap = editorContent.entityMap;

				if (blocks && blocks.length > 0) {
					var listBlocks = [];
					blocks.forEach(function (block) {
						if (isList(block.type)) {
							listBlocks.push(block);
						} else {
							if (listBlocks.length > 0) {
								var listHtml = getListMarkup(
									listBlocks,
									entityMap,
									hashtagConfig,
									customEntityTransform
								); // eslint-disable-line max-len

								html.push(listHtml);
								listBlocks = [];
							}

							var blockHtml = getBlockMarkup(
								block,
								entityMap,
								hashtagConfig,
								directional,
								customEntityTransform
							);
							html.push(blockHtml);
						}
					});

					if (listBlocks.length > 0) {
						var listHtml = getListMarkup(
							listBlocks,
							entityMap,
							hashtagConfig,
							directional,
							customEntityTransform
						); // eslint-disable-line max-len

						html.push(listHtml);
						listBlocks = [];
					}
				}
			}

			return html.join("");
		}

		return draftToHtml;
	});
})(draftjsToHtml);

var draftToHtml = draftjsToHtml.exports;

var htmlToDraftjs = { exports: {} };

var immutable = { exports: {} };

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

(function (module, exports) {
	(function (global, factory) {
		module.exports = factory();
	})(commonjsGlobal, function () {
		var SLICE$0 = Array.prototype.slice;

		function createClass(ctor, superClass) {
			if (superClass) {
				ctor.prototype = Object.create(superClass.prototype);
			}
			ctor.prototype.constructor = ctor;
		}

		function Iterable(value) {
			return isIterable(value) ? value : Seq(value);
		}

		createClass(KeyedIterable, Iterable);
		function KeyedIterable(value) {
			return isKeyed(value) ? value : KeyedSeq(value);
		}

		createClass(IndexedIterable, Iterable);
		function IndexedIterable(value) {
			return isIndexed(value) ? value : IndexedSeq(value);
		}

		createClass(SetIterable, Iterable);
		function SetIterable(value) {
			return isIterable(value) && !isAssociative(value)
				? value
				: SetSeq(value);
		}

		function isIterable(maybeIterable) {
			return !!(maybeIterable && maybeIterable[IS_ITERABLE_SENTINEL]);
		}

		function isKeyed(maybeKeyed) {
			return !!(maybeKeyed && maybeKeyed[IS_KEYED_SENTINEL]);
		}

		function isIndexed(maybeIndexed) {
			return !!(maybeIndexed && maybeIndexed[IS_INDEXED_SENTINEL]);
		}

		function isAssociative(maybeAssociative) {
			return isKeyed(maybeAssociative) || isIndexed(maybeAssociative);
		}

		function isOrdered(maybeOrdered) {
			return !!(maybeOrdered && maybeOrdered[IS_ORDERED_SENTINEL]);
		}

		Iterable.isIterable = isIterable;
		Iterable.isKeyed = isKeyed;
		Iterable.isIndexed = isIndexed;
		Iterable.isAssociative = isAssociative;
		Iterable.isOrdered = isOrdered;

		Iterable.Keyed = KeyedIterable;
		Iterable.Indexed = IndexedIterable;
		Iterable.Set = SetIterable;

		var IS_ITERABLE_SENTINEL = "@@__IMMUTABLE_ITERABLE__@@";
		var IS_KEYED_SENTINEL = "@@__IMMUTABLE_KEYED__@@";
		var IS_INDEXED_SENTINEL = "@@__IMMUTABLE_INDEXED__@@";
		var IS_ORDERED_SENTINEL = "@@__IMMUTABLE_ORDERED__@@";

		// Used for setting prototype methods that IE8 chokes on.
		var DELETE = "delete";

		// Constants describing the size of trie nodes.
		var SHIFT = 5; // Resulted in best performance after ______?
		var SIZE = 1 << SHIFT;
		var MASK = SIZE - 1;

		// A consistent shared value representing "not set" which equals nothing other
		// than itself, and nothing that could be provided externally.
		var NOT_SET = {};

		// Boolean references, Rough equivalent of `bool &`.
		var CHANGE_LENGTH = { value: false };
		var DID_ALTER = { value: false };

		function MakeRef(ref) {
			ref.value = false;
			return ref;
		}

		function SetRef(ref) {
			ref && (ref.value = true);
		}

		// A function which returns a value representing an "owner" for transient writes
		// to tries. The return value will only ever equal itself, and will not equal
		// the return of any subsequent call of this function.
		function OwnerID() {}

		// http://jsperf.com/copy-array-inline
		function arrCopy(arr, offset) {
			offset = offset || 0;
			var len = Math.max(0, arr.length - offset);
			var newArr = new Array(len);
			for (var ii = 0; ii < len; ii++) {
				newArr[ii] = arr[ii + offset];
			}
			return newArr;
		}

		function ensureSize(iter) {
			if (iter.size === undefined) {
				iter.size = iter.__iterate(returnTrue);
			}
			return iter.size;
		}

		function wrapIndex(iter, index) {
			// This implements "is array index" which the ECMAString spec defines as:
			//
			//     A String property name P is an array index if and only if
			//     ToString(ToUint32(P)) is equal to P and ToUint32(P) is not equal
			//     to 2^32−1.
			//
			// http://www.ecma-international.org/ecma-262/6.0/#sec-array-exotic-objects
			if (typeof index !== "number") {
				var uint32Index = index >>> 0; // N >>> 0 is shorthand for ToUint32
				if ("" + uint32Index !== index || uint32Index === 4294967295) {
					return NaN;
				}
				index = uint32Index;
			}
			return index < 0 ? ensureSize(iter) + index : index;
		}

		function returnTrue() {
			return true;
		}

		function wholeSlice(begin, end, size) {
			return (
				(begin === 0 || (size !== undefined && begin <= -size)) &&
				(end === undefined || (size !== undefined && end >= size))
			);
		}

		function resolveBegin(begin, size) {
			return resolveIndex(begin, size, 0);
		}

		function resolveEnd(end, size) {
			return resolveIndex(end, size, size);
		}

		function resolveIndex(index, size, defaultIndex) {
			return index === undefined
				? defaultIndex
				: index < 0
				? Math.max(0, size + index)
				: size === undefined
				? index
				: Math.min(size, index);
		}

		/* global Symbol */

		var ITERATE_KEYS = 0;
		var ITERATE_VALUES = 1;
		var ITERATE_ENTRIES = 2;

		var REAL_ITERATOR_SYMBOL =
			typeof Symbol === "function" && Symbol.iterator;
		var FAUX_ITERATOR_SYMBOL = "@@iterator";

		var ITERATOR_SYMBOL = REAL_ITERATOR_SYMBOL || FAUX_ITERATOR_SYMBOL;

		function Iterator(next) {
			this.next = next;
		}

		Iterator.prototype.toString = function () {
			return "[Iterator]";
		};

		Iterator.KEYS = ITERATE_KEYS;
		Iterator.VALUES = ITERATE_VALUES;
		Iterator.ENTRIES = ITERATE_ENTRIES;

		Iterator.prototype.inspect = Iterator.prototype.toSource = function () {
			return this.toString();
		};
		Iterator.prototype[ITERATOR_SYMBOL] = function () {
			return this;
		};

		function iteratorValue(type, k, v, iteratorResult) {
			var value = type === 0 ? k : type === 1 ? v : [k, v];
			iteratorResult
				? (iteratorResult.value = value)
				: (iteratorResult = {
						value: value,
						done: false,
				  });
			return iteratorResult;
		}

		function iteratorDone() {
			return { value: undefined, done: true };
		}

		function hasIterator(maybeIterable) {
			return !!getIteratorFn(maybeIterable);
		}

		function isIterator(maybeIterator) {
			return maybeIterator && typeof maybeIterator.next === "function";
		}

		function getIterator(iterable) {
			var iteratorFn = getIteratorFn(iterable);
			return iteratorFn && iteratorFn.call(iterable);
		}

		function getIteratorFn(iterable) {
			var iteratorFn =
				iterable &&
				((REAL_ITERATOR_SYMBOL && iterable[REAL_ITERATOR_SYMBOL]) ||
					iterable[FAUX_ITERATOR_SYMBOL]);
			if (typeof iteratorFn === "function") {
				return iteratorFn;
			}
		}

		function isArrayLike(value) {
			return value && typeof value.length === "number";
		}

		createClass(Seq, Iterable);
		function Seq(value) {
			return value === null || value === undefined
				? emptySequence()
				: isIterable(value)
				? value.toSeq()
				: seqFromValue(value);
		}

		Seq.of = function (/*...values*/) {
			return Seq(arguments);
		};

		Seq.prototype.toSeq = function () {
			return this;
		};

		Seq.prototype.toString = function () {
			return this.__toString("Seq {", "}");
		};

		Seq.prototype.cacheResult = function () {
			if (!this._cache && this.__iterateUncached) {
				this._cache = this.entrySeq().toArray();
				this.size = this._cache.length;
			}
			return this;
		};

		// abstract __iterateUncached(fn, reverse)

		Seq.prototype.__iterate = function (fn, reverse) {
			return seqIterate(this, fn, reverse, true);
		};

		// abstract __iteratorUncached(type, reverse)

		Seq.prototype.__iterator = function (type, reverse) {
			return seqIterator(this, type, reverse, true);
		};

		createClass(KeyedSeq, Seq);
		function KeyedSeq(value) {
			return value === null || value === undefined
				? emptySequence().toKeyedSeq()
				: isIterable(value)
				? isKeyed(value)
					? value.toSeq()
					: value.fromEntrySeq()
				: keyedSeqFromValue(value);
		}

		KeyedSeq.prototype.toKeyedSeq = function () {
			return this;
		};

		createClass(IndexedSeq, Seq);
		function IndexedSeq(value) {
			return value === null || value === undefined
				? emptySequence()
				: !isIterable(value)
				? indexedSeqFromValue(value)
				: isKeyed(value)
				? value.entrySeq()
				: value.toIndexedSeq();
		}

		IndexedSeq.of = function (/*...values*/) {
			return IndexedSeq(arguments);
		};

		IndexedSeq.prototype.toIndexedSeq = function () {
			return this;
		};

		IndexedSeq.prototype.toString = function () {
			return this.__toString("Seq [", "]");
		};

		IndexedSeq.prototype.__iterate = function (fn, reverse) {
			return seqIterate(this, fn, reverse, false);
		};

		IndexedSeq.prototype.__iterator = function (type, reverse) {
			return seqIterator(this, type, reverse, false);
		};

		createClass(SetSeq, Seq);
		function SetSeq(value) {
			return (
				value === null || value === undefined
					? emptySequence()
					: !isIterable(value)
					? indexedSeqFromValue(value)
					: isKeyed(value)
					? value.entrySeq()
					: value
			).toSetSeq();
		}

		SetSeq.of = function (/*...values*/) {
			return SetSeq(arguments);
		};

		SetSeq.prototype.toSetSeq = function () {
			return this;
		};

		Seq.isSeq = isSeq;
		Seq.Keyed = KeyedSeq;
		Seq.Set = SetSeq;
		Seq.Indexed = IndexedSeq;

		var IS_SEQ_SENTINEL = "@@__IMMUTABLE_SEQ__@@";

		Seq.prototype[IS_SEQ_SENTINEL] = true;

		createClass(ArraySeq, IndexedSeq);
		function ArraySeq(array) {
			this._array = array;
			this.size = array.length;
		}

		ArraySeq.prototype.get = function (index, notSetValue) {
			return this.has(index)
				? this._array[wrapIndex(this, index)]
				: notSetValue;
		};

		ArraySeq.prototype.__iterate = function (fn, reverse) {
			var array = this._array;
			var maxIndex = array.length - 1;
			for (var ii = 0; ii <= maxIndex; ii++) {
				if (
					fn(array[reverse ? maxIndex - ii : ii], ii, this) === false
				) {
					return ii + 1;
				}
			}
			return ii;
		};

		ArraySeq.prototype.__iterator = function (type, reverse) {
			var array = this._array;
			var maxIndex = array.length - 1;
			var ii = 0;
			return new Iterator(function () {
				return ii > maxIndex
					? iteratorDone()
					: iteratorValue(
							type,
							ii,
							array[reverse ? maxIndex - ii++ : ii++]
					  );
			});
		};

		createClass(ObjectSeq, KeyedSeq);
		function ObjectSeq(object) {
			var keys = Object.keys(object);
			this._object = object;
			this._keys = keys;
			this.size = keys.length;
		}

		ObjectSeq.prototype.get = function (key, notSetValue) {
			if (notSetValue !== undefined && !this.has(key)) {
				return notSetValue;
			}
			return this._object[key];
		};

		ObjectSeq.prototype.has = function (key) {
			return this._object.hasOwnProperty(key);
		};

		ObjectSeq.prototype.__iterate = function (fn, reverse) {
			var object = this._object;
			var keys = this._keys;
			var maxIndex = keys.length - 1;
			for (var ii = 0; ii <= maxIndex; ii++) {
				var key = keys[reverse ? maxIndex - ii : ii];
				if (fn(object[key], key, this) === false) {
					return ii + 1;
				}
			}
			return ii;
		};

		ObjectSeq.prototype.__iterator = function (type, reverse) {
			var object = this._object;
			var keys = this._keys;
			var maxIndex = keys.length - 1;
			var ii = 0;
			return new Iterator(function () {
				var key = keys[reverse ? maxIndex - ii : ii];
				return ii++ > maxIndex
					? iteratorDone()
					: iteratorValue(type, key, object[key]);
			});
		};

		ObjectSeq.prototype[IS_ORDERED_SENTINEL] = true;

		createClass(IterableSeq, IndexedSeq);
		function IterableSeq(iterable) {
			this._iterable = iterable;
			this.size = iterable.length || iterable.size;
		}

		IterableSeq.prototype.__iterateUncached = function (fn, reverse) {
			if (reverse) {
				return this.cacheResult().__iterate(fn, reverse);
			}
			var iterable = this._iterable;
			var iterator = getIterator(iterable);
			var iterations = 0;
			if (isIterator(iterator)) {
				var step;
				while (!(step = iterator.next()).done) {
					if (fn(step.value, iterations++, this) === false) {
						break;
					}
				}
			}
			return iterations;
		};

		IterableSeq.prototype.__iteratorUncached = function (type, reverse) {
			if (reverse) {
				return this.cacheResult().__iterator(type, reverse);
			}
			var iterable = this._iterable;
			var iterator = getIterator(iterable);
			if (!isIterator(iterator)) {
				return new Iterator(iteratorDone);
			}
			var iterations = 0;
			return new Iterator(function () {
				var step = iterator.next();
				return step.done
					? step
					: iteratorValue(type, iterations++, step.value);
			});
		};

		createClass(IteratorSeq, IndexedSeq);
		function IteratorSeq(iterator) {
			this._iterator = iterator;
			this._iteratorCache = [];
		}

		IteratorSeq.prototype.__iterateUncached = function (fn, reverse) {
			if (reverse) {
				return this.cacheResult().__iterate(fn, reverse);
			}
			var iterator = this._iterator;
			var cache = this._iteratorCache;
			var iterations = 0;
			while (iterations < cache.length) {
				if (fn(cache[iterations], iterations++, this) === false) {
					return iterations;
				}
			}
			var step;
			while (!(step = iterator.next()).done) {
				var val = step.value;
				cache[iterations] = val;
				if (fn(val, iterations++, this) === false) {
					break;
				}
			}
			return iterations;
		};

		IteratorSeq.prototype.__iteratorUncached = function (type, reverse) {
			if (reverse) {
				return this.cacheResult().__iterator(type, reverse);
			}
			var iterator = this._iterator;
			var cache = this._iteratorCache;
			var iterations = 0;
			return new Iterator(function () {
				if (iterations >= cache.length) {
					var step = iterator.next();
					if (step.done) {
						return step;
					}
					cache[iterations] = step.value;
				}
				return iteratorValue(type, iterations, cache[iterations++]);
			});
		};

		// # pragma Helper functions

		function isSeq(maybeSeq) {
			return !!(maybeSeq && maybeSeq[IS_SEQ_SENTINEL]);
		}

		var EMPTY_SEQ;

		function emptySequence() {
			return EMPTY_SEQ || (EMPTY_SEQ = new ArraySeq([]));
		}

		function keyedSeqFromValue(value) {
			var seq = Array.isArray(value)
				? new ArraySeq(value).fromEntrySeq()
				: isIterator(value)
				? new IteratorSeq(value).fromEntrySeq()
				: hasIterator(value)
				? new IterableSeq(value).fromEntrySeq()
				: typeof value === "object"
				? new ObjectSeq(value)
				: undefined;
			if (!seq) {
				throw new TypeError(
					"Expected Array or iterable object of [k, v] entries, " +
						"or keyed object: " +
						value
				);
			}
			return seq;
		}

		function indexedSeqFromValue(value) {
			var seq = maybeIndexedSeqFromValue(value);
			if (!seq) {
				throw new TypeError(
					"Expected Array or iterable object of values: " + value
				);
			}
			return seq;
		}

		function seqFromValue(value) {
			var seq =
				maybeIndexedSeqFromValue(value) ||
				(typeof value === "object" && new ObjectSeq(value));
			if (!seq) {
				throw new TypeError(
					"Expected Array or iterable object of values, or keyed object: " +
						value
				);
			}
			return seq;
		}

		function maybeIndexedSeqFromValue(value) {
			return isArrayLike(value)
				? new ArraySeq(value)
				: isIterator(value)
				? new IteratorSeq(value)
				: hasIterator(value)
				? new IterableSeq(value)
				: undefined;
		}

		function seqIterate(seq, fn, reverse, useKeys) {
			var cache = seq._cache;
			if (cache) {
				var maxIndex = cache.length - 1;
				for (var ii = 0; ii <= maxIndex; ii++) {
					var entry = cache[reverse ? maxIndex - ii : ii];
					if (fn(entry[1], useKeys ? entry[0] : ii, seq) === false) {
						return ii + 1;
					}
				}
				return ii;
			}
			return seq.__iterateUncached(fn, reverse);
		}

		function seqIterator(seq, type, reverse, useKeys) {
			var cache = seq._cache;
			if (cache) {
				var maxIndex = cache.length - 1;
				var ii = 0;
				return new Iterator(function () {
					var entry = cache[reverse ? maxIndex - ii : ii];
					return ii++ > maxIndex
						? iteratorDone()
						: iteratorValue(
								type,
								useKeys ? entry[0] : ii - 1,
								entry[1]
						  );
				});
			}
			return seq.__iteratorUncached(type, reverse);
		}

		function fromJS(json, converter) {
			return converter
				? fromJSWith(converter, json, "", { "": json })
				: fromJSDefault(json);
		}

		function fromJSWith(converter, json, key, parentJSON) {
			if (Array.isArray(json)) {
				return converter.call(
					parentJSON,
					key,
					IndexedSeq(json).map(function (v, k) {
						return fromJSWith(converter, v, k, json);
					})
				);
			}
			if (isPlainObj(json)) {
				return converter.call(
					parentJSON,
					key,
					KeyedSeq(json).map(function (v, k) {
						return fromJSWith(converter, v, k, json);
					})
				);
			}
			return json;
		}

		function fromJSDefault(json) {
			if (Array.isArray(json)) {
				return IndexedSeq(json).map(fromJSDefault).toList();
			}
			if (isPlainObj(json)) {
				return KeyedSeq(json).map(fromJSDefault).toMap();
			}
			return json;
		}

		function isPlainObj(value) {
			return (
				value &&
				(value.constructor === Object ||
					value.constructor === undefined)
			);
		}

		/**
		 * An extension of the "same-value" algorithm as [described for use by ES6 Map
		 * and Set](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map#Key_equality)
		 *
		 * NaN is considered the same as NaN, however -0 and 0 are considered the same
		 * value, which is different from the algorithm described by
		 * [`Object.is`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is).
		 *
		 * This is extended further to allow Objects to describe the values they
		 * represent, by way of `valueOf` or `equals` (and `hashCode`).
		 *
		 * Note: because of this extension, the key equality of Immutable.Map and the
		 * value equality of Immutable.Set will differ from ES6 Map and Set.
		 *
		 * ### Defining custom values
		 *
		 * The easiest way to describe the value an object represents is by implementing
		 * `valueOf`. For example, `Date` represents a value by returning a unix
		 * timestamp for `valueOf`:
		 *
		 *     var date1 = new Date(1234567890000); // Fri Feb 13 2009 ...
		 *     var date2 = new Date(1234567890000);
		 *     date1.valueOf(); // 1234567890000
		 *     assert( date1 !== date2 );
		 *     assert( Immutable.is( date1, date2 ) );
		 *
		 * Note: overriding `valueOf` may have other implications if you use this object
		 * where JavaScript expects a primitive, such as implicit string coercion.
		 *
		 * For more complex types, especially collections, implementing `valueOf` may
		 * not be performant. An alternative is to implement `equals` and `hashCode`.
		 *
		 * `equals` takes another object, presumably of similar type, and returns true
		 * if the it is equal. Equality is symmetrical, so the same result should be
		 * returned if this and the argument are flipped.
		 *
		 *     assert( a.equals(b) === b.equals(a) );
		 *
		 * `hashCode` returns a 32bit integer number representing the object which will
		 * be used to determine how to store the value object in a Map or Set. You must
		 * provide both or neither methods, one must not exist without the other.
		 *
		 * Also, an important relationship between these methods must be upheld: if two
		 * values are equal, they *must* return the same hashCode. If the values are not
		 * equal, they might have the same hashCode; this is called a hash collision,
		 * and while undesirable for performance reasons, it is acceptable.
		 *
		 *     if (a.equals(b)) {
		 *       assert( a.hashCode() === b.hashCode() );
		 *     }
		 *
		 * All Immutable collections implement `equals` and `hashCode`.
		 *
		 */
		function is(valueA, valueB) {
			if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {
				return true;
			}
			if (!valueA || !valueB) {
				return false;
			}
			if (
				typeof valueA.valueOf === "function" &&
				typeof valueB.valueOf === "function"
			) {
				valueA = valueA.valueOf();
				valueB = valueB.valueOf();
				if (
					valueA === valueB ||
					(valueA !== valueA && valueB !== valueB)
				) {
					return true;
				}
				if (!valueA || !valueB) {
					return false;
				}
			}
			if (
				typeof valueA.equals === "function" &&
				typeof valueB.equals === "function" &&
				valueA.equals(valueB)
			) {
				return true;
			}
			return false;
		}

		function deepEqual(a, b) {
			if (a === b) {
				return true;
			}

			if (
				!isIterable(b) ||
				(a.size !== undefined &&
					b.size !== undefined &&
					a.size !== b.size) ||
				(a.__hash !== undefined &&
					b.__hash !== undefined &&
					a.__hash !== b.__hash) ||
				isKeyed(a) !== isKeyed(b) ||
				isIndexed(a) !== isIndexed(b) ||
				isOrdered(a) !== isOrdered(b)
			) {
				return false;
			}

			if (a.size === 0 && b.size === 0) {
				return true;
			}

			var notAssociative = !isAssociative(a);

			if (isOrdered(a)) {
				var entries = a.entries();
				return (
					b.every(function (v, k) {
						var entry = entries.next().value;
						return (
							entry &&
							is(entry[1], v) &&
							(notAssociative || is(entry[0], k))
						);
					}) && entries.next().done
				);
			}

			var flipped = false;

			if (a.size === undefined) {
				if (b.size === undefined) {
					if (typeof a.cacheResult === "function") {
						a.cacheResult();
					}
				} else {
					flipped = true;
					var _ = a;
					a = b;
					b = _;
				}
			}

			var allEqual = true;
			var bSize = b.__iterate(function (v, k) {
				if (
					notAssociative
						? !a.has(v)
						: flipped
						? !is(v, a.get(k, NOT_SET))
						: !is(a.get(k, NOT_SET), v)
				) {
					allEqual = false;
					return false;
				}
			});

			return allEqual && a.size === bSize;
		}

		createClass(Repeat, IndexedSeq);

		function Repeat(value, times) {
			if (!(this instanceof Repeat)) {
				return new Repeat(value, times);
			}
			this._value = value;
			this.size = times === undefined ? Infinity : Math.max(0, times);
			if (this.size === 0) {
				if (EMPTY_REPEAT) {
					return EMPTY_REPEAT;
				}
				EMPTY_REPEAT = this;
			}
		}

		Repeat.prototype.toString = function () {
			if (this.size === 0) {
				return "Repeat []";
			}
			return "Repeat [ " + this._value + " " + this.size + " times ]";
		};

		Repeat.prototype.get = function (index, notSetValue) {
			return this.has(index) ? this._value : notSetValue;
		};

		Repeat.prototype.includes = function (searchValue) {
			return is(this._value, searchValue);
		};

		Repeat.prototype.slice = function (begin, end) {
			var size = this.size;
			return wholeSlice(begin, end, size)
				? this
				: new Repeat(
						this._value,
						resolveEnd(end, size) - resolveBegin(begin, size)
				  );
		};

		Repeat.prototype.reverse = function () {
			return this;
		};

		Repeat.prototype.indexOf = function (searchValue) {
			if (is(this._value, searchValue)) {
				return 0;
			}
			return -1;
		};

		Repeat.prototype.lastIndexOf = function (searchValue) {
			if (is(this._value, searchValue)) {
				return this.size;
			}
			return -1;
		};

		Repeat.prototype.__iterate = function (fn, reverse) {
			for (var ii = 0; ii < this.size; ii++) {
				if (fn(this._value, ii, this) === false) {
					return ii + 1;
				}
			}
			return ii;
		};

		Repeat.prototype.__iterator = function (type, reverse) {
			var this$0 = this;
			var ii = 0;
			return new Iterator(function () {
				return ii < this$0.size
					? iteratorValue(type, ii++, this$0._value)
					: iteratorDone();
			});
		};

		Repeat.prototype.equals = function (other) {
			return other instanceof Repeat
				? is(this._value, other._value)
				: deepEqual(other);
		};

		var EMPTY_REPEAT;

		function invariant(condition, error) {
			if (!condition) throw new Error(error);
		}

		createClass(Range, IndexedSeq);

		function Range(start, end, step) {
			if (!(this instanceof Range)) {
				return new Range(start, end, step);
			}
			invariant(step !== 0, "Cannot step a Range by 0");
			start = start || 0;
			if (end === undefined) {
				end = Infinity;
			}
			step = step === undefined ? 1 : Math.abs(step);
			if (end < start) {
				step = -step;
			}
			this._start = start;
			this._end = end;
			this._step = step;
			this.size = Math.max(0, Math.ceil((end - start) / step - 1) + 1);
			if (this.size === 0) {
				if (EMPTY_RANGE) {
					return EMPTY_RANGE;
				}
				EMPTY_RANGE = this;
			}
		}

		Range.prototype.toString = function () {
			if (this.size === 0) {
				return "Range []";
			}
			return (
				"Range [ " +
				this._start +
				"..." +
				this._end +
				(this._step !== 1 ? " by " + this._step : "") +
				" ]"
			);
		};

		Range.prototype.get = function (index, notSetValue) {
			return this.has(index)
				? this._start + wrapIndex(this, index) * this._step
				: notSetValue;
		};

		Range.prototype.includes = function (searchValue) {
			var possibleIndex = (searchValue - this._start) / this._step;
			return (
				possibleIndex >= 0 &&
				possibleIndex < this.size &&
				possibleIndex === Math.floor(possibleIndex)
			);
		};

		Range.prototype.slice = function (begin, end) {
			if (wholeSlice(begin, end, this.size)) {
				return this;
			}
			begin = resolveBegin(begin, this.size);
			end = resolveEnd(end, this.size);
			if (end <= begin) {
				return new Range(0, 0);
			}
			return new Range(
				this.get(begin, this._end),
				this.get(end, this._end),
				this._step
			);
		};

		Range.prototype.indexOf = function (searchValue) {
			var offsetValue = searchValue - this._start;
			if (offsetValue % this._step === 0) {
				var index = offsetValue / this._step;
				if (index >= 0 && index < this.size) {
					return index;
				}
			}
			return -1;
		};

		Range.prototype.lastIndexOf = function (searchValue) {
			return this.indexOf(searchValue);
		};

		Range.prototype.__iterate = function (fn, reverse) {
			var maxIndex = this.size - 1;
			var step = this._step;
			var value = reverse ? this._start + maxIndex * step : this._start;
			for (var ii = 0; ii <= maxIndex; ii++) {
				if (fn(value, ii, this) === false) {
					return ii + 1;
				}
				value += reverse ? -step : step;
			}
			return ii;
		};

		Range.prototype.__iterator = function (type, reverse) {
			var maxIndex = this.size - 1;
			var step = this._step;
			var value = reverse ? this._start + maxIndex * step : this._start;
			var ii = 0;
			return new Iterator(function () {
				var v = value;
				value += reverse ? -step : step;
				return ii > maxIndex
					? iteratorDone()
					: iteratorValue(type, ii++, v);
			});
		};

		Range.prototype.equals = function (other) {
			return other instanceof Range
				? this._start === other._start &&
						this._end === other._end &&
						this._step === other._step
				: deepEqual(this, other);
		};

		var EMPTY_RANGE;

		createClass(Collection, Iterable);
		function Collection() {
			throw TypeError("Abstract");
		}

		createClass(KeyedCollection, Collection);
		function KeyedCollection() {}

		createClass(IndexedCollection, Collection);
		function IndexedCollection() {}

		createClass(SetCollection, Collection);
		function SetCollection() {}

		Collection.Keyed = KeyedCollection;
		Collection.Indexed = IndexedCollection;
		Collection.Set = SetCollection;

		var imul =
			typeof Math.imul === "function" && Math.imul(0xffffffff, 2) === -2
				? Math.imul
				: function imul(a, b) {
						a = a | 0; // int
						b = b | 0; // int
						var c = a & 0xffff;
						var d = b & 0xffff;
						// Shift by 0 fixes the sign on the high part.
						return (
							(c * d +
								((((a >>> 16) * d + c * (b >>> 16)) << 16) >>>
									0)) |
							0
						); // int
				  };

		// v8 has an optimization for storing 31-bit signed numbers.
		// Values which have either 00 or 11 as the high order bits qualify.
		// This function drops the highest order bit in a signed number, maintaining
		// the sign bit.
		function smi(i32) {
			return ((i32 >>> 1) & 0x40000000) | (i32 & 0xbfffffff);
		}

		function hash(o) {
			if (o === false || o === null || o === undefined) {
				return 0;
			}
			if (typeof o.valueOf === "function") {
				o = o.valueOf();
				if (o === false || o === null || o === undefined) {
					return 0;
				}
			}
			if (o === true) {
				return 1;
			}
			var type = typeof o;
			if (type === "number") {
				if (o !== o || o === Infinity) {
					return 0;
				}
				var h = o | 0;
				if (h !== o) {
					h ^= o * 0xffffffff;
				}
				while (o > 0xffffffff) {
					o /= 0xffffffff;
					h ^= o;
				}
				return smi(h);
			}
			if (type === "string") {
				return o.length > STRING_HASH_CACHE_MIN_STRLEN
					? cachedHashString(o)
					: hashString(o);
			}
			if (typeof o.hashCode === "function") {
				return o.hashCode();
			}
			if (type === "object") {
				return hashJSObj(o);
			}
			if (typeof o.toString === "function") {
				return hashString(o.toString());
			}
			throw new Error("Value type " + type + " cannot be hashed.");
		}

		function cachedHashString(string) {
			var hash = stringHashCache[string];
			if (hash === undefined) {
				hash = hashString(string);
				if (STRING_HASH_CACHE_SIZE === STRING_HASH_CACHE_MAX_SIZE) {
					STRING_HASH_CACHE_SIZE = 0;
					stringHashCache = {};
				}
				STRING_HASH_CACHE_SIZE++;
				stringHashCache[string] = hash;
			}
			return hash;
		}

		// http://jsperf.com/hashing-strings
		function hashString(string) {
			// This is the hash from JVM
			// The hash code for a string is computed as
			// s[0] * 31 ^ (n - 1) + s[1] * 31 ^ (n - 2) + ... + s[n - 1],
			// where s[i] is the ith character of the string and n is the length of
			// the string. We "mod" the result to make it between 0 (inclusive) and 2^31
			// (exclusive) by dropping high bits.
			var hash = 0;
			for (var ii = 0; ii < string.length; ii++) {
				hash = (31 * hash + string.charCodeAt(ii)) | 0;
			}
			return smi(hash);
		}

		function hashJSObj(obj) {
			var hash;
			if (usingWeakMap) {
				hash = weakMap.get(obj);
				if (hash !== undefined) {
					return hash;
				}
			}

			hash = obj[UID_HASH_KEY];
			if (hash !== undefined) {
				return hash;
			}

			if (!canDefineProperty) {
				hash =
					obj.propertyIsEnumerable &&
					obj.propertyIsEnumerable[UID_HASH_KEY];
				if (hash !== undefined) {
					return hash;
				}

				hash = getIENodeHash(obj);
				if (hash !== undefined) {
					return hash;
				}
			}

			hash = ++objHashUID;
			if (objHashUID & 0x40000000) {
				objHashUID = 0;
			}

			if (usingWeakMap) {
				weakMap.set(obj, hash);
			} else if (
				isExtensible !== undefined &&
				isExtensible(obj) === false
			) {
				throw new Error(
					"Non-extensible objects are not allowed as keys."
				);
			} else if (canDefineProperty) {
				Object.defineProperty(obj, UID_HASH_KEY, {
					enumerable: false,
					configurable: false,
					writable: false,
					value: hash,
				});
			} else if (
				obj.propertyIsEnumerable !== undefined &&
				obj.propertyIsEnumerable ===
					obj.constructor.prototype.propertyIsEnumerable
			) {
				// Since we can't define a non-enumerable property on the object
				// we'll hijack one of the less-used non-enumerable properties to
				// save our hash on it. Since this is a function it will not show up in
				// `JSON.stringify` which is what we want.
				obj.propertyIsEnumerable = function () {
					return this.constructor.prototype.propertyIsEnumerable.apply(
						this,
						arguments
					);
				};
				obj.propertyIsEnumerable[UID_HASH_KEY] = hash;
			} else if (obj.nodeType !== undefined) {
				// At this point we couldn't get the IE `uniqueID` to use as a hash
				// and we couldn't use a non-enumerable property to exploit the
				// dontEnum bug so we simply add the `UID_HASH_KEY` on the node
				// itself.
				obj[UID_HASH_KEY] = hash;
			} else {
				throw new Error(
					"Unable to set a non-enumerable property on object."
				);
			}

			return hash;
		}

		// Get references to ES5 object methods.
		var isExtensible = Object.isExtensible;

		// True if Object.defineProperty works as expected. IE8 fails this test.
		var canDefineProperty = (function () {
			try {
				Object.defineProperty({}, "@", {});
				return true;
			} catch (e) {
				return false;
			}
		})();

		// IE has a `uniqueID` property on DOM nodes. We can construct the hash from it
		// and avoid memory leaks from the IE cloneNode bug.
		function getIENodeHash(node) {
			if (node && node.nodeType > 0) {
				switch (node.nodeType) {
					case 1: // Element
						return node.uniqueID;
					case 9: // Document
						return (
							node.documentElement &&
							node.documentElement.uniqueID
						);
				}
			}
		}

		// If possible, use a WeakMap.
		var usingWeakMap = typeof WeakMap === "function";
		var weakMap;
		if (usingWeakMap) {
			weakMap = new WeakMap();
		}

		var objHashUID = 0;

		var UID_HASH_KEY = "__immutablehash__";
		if (typeof Symbol === "function") {
			UID_HASH_KEY = Symbol(UID_HASH_KEY);
		}

		var STRING_HASH_CACHE_MIN_STRLEN = 16;
		var STRING_HASH_CACHE_MAX_SIZE = 255;
		var STRING_HASH_CACHE_SIZE = 0;
		var stringHashCache = {};

		function assertNotInfinite(size) {
			invariant(
				size !== Infinity,
				"Cannot perform this action with an infinite size."
			);
		}

		createClass(Map, KeyedCollection);

		// @pragma Construction

		function Map(value) {
			return value === null || value === undefined
				? emptyMap()
				: isMap(value) && !isOrdered(value)
				? value
				: emptyMap().withMutations(function (map) {
						var iter = KeyedIterable(value);
						assertNotInfinite(iter.size);
						iter.forEach(function (v, k) {
							return map.set(k, v);
						});
				  });
		}

		Map.of = function () {
			var keyValues = SLICE$0.call(arguments, 0);
			return emptyMap().withMutations(function (map) {
				for (var i = 0; i < keyValues.length; i += 2) {
					if (i + 1 >= keyValues.length) {
						throw new Error(
							"Missing value for key: " + keyValues[i]
						);
					}
					map.set(keyValues[i], keyValues[i + 1]);
				}
			});
		};

		Map.prototype.toString = function () {
			return this.__toString("Map {", "}");
		};

		// @pragma Access

		Map.prototype.get = function (k, notSetValue) {
			return this._root
				? this._root.get(0, undefined, k, notSetValue)
				: notSetValue;
		};

		// @pragma Modification

		Map.prototype.set = function (k, v) {
			return updateMap(this, k, v);
		};

		Map.prototype.setIn = function (keyPath, v) {
			return this.updateIn(keyPath, NOT_SET, function () {
				return v;
			});
		};

		Map.prototype.remove = function (k) {
			return updateMap(this, k, NOT_SET);
		};

		Map.prototype.deleteIn = function (keyPath) {
			return this.updateIn(keyPath, function () {
				return NOT_SET;
			});
		};

		Map.prototype.update = function (k, notSetValue, updater) {
			return arguments.length === 1
				? k(this)
				: this.updateIn([k], notSetValue, updater);
		};

		Map.prototype.updateIn = function (keyPath, notSetValue, updater) {
			if (!updater) {
				updater = notSetValue;
				notSetValue = undefined;
			}
			var updatedValue = updateInDeepMap(
				this,
				forceIterator(keyPath),
				notSetValue,
				updater
			);
			return updatedValue === NOT_SET ? undefined : updatedValue;
		};

		Map.prototype.clear = function () {
			if (this.size === 0) {
				return this;
			}
			if (this.__ownerID) {
				this.size = 0;
				this._root = null;
				this.__hash = undefined;
				this.__altered = true;
				return this;
			}
			return emptyMap();
		};

		// @pragma Composition

		Map.prototype.merge = function (/*...iters*/) {
			return mergeIntoMapWith(this, undefined, arguments);
		};

		Map.prototype.mergeWith = function (merger) {
			var iters = SLICE$0.call(arguments, 1);
			return mergeIntoMapWith(this, merger, iters);
		};

		Map.prototype.mergeIn = function (keyPath) {
			var iters = SLICE$0.call(arguments, 1);
			return this.updateIn(keyPath, emptyMap(), function (m) {
				return typeof m.merge === "function"
					? m.merge.apply(m, iters)
					: iters[iters.length - 1];
			});
		};

		Map.prototype.mergeDeep = function (/*...iters*/) {
			return mergeIntoMapWith(this, deepMerger, arguments);
		};

		Map.prototype.mergeDeepWith = function (merger) {
			var iters = SLICE$0.call(arguments, 1);
			return mergeIntoMapWith(this, deepMergerWith(merger), iters);
		};

		Map.prototype.mergeDeepIn = function (keyPath) {
			var iters = SLICE$0.call(arguments, 1);
			return this.updateIn(keyPath, emptyMap(), function (m) {
				return typeof m.mergeDeep === "function"
					? m.mergeDeep.apply(m, iters)
					: iters[iters.length - 1];
			});
		};

		Map.prototype.sort = function (comparator) {
			// Late binding
			return OrderedMap(sortFactory(this, comparator));
		};

		Map.prototype.sortBy = function (mapper, comparator) {
			// Late binding
			return OrderedMap(sortFactory(this, comparator, mapper));
		};

		// @pragma Mutability

		Map.prototype.withMutations = function (fn) {
			var mutable = this.asMutable();
			fn(mutable);
			return mutable.wasAltered()
				? mutable.__ensureOwner(this.__ownerID)
				: this;
		};

		Map.prototype.asMutable = function () {
			return this.__ownerID ? this : this.__ensureOwner(new OwnerID());
		};

		Map.prototype.asImmutable = function () {
			return this.__ensureOwner();
		};

		Map.prototype.wasAltered = function () {
			return this.__altered;
		};

		Map.prototype.__iterator = function (type, reverse) {
			return new MapIterator(this, type, reverse);
		};

		Map.prototype.__iterate = function (fn, reverse) {
			var this$0 = this;
			var iterations = 0;
			this._root &&
				this._root.iterate(function (entry) {
					iterations++;
					return fn(entry[1], entry[0], this$0);
				}, reverse);
			return iterations;
		};

		Map.prototype.__ensureOwner = function (ownerID) {
			if (ownerID === this.__ownerID) {
				return this;
			}
			if (!ownerID) {
				this.__ownerID = ownerID;
				this.__altered = false;
				return this;
			}
			return makeMap(this.size, this._root, ownerID, this.__hash);
		};

		function isMap(maybeMap) {
			return !!(maybeMap && maybeMap[IS_MAP_SENTINEL]);
		}

		Map.isMap = isMap;

		var IS_MAP_SENTINEL = "@@__IMMUTABLE_MAP__@@";

		var MapPrototype = Map.prototype;
		MapPrototype[IS_MAP_SENTINEL] = true;
		MapPrototype[DELETE] = MapPrototype.remove;
		MapPrototype.removeIn = MapPrototype.deleteIn;

		// #pragma Trie Nodes

		function ArrayMapNode(ownerID, entries) {
			this.ownerID = ownerID;
			this.entries = entries;
		}

		ArrayMapNode.prototype.get = function (
			shift,
			keyHash,
			key,
			notSetValue
		) {
			var entries = this.entries;
			for (var ii = 0, len = entries.length; ii < len; ii++) {
				if (is(key, entries[ii][0])) {
					return entries[ii][1];
				}
			}
			return notSetValue;
		};

		ArrayMapNode.prototype.update = function (
			ownerID,
			shift,
			keyHash,
			key,
			value,
			didChangeSize,
			didAlter
		) {
			var removed = value === NOT_SET;

			var entries = this.entries;
			var idx = 0;
			for (var len = entries.length; idx < len; idx++) {
				if (is(key, entries[idx][0])) {
					break;
				}
			}
			var exists = idx < len;

			if (exists ? entries[idx][1] === value : removed) {
				return this;
			}

			SetRef(didAlter);
			(removed || !exists) && SetRef(didChangeSize);

			if (removed && entries.length === 1) {
				return; // undefined
			}

			if (!exists && !removed && entries.length >= MAX_ARRAY_MAP_SIZE) {
				return createNodes(ownerID, entries, key, value);
			}

			var isEditable = ownerID && ownerID === this.ownerID;
			var newEntries = isEditable ? entries : arrCopy(entries);

			if (exists) {
				if (removed) {
					idx === len - 1
						? newEntries.pop()
						: (newEntries[idx] = newEntries.pop());
				} else {
					newEntries[idx] = [key, value];
				}
			} else {
				newEntries.push([key, value]);
			}

			if (isEditable) {
				this.entries = newEntries;
				return this;
			}

			return new ArrayMapNode(ownerID, newEntries);
		};

		function BitmapIndexedNode(ownerID, bitmap, nodes) {
			this.ownerID = ownerID;
			this.bitmap = bitmap;
			this.nodes = nodes;
		}

		BitmapIndexedNode.prototype.get = function (
			shift,
			keyHash,
			key,
			notSetValue
		) {
			if (keyHash === undefined) {
				keyHash = hash(key);
			}
			var bit = 1 << ((shift === 0 ? keyHash : keyHash >>> shift) & MASK);
			var bitmap = this.bitmap;
			return (bitmap & bit) === 0
				? notSetValue
				: this.nodes[popCount(bitmap & (bit - 1))].get(
						shift + SHIFT,
						keyHash,
						key,
						notSetValue
				  );
		};

		BitmapIndexedNode.prototype.update = function (
			ownerID,
			shift,
			keyHash,
			key,
			value,
			didChangeSize,
			didAlter
		) {
			if (keyHash === undefined) {
				keyHash = hash(key);
			}
			var keyHashFrag =
				(shift === 0 ? keyHash : keyHash >>> shift) & MASK;
			var bit = 1 << keyHashFrag;
			var bitmap = this.bitmap;
			var exists = (bitmap & bit) !== 0;

			if (!exists && value === NOT_SET) {
				return this;
			}

			var idx = popCount(bitmap & (bit - 1));
			var nodes = this.nodes;
			var node = exists ? nodes[idx] : undefined;
			var newNode = updateNode(
				node,
				ownerID,
				shift + SHIFT,
				keyHash,
				key,
				value,
				didChangeSize,
				didAlter
			);

			if (newNode === node) {
				return this;
			}

			if (!exists && newNode && nodes.length >= MAX_BITMAP_INDEXED_SIZE) {
				return expandNodes(
					ownerID,
					nodes,
					bitmap,
					keyHashFrag,
					newNode
				);
			}

			if (
				exists &&
				!newNode &&
				nodes.length === 2 &&
				isLeafNode(nodes[idx ^ 1])
			) {
				return nodes[idx ^ 1];
			}

			if (
				exists &&
				newNode &&
				nodes.length === 1 &&
				isLeafNode(newNode)
			) {
				return newNode;
			}

			var isEditable = ownerID && ownerID === this.ownerID;
			var newBitmap = exists
				? newNode
					? bitmap
					: bitmap ^ bit
				: bitmap | bit;
			var newNodes = exists
				? newNode
					? setIn(nodes, idx, newNode, isEditable)
					: spliceOut(nodes, idx, isEditable)
				: spliceIn(nodes, idx, newNode, isEditable);

			if (isEditable) {
				this.bitmap = newBitmap;
				this.nodes = newNodes;
				return this;
			}

			return new BitmapIndexedNode(ownerID, newBitmap, newNodes);
		};

		function HashArrayMapNode(ownerID, count, nodes) {
			this.ownerID = ownerID;
			this.count = count;
			this.nodes = nodes;
		}

		HashArrayMapNode.prototype.get = function (
			shift,
			keyHash,
			key,
			notSetValue
		) {
			if (keyHash === undefined) {
				keyHash = hash(key);
			}
			var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;
			var node = this.nodes[idx];
			return node
				? node.get(shift + SHIFT, keyHash, key, notSetValue)
				: notSetValue;
		};

		HashArrayMapNode.prototype.update = function (
			ownerID,
			shift,
			keyHash,
			key,
			value,
			didChangeSize,
			didAlter
		) {
			if (keyHash === undefined) {
				keyHash = hash(key);
			}
			var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;
			var removed = value === NOT_SET;
			var nodes = this.nodes;
			var node = nodes[idx];

			if (removed && !node) {
				return this;
			}

			var newNode = updateNode(
				node,
				ownerID,
				shift + SHIFT,
				keyHash,
				key,
				value,
				didChangeSize,
				didAlter
			);
			if (newNode === node) {
				return this;
			}

			var newCount = this.count;
			if (!node) {
				newCount++;
			} else if (!newNode) {
				newCount--;
				if (newCount < MIN_HASH_ARRAY_MAP_SIZE) {
					return packNodes(ownerID, nodes, newCount, idx);
				}
			}

			var isEditable = ownerID && ownerID === this.ownerID;
			var newNodes = setIn(nodes, idx, newNode, isEditable);

			if (isEditable) {
				this.count = newCount;
				this.nodes = newNodes;
				return this;
			}

			return new HashArrayMapNode(ownerID, newCount, newNodes);
		};

		function HashCollisionNode(ownerID, keyHash, entries) {
			this.ownerID = ownerID;
			this.keyHash = keyHash;
			this.entries = entries;
		}

		HashCollisionNode.prototype.get = function (
			shift,
			keyHash,
			key,
			notSetValue
		) {
			var entries = this.entries;
			for (var ii = 0, len = entries.length; ii < len; ii++) {
				if (is(key, entries[ii][0])) {
					return entries[ii][1];
				}
			}
			return notSetValue;
		};

		HashCollisionNode.prototype.update = function (
			ownerID,
			shift,
			keyHash,
			key,
			value,
			didChangeSize,
			didAlter
		) {
			if (keyHash === undefined) {
				keyHash = hash(key);
			}

			var removed = value === NOT_SET;

			if (keyHash !== this.keyHash) {
				if (removed) {
					return this;
				}
				SetRef(didAlter);
				SetRef(didChangeSize);
				return mergeIntoNode(this, ownerID, shift, keyHash, [
					key,
					value,
				]);
			}

			var entries = this.entries;
			var idx = 0;
			for (var len = entries.length; idx < len; idx++) {
				if (is(key, entries[idx][0])) {
					break;
				}
			}
			var exists = idx < len;

			if (exists ? entries[idx][1] === value : removed) {
				return this;
			}

			SetRef(didAlter);
			(removed || !exists) && SetRef(didChangeSize);

			if (removed && len === 2) {
				return new ValueNode(ownerID, this.keyHash, entries[idx ^ 1]);
			}

			var isEditable = ownerID && ownerID === this.ownerID;
			var newEntries = isEditable ? entries : arrCopy(entries);

			if (exists) {
				if (removed) {
					idx === len - 1
						? newEntries.pop()
						: (newEntries[idx] = newEntries.pop());
				} else {
					newEntries[idx] = [key, value];
				}
			} else {
				newEntries.push([key, value]);
			}

			if (isEditable) {
				this.entries = newEntries;
				return this;
			}

			return new HashCollisionNode(ownerID, this.keyHash, newEntries);
		};

		function ValueNode(ownerID, keyHash, entry) {
			this.ownerID = ownerID;
			this.keyHash = keyHash;
			this.entry = entry;
		}

		ValueNode.prototype.get = function (shift, keyHash, key, notSetValue) {
			return is(key, this.entry[0]) ? this.entry[1] : notSetValue;
		};

		ValueNode.prototype.update = function (
			ownerID,
			shift,
			keyHash,
			key,
			value,
			didChangeSize,
			didAlter
		) {
			var removed = value === NOT_SET;
			var keyMatch = is(key, this.entry[0]);
			if (keyMatch ? value === this.entry[1] : removed) {
				return this;
			}

			SetRef(didAlter);

			if (removed) {
				SetRef(didChangeSize);
				return; // undefined
			}

			if (keyMatch) {
				if (ownerID && ownerID === this.ownerID) {
					this.entry[1] = value;
					return this;
				}
				return new ValueNode(ownerID, this.keyHash, [key, value]);
			}

			SetRef(didChangeSize);
			return mergeIntoNode(this, ownerID, shift, hash(key), [key, value]);
		};

		// #pragma Iterators

		ArrayMapNode.prototype.iterate = HashCollisionNode.prototype.iterate =
			function (fn, reverse) {
				var entries = this.entries;
				for (
					var ii = 0, maxIndex = entries.length - 1;
					ii <= maxIndex;
					ii++
				) {
					if (fn(entries[reverse ? maxIndex - ii : ii]) === false) {
						return false;
					}
				}
			};

		BitmapIndexedNode.prototype.iterate =
			HashArrayMapNode.prototype.iterate = function (fn, reverse) {
				var nodes = this.nodes;
				for (
					var ii = 0, maxIndex = nodes.length - 1;
					ii <= maxIndex;
					ii++
				) {
					var node = nodes[reverse ? maxIndex - ii : ii];
					if (node && node.iterate(fn, reverse) === false) {
						return false;
					}
				}
			};

		ValueNode.prototype.iterate = function (fn, reverse) {
			return fn(this.entry);
		};

		createClass(MapIterator, Iterator);

		function MapIterator(map, type, reverse) {
			this._type = type;
			this._reverse = reverse;
			this._stack = map._root && mapIteratorFrame(map._root);
		}

		MapIterator.prototype.next = function () {
			var type = this._type;
			var stack = this._stack;
			while (stack) {
				var node = stack.node;
				var index = stack.index++;
				var maxIndex;
				if (node.entry) {
					if (index === 0) {
						return mapIteratorValue(type, node.entry);
					}
				} else if (node.entries) {
					maxIndex = node.entries.length - 1;
					if (index <= maxIndex) {
						return mapIteratorValue(
							type,
							node.entries[
								this._reverse ? maxIndex - index : index
							]
						);
					}
				} else {
					maxIndex = node.nodes.length - 1;
					if (index <= maxIndex) {
						var subNode =
							node.nodes[
								this._reverse ? maxIndex - index : index
							];
						if (subNode) {
							if (subNode.entry) {
								return mapIteratorValue(type, subNode.entry);
							}
							stack = this._stack = mapIteratorFrame(
								subNode,
								stack
							);
						}
						continue;
					}
				}
				stack = this._stack = this._stack.__prev;
			}
			return iteratorDone();
		};

		function mapIteratorValue(type, entry) {
			return iteratorValue(type, entry[0], entry[1]);
		}

		function mapIteratorFrame(node, prev) {
			return {
				node: node,
				index: 0,
				__prev: prev,
			};
		}

		function makeMap(size, root, ownerID, hash) {
			var map = Object.create(MapPrototype);
			map.size = size;
			map._root = root;
			map.__ownerID = ownerID;
			map.__hash = hash;
			map.__altered = false;
			return map;
		}

		var EMPTY_MAP;
		function emptyMap() {
			return EMPTY_MAP || (EMPTY_MAP = makeMap(0));
		}

		function updateMap(map, k, v) {
			var newRoot;
			var newSize;
			if (!map._root) {
				if (v === NOT_SET) {
					return map;
				}
				newSize = 1;
				newRoot = new ArrayMapNode(map.__ownerID, [[k, v]]);
			} else {
				var didChangeSize = MakeRef(CHANGE_LENGTH);
				var didAlter = MakeRef(DID_ALTER);
				newRoot = updateNode(
					map._root,
					map.__ownerID,
					0,
					undefined,
					k,
					v,
					didChangeSize,
					didAlter
				);
				if (!didAlter.value) {
					return map;
				}
				newSize =
					map.size +
					(didChangeSize.value ? (v === NOT_SET ? -1 : 1) : 0);
			}
			if (map.__ownerID) {
				map.size = newSize;
				map._root = newRoot;
				map.__hash = undefined;
				map.__altered = true;
				return map;
			}
			return newRoot ? makeMap(newSize, newRoot) : emptyMap();
		}

		function updateNode(
			node,
			ownerID,
			shift,
			keyHash,
			key,
			value,
			didChangeSize,
			didAlter
		) {
			if (!node) {
				if (value === NOT_SET) {
					return node;
				}
				SetRef(didAlter);
				SetRef(didChangeSize);
				return new ValueNode(ownerID, keyHash, [key, value]);
			}
			return node.update(
				ownerID,
				shift,
				keyHash,
				key,
				value,
				didChangeSize,
				didAlter
			);
		}

		function isLeafNode(node) {
			return (
				node.constructor === ValueNode ||
				node.constructor === HashCollisionNode
			);
		}

		function mergeIntoNode(node, ownerID, shift, keyHash, entry) {
			if (node.keyHash === keyHash) {
				return new HashCollisionNode(ownerID, keyHash, [
					node.entry,
					entry,
				]);
			}

			var idx1 =
				(shift === 0 ? node.keyHash : node.keyHash >>> shift) & MASK;
			var idx2 = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;

			var newNode;
			var nodes =
				idx1 === idx2
					? [
							mergeIntoNode(
								node,
								ownerID,
								shift + SHIFT,
								keyHash,
								entry
							),
					  ]
					: ((newNode = new ValueNode(ownerID, keyHash, entry)),
					  idx1 < idx2 ? [node, newNode] : [newNode, node]);

			return new BitmapIndexedNode(
				ownerID,
				(1 << idx1) | (1 << idx2),
				nodes
			);
		}

		function createNodes(ownerID, entries, key, value) {
			if (!ownerID) {
				ownerID = new OwnerID();
			}
			var node = new ValueNode(ownerID, hash(key), [key, value]);
			for (var ii = 0; ii < entries.length; ii++) {
				var entry = entries[ii];
				node = node.update(ownerID, 0, undefined, entry[0], entry[1]);
			}
			return node;
		}

		function packNodes(ownerID, nodes, count, excluding) {
			var bitmap = 0;
			var packedII = 0;
			var packedNodes = new Array(count);
			for (
				var ii = 0, bit = 1, len = nodes.length;
				ii < len;
				ii++, bit <<= 1
			) {
				var node = nodes[ii];
				if (node !== undefined && ii !== excluding) {
					bitmap |= bit;
					packedNodes[packedII++] = node;
				}
			}
			return new BitmapIndexedNode(ownerID, bitmap, packedNodes);
		}

		function expandNodes(ownerID, nodes, bitmap, including, node) {
			var count = 0;
			var expandedNodes = new Array(SIZE);
			for (var ii = 0; bitmap !== 0; ii++, bitmap >>>= 1) {
				expandedNodes[ii] = bitmap & 1 ? nodes[count++] : undefined;
			}
			expandedNodes[including] = node;
			return new HashArrayMapNode(ownerID, count + 1, expandedNodes);
		}

		function mergeIntoMapWith(map, merger, iterables) {
			var iters = [];
			for (var ii = 0; ii < iterables.length; ii++) {
				var value = iterables[ii];
				var iter = KeyedIterable(value);
				if (!isIterable(value)) {
					iter = iter.map(function (v) {
						return fromJS(v);
					});
				}
				iters.push(iter);
			}
			return mergeIntoCollectionWith(map, merger, iters);
		}

		function deepMerger(existing, value, key) {
			return existing && existing.mergeDeep && isIterable(value)
				? existing.mergeDeep(value)
				: is(existing, value)
				? existing
				: value;
		}

		function deepMergerWith(merger) {
			return function (existing, value, key) {
				if (existing && existing.mergeDeepWith && isIterable(value)) {
					return existing.mergeDeepWith(merger, value);
				}
				var nextValue = merger(existing, value, key);
				return is(existing, nextValue) ? existing : nextValue;
			};
		}

		function mergeIntoCollectionWith(collection, merger, iters) {
			iters = iters.filter(function (x) {
				return x.size !== 0;
			});
			if (iters.length === 0) {
				return collection;
			}
			if (
				collection.size === 0 &&
				!collection.__ownerID &&
				iters.length === 1
			) {
				return collection.constructor(iters[0]);
			}
			return collection.withMutations(function (collection) {
				var mergeIntoMap = merger
					? function (value, key) {
							collection.update(
								key,
								NOT_SET,
								function (existing) {
									return existing === NOT_SET
										? value
										: merger(existing, value, key);
								}
							);
					  }
					: function (value, key) {
							collection.set(key, value);
					  };
				for (var ii = 0; ii < iters.length; ii++) {
					iters[ii].forEach(mergeIntoMap);
				}
			});
		}

		function updateInDeepMap(existing, keyPathIter, notSetValue, updater) {
			var isNotSet = existing === NOT_SET;
			var step = keyPathIter.next();
			if (step.done) {
				var existingValue = isNotSet ? notSetValue : existing;
				var newValue = updater(existingValue);
				return newValue === existingValue ? existing : newValue;
			}
			invariant(
				isNotSet || (existing && existing.set),
				"invalid keyPath"
			);
			var key = step.value;
			var nextExisting = isNotSet ? NOT_SET : existing.get(key, NOT_SET);
			var nextUpdated = updateInDeepMap(
				nextExisting,
				keyPathIter,
				notSetValue,
				updater
			);
			return nextUpdated === nextExisting
				? existing
				: nextUpdated === NOT_SET
				? existing.remove(key)
				: (isNotSet ? emptyMap() : existing).set(key, nextUpdated);
		}

		function popCount(x) {
			x = x - ((x >> 1) & 0x55555555);
			x = (x & 0x33333333) + ((x >> 2) & 0x33333333);
			x = (x + (x >> 4)) & 0x0f0f0f0f;
			x = x + (x >> 8);
			x = x + (x >> 16);
			return x & 0x7f;
		}

		function setIn(array, idx, val, canEdit) {
			var newArray = canEdit ? array : arrCopy(array);
			newArray[idx] = val;
			return newArray;
		}

		function spliceIn(array, idx, val, canEdit) {
			var newLen = array.length + 1;
			if (canEdit && idx + 1 === newLen) {
				array[idx] = val;
				return array;
			}
			var newArray = new Array(newLen);
			var after = 0;
			for (var ii = 0; ii < newLen; ii++) {
				if (ii === idx) {
					newArray[ii] = val;
					after = -1;
				} else {
					newArray[ii] = array[ii + after];
				}
			}
			return newArray;
		}

		function spliceOut(array, idx, canEdit) {
			var newLen = array.length - 1;
			if (canEdit && idx === newLen) {
				array.pop();
				return array;
			}
			var newArray = new Array(newLen);
			var after = 0;
			for (var ii = 0; ii < newLen; ii++) {
				if (ii === idx) {
					after = 1;
				}
				newArray[ii] = array[ii + after];
			}
			return newArray;
		}

		var MAX_ARRAY_MAP_SIZE = SIZE / 4;
		var MAX_BITMAP_INDEXED_SIZE = SIZE / 2;
		var MIN_HASH_ARRAY_MAP_SIZE = SIZE / 4;

		createClass(List, IndexedCollection);

		// @pragma Construction

		function List(value) {
			var empty = emptyList();
			if (value === null || value === undefined) {
				return empty;
			}
			if (isList(value)) {
				return value;
			}
			var iter = IndexedIterable(value);
			var size = iter.size;
			if (size === 0) {
				return empty;
			}
			assertNotInfinite(size);
			if (size > 0 && size < SIZE) {
				return makeList(
					0,
					size,
					SHIFT,
					null,
					new VNode(iter.toArray())
				);
			}
			return empty.withMutations(function (list) {
				list.setSize(size);
				iter.forEach(function (v, i) {
					return list.set(i, v);
				});
			});
		}

		List.of = function (/*...values*/) {
			return this(arguments);
		};

		List.prototype.toString = function () {
			return this.__toString("List [", "]");
		};

		// @pragma Access

		List.prototype.get = function (index, notSetValue) {
			index = wrapIndex(this, index);
			if (index >= 0 && index < this.size) {
				index += this._origin;
				var node = listNodeFor(this, index);
				return node && node.array[index & MASK];
			}
			return notSetValue;
		};

		// @pragma Modification

		List.prototype.set = function (index, value) {
			return updateList(this, index, value);
		};

		List.prototype.remove = function (index) {
			return !this.has(index)
				? this
				: index === 0
				? this.shift()
				: index === this.size - 1
				? this.pop()
				: this.splice(index, 1);
		};

		List.prototype.insert = function (index, value) {
			return this.splice(index, 0, value);
		};

		List.prototype.clear = function () {
			if (this.size === 0) {
				return this;
			}
			if (this.__ownerID) {
				this.size = this._origin = this._capacity = 0;
				this._level = SHIFT;
				this._root = this._tail = null;
				this.__hash = undefined;
				this.__altered = true;
				return this;
			}
			return emptyList();
		};

		List.prototype.push = function (/*...values*/) {
			var values = arguments;
			var oldSize = this.size;
			return this.withMutations(function (list) {
				setListBounds(list, 0, oldSize + values.length);
				for (var ii = 0; ii < values.length; ii++) {
					list.set(oldSize + ii, values[ii]);
				}
			});
		};

		List.prototype.pop = function () {
			return setListBounds(this, 0, -1);
		};

		List.prototype.unshift = function (/*...values*/) {
			var values = arguments;
			return this.withMutations(function (list) {
				setListBounds(list, -values.length);
				for (var ii = 0; ii < values.length; ii++) {
					list.set(ii, values[ii]);
				}
			});
		};

		List.prototype.shift = function () {
			return setListBounds(this, 1);
		};

		// @pragma Composition

		List.prototype.merge = function (/*...iters*/) {
			return mergeIntoListWith(this, undefined, arguments);
		};

		List.prototype.mergeWith = function (merger) {
			var iters = SLICE$0.call(arguments, 1);
			return mergeIntoListWith(this, merger, iters);
		};

		List.prototype.mergeDeep = function (/*...iters*/) {
			return mergeIntoListWith(this, deepMerger, arguments);
		};

		List.prototype.mergeDeepWith = function (merger) {
			var iters = SLICE$0.call(arguments, 1);
			return mergeIntoListWith(this, deepMergerWith(merger), iters);
		};

		List.prototype.setSize = function (size) {
			return setListBounds(this, 0, size);
		};

		// @pragma Iteration

		List.prototype.slice = function (begin, end) {
			var size = this.size;
			if (wholeSlice(begin, end, size)) {
				return this;
			}
			return setListBounds(
				this,
				resolveBegin(begin, size),
				resolveEnd(end, size)
			);
		};

		List.prototype.__iterator = function (type, reverse) {
			var index = 0;
			var values = iterateList(this, reverse);
			return new Iterator(function () {
				var value = values();
				return value === DONE
					? iteratorDone()
					: iteratorValue(type, index++, value);
			});
		};

		List.prototype.__iterate = function (fn, reverse) {
			var index = 0;
			var values = iterateList(this, reverse);
			var value;
			while ((value = values()) !== DONE) {
				if (fn(value, index++, this) === false) {
					break;
				}
			}
			return index;
		};

		List.prototype.__ensureOwner = function (ownerID) {
			if (ownerID === this.__ownerID) {
				return this;
			}
			if (!ownerID) {
				this.__ownerID = ownerID;
				return this;
			}
			return makeList(
				this._origin,
				this._capacity,
				this._level,
				this._root,
				this._tail,
				ownerID,
				this.__hash
			);
		};

		function isList(maybeList) {
			return !!(maybeList && maybeList[IS_LIST_SENTINEL]);
		}

		List.isList = isList;

		var IS_LIST_SENTINEL = "@@__IMMUTABLE_LIST__@@";

		var ListPrototype = List.prototype;
		ListPrototype[IS_LIST_SENTINEL] = true;
		ListPrototype[DELETE] = ListPrototype.remove;
		ListPrototype.setIn = MapPrototype.setIn;
		ListPrototype.deleteIn = ListPrototype.removeIn = MapPrototype.removeIn;
		ListPrototype.update = MapPrototype.update;
		ListPrototype.updateIn = MapPrototype.updateIn;
		ListPrototype.mergeIn = MapPrototype.mergeIn;
		ListPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;
		ListPrototype.withMutations = MapPrototype.withMutations;
		ListPrototype.asMutable = MapPrototype.asMutable;
		ListPrototype.asImmutable = MapPrototype.asImmutable;
		ListPrototype.wasAltered = MapPrototype.wasAltered;

		function VNode(array, ownerID) {
			this.array = array;
			this.ownerID = ownerID;
		}

		// TODO: seems like these methods are very similar

		VNode.prototype.removeBefore = function (ownerID, level, index) {
			if (index === level ? 1 << level : this.array.length === 0) {
				return this;
			}
			var originIndex = (index >>> level) & MASK;
			if (originIndex >= this.array.length) {
				return new VNode([], ownerID);
			}
			var removingFirst = originIndex === 0;
			var newChild;
			if (level > 0) {
				var oldChild = this.array[originIndex];
				newChild =
					oldChild &&
					oldChild.removeBefore(ownerID, level - SHIFT, index);
				if (newChild === oldChild && removingFirst) {
					return this;
				}
			}
			if (removingFirst && !newChild) {
				return this;
			}
			var editable = editableVNode(this, ownerID);
			if (!removingFirst) {
				for (var ii = 0; ii < originIndex; ii++) {
					editable.array[ii] = undefined;
				}
			}
			if (newChild) {
				editable.array[originIndex] = newChild;
			}
			return editable;
		};

		VNode.prototype.removeAfter = function (ownerID, level, index) {
			if (index === (level ? 1 << level : 0) || this.array.length === 0) {
				return this;
			}
			var sizeIndex = ((index - 1) >>> level) & MASK;
			if (sizeIndex >= this.array.length) {
				return this;
			}

			var newChild;
			if (level > 0) {
				var oldChild = this.array[sizeIndex];
				newChild =
					oldChild &&
					oldChild.removeAfter(ownerID, level - SHIFT, index);
				if (
					newChild === oldChild &&
					sizeIndex === this.array.length - 1
				) {
					return this;
				}
			}

			var editable = editableVNode(this, ownerID);
			editable.array.splice(sizeIndex + 1);
			if (newChild) {
				editable.array[sizeIndex] = newChild;
			}
			return editable;
		};

		var DONE = {};

		function iterateList(list, reverse) {
			var left = list._origin;
			var right = list._capacity;
			var tailPos = getTailOffset(right);
			var tail = list._tail;

			return iterateNodeOrLeaf(list._root, list._level, 0);

			function iterateNodeOrLeaf(node, level, offset) {
				return level === 0
					? iterateLeaf(node, offset)
					: iterateNode(node, level, offset);
			}

			function iterateLeaf(node, offset) {
				var array =
					offset === tailPos
						? tail && tail.array
						: node && node.array;
				var from = offset > left ? 0 : left - offset;
				var to = right - offset;
				if (to > SIZE) {
					to = SIZE;
				}
				return function () {
					if (from === to) {
						return DONE;
					}
					var idx = reverse ? --to : from++;
					return array && array[idx];
				};
			}

			function iterateNode(node, level, offset) {
				var values;
				var array = node && node.array;
				var from = offset > left ? 0 : (left - offset) >> level;
				var to = ((right - offset) >> level) + 1;
				if (to > SIZE) {
					to = SIZE;
				}
				return function () {
					do {
						if (values) {
							var value = values();
							if (value !== DONE) {
								return value;
							}
							values = null;
						}
						if (from === to) {
							return DONE;
						}
						var idx = reverse ? --to : from++;
						values = iterateNodeOrLeaf(
							array && array[idx],
							level - SHIFT,
							offset + (idx << level)
						);
					} while (true);
				};
			}
		}

		function makeList(origin, capacity, level, root, tail, ownerID, hash) {
			var list = Object.create(ListPrototype);
			list.size = capacity - origin;
			list._origin = origin;
			list._capacity = capacity;
			list._level = level;
			list._root = root;
			list._tail = tail;
			list.__ownerID = ownerID;
			list.__hash = hash;
			list.__altered = false;
			return list;
		}

		var EMPTY_LIST;
		function emptyList() {
			return EMPTY_LIST || (EMPTY_LIST = makeList(0, 0, SHIFT));
		}

		function updateList(list, index, value) {
			index = wrapIndex(list, index);

			if (index !== index) {
				return list;
			}

			if (index >= list.size || index < 0) {
				return list.withMutations(function (list) {
					index < 0
						? setListBounds(list, index).set(0, value)
						: setListBounds(list, 0, index + 1).set(index, value);
				});
			}

			index += list._origin;

			var newTail = list._tail;
			var newRoot = list._root;
			var didAlter = MakeRef(DID_ALTER);
			if (index >= getTailOffset(list._capacity)) {
				newTail = updateVNode(
					newTail,
					list.__ownerID,
					0,
					index,
					value,
					didAlter
				);
			} else {
				newRoot = updateVNode(
					newRoot,
					list.__ownerID,
					list._level,
					index,
					value,
					didAlter
				);
			}

			if (!didAlter.value) {
				return list;
			}

			if (list.__ownerID) {
				list._root = newRoot;
				list._tail = newTail;
				list.__hash = undefined;
				list.__altered = true;
				return list;
			}
			return makeList(
				list._origin,
				list._capacity,
				list._level,
				newRoot,
				newTail
			);
		}

		function updateVNode(node, ownerID, level, index, value, didAlter) {
			var idx = (index >>> level) & MASK;
			var nodeHas = node && idx < node.array.length;
			if (!nodeHas && value === undefined) {
				return node;
			}

			var newNode;

			if (level > 0) {
				var lowerNode = node && node.array[idx];
				var newLowerNode = updateVNode(
					lowerNode,
					ownerID,
					level - SHIFT,
					index,
					value,
					didAlter
				);
				if (newLowerNode === lowerNode) {
					return node;
				}
				newNode = editableVNode(node, ownerID);
				newNode.array[idx] = newLowerNode;
				return newNode;
			}

			if (nodeHas && node.array[idx] === value) {
				return node;
			}

			SetRef(didAlter);

			newNode = editableVNode(node, ownerID);
			if (value === undefined && idx === newNode.array.length - 1) {
				newNode.array.pop();
			} else {
				newNode.array[idx] = value;
			}
			return newNode;
		}

		function editableVNode(node, ownerID) {
			if (ownerID && node && ownerID === node.ownerID) {
				return node;
			}
			return new VNode(node ? node.array.slice() : [], ownerID);
		}

		function listNodeFor(list, rawIndex) {
			if (rawIndex >= getTailOffset(list._capacity)) {
				return list._tail;
			}
			if (rawIndex < 1 << (list._level + SHIFT)) {
				var node = list._root;
				var level = list._level;
				while (node && level > 0) {
					node = node.array[(rawIndex >>> level) & MASK];
					level -= SHIFT;
				}
				return node;
			}
		}

		function setListBounds(list, begin, end) {
			// Sanitize begin & end using this shorthand for ToInt32(argument)
			// http://www.ecma-international.org/ecma-262/6.0/#sec-toint32
			if (begin !== undefined) {
				begin = begin | 0;
			}
			if (end !== undefined) {
				end = end | 0;
			}
			var owner = list.__ownerID || new OwnerID();
			var oldOrigin = list._origin;
			var oldCapacity = list._capacity;
			var newOrigin = oldOrigin + begin;
			var newCapacity =
				end === undefined
					? oldCapacity
					: end < 0
					? oldCapacity + end
					: oldOrigin + end;
			if (newOrigin === oldOrigin && newCapacity === oldCapacity) {
				return list;
			}

			// If it's going to end after it starts, it's empty.
			if (newOrigin >= newCapacity) {
				return list.clear();
			}

			var newLevel = list._level;
			var newRoot = list._root;

			// New origin might need creating a higher root.
			var offsetShift = 0;
			while (newOrigin + offsetShift < 0) {
				newRoot = new VNode(
					newRoot && newRoot.array.length ? [undefined, newRoot] : [],
					owner
				);
				newLevel += SHIFT;
				offsetShift += 1 << newLevel;
			}
			if (offsetShift) {
				newOrigin += offsetShift;
				oldOrigin += offsetShift;
				newCapacity += offsetShift;
				oldCapacity += offsetShift;
			}

			var oldTailOffset = getTailOffset(oldCapacity);
			var newTailOffset = getTailOffset(newCapacity);

			// New size might need creating a higher root.
			while (newTailOffset >= 1 << (newLevel + SHIFT)) {
				newRoot = new VNode(
					newRoot && newRoot.array.length ? [newRoot] : [],
					owner
				);
				newLevel += SHIFT;
			}

			// Locate or create the new tail.
			var oldTail = list._tail;
			var newTail =
				newTailOffset < oldTailOffset
					? listNodeFor(list, newCapacity - 1)
					: newTailOffset > oldTailOffset
					? new VNode([], owner)
					: oldTail;

			// Merge Tail into tree.
			if (
				oldTail &&
				newTailOffset > oldTailOffset &&
				newOrigin < oldCapacity &&
				oldTail.array.length
			) {
				newRoot = editableVNode(newRoot, owner);
				var node = newRoot;
				for (var level = newLevel; level > SHIFT; level -= SHIFT) {
					var idx = (oldTailOffset >>> level) & MASK;
					node = node.array[idx] = editableVNode(
						node.array[idx],
						owner
					);
				}
				node.array[(oldTailOffset >>> SHIFT) & MASK] = oldTail;
			}

			// If the size has been reduced, there's a chance the tail needs to be trimmed.
			if (newCapacity < oldCapacity) {
				newTail = newTail && newTail.removeAfter(owner, 0, newCapacity);
			}

			// If the new origin is within the tail, then we do not need a root.
			if (newOrigin >= newTailOffset) {
				newOrigin -= newTailOffset;
				newCapacity -= newTailOffset;
				newLevel = SHIFT;
				newRoot = null;
				newTail = newTail && newTail.removeBefore(owner, 0, newOrigin);

				// Otherwise, if the root has been trimmed, garbage collect.
			} else if (newOrigin > oldOrigin || newTailOffset < oldTailOffset) {
				offsetShift = 0;

				// Identify the new top root node of the subtree of the old root.
				while (newRoot) {
					var beginIndex = (newOrigin >>> newLevel) & MASK;
					if ((beginIndex !== newTailOffset >>> newLevel) & MASK) {
						break;
					}
					if (beginIndex) {
						offsetShift += (1 << newLevel) * beginIndex;
					}
					newLevel -= SHIFT;
					newRoot = newRoot.array[beginIndex];
				}

				// Trim the new sides of the new root.
				if (newRoot && newOrigin > oldOrigin) {
					newRoot = newRoot.removeBefore(
						owner,
						newLevel,
						newOrigin - offsetShift
					);
				}
				if (newRoot && newTailOffset < oldTailOffset) {
					newRoot = newRoot.removeAfter(
						owner,
						newLevel,
						newTailOffset - offsetShift
					);
				}
				if (offsetShift) {
					newOrigin -= offsetShift;
					newCapacity -= offsetShift;
				}
			}

			if (list.__ownerID) {
				list.size = newCapacity - newOrigin;
				list._origin = newOrigin;
				list._capacity = newCapacity;
				list._level = newLevel;
				list._root = newRoot;
				list._tail = newTail;
				list.__hash = undefined;
				list.__altered = true;
				return list;
			}
			return makeList(newOrigin, newCapacity, newLevel, newRoot, newTail);
		}

		function mergeIntoListWith(list, merger, iterables) {
			var iters = [];
			var maxSize = 0;
			for (var ii = 0; ii < iterables.length; ii++) {
				var value = iterables[ii];
				var iter = IndexedIterable(value);
				if (iter.size > maxSize) {
					maxSize = iter.size;
				}
				if (!isIterable(value)) {
					iter = iter.map(function (v) {
						return fromJS(v);
					});
				}
				iters.push(iter);
			}
			if (maxSize > list.size) {
				list = list.setSize(maxSize);
			}
			return mergeIntoCollectionWith(list, merger, iters);
		}

		function getTailOffset(size) {
			return size < SIZE ? 0 : ((size - 1) >>> SHIFT) << SHIFT;
		}

		createClass(OrderedMap, Map);

		// @pragma Construction

		function OrderedMap(value) {
			return value === null || value === undefined
				? emptyOrderedMap()
				: isOrderedMap(value)
				? value
				: emptyOrderedMap().withMutations(function (map) {
						var iter = KeyedIterable(value);
						assertNotInfinite(iter.size);
						iter.forEach(function (v, k) {
							return map.set(k, v);
						});
				  });
		}

		OrderedMap.of = function (/*...values*/) {
			return this(arguments);
		};

		OrderedMap.prototype.toString = function () {
			return this.__toString("OrderedMap {", "}");
		};

		// @pragma Access

		OrderedMap.prototype.get = function (k, notSetValue) {
			var index = this._map.get(k);
			return index !== undefined ? this._list.get(index)[1] : notSetValue;
		};

		// @pragma Modification

		OrderedMap.prototype.clear = function () {
			if (this.size === 0) {
				return this;
			}
			if (this.__ownerID) {
				this.size = 0;
				this._map.clear();
				this._list.clear();
				return this;
			}
			return emptyOrderedMap();
		};

		OrderedMap.prototype.set = function (k, v) {
			return updateOrderedMap(this, k, v);
		};

		OrderedMap.prototype.remove = function (k) {
			return updateOrderedMap(this, k, NOT_SET);
		};

		OrderedMap.prototype.wasAltered = function () {
			return this._map.wasAltered() || this._list.wasAltered();
		};

		OrderedMap.prototype.__iterate = function (fn, reverse) {
			var this$0 = this;
			return this._list.__iterate(function (entry) {
				return entry && fn(entry[1], entry[0], this$0);
			}, reverse);
		};

		OrderedMap.prototype.__iterator = function (type, reverse) {
			return this._list.fromEntrySeq().__iterator(type, reverse);
		};

		OrderedMap.prototype.__ensureOwner = function (ownerID) {
			if (ownerID === this.__ownerID) {
				return this;
			}
			var newMap = this._map.__ensureOwner(ownerID);
			var newList = this._list.__ensureOwner(ownerID);
			if (!ownerID) {
				this.__ownerID = ownerID;
				this._map = newMap;
				this._list = newList;
				return this;
			}
			return makeOrderedMap(newMap, newList, ownerID, this.__hash);
		};

		function isOrderedMap(maybeOrderedMap) {
			return isMap(maybeOrderedMap) && isOrdered(maybeOrderedMap);
		}

		OrderedMap.isOrderedMap = isOrderedMap;

		OrderedMap.prototype[IS_ORDERED_SENTINEL] = true;
		OrderedMap.prototype[DELETE] = OrderedMap.prototype.remove;

		function makeOrderedMap(map, list, ownerID, hash) {
			var omap = Object.create(OrderedMap.prototype);
			omap.size = map ? map.size : 0;
			omap._map = map;
			omap._list = list;
			omap.__ownerID = ownerID;
			omap.__hash = hash;
			return omap;
		}

		var EMPTY_ORDERED_MAP;
		function emptyOrderedMap() {
			return (
				EMPTY_ORDERED_MAP ||
				(EMPTY_ORDERED_MAP = makeOrderedMap(emptyMap(), emptyList()))
			);
		}

		function updateOrderedMap(omap, k, v) {
			var map = omap._map;
			var list = omap._list;
			var i = map.get(k);
			var has = i !== undefined;
			var newMap;
			var newList;
			if (v === NOT_SET) {
				// removed
				if (!has) {
					return omap;
				}
				if (list.size >= SIZE && list.size >= map.size * 2) {
					newList = list.filter(function (entry, idx) {
						return entry !== undefined && i !== idx;
					});
					newMap = newList
						.toKeyedSeq()
						.map(function (entry) {
							return entry[0];
						})
						.flip()
						.toMap();
					if (omap.__ownerID) {
						newMap.__ownerID = newList.__ownerID = omap.__ownerID;
					}
				} else {
					newMap = map.remove(k);
					newList =
						i === list.size - 1
							? list.pop()
							: list.set(i, undefined);
				}
			} else {
				if (has) {
					if (v === list.get(i)[1]) {
						return omap;
					}
					newMap = map;
					newList = list.set(i, [k, v]);
				} else {
					newMap = map.set(k, list.size);
					newList = list.set(list.size, [k, v]);
				}
			}
			if (omap.__ownerID) {
				omap.size = newMap.size;
				omap._map = newMap;
				omap._list = newList;
				omap.__hash = undefined;
				return omap;
			}
			return makeOrderedMap(newMap, newList);
		}

		createClass(ToKeyedSequence, KeyedSeq);
		function ToKeyedSequence(indexed, useKeys) {
			this._iter = indexed;
			this._useKeys = useKeys;
			this.size = indexed.size;
		}

		ToKeyedSequence.prototype.get = function (key, notSetValue) {
			return this._iter.get(key, notSetValue);
		};

		ToKeyedSequence.prototype.has = function (key) {
			return this._iter.has(key);
		};

		ToKeyedSequence.prototype.valueSeq = function () {
			return this._iter.valueSeq();
		};

		ToKeyedSequence.prototype.reverse = function () {
			var this$0 = this;
			var reversedSequence = reverseFactory(this, true);
			if (!this._useKeys) {
				reversedSequence.valueSeq = function () {
					return this$0._iter.toSeq().reverse();
				};
			}
			return reversedSequence;
		};

		ToKeyedSequence.prototype.map = function (mapper, context) {
			var this$0 = this;
			var mappedSequence = mapFactory(this, mapper, context);
			if (!this._useKeys) {
				mappedSequence.valueSeq = function () {
					return this$0._iter.toSeq().map(mapper, context);
				};
			}
			return mappedSequence;
		};

		ToKeyedSequence.prototype.__iterate = function (fn, reverse) {
			var this$0 = this;
			var ii;
			return this._iter.__iterate(
				this._useKeys
					? function (v, k) {
							return fn(v, k, this$0);
					  }
					: ((ii = reverse ? resolveSize(this) : 0),
					  function (v) {
							return fn(v, reverse ? --ii : ii++, this$0);
					  }),
				reverse
			);
		};

		ToKeyedSequence.prototype.__iterator = function (type, reverse) {
			if (this._useKeys) {
				return this._iter.__iterator(type, reverse);
			}
			var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
			var ii = reverse ? resolveSize(this) : 0;
			return new Iterator(function () {
				var step = iterator.next();
				return step.done
					? step
					: iteratorValue(
							type,
							reverse ? --ii : ii++,
							step.value,
							step
					  );
			});
		};

		ToKeyedSequence.prototype[IS_ORDERED_SENTINEL] = true;

		createClass(ToIndexedSequence, IndexedSeq);
		function ToIndexedSequence(iter) {
			this._iter = iter;
			this.size = iter.size;
		}

		ToIndexedSequence.prototype.includes = function (value) {
			return this._iter.includes(value);
		};

		ToIndexedSequence.prototype.__iterate = function (fn, reverse) {
			var this$0 = this;
			var iterations = 0;
			return this._iter.__iterate(function (v) {
				return fn(v, iterations++, this$0);
			}, reverse);
		};

		ToIndexedSequence.prototype.__iterator = function (type, reverse) {
			var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
			var iterations = 0;
			return new Iterator(function () {
				var step = iterator.next();
				return step.done
					? step
					: iteratorValue(type, iterations++, step.value, step);
			});
		};

		createClass(ToSetSequence, SetSeq);
		function ToSetSequence(iter) {
			this._iter = iter;
			this.size = iter.size;
		}

		ToSetSequence.prototype.has = function (key) {
			return this._iter.includes(key);
		};

		ToSetSequence.prototype.__iterate = function (fn, reverse) {
			var this$0 = this;
			return this._iter.__iterate(function (v) {
				return fn(v, v, this$0);
			}, reverse);
		};

		ToSetSequence.prototype.__iterator = function (type, reverse) {
			var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
			return new Iterator(function () {
				var step = iterator.next();
				return step.done
					? step
					: iteratorValue(type, step.value, step.value, step);
			});
		};

		createClass(FromEntriesSequence, KeyedSeq);
		function FromEntriesSequence(entries) {
			this._iter = entries;
			this.size = entries.size;
		}

		FromEntriesSequence.prototype.entrySeq = function () {
			return this._iter.toSeq();
		};

		FromEntriesSequence.prototype.__iterate = function (fn, reverse) {
			var this$0 = this;
			return this._iter.__iterate(function (entry) {
				// Check if entry exists first so array access doesn't throw for holes
				// in the parent iteration.
				if (entry) {
					validateEntry(entry);
					var indexedIterable = isIterable(entry);
					return fn(
						indexedIterable ? entry.get(1) : entry[1],
						indexedIterable ? entry.get(0) : entry[0],
						this$0
					);
				}
			}, reverse);
		};

		FromEntriesSequence.prototype.__iterator = function (type, reverse) {
			var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
			return new Iterator(function () {
				while (true) {
					var step = iterator.next();
					if (step.done) {
						return step;
					}
					var entry = step.value;
					// Check if entry exists first so array access doesn't throw for holes
					// in the parent iteration.
					if (entry) {
						validateEntry(entry);
						var indexedIterable = isIterable(entry);
						return iteratorValue(
							type,
							indexedIterable ? entry.get(0) : entry[0],
							indexedIterable ? entry.get(1) : entry[1],
							step
						);
					}
				}
			});
		};

		ToIndexedSequence.prototype.cacheResult =
			ToKeyedSequence.prototype.cacheResult =
			ToSetSequence.prototype.cacheResult =
			FromEntriesSequence.prototype.cacheResult =
				cacheResultThrough;

		function flipFactory(iterable) {
			var flipSequence = makeSequence(iterable);
			flipSequence._iter = iterable;
			flipSequence.size = iterable.size;
			flipSequence.flip = function () {
				return iterable;
			};
			flipSequence.reverse = function () {
				var reversedSequence = iterable.reverse.apply(this); // super.reverse()
				reversedSequence.flip = function () {
					return iterable.reverse();
				};
				return reversedSequence;
			};
			flipSequence.has = function (key) {
				return iterable.includes(key);
			};
			flipSequence.includes = function (key) {
				return iterable.has(key);
			};
			flipSequence.cacheResult = cacheResultThrough;
			flipSequence.__iterateUncached = function (fn, reverse) {
				var this$0 = this;
				return iterable.__iterate(function (v, k) {
					return fn(k, v, this$0) !== false;
				}, reverse);
			};
			flipSequence.__iteratorUncached = function (type, reverse) {
				if (type === ITERATE_ENTRIES) {
					var iterator = iterable.__iterator(type, reverse);
					return new Iterator(function () {
						var step = iterator.next();
						if (!step.done) {
							var k = step.value[0];
							step.value[0] = step.value[1];
							step.value[1] = k;
						}
						return step;
					});
				}
				return iterable.__iterator(
					type === ITERATE_VALUES ? ITERATE_KEYS : ITERATE_VALUES,
					reverse
				);
			};
			return flipSequence;
		}

		function mapFactory(iterable, mapper, context) {
			var mappedSequence = makeSequence(iterable);
			mappedSequence.size = iterable.size;
			mappedSequence.has = function (key) {
				return iterable.has(key);
			};
			mappedSequence.get = function (key, notSetValue) {
				var v = iterable.get(key, NOT_SET);
				return v === NOT_SET
					? notSetValue
					: mapper.call(context, v, key, iterable);
			};
			mappedSequence.__iterateUncached = function (fn, reverse) {
				var this$0 = this;
				return iterable.__iterate(function (v, k, c) {
					return (
						fn(mapper.call(context, v, k, c), k, this$0) !== false
					);
				}, reverse);
			};
			mappedSequence.__iteratorUncached = function (type, reverse) {
				var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);
				return new Iterator(function () {
					var step = iterator.next();
					if (step.done) {
						return step;
					}
					var entry = step.value;
					var key = entry[0];
					return iteratorValue(
						type,
						key,
						mapper.call(context, entry[1], key, iterable),
						step
					);
				});
			};
			return mappedSequence;
		}

		function reverseFactory(iterable, useKeys) {
			var reversedSequence = makeSequence(iterable);
			reversedSequence._iter = iterable;
			reversedSequence.size = iterable.size;
			reversedSequence.reverse = function () {
				return iterable;
			};
			if (iterable.flip) {
				reversedSequence.flip = function () {
					var flipSequence = flipFactory(iterable);
					flipSequence.reverse = function () {
						return iterable.flip();
					};
					return flipSequence;
				};
			}
			reversedSequence.get = function (key, notSetValue) {
				return iterable.get(useKeys ? key : -1 - key, notSetValue);
			};
			reversedSequence.has = function (key) {
				return iterable.has(useKeys ? key : -1 - key);
			};
			reversedSequence.includes = function (value) {
				return iterable.includes(value);
			};
			reversedSequence.cacheResult = cacheResultThrough;
			reversedSequence.__iterate = function (fn, reverse) {
				var this$0 = this;
				return iterable.__iterate(function (v, k) {
					return fn(v, k, this$0);
				}, !reverse);
			};
			reversedSequence.__iterator = function (type, reverse) {
				return iterable.__iterator(type, !reverse);
			};
			return reversedSequence;
		}

		function filterFactory(iterable, predicate, context, useKeys) {
			var filterSequence = makeSequence(iterable);
			if (useKeys) {
				filterSequence.has = function (key) {
					var v = iterable.get(key, NOT_SET);
					return (
						v !== NOT_SET &&
						!!predicate.call(context, v, key, iterable)
					);
				};
				filterSequence.get = function (key, notSetValue) {
					var v = iterable.get(key, NOT_SET);
					return v !== NOT_SET &&
						predicate.call(context, v, key, iterable)
						? v
						: notSetValue;
				};
			}
			filterSequence.__iterateUncached = function (fn, reverse) {
				var this$0 = this;
				var iterations = 0;
				iterable.__iterate(function (v, k, c) {
					if (predicate.call(context, v, k, c)) {
						iterations++;
						return fn(v, useKeys ? k : iterations - 1, this$0);
					}
				}, reverse);
				return iterations;
			};
			filterSequence.__iteratorUncached = function (type, reverse) {
				var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);
				var iterations = 0;
				return new Iterator(function () {
					while (true) {
						var step = iterator.next();
						if (step.done) {
							return step;
						}
						var entry = step.value;
						var key = entry[0];
						var value = entry[1];
						if (predicate.call(context, value, key, iterable)) {
							return iteratorValue(
								type,
								useKeys ? key : iterations++,
								value,
								step
							);
						}
					}
				});
			};
			return filterSequence;
		}

		function countByFactory(iterable, grouper, context) {
			var groups = Map().asMutable();
			iterable.__iterate(function (v, k) {
				groups.update(
					grouper.call(context, v, k, iterable),
					0,
					function (a) {
						return a + 1;
					}
				);
			});
			return groups.asImmutable();
		}

		function groupByFactory(iterable, grouper, context) {
			var isKeyedIter = isKeyed(iterable);
			var groups = (
				isOrdered(iterable) ? OrderedMap() : Map()
			).asMutable();
			iterable.__iterate(function (v, k) {
				groups.update(
					grouper.call(context, v, k, iterable),
					function (a) {
						return (
							(a = a || []), a.push(isKeyedIter ? [k, v] : v), a
						);
					}
				);
			});
			var coerce = iterableClass(iterable);
			return groups.map(function (arr) {
				return reify(iterable, coerce(arr));
			});
		}

		function sliceFactory(iterable, begin, end, useKeys) {
			var originalSize = iterable.size;

			// Sanitize begin & end using this shorthand for ToInt32(argument)
			// http://www.ecma-international.org/ecma-262/6.0/#sec-toint32
			if (begin !== undefined) {
				begin = begin | 0;
			}
			if (end !== undefined) {
				if (end === Infinity) {
					end = originalSize;
				} else {
					end = end | 0;
				}
			}

			if (wholeSlice(begin, end, originalSize)) {
				return iterable;
			}

			var resolvedBegin = resolveBegin(begin, originalSize);
			var resolvedEnd = resolveEnd(end, originalSize);

			// begin or end will be NaN if they were provided as negative numbers and
			// this iterable's size is unknown. In that case, cache first so there is
			// a known size and these do not resolve to NaN.
			if (
				resolvedBegin !== resolvedBegin ||
				resolvedEnd !== resolvedEnd
			) {
				return sliceFactory(
					iterable.toSeq().cacheResult(),
					begin,
					end,
					useKeys
				);
			}

			// Note: resolvedEnd is undefined when the original sequence's length is
			// unknown and this slice did not supply an end and should contain all
			// elements after resolvedBegin.
			// In that case, resolvedSize will be NaN and sliceSize will remain undefined.
			var resolvedSize = resolvedEnd - resolvedBegin;
			var sliceSize;
			if (resolvedSize === resolvedSize) {
				sliceSize = resolvedSize < 0 ? 0 : resolvedSize;
			}

			var sliceSeq = makeSequence(iterable);

			// If iterable.size is undefined, the size of the realized sliceSeq is
			// unknown at this point unless the number of items to slice is 0
			sliceSeq.size =
				sliceSize === 0
					? sliceSize
					: (iterable.size && sliceSize) || undefined;

			if (!useKeys && isSeq(iterable) && sliceSize >= 0) {
				sliceSeq.get = function (index, notSetValue) {
					index = wrapIndex(this, index);
					return index >= 0 && index < sliceSize
						? iterable.get(index + resolvedBegin, notSetValue)
						: notSetValue;
				};
			}

			sliceSeq.__iterateUncached = function (fn, reverse) {
				var this$0 = this;
				if (sliceSize === 0) {
					return 0;
				}
				if (reverse) {
					return this.cacheResult().__iterate(fn, reverse);
				}
				var skipped = 0;
				var isSkipping = true;
				var iterations = 0;
				iterable.__iterate(function (v, k) {
					if (
						!(
							isSkipping &&
							(isSkipping = skipped++ < resolvedBegin)
						)
					) {
						iterations++;
						return (
							fn(v, useKeys ? k : iterations - 1, this$0) !==
								false && iterations !== sliceSize
						);
					}
				});
				return iterations;
			};

			sliceSeq.__iteratorUncached = function (type, reverse) {
				if (sliceSize !== 0 && reverse) {
					return this.cacheResult().__iterator(type, reverse);
				}
				// Don't bother instantiating parent iterator if taking 0.
				var iterator =
					sliceSize !== 0 && iterable.__iterator(type, reverse);
				var skipped = 0;
				var iterations = 0;
				return new Iterator(function () {
					while (skipped++ < resolvedBegin) {
						iterator.next();
					}
					if (++iterations > sliceSize) {
						return iteratorDone();
					}
					var step = iterator.next();
					if (useKeys || type === ITERATE_VALUES) {
						return step;
					} else if (type === ITERATE_KEYS) {
						return iteratorValue(
							type,
							iterations - 1,
							undefined,
							step
						);
					} else {
						return iteratorValue(
							type,
							iterations - 1,
							step.value[1],
							step
						);
					}
				});
			};

			return sliceSeq;
		}

		function takeWhileFactory(iterable, predicate, context) {
			var takeSequence = makeSequence(iterable);
			takeSequence.__iterateUncached = function (fn, reverse) {
				var this$0 = this;
				if (reverse) {
					return this.cacheResult().__iterate(fn, reverse);
				}
				var iterations = 0;
				iterable.__iterate(function (v, k, c) {
					return (
						predicate.call(context, v, k, c) &&
						++iterations &&
						fn(v, k, this$0)
					);
				});
				return iterations;
			};
			takeSequence.__iteratorUncached = function (type, reverse) {
				var this$0 = this;
				if (reverse) {
					return this.cacheResult().__iterator(type, reverse);
				}
				var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);
				var iterating = true;
				return new Iterator(function () {
					if (!iterating) {
						return iteratorDone();
					}
					var step = iterator.next();
					if (step.done) {
						return step;
					}
					var entry = step.value;
					var k = entry[0];
					var v = entry[1];
					if (!predicate.call(context, v, k, this$0)) {
						iterating = false;
						return iteratorDone();
					}
					return type === ITERATE_ENTRIES
						? step
						: iteratorValue(type, k, v, step);
				});
			};
			return takeSequence;
		}

		function skipWhileFactory(iterable, predicate, context, useKeys) {
			var skipSequence = makeSequence(iterable);
			skipSequence.__iterateUncached = function (fn, reverse) {
				var this$0 = this;
				if (reverse) {
					return this.cacheResult().__iterate(fn, reverse);
				}
				var isSkipping = true;
				var iterations = 0;
				iterable.__iterate(function (v, k, c) {
					if (
						!(
							isSkipping &&
							(isSkipping = predicate.call(context, v, k, c))
						)
					) {
						iterations++;
						return fn(v, useKeys ? k : iterations - 1, this$0);
					}
				});
				return iterations;
			};
			skipSequence.__iteratorUncached = function (type, reverse) {
				var this$0 = this;
				if (reverse) {
					return this.cacheResult().__iterator(type, reverse);
				}
				var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);
				var skipping = true;
				var iterations = 0;
				return new Iterator(function () {
					var step, k, v;
					do {
						step = iterator.next();
						if (step.done) {
							if (useKeys || type === ITERATE_VALUES) {
								return step;
							} else if (type === ITERATE_KEYS) {
								return iteratorValue(
									type,
									iterations++,
									undefined,
									step
								);
							} else {
								return iteratorValue(
									type,
									iterations++,
									step.value[1],
									step
								);
							}
						}
						var entry = step.value;
						k = entry[0];
						v = entry[1];
						skipping &&
							(skipping = predicate.call(context, v, k, this$0));
					} while (skipping);
					return type === ITERATE_ENTRIES
						? step
						: iteratorValue(type, k, v, step);
				});
			};
			return skipSequence;
		}

		function concatFactory(iterable, values) {
			var isKeyedIterable = isKeyed(iterable);
			var iters = [iterable]
				.concat(values)
				.map(function (v) {
					if (!isIterable(v)) {
						v = isKeyedIterable
							? keyedSeqFromValue(v)
							: indexedSeqFromValue(Array.isArray(v) ? v : [v]);
					} else if (isKeyedIterable) {
						v = KeyedIterable(v);
					}
					return v;
				})
				.filter(function (v) {
					return v.size !== 0;
				});

			if (iters.length === 0) {
				return iterable;
			}

			if (iters.length === 1) {
				var singleton = iters[0];
				if (
					singleton === iterable ||
					(isKeyedIterable && isKeyed(singleton)) ||
					(isIndexed(iterable) && isIndexed(singleton))
				) {
					return singleton;
				}
			}

			var concatSeq = new ArraySeq(iters);
			if (isKeyedIterable) {
				concatSeq = concatSeq.toKeyedSeq();
			} else if (!isIndexed(iterable)) {
				concatSeq = concatSeq.toSetSeq();
			}
			concatSeq = concatSeq.flatten(true);
			concatSeq.size = iters.reduce(function (sum, seq) {
				if (sum !== undefined) {
					var size = seq.size;
					if (size !== undefined) {
						return sum + size;
					}
				}
			}, 0);
			return concatSeq;
		}

		function flattenFactory(iterable, depth, useKeys) {
			var flatSequence = makeSequence(iterable);
			flatSequence.__iterateUncached = function (fn, reverse) {
				var iterations = 0;
				var stopped = false;
				function flatDeep(iter, currentDepth) {
					var this$0 = this;
					iter.__iterate(function (v, k) {
						if ((!depth || currentDepth < depth) && isIterable(v)) {
							flatDeep(v, currentDepth + 1);
						} else if (
							fn(v, useKeys ? k : iterations++, this$0) === false
						) {
							stopped = true;
						}
						return !stopped;
					}, reverse);
				}
				flatDeep(iterable, 0);
				return iterations;
			};
			flatSequence.__iteratorUncached = function (type, reverse) {
				var iterator = iterable.__iterator(type, reverse);
				var stack = [];
				var iterations = 0;
				return new Iterator(function () {
					while (iterator) {
						var step = iterator.next();
						if (step.done !== false) {
							iterator = stack.pop();
							continue;
						}
						var v = step.value;
						if (type === ITERATE_ENTRIES) {
							v = v[1];
						}
						if ((!depth || stack.length < depth) && isIterable(v)) {
							stack.push(iterator);
							iterator = v.__iterator(type, reverse);
						} else {
							return useKeys
								? step
								: iteratorValue(type, iterations++, v, step);
						}
					}
					return iteratorDone();
				});
			};
			return flatSequence;
		}

		function flatMapFactory(iterable, mapper, context) {
			var coerce = iterableClass(iterable);
			return iterable
				.toSeq()
				.map(function (v, k) {
					return coerce(mapper.call(context, v, k, iterable));
				})
				.flatten(true);
		}

		function interposeFactory(iterable, separator) {
			var interposedSequence = makeSequence(iterable);
			interposedSequence.size = iterable.size && iterable.size * 2 - 1;
			interposedSequence.__iterateUncached = function (fn, reverse) {
				var this$0 = this;
				var iterations = 0;
				iterable.__iterate(function (v, k) {
					return (
						(!iterations ||
							fn(separator, iterations++, this$0) !== false) &&
						fn(v, iterations++, this$0) !== false
					);
				}, reverse);
				return iterations;
			};
			interposedSequence.__iteratorUncached = function (type, reverse) {
				var iterator = iterable.__iterator(ITERATE_VALUES, reverse);
				var iterations = 0;
				var step;
				return new Iterator(function () {
					if (!step || iterations % 2) {
						step = iterator.next();
						if (step.done) {
							return step;
						}
					}
					return iterations % 2
						? iteratorValue(type, iterations++, separator)
						: iteratorValue(type, iterations++, step.value, step);
				});
			};
			return interposedSequence;
		}

		function sortFactory(iterable, comparator, mapper) {
			if (!comparator) {
				comparator = defaultComparator;
			}
			var isKeyedIterable = isKeyed(iterable);
			var index = 0;
			var entries = iterable
				.toSeq()
				.map(function (v, k) {
					return [k, v, index++, mapper ? mapper(v, k, iterable) : v];
				})
				.toArray();
			entries
				.sort(function (a, b) {
					return comparator(a[3], b[3]) || a[2] - b[2];
				})
				.forEach(
					isKeyedIterable
						? function (v, i) {
								entries[i].length = 2;
						  }
						: function (v, i) {
								entries[i] = v[1];
						  }
				);
			return isKeyedIterable
				? KeyedSeq(entries)
				: isIndexed(iterable)
				? IndexedSeq(entries)
				: SetSeq(entries);
		}

		function maxFactory(iterable, comparator, mapper) {
			if (!comparator) {
				comparator = defaultComparator;
			}
			if (mapper) {
				var entry = iterable
					.toSeq()
					.map(function (v, k) {
						return [v, mapper(v, k, iterable)];
					})
					.reduce(function (a, b) {
						return maxCompare(comparator, a[1], b[1]) ? b : a;
					});
				return entry && entry[0];
			} else {
				return iterable.reduce(function (a, b) {
					return maxCompare(comparator, a, b) ? b : a;
				});
			}
		}

		function maxCompare(comparator, a, b) {
			var comp = comparator(b, a);
			// b is considered the new max if the comparator declares them equal, but
			// they are not equal and b is in fact a nullish value.
			return (
				(comp === 0 &&
					b !== a &&
					(b === undefined || b === null || b !== b)) ||
				comp > 0
			);
		}

		function zipWithFactory(keyIter, zipper, iters) {
			var zipSequence = makeSequence(keyIter);
			zipSequence.size = new ArraySeq(iters)
				.map(function (i) {
					return i.size;
				})
				.min();
			// Note: this a generic base implementation of __iterate in terms of
			// __iterator which may be more generically useful in the future.
			zipSequence.__iterate = function (fn, reverse) {
				/* generic:
      var iterator = this.__iterator(ITERATE_ENTRIES, reverse);
      var step;
      var iterations = 0;
      while (!(step = iterator.next()).done) {
        iterations++;
        if (fn(step.value[1], step.value[0], this) === false) {
          break;
        }
      }
      return iterations;
      */
				// indexed:
				var iterator = this.__iterator(ITERATE_VALUES, reverse);
				var step;
				var iterations = 0;
				while (!(step = iterator.next()).done) {
					if (fn(step.value, iterations++, this) === false) {
						break;
					}
				}
				return iterations;
			};
			zipSequence.__iteratorUncached = function (type, reverse) {
				var iterators = iters.map(function (i) {
					return (
						(i = Iterable(i)),
						getIterator(reverse ? i.reverse() : i)
					);
				});
				var iterations = 0;
				var isDone = false;
				return new Iterator(function () {
					var steps;
					if (!isDone) {
						steps = iterators.map(function (i) {
							return i.next();
						});
						isDone = steps.some(function (s) {
							return s.done;
						});
					}
					if (isDone) {
						return iteratorDone();
					}
					return iteratorValue(
						type,
						iterations++,
						zipper.apply(
							null,
							steps.map(function (s) {
								return s.value;
							})
						)
					);
				});
			};
			return zipSequence;
		}

		// #pragma Helper Functions

		function reify(iter, seq) {
			return isSeq(iter) ? seq : iter.constructor(seq);
		}

		function validateEntry(entry) {
			if (entry !== Object(entry)) {
				throw new TypeError("Expected [K, V] tuple: " + entry);
			}
		}

		function resolveSize(iter) {
			assertNotInfinite(iter.size);
			return ensureSize(iter);
		}

		function iterableClass(iterable) {
			return isKeyed(iterable)
				? KeyedIterable
				: isIndexed(iterable)
				? IndexedIterable
				: SetIterable;
		}

		function makeSequence(iterable) {
			return Object.create(
				(isKeyed(iterable)
					? KeyedSeq
					: isIndexed(iterable)
					? IndexedSeq
					: SetSeq
				).prototype
			);
		}

		function cacheResultThrough() {
			if (this._iter.cacheResult) {
				this._iter.cacheResult();
				this.size = this._iter.size;
				return this;
			} else {
				return Seq.prototype.cacheResult.call(this);
			}
		}

		function defaultComparator(a, b) {
			return a > b ? 1 : a < b ? -1 : 0;
		}

		function forceIterator(keyPath) {
			var iter = getIterator(keyPath);
			if (!iter) {
				// Array might not be iterable in this environment, so we need a fallback
				// to our wrapped type.
				if (!isArrayLike(keyPath)) {
					throw new TypeError(
						"Expected iterable or array-like: " + keyPath
					);
				}
				iter = getIterator(Iterable(keyPath));
			}
			return iter;
		}

		createClass(Record, KeyedCollection);

		function Record(defaultValues, name) {
			var hasInitialized;

			var RecordType = function Record(values) {
				if (values instanceof RecordType) {
					return values;
				}
				if (!(this instanceof RecordType)) {
					return new RecordType(values);
				}
				if (!hasInitialized) {
					hasInitialized = true;
					var keys = Object.keys(defaultValues);
					setProps(RecordTypePrototype, keys);
					RecordTypePrototype.size = keys.length;
					RecordTypePrototype._name = name;
					RecordTypePrototype._keys = keys;
					RecordTypePrototype._defaultValues = defaultValues;
				}
				this._map = Map(values);
			};

			var RecordTypePrototype = (RecordType.prototype =
				Object.create(RecordPrototype));
			RecordTypePrototype.constructor = RecordType;

			return RecordType;
		}

		Record.prototype.toString = function () {
			return this.__toString(recordName(this) + " {", "}");
		};

		// @pragma Access

		Record.prototype.has = function (k) {
			return this._defaultValues.hasOwnProperty(k);
		};

		Record.prototype.get = function (k, notSetValue) {
			if (!this.has(k)) {
				return notSetValue;
			}
			var defaultVal = this._defaultValues[k];
			return this._map ? this._map.get(k, defaultVal) : defaultVal;
		};

		// @pragma Modification

		Record.prototype.clear = function () {
			if (this.__ownerID) {
				this._map && this._map.clear();
				return this;
			}
			var RecordType = this.constructor;
			return (
				RecordType._empty ||
				(RecordType._empty = makeRecord(this, emptyMap()))
			);
		};

		Record.prototype.set = function (k, v) {
			if (!this.has(k)) {
				throw new Error(
					'Cannot set unknown key "' + k + '" on ' + recordName(this)
				);
			}
			if (this._map && !this._map.has(k)) {
				var defaultVal = this._defaultValues[k];
				if (v === defaultVal) {
					return this;
				}
			}
			var newMap = this._map && this._map.set(k, v);
			if (this.__ownerID || newMap === this._map) {
				return this;
			}
			return makeRecord(this, newMap);
		};

		Record.prototype.remove = function (k) {
			if (!this.has(k)) {
				return this;
			}
			var newMap = this._map && this._map.remove(k);
			if (this.__ownerID || newMap === this._map) {
				return this;
			}
			return makeRecord(this, newMap);
		};

		Record.prototype.wasAltered = function () {
			return this._map.wasAltered();
		};

		Record.prototype.__iterator = function (type, reverse) {
			var this$0 = this;
			return KeyedIterable(this._defaultValues)
				.map(function (_, k) {
					return this$0.get(k);
				})
				.__iterator(type, reverse);
		};

		Record.prototype.__iterate = function (fn, reverse) {
			var this$0 = this;
			return KeyedIterable(this._defaultValues)
				.map(function (_, k) {
					return this$0.get(k);
				})
				.__iterate(fn, reverse);
		};

		Record.prototype.__ensureOwner = function (ownerID) {
			if (ownerID === this.__ownerID) {
				return this;
			}
			var newMap = this._map && this._map.__ensureOwner(ownerID);
			if (!ownerID) {
				this.__ownerID = ownerID;
				this._map = newMap;
				return this;
			}
			return makeRecord(this, newMap, ownerID);
		};

		var RecordPrototype = Record.prototype;
		RecordPrototype[DELETE] = RecordPrototype.remove;
		RecordPrototype.deleteIn = RecordPrototype.removeIn =
			MapPrototype.removeIn;
		RecordPrototype.merge = MapPrototype.merge;
		RecordPrototype.mergeWith = MapPrototype.mergeWith;
		RecordPrototype.mergeIn = MapPrototype.mergeIn;
		RecordPrototype.mergeDeep = MapPrototype.mergeDeep;
		RecordPrototype.mergeDeepWith = MapPrototype.mergeDeepWith;
		RecordPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;
		RecordPrototype.setIn = MapPrototype.setIn;
		RecordPrototype.update = MapPrototype.update;
		RecordPrototype.updateIn = MapPrototype.updateIn;
		RecordPrototype.withMutations = MapPrototype.withMutations;
		RecordPrototype.asMutable = MapPrototype.asMutable;
		RecordPrototype.asImmutable = MapPrototype.asImmutable;

		function makeRecord(likeRecord, map, ownerID) {
			var record = Object.create(Object.getPrototypeOf(likeRecord));
			record._map = map;
			record.__ownerID = ownerID;
			return record;
		}

		function recordName(record) {
			return record._name || record.constructor.name || "Record";
		}

		function setProps(prototype, names) {
			try {
				names.forEach(setProp.bind(undefined, prototype));
			} catch (error) {
				// Object.defineProperty failed. Probably IE8.
			}
		}

		function setProp(prototype, name) {
			Object.defineProperty(prototype, name, {
				get: function () {
					return this.get(name);
				},
				set: function (value) {
					invariant(
						this.__ownerID,
						"Cannot set on an immutable record."
					);
					this.set(name, value);
				},
			});
		}

		createClass(Set, SetCollection);

		// @pragma Construction

		function Set(value) {
			return value === null || value === undefined
				? emptySet()
				: isSet(value) && !isOrdered(value)
				? value
				: emptySet().withMutations(function (set) {
						var iter = SetIterable(value);
						assertNotInfinite(iter.size);
						iter.forEach(function (v) {
							return set.add(v);
						});
				  });
		}

		Set.of = function (/*...values*/) {
			return this(arguments);
		};

		Set.fromKeys = function (value) {
			return this(KeyedIterable(value).keySeq());
		};

		Set.prototype.toString = function () {
			return this.__toString("Set {", "}");
		};

		// @pragma Access

		Set.prototype.has = function (value) {
			return this._map.has(value);
		};

		// @pragma Modification

		Set.prototype.add = function (value) {
			return updateSet(this, this._map.set(value, true));
		};

		Set.prototype.remove = function (value) {
			return updateSet(this, this._map.remove(value));
		};

		Set.prototype.clear = function () {
			return updateSet(this, this._map.clear());
		};

		// @pragma Composition

		Set.prototype.union = function () {
			var iters = SLICE$0.call(arguments, 0);
			iters = iters.filter(function (x) {
				return x.size !== 0;
			});
			if (iters.length === 0) {
				return this;
			}
			if (this.size === 0 && !this.__ownerID && iters.length === 1) {
				return this.constructor(iters[0]);
			}
			return this.withMutations(function (set) {
				for (var ii = 0; ii < iters.length; ii++) {
					SetIterable(iters[ii]).forEach(function (value) {
						return set.add(value);
					});
				}
			});
		};

		Set.prototype.intersect = function () {
			var iters = SLICE$0.call(arguments, 0);
			if (iters.length === 0) {
				return this;
			}
			iters = iters.map(function (iter) {
				return SetIterable(iter);
			});
			var originalSet = this;
			return this.withMutations(function (set) {
				originalSet.forEach(function (value) {
					if (
						!iters.every(function (iter) {
							return iter.includes(value);
						})
					) {
						set.remove(value);
					}
				});
			});
		};

		Set.prototype.subtract = function () {
			var iters = SLICE$0.call(arguments, 0);
			if (iters.length === 0) {
				return this;
			}
			iters = iters.map(function (iter) {
				return SetIterable(iter);
			});
			var originalSet = this;
			return this.withMutations(function (set) {
				originalSet.forEach(function (value) {
					if (
						iters.some(function (iter) {
							return iter.includes(value);
						})
					) {
						set.remove(value);
					}
				});
			});
		};

		Set.prototype.merge = function () {
			return this.union.apply(this, arguments);
		};

		Set.prototype.mergeWith = function (merger) {
			var iters = SLICE$0.call(arguments, 1);
			return this.union.apply(this, iters);
		};

		Set.prototype.sort = function (comparator) {
			// Late binding
			return OrderedSet(sortFactory(this, comparator));
		};

		Set.prototype.sortBy = function (mapper, comparator) {
			// Late binding
			return OrderedSet(sortFactory(this, comparator, mapper));
		};

		Set.prototype.wasAltered = function () {
			return this._map.wasAltered();
		};

		Set.prototype.__iterate = function (fn, reverse) {
			var this$0 = this;
			return this._map.__iterate(function (_, k) {
				return fn(k, k, this$0);
			}, reverse);
		};

		Set.prototype.__iterator = function (type, reverse) {
			return this._map
				.map(function (_, k) {
					return k;
				})
				.__iterator(type, reverse);
		};

		Set.prototype.__ensureOwner = function (ownerID) {
			if (ownerID === this.__ownerID) {
				return this;
			}
			var newMap = this._map.__ensureOwner(ownerID);
			if (!ownerID) {
				this.__ownerID = ownerID;
				this._map = newMap;
				return this;
			}
			return this.__make(newMap, ownerID);
		};

		function isSet(maybeSet) {
			return !!(maybeSet && maybeSet[IS_SET_SENTINEL]);
		}

		Set.isSet = isSet;

		var IS_SET_SENTINEL = "@@__IMMUTABLE_SET__@@";

		var SetPrototype = Set.prototype;
		SetPrototype[IS_SET_SENTINEL] = true;
		SetPrototype[DELETE] = SetPrototype.remove;
		SetPrototype.mergeDeep = SetPrototype.merge;
		SetPrototype.mergeDeepWith = SetPrototype.mergeWith;
		SetPrototype.withMutations = MapPrototype.withMutations;
		SetPrototype.asMutable = MapPrototype.asMutable;
		SetPrototype.asImmutable = MapPrototype.asImmutable;

		SetPrototype.__empty = emptySet;
		SetPrototype.__make = makeSet;

		function updateSet(set, newMap) {
			if (set.__ownerID) {
				set.size = newMap.size;
				set._map = newMap;
				return set;
			}
			return newMap === set._map
				? set
				: newMap.size === 0
				? set.__empty()
				: set.__make(newMap);
		}

		function makeSet(map, ownerID) {
			var set = Object.create(SetPrototype);
			set.size = map ? map.size : 0;
			set._map = map;
			set.__ownerID = ownerID;
			return set;
		}

		var EMPTY_SET;
		function emptySet() {
			return EMPTY_SET || (EMPTY_SET = makeSet(emptyMap()));
		}

		createClass(OrderedSet, Set);

		// @pragma Construction

		function OrderedSet(value) {
			return value === null || value === undefined
				? emptyOrderedSet()
				: isOrderedSet(value)
				? value
				: emptyOrderedSet().withMutations(function (set) {
						var iter = SetIterable(value);
						assertNotInfinite(iter.size);
						iter.forEach(function (v) {
							return set.add(v);
						});
				  });
		}

		OrderedSet.of = function (/*...values*/) {
			return this(arguments);
		};

		OrderedSet.fromKeys = function (value) {
			return this(KeyedIterable(value).keySeq());
		};

		OrderedSet.prototype.toString = function () {
			return this.__toString("OrderedSet {", "}");
		};

		function isOrderedSet(maybeOrderedSet) {
			return isSet(maybeOrderedSet) && isOrdered(maybeOrderedSet);
		}

		OrderedSet.isOrderedSet = isOrderedSet;

		var OrderedSetPrototype = OrderedSet.prototype;
		OrderedSetPrototype[IS_ORDERED_SENTINEL] = true;

		OrderedSetPrototype.__empty = emptyOrderedSet;
		OrderedSetPrototype.__make = makeOrderedSet;

		function makeOrderedSet(map, ownerID) {
			var set = Object.create(OrderedSetPrototype);
			set.size = map ? map.size : 0;
			set._map = map;
			set.__ownerID = ownerID;
			return set;
		}

		var EMPTY_ORDERED_SET;
		function emptyOrderedSet() {
			return (
				EMPTY_ORDERED_SET ||
				(EMPTY_ORDERED_SET = makeOrderedSet(emptyOrderedMap()))
			);
		}

		createClass(Stack, IndexedCollection);

		// @pragma Construction

		function Stack(value) {
			return value === null || value === undefined
				? emptyStack()
				: isStack(value)
				? value
				: emptyStack().unshiftAll(value);
		}

		Stack.of = function (/*...values*/) {
			return this(arguments);
		};

		Stack.prototype.toString = function () {
			return this.__toString("Stack [", "]");
		};

		// @pragma Access

		Stack.prototype.get = function (index, notSetValue) {
			var head = this._head;
			index = wrapIndex(this, index);
			while (head && index--) {
				head = head.next;
			}
			return head ? head.value : notSetValue;
		};

		Stack.prototype.peek = function () {
			return this._head && this._head.value;
		};

		// @pragma Modification

		Stack.prototype.push = function (/*...values*/) {
			if (arguments.length === 0) {
				return this;
			}
			var newSize = this.size + arguments.length;
			var head = this._head;
			for (var ii = arguments.length - 1; ii >= 0; ii--) {
				head = {
					value: arguments[ii],
					next: head,
				};
			}
			if (this.__ownerID) {
				this.size = newSize;
				this._head = head;
				this.__hash = undefined;
				this.__altered = true;
				return this;
			}
			return makeStack(newSize, head);
		};

		Stack.prototype.pushAll = function (iter) {
			iter = IndexedIterable(iter);
			if (iter.size === 0) {
				return this;
			}
			assertNotInfinite(iter.size);
			var newSize = this.size;
			var head = this._head;
			iter.reverse().forEach(function (value) {
				newSize++;
				head = {
					value: value,
					next: head,
				};
			});
			if (this.__ownerID) {
				this.size = newSize;
				this._head = head;
				this.__hash = undefined;
				this.__altered = true;
				return this;
			}
			return makeStack(newSize, head);
		};

		Stack.prototype.pop = function () {
			return this.slice(1);
		};

		Stack.prototype.unshift = function (/*...values*/) {
			return this.push.apply(this, arguments);
		};

		Stack.prototype.unshiftAll = function (iter) {
			return this.pushAll(iter);
		};

		Stack.prototype.shift = function () {
			return this.pop.apply(this, arguments);
		};

		Stack.prototype.clear = function () {
			if (this.size === 0) {
				return this;
			}
			if (this.__ownerID) {
				this.size = 0;
				this._head = undefined;
				this.__hash = undefined;
				this.__altered = true;
				return this;
			}
			return emptyStack();
		};

		Stack.prototype.slice = function (begin, end) {
			if (wholeSlice(begin, end, this.size)) {
				return this;
			}
			var resolvedBegin = resolveBegin(begin, this.size);
			var resolvedEnd = resolveEnd(end, this.size);
			if (resolvedEnd !== this.size) {
				// super.slice(begin, end);
				return IndexedCollection.prototype.slice.call(this, begin, end);
			}
			var newSize = this.size - resolvedBegin;
			var head = this._head;
			while (resolvedBegin--) {
				head = head.next;
			}
			if (this.__ownerID) {
				this.size = newSize;
				this._head = head;
				this.__hash = undefined;
				this.__altered = true;
				return this;
			}
			return makeStack(newSize, head);
		};

		// @pragma Mutability

		Stack.prototype.__ensureOwner = function (ownerID) {
			if (ownerID === this.__ownerID) {
				return this;
			}
			if (!ownerID) {
				this.__ownerID = ownerID;
				this.__altered = false;
				return this;
			}
			return makeStack(this.size, this._head, ownerID, this.__hash);
		};

		// @pragma Iteration

		Stack.prototype.__iterate = function (fn, reverse) {
			if (reverse) {
				return this.reverse().__iterate(fn);
			}
			var iterations = 0;
			var node = this._head;
			while (node) {
				if (fn(node.value, iterations++, this) === false) {
					break;
				}
				node = node.next;
			}
			return iterations;
		};

		Stack.prototype.__iterator = function (type, reverse) {
			if (reverse) {
				return this.reverse().__iterator(type);
			}
			var iterations = 0;
			var node = this._head;
			return new Iterator(function () {
				if (node) {
					var value = node.value;
					node = node.next;
					return iteratorValue(type, iterations++, value);
				}
				return iteratorDone();
			});
		};

		function isStack(maybeStack) {
			return !!(maybeStack && maybeStack[IS_STACK_SENTINEL]);
		}

		Stack.isStack = isStack;

		var IS_STACK_SENTINEL = "@@__IMMUTABLE_STACK__@@";

		var StackPrototype = Stack.prototype;
		StackPrototype[IS_STACK_SENTINEL] = true;
		StackPrototype.withMutations = MapPrototype.withMutations;
		StackPrototype.asMutable = MapPrototype.asMutable;
		StackPrototype.asImmutable = MapPrototype.asImmutable;
		StackPrototype.wasAltered = MapPrototype.wasAltered;

		function makeStack(size, head, ownerID, hash) {
			var map = Object.create(StackPrototype);
			map.size = size;
			map._head = head;
			map.__ownerID = ownerID;
			map.__hash = hash;
			map.__altered = false;
			return map;
		}

		var EMPTY_STACK;
		function emptyStack() {
			return EMPTY_STACK || (EMPTY_STACK = makeStack(0));
		}

		/**
		 * Contributes additional methods to a constructor
		 */
		function mixin(ctor, methods) {
			var keyCopier = function (key) {
				ctor.prototype[key] = methods[key];
			};
			Object.keys(methods).forEach(keyCopier);
			Object.getOwnPropertySymbols &&
				Object.getOwnPropertySymbols(methods).forEach(keyCopier);
			return ctor;
		}

		Iterable.Iterator = Iterator;

		mixin(Iterable, {
			// ### Conversion to other types

			toArray: function () {
				assertNotInfinite(this.size);
				var array = new Array(this.size || 0);
				this.valueSeq().__iterate(function (v, i) {
					array[i] = v;
				});
				return array;
			},

			toIndexedSeq: function () {
				return new ToIndexedSequence(this);
			},

			toJS: function () {
				return this.toSeq()
					.map(function (value) {
						return value && typeof value.toJS === "function"
							? value.toJS()
							: value;
					})
					.__toJS();
			},

			toJSON: function () {
				return this.toSeq()
					.map(function (value) {
						return value && typeof value.toJSON === "function"
							? value.toJSON()
							: value;
					})
					.__toJS();
			},

			toKeyedSeq: function () {
				return new ToKeyedSequence(this, true);
			},

			toMap: function () {
				// Use Late Binding here to solve the circular dependency.
				return Map(this.toKeyedSeq());
			},

			toObject: function () {
				assertNotInfinite(this.size);
				var object = {};
				this.__iterate(function (v, k) {
					object[k] = v;
				});
				return object;
			},

			toOrderedMap: function () {
				// Use Late Binding here to solve the circular dependency.
				return OrderedMap(this.toKeyedSeq());
			},

			toOrderedSet: function () {
				// Use Late Binding here to solve the circular dependency.
				return OrderedSet(isKeyed(this) ? this.valueSeq() : this);
			},

			toSet: function () {
				// Use Late Binding here to solve the circular dependency.
				return Set(isKeyed(this) ? this.valueSeq() : this);
			},

			toSetSeq: function () {
				return new ToSetSequence(this);
			},

			toSeq: function () {
				return isIndexed(this)
					? this.toIndexedSeq()
					: isKeyed(this)
					? this.toKeyedSeq()
					: this.toSetSeq();
			},

			toStack: function () {
				// Use Late Binding here to solve the circular dependency.
				return Stack(isKeyed(this) ? this.valueSeq() : this);
			},

			toList: function () {
				// Use Late Binding here to solve the circular dependency.
				return List(isKeyed(this) ? this.valueSeq() : this);
			},

			// ### Common JavaScript methods and properties

			toString: function () {
				return "[Iterable]";
			},

			__toString: function (head, tail) {
				if (this.size === 0) {
					return head + tail;
				}
				return (
					head +
					" " +
					this.toSeq().map(this.__toStringMapper).join(", ") +
					" " +
					tail
				);
			},

			// ### ES6 Collection methods (ES6 Array and Map)

			concat: function () {
				var values = SLICE$0.call(arguments, 0);
				return reify(this, concatFactory(this, values));
			},

			includes: function (searchValue) {
				return this.some(function (value) {
					return is(value, searchValue);
				});
			},

			entries: function () {
				return this.__iterator(ITERATE_ENTRIES);
			},

			every: function (predicate, context) {
				assertNotInfinite(this.size);
				var returnValue = true;
				this.__iterate(function (v, k, c) {
					if (!predicate.call(context, v, k, c)) {
						returnValue = false;
						return false;
					}
				});
				return returnValue;
			},

			filter: function (predicate, context) {
				return reify(
					this,
					filterFactory(this, predicate, context, true)
				);
			},

			find: function (predicate, context, notSetValue) {
				var entry = this.findEntry(predicate, context);
				return entry ? entry[1] : notSetValue;
			},

			forEach: function (sideEffect, context) {
				assertNotInfinite(this.size);
				return this.__iterate(
					context ? sideEffect.bind(context) : sideEffect
				);
			},

			join: function (separator) {
				assertNotInfinite(this.size);
				separator = separator !== undefined ? "" + separator : ",";
				var joined = "";
				var isFirst = true;
				this.__iterate(function (v) {
					isFirst ? (isFirst = false) : (joined += separator);
					joined += v !== null && v !== undefined ? v.toString() : "";
				});
				return joined;
			},

			keys: function () {
				return this.__iterator(ITERATE_KEYS);
			},

			map: function (mapper, context) {
				return reify(this, mapFactory(this, mapper, context));
			},

			reduce: function (reducer, initialReduction, context) {
				assertNotInfinite(this.size);
				var reduction;
				var useFirst;
				if (arguments.length < 2) {
					useFirst = true;
				} else {
					reduction = initialReduction;
				}
				this.__iterate(function (v, k, c) {
					if (useFirst) {
						useFirst = false;
						reduction = v;
					} else {
						reduction = reducer.call(context, reduction, v, k, c);
					}
				});
				return reduction;
			},

			reduceRight: function (reducer, initialReduction, context) {
				var reversed = this.toKeyedSeq().reverse();
				return reversed.reduce.apply(reversed, arguments);
			},

			reverse: function () {
				return reify(this, reverseFactory(this, true));
			},

			slice: function (begin, end) {
				return reify(this, sliceFactory(this, begin, end, true));
			},

			some: function (predicate, context) {
				return !this.every(not(predicate), context);
			},

			sort: function (comparator) {
				return reify(this, sortFactory(this, comparator));
			},

			values: function () {
				return this.__iterator(ITERATE_VALUES);
			},

			// ### More sequential methods

			butLast: function () {
				return this.slice(0, -1);
			},

			isEmpty: function () {
				return this.size !== undefined
					? this.size === 0
					: !this.some(function () {
							return true;
					  });
			},

			count: function (predicate, context) {
				return ensureSize(
					predicate ? this.toSeq().filter(predicate, context) : this
				);
			},

			countBy: function (grouper, context) {
				return countByFactory(this, grouper, context);
			},

			equals: function (other) {
				return deepEqual(this, other);
			},

			entrySeq: function () {
				var iterable = this;
				if (iterable._cache) {
					// We cache as an entries array, so we can just return the cache!
					return new ArraySeq(iterable._cache);
				}
				var entriesSequence = iterable
					.toSeq()
					.map(entryMapper)
					.toIndexedSeq();
				entriesSequence.fromEntrySeq = function () {
					return iterable.toSeq();
				};
				return entriesSequence;
			},

			filterNot: function (predicate, context) {
				return this.filter(not(predicate), context);
			},

			findEntry: function (predicate, context, notSetValue) {
				var found = notSetValue;
				this.__iterate(function (v, k, c) {
					if (predicate.call(context, v, k, c)) {
						found = [k, v];
						return false;
					}
				});
				return found;
			},

			findKey: function (predicate, context) {
				var entry = this.findEntry(predicate, context);
				return entry && entry[0];
			},

			findLast: function (predicate, context, notSetValue) {
				return this.toKeyedSeq()
					.reverse()
					.find(predicate, context, notSetValue);
			},

			findLastEntry: function (predicate, context, notSetValue) {
				return this.toKeyedSeq()
					.reverse()
					.findEntry(predicate, context, notSetValue);
			},

			findLastKey: function (predicate, context) {
				return this.toKeyedSeq().reverse().findKey(predicate, context);
			},

			first: function () {
				return this.find(returnTrue);
			},

			flatMap: function (mapper, context) {
				return reify(this, flatMapFactory(this, mapper, context));
			},

			flatten: function (depth) {
				return reify(this, flattenFactory(this, depth, true));
			},

			fromEntrySeq: function () {
				return new FromEntriesSequence(this);
			},

			get: function (searchKey, notSetValue) {
				return this.find(
					function (_, key) {
						return is(key, searchKey);
					},
					undefined,
					notSetValue
				);
			},

			getIn: function (searchKeyPath, notSetValue) {
				var nested = this;
				// Note: in an ES6 environment, we would prefer:
				// for (var key of searchKeyPath) {
				var iter = forceIterator(searchKeyPath);
				var step;
				while (!(step = iter.next()).done) {
					var key = step.value;
					nested =
						nested && nested.get
							? nested.get(key, NOT_SET)
							: NOT_SET;
					if (nested === NOT_SET) {
						return notSetValue;
					}
				}
				return nested;
			},

			groupBy: function (grouper, context) {
				return groupByFactory(this, grouper, context);
			},

			has: function (searchKey) {
				return this.get(searchKey, NOT_SET) !== NOT_SET;
			},

			hasIn: function (searchKeyPath) {
				return this.getIn(searchKeyPath, NOT_SET) !== NOT_SET;
			},

			isSubset: function (iter) {
				iter =
					typeof iter.includes === "function" ? iter : Iterable(iter);
				return this.every(function (value) {
					return iter.includes(value);
				});
			},

			isSuperset: function (iter) {
				iter =
					typeof iter.isSubset === "function" ? iter : Iterable(iter);
				return iter.isSubset(this);
			},

			keyOf: function (searchValue) {
				return this.findKey(function (value) {
					return is(value, searchValue);
				});
			},

			keySeq: function () {
				return this.toSeq().map(keyMapper).toIndexedSeq();
			},

			last: function () {
				return this.toSeq().reverse().first();
			},

			lastKeyOf: function (searchValue) {
				return this.toKeyedSeq().reverse().keyOf(searchValue);
			},

			max: function (comparator) {
				return maxFactory(this, comparator);
			},

			maxBy: function (mapper, comparator) {
				return maxFactory(this, comparator, mapper);
			},

			min: function (comparator) {
				return maxFactory(
					this,
					comparator ? neg(comparator) : defaultNegComparator
				);
			},

			minBy: function (mapper, comparator) {
				return maxFactory(
					this,
					comparator ? neg(comparator) : defaultNegComparator,
					mapper
				);
			},

			rest: function () {
				return this.slice(1);
			},

			skip: function (amount) {
				return this.slice(Math.max(0, amount));
			},

			skipLast: function (amount) {
				return reify(
					this,
					this.toSeq().reverse().skip(amount).reverse()
				);
			},

			skipWhile: function (predicate, context) {
				return reify(
					this,
					skipWhileFactory(this, predicate, context, true)
				);
			},

			skipUntil: function (predicate, context) {
				return this.skipWhile(not(predicate), context);
			},

			sortBy: function (mapper, comparator) {
				return reify(this, sortFactory(this, comparator, mapper));
			},

			take: function (amount) {
				return this.slice(0, Math.max(0, amount));
			},

			takeLast: function (amount) {
				return reify(
					this,
					this.toSeq().reverse().take(amount).reverse()
				);
			},

			takeWhile: function (predicate, context) {
				return reify(this, takeWhileFactory(this, predicate, context));
			},

			takeUntil: function (predicate, context) {
				return this.takeWhile(not(predicate), context);
			},

			valueSeq: function () {
				return this.toIndexedSeq();
			},

			// ### Hashable Object

			hashCode: function () {
				return this.__hash || (this.__hash = hashIterable(this));
			},

			// ### Internal

			// abstract __iterate(fn, reverse)

			// abstract __iterator(type, reverse)
		});

		// var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';
		// var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';
		// var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';
		// var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';

		var IterablePrototype = Iterable.prototype;
		IterablePrototype[IS_ITERABLE_SENTINEL] = true;
		IterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.values;
		IterablePrototype.__toJS = IterablePrototype.toArray;
		IterablePrototype.__toStringMapper = quoteString;
		IterablePrototype.inspect = IterablePrototype.toSource = function () {
			return this.toString();
		};
		IterablePrototype.chain = IterablePrototype.flatMap;
		IterablePrototype.contains = IterablePrototype.includes;

		mixin(KeyedIterable, {
			// ### More sequential methods

			flip: function () {
				return reify(this, flipFactory(this));
			},

			mapEntries: function (mapper, context) {
				var this$0 = this;
				var iterations = 0;
				return reify(
					this,
					this.toSeq()
						.map(function (v, k) {
							return mapper.call(
								context,
								[k, v],
								iterations++,
								this$0
							);
						})
						.fromEntrySeq()
				);
			},

			mapKeys: function (mapper, context) {
				var this$0 = this;
				return reify(
					this,
					this.toSeq()
						.flip()
						.map(function (k, v) {
							return mapper.call(context, k, v, this$0);
						})
						.flip()
				);
			},
		});

		var KeyedIterablePrototype = KeyedIterable.prototype;
		KeyedIterablePrototype[IS_KEYED_SENTINEL] = true;
		KeyedIterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.entries;
		KeyedIterablePrototype.__toJS = IterablePrototype.toObject;
		KeyedIterablePrototype.__toStringMapper = function (v, k) {
			return JSON.stringify(k) + ": " + quoteString(v);
		};

		mixin(IndexedIterable, {
			// ### Conversion to other types

			toKeyedSeq: function () {
				return new ToKeyedSequence(this, false);
			},

			// ### ES6 Collection methods (ES6 Array and Map)

			filter: function (predicate, context) {
				return reify(
					this,
					filterFactory(this, predicate, context, false)
				);
			},

			findIndex: function (predicate, context) {
				var entry = this.findEntry(predicate, context);
				return entry ? entry[0] : -1;
			},

			indexOf: function (searchValue) {
				var key = this.keyOf(searchValue);
				return key === undefined ? -1 : key;
			},

			lastIndexOf: function (searchValue) {
				var key = this.lastKeyOf(searchValue);
				return key === undefined ? -1 : key;
			},

			reverse: function () {
				return reify(this, reverseFactory(this, false));
			},

			slice: function (begin, end) {
				return reify(this, sliceFactory(this, begin, end, false));
			},

			splice: function (index, removeNum /*, ...values*/) {
				var numArgs = arguments.length;
				removeNum = Math.max(removeNum | 0, 0);
				if (numArgs === 0 || (numArgs === 2 && !removeNum)) {
					return this;
				}
				// If index is negative, it should resolve relative to the size of the
				// collection. However size may be expensive to compute if not cached, so
				// only call count() if the number is in fact negative.
				index = resolveBegin(
					index,
					index < 0 ? this.count() : this.size
				);
				var spliced = this.slice(0, index);
				return reify(
					this,
					numArgs === 1
						? spliced
						: spliced.concat(
								arrCopy(arguments, 2),
								this.slice(index + removeNum)
						  )
				);
			},

			// ### More collection methods

			findLastIndex: function (predicate, context) {
				var entry = this.findLastEntry(predicate, context);
				return entry ? entry[0] : -1;
			},

			first: function () {
				return this.get(0);
			},

			flatten: function (depth) {
				return reify(this, flattenFactory(this, depth, false));
			},

			get: function (index, notSetValue) {
				index = wrapIndex(this, index);
				return index < 0 ||
					this.size === Infinity ||
					(this.size !== undefined && index > this.size)
					? notSetValue
					: this.find(
							function (_, key) {
								return key === index;
							},
							undefined,
							notSetValue
					  );
			},

			has: function (index) {
				index = wrapIndex(this, index);
				return (
					index >= 0 &&
					(this.size !== undefined
						? this.size === Infinity || index < this.size
						: this.indexOf(index) !== -1)
				);
			},

			interpose: function (separator) {
				return reify(this, interposeFactory(this, separator));
			},

			interleave: function (/*...iterables*/) {
				var iterables = [this].concat(arrCopy(arguments));
				var zipped = zipWithFactory(
					this.toSeq(),
					IndexedSeq.of,
					iterables
				);
				var interleaved = zipped.flatten(true);
				if (zipped.size) {
					interleaved.size = zipped.size * iterables.length;
				}
				return reify(this, interleaved);
			},

			keySeq: function () {
				return Range(0, this.size);
			},

			last: function () {
				return this.get(-1);
			},

			skipWhile: function (predicate, context) {
				return reify(
					this,
					skipWhileFactory(this, predicate, context, false)
				);
			},

			zip: function (/*, ...iterables */) {
				var iterables = [this].concat(arrCopy(arguments));
				return reify(
					this,
					zipWithFactory(this, defaultZipper, iterables)
				);
			},

			zipWith: function (zipper /*, ...iterables */) {
				var iterables = arrCopy(arguments);
				iterables[0] = this;
				return reify(this, zipWithFactory(this, zipper, iterables));
			},
		});

		IndexedIterable.prototype[IS_INDEXED_SENTINEL] = true;
		IndexedIterable.prototype[IS_ORDERED_SENTINEL] = true;

		mixin(SetIterable, {
			// ### ES6 Collection methods (ES6 Array and Map)

			get: function (value, notSetValue) {
				return this.has(value) ? value : notSetValue;
			},

			includes: function (value) {
				return this.has(value);
			},

			// ### More sequential methods

			keySeq: function () {
				return this.valueSeq();
			},
		});

		SetIterable.prototype.has = IterablePrototype.includes;
		SetIterable.prototype.contains = SetIterable.prototype.includes;

		// Mixin subclasses

		mixin(KeyedSeq, KeyedIterable.prototype);
		mixin(IndexedSeq, IndexedIterable.prototype);
		mixin(SetSeq, SetIterable.prototype);

		mixin(KeyedCollection, KeyedIterable.prototype);
		mixin(IndexedCollection, IndexedIterable.prototype);
		mixin(SetCollection, SetIterable.prototype);

		// #pragma Helper functions

		function keyMapper(v, k) {
			return k;
		}

		function entryMapper(v, k) {
			return [k, v];
		}

		function not(predicate) {
			return function () {
				return !predicate.apply(this, arguments);
			};
		}

		function neg(predicate) {
			return function () {
				return -predicate.apply(this, arguments);
			};
		}

		function quoteString(value) {
			return typeof value === "string"
				? JSON.stringify(value)
				: String(value);
		}

		function defaultZipper() {
			return arrCopy(arguments);
		}

		function defaultNegComparator(a, b) {
			return a < b ? 1 : a > b ? -1 : 0;
		}

		function hashIterable(iterable) {
			if (iterable.size === Infinity) {
				return 0;
			}
			var ordered = isOrdered(iterable);
			var keyed = isKeyed(iterable);
			var h = ordered ? 1 : 0;
			var size = iterable.__iterate(
				keyed
					? ordered
						? function (v, k) {
								h = (31 * h + hashMerge(hash(v), hash(k))) | 0;
						  }
						: function (v, k) {
								h = (h + hashMerge(hash(v), hash(k))) | 0;
						  }
					: ordered
					? function (v) {
							h = (31 * h + hash(v)) | 0;
					  }
					: function (v) {
							h = (h + hash(v)) | 0;
					  }
			);
			return murmurHashOfSize(size, h);
		}

		function murmurHashOfSize(size, h) {
			h = imul(h, 0xcc9e2d51);
			h = imul((h << 15) | (h >>> -15), 0x1b873593);
			h = imul((h << 13) | (h >>> -13), 5);
			h = ((h + 0xe6546b64) | 0) ^ size;
			h = imul(h ^ (h >>> 16), 0x85ebca6b);
			h = imul(h ^ (h >>> 13), 0xc2b2ae35);
			h = smi(h ^ (h >>> 16));
			return h;
		}

		function hashMerge(a, b) {
			return (a ^ (b + 0x9e3779b9 + (a << 6) + (a >> 2))) | 0; // int
		}

		var Immutable = {
			Iterable: Iterable,

			Seq: Seq,
			Collection: Collection,
			Map: Map,
			OrderedMap: OrderedMap,
			List: List,
			Stack: Stack,
			Set: Set,
			OrderedSet: OrderedSet,

			Record: Record,
			Range: Range,
			Repeat: Repeat,

			is: is,
			fromJS: fromJS,
		};

		return Immutable;
	});
})(immutable);

(function (module, exports) {
	!(function (e, t) {
		module.exports = t(immutable.exports, require$$1$1);
	})(window, function (n, r) {
		return (
			(o = {}),
			(i.m = a =
				[
					function (e, t) {
						e.exports = n;
					},
					function (e, t) {
						e.exports = r;
					},
					function (e, t, n) {
						e.exports = n(3);
					},
					function (e, t, n) {
						n.r(t);
						var v = n(1),
							u = n(0),
							s = function (e) {
								var t,
									n = null;
								return (
									document.implementation &&
										document.implementation
											.createHTMLDocument &&
										(((t =
											document.implementation.createHTMLDocument(
												"foo"
											)).documentElement.innerHTML = e),
										(n =
											t.getElementsByTagName("body")[0])),
									n
								);
							},
							x = function (e, t, n) {
								var r,
									i = e.textContent;
								return "" === i.trim()
									? {
											chunk:
												((r = n),
												{
													text: " ",
													inlines: [
														new u.OrderedSet(),
													],
													entities: [r],
													blocks: [],
												}),
									  }
									: {
											chunk: {
												text: i,
												inlines: Array(i.length).fill(
													t
												),
												entities: Array(i.length).fill(
													n
												),
												blocks: [],
											},
									  };
							},
							M = function () {
								return {
									text: "\n",
									inlines: [new u.OrderedSet()],
									entities: new Array(1),
									blocks: [],
								};
							},
							k = function () {
								return {
									text: "",
									inlines: [],
									entities: [],
									blocks: [],
								};
							},
							E = function (e, t) {
								return {
									text: "",
									inlines: [],
									entities: [],
									blocks: [
										{
											type: e,
											depth: 0,
											data: t || new u.Map({}),
										},
									],
								};
							},
							w = function (e, t, n) {
								return {
									text: "\r",
									inlines: [],
									entities: [],
									blocks: [
										{
											type: e,
											depth: Math.max(0, Math.min(4, t)),
											data: n || new u.Map({}),
										},
									],
								};
							},
							T = function (e) {
								return {
									text: "\r ",
									inlines: [new u.OrderedSet()],
									entities: [e],
									blocks: [
										{
											type: "atomic",
											depth: 0,
											data: new u.Map({}),
										},
									],
								};
							},
							L = function (e, t) {
								return {
									text: e.text + t.text,
									inlines: e.inlines.concat(t.inlines),
									entities: e.entities.concat(t.entities),
									blocks: e.blocks.concat(t.blocks),
								};
							},
							A = new u.Map({
								"header-one": { element: "h1" },
								"header-two": { element: "h2" },
								"header-three": { element: "h3" },
								"header-four": { element: "h4" },
								"header-five": { element: "h5" },
								"header-six": { element: "h6" },
								"unordered-list-item": {
									element: "li",
									wrapper: "ul",
								},
								"ordered-list-item": {
									element: "li",
									wrapper: "ol",
								},
								blockquote: { element: "blockquote" },
								code: { element: "pre" },
								atomic: { element: "figure" },
								unstyled: {
									element: "p",
									aliasedElements: ["div"],
								},
							});
						var O = {
							code: "CODE",
							del: "STRIKETHROUGH",
							em: "ITALIC",
							strong: "BOLD",
							ins: "UNDERLINE",
							sub: "SUBSCRIPT",
							sup: "SUPERSCRIPT",
						};
						function S(e) {
							return e.style.textAlign
								? new u.Map({ "text-align": e.style.textAlign })
								: e.style.marginLeft
								? new u.Map({
										"margin-left": e.style.marginLeft,
								  })
								: void 0;
						}
						var _ = function (e) {
							var t = void 0;
							if (e instanceof HTMLAnchorElement) {
								var n = {};
								t =
									e.dataset && void 0 !== e.dataset.mention
										? ((n.url = e.href),
										  (n.text = e.innerHTML),
										  (n.value = e.dataset.value),
										  v.Entity.__create(
												"MENTION",
												"IMMUTABLE",
												n
										  ))
										: ((n.url =
												(e.getAttribute &&
													e.getAttribute("href")) ||
												e.href),
										  (n.title = e.innerHTML),
										  (n.targetOption = e.target),
										  v.Entity.__create(
												"LINK",
												"MUTABLE",
												n
										  ));
							}
							return t;
						};
						n.d(t, "default", function () {
							return r;
						});
						var d = " ",
							f = new RegExp("&nbsp;", "g"),
							j = !0;
						function I(e, t, n, r, i, a) {
							var o = e.nodeName.toLowerCase();
							if (a) {
								var l = a(o, e);
								if (l) {
									var c = v.Entity.__create(
										l.type,
										l.mutability,
										l.data || {}
									);
									return { chunk: T(c) };
								}
							}
							if ("#text" === o && "\n" !== e.textContent)
								return x(e, t, i);
							if ("br" === o) return { chunk: M() };
							if ("img" === o && e instanceof HTMLImageElement) {
								var u = {};
								(u.src =
									(e.getAttribute && e.getAttribute("src")) ||
									e.src),
									(u.alt = e.alt),
									(u.height = e.style.height),
									(u.width = e.style.width),
									e.style.float &&
										(u.alignment = e.style.float);
								var s = v.Entity.__create(
									"IMAGE",
									"MUTABLE",
									u
								);
								return { chunk: T(s) };
							}
							if (
								"video" === o &&
								e instanceof HTMLVideoElement
							) {
								var d = {};
								(d.src =
									(e.getAttribute && e.getAttribute("src")) ||
									e.src),
									(d.alt = e.alt),
									(d.height = e.style.height),
									(d.width = e.style.width),
									e.style.float &&
										(d.alignment = e.style.float);
								var f = v.Entity.__create(
									"VIDEO",
									"MUTABLE",
									d
								);
								return { chunk: T(f) };
							}
							if (
								"iframe" === o &&
								e instanceof HTMLIFrameElement
							) {
								var m = {};
								(m.src =
									(e.getAttribute && e.getAttribute("src")) ||
									e.src),
									(m.height = e.height),
									(m.width = e.width);
								var p = v.Entity.__create(
									"EMBEDDED_LINK",
									"MUTABLE",
									m
								);
								return { chunk: T(p) };
							}
							var h,
								y = (function (t, n) {
									var e = A.filter(function (e) {
										return (
											(e.element === t &&
												(!e.wrapper ||
													e.wrapper === n)) ||
											e.wrapper === t ||
											(e.aliasedElements &&
												-1 <
													e.aliasedElements.indexOf(
														t
													))
										);
									})
										.keySeq()
										.toSet()
										.toArray();
									if (1 === e.length) return e[0];
								})(o, r);
							y &&
								("ul" === o || "ol" === o
									? ((r = o), (n += 1))
									: ("unordered-list-item" !== y &&
											"ordered-list-item" !== y &&
											((r = ""), (n = -1)),
									  j
											? ((h = E(y, S(e))), (j = !1))
											: (h = w(y, n, S(e))))),
								(h = h || k()),
								(t = (function (e, t, n) {
									var r,
										i = O[e];
									if (i) r = n.add(i).toOrderedSet();
									else if (t instanceof HTMLElement) {
										var c = t;
										r = (r = n)
											.withMutations(function (e) {
												var t = c.style.color,
													n = c.style.backgroundColor,
													r = c.style.fontSize,
													i =
														c.style.fontFamily.replace(
															/^"|"$/g,
															""
														),
													a = c.style.fontWeight,
													o = c.style.textDecoration,
													l = c.style.fontStyle;
												t &&
													e.add(
														"color-".concat(
															t.replace(/ /g, "")
														)
													),
													n &&
														e.add(
															"bgcolor-".concat(
																n.replace(
																	/ /g,
																	""
																)
															)
														),
													r &&
														e.add(
															"fontsize-".concat(
																r.replace(
																	/px$/g,
																	""
																)
															)
														),
													i &&
														e.add(
															"fontfamily-".concat(
																i
															)
														),
													"bold" === a &&
														e.add(O.strong),
													"underline" === o &&
														e.add(O.ins),
													"italic" === l &&
														e.add(O.em);
											})
											.toOrderedSet();
									}
									return r;
								})(o, e, t));
							for (var b = e.firstChild; b; ) {
								var g = I(b, t, n, r, _(b) || i, a).chunk;
								(h = L(h, g)), (b = b.nextSibling);
							}
							return { chunk: h };
						}
						function r(e, t) {
							var n,
								r,
								i,
								a =
									((n = t),
									(r = e.trim().replace(f, d)),
									(i = s(r))
										? ((j = !0),
										  {
												chunk: I(
													i,
													new u.OrderedSet(),
													-1,
													"",
													void 0,
													n
												).chunk,
										  })
										: null);
							if (a) {
								var o = a.chunk,
									l = new u.OrderedMap({});
								o.entities &&
									o.entities.forEach(function (e) {
										e && (l = l.set(e, v.Entity.__get(e)));
									});
								var c = 0;
								return {
									contentBlocks: o.text
										.split("\r")
										.map(function (e, t) {
											var n = c + e.length,
												r = o && o.inlines.slice(c, n),
												i = o && o.entities.slice(c, n),
												a = new u.List(
													r.map(function (e, t) {
														var n = {
															style: e,
															entity: null,
														};
														return (
															i[t] &&
																(n.entity =
																	i[t]),
															v.CharacterMetadata.create(
																n
															)
														);
													})
												);
											return (
												(c = n),
												new v.ContentBlock({
													key: Object(v.genKey)(),
													type:
														(o &&
															o.blocks[t] &&
															o.blocks[t].type) ||
														"unstyled",
													depth:
														o &&
														o.blocks[t] &&
														o.blocks[t].depth,
													data:
														(o &&
															o.blocks[t] &&
															o.blocks[t].data) ||
														new u.Map({}),
													text: e,
													characterList: a,
												})
											);
										}),
									entityMap: l,
								};
							}
							return null;
						}
					},
				]),
			(i.c = o),
			(i.d = function (e, t, n) {
				i.o(e, t) ||
					Object.defineProperty(e, t, { enumerable: !0, get: n });
			}),
			(i.r = function (e) {
				"undefined" != typeof Symbol &&
					Symbol.toStringTag &&
					Object.defineProperty(e, Symbol.toStringTag, {
						value: "Module",
					}),
					Object.defineProperty(e, "__esModule", { value: !0 });
			}),
			(i.t = function (t, e) {
				if ((1 & e && (t = i(t)), 8 & e)) return t;
				if (4 & e && "object" == typeof t && t && t.__esModule)
					return t;
				var n = Object.create(null);
				if (
					(i.r(n),
					Object.defineProperty(n, "default", {
						enumerable: !0,
						value: t,
					}),
					2 & e && "string" != typeof t)
				)
					for (var r in t)
						i.d(
							n,
							r,
							function (e) {
								return t[e];
							}.bind(null, r)
						);
				return n;
			}),
			(i.n = function (e) {
				var t =
					e && e.__esModule
						? function () {
								return e.default;
						  }
						: function () {
								return e;
						  };
				return i.d(t, "a", t), t;
			}),
			(i.o = function (e, t) {
				return Object.prototype.hasOwnProperty.call(e, t);
			}),
			(i.p = ""),
			i((i.s = 2))
		);
		function i(e) {
			if (o[e]) return o[e].exports;
			var t = (o[e] = { i: e, l: !1, exports: {} });
			return a[e].call(t.exports, t, t.exports, i), (t.l = !0), t.exports;
		}
		var a, o;
	});
})(htmlToDraftjs);

var htmlToDraft = /*@__PURE__*/ getDefaultExportFromCjs(htmlToDraftjs.exports);

var Editor = function Editor(props) {
	var _useState = useState(EditorState.createEmpty()),
		_useState2 = _slicedToArray(_useState, 2),
		editorState = _useState2[0],
		setEditorState = _useState2[1];

	useEffect(function () {
		if (props.value) {
			var _htmlToDraft = htmlToDraft(props.value),
				contentBlocks = _htmlToDraft.contentBlocks,
				entityMap = _htmlToDraft.entityMap;

			var contentState = ContentState.createFromBlockArray(
				contentBlocks,
				entityMap
			);

			var _editorState = EditorState.createWithContent(contentState);

			setEditorState(_editorState);
		}
	}, []);
	useEffect(
		function () {
			var tempValue = draftToHtml(
				convertToRaw(editorState.getCurrentContent())
			);
			props.onChange({
				target: {
					type: "editor",
					value: tempValue,
					name: props.name,
				},
			});
		},
		[editorState]
	);
	return createElement(Editor$2, {
		placeholder:
			props === null || props === void 0 ? void 0 : props.placeholder,
		toolbar: toolbarOptions,
		editorState: editorState,
		toolbarClassName: "wprf-editor-toolbar",
		wrapperClassName: "wprf-editor wprf-control",
		editorClassName: "wprf-editor-main",
		onEditorStateChange: setEditorState,
	});
};

var Editor$1 = withLabel(Editor);

var Button = function Button(props) {
	var _props$onClick, _props$text, _props$text2, _props$text3;

	if (
		!(props !== null && props !== void 0 && props.text) &&
		(props === null || props === void 0 ? void 0 : props.group) !== true
	) {
		throw new Error("Button has a required params #text.");
	}

	var validProps = validFieldProps(props, [
		"is_pro",
		"visible",
		"disable",
		"parentIndex",
		"context",
		"onBlur",
		"value",
		"ajax",
		"text",
	]);

	var _useState = useState(false),
		_useState2 = _slicedToArray(_useState, 2),
		isLoading = _useState2[0],
		setIsLoading = _useState2[1];

	var handleClick = function handleClick(event) {
		if (props !== null && props !== void 0 && props.ajax) {
			setIsLoading(true);
			hitAAJX(props.ajax, props.context)
				.then(function (res) {
					var _props$ajax;

					setIsLoading(false);

					if (
						(res === null || res === void 0
							? void 0
							: res.status) == "error"
					) {
						throw new Error(
							res === null || res === void 0
								? void 0
								: res.message
						);
					}

					props.onChange({
						target: {
							type: "button",
							name: props.name,
							value: true,
						},
					});

					if (
						!(
							(_props$ajax = props.ajax) !== null &&
							_props$ajax !== void 0 &&
							_props$ajax.hideSwal
						)
					) {
						var _props$ajax2,
							_props$ajax2$swal,
							_props$ajax3,
							_props$ajax3$swal,
							_props$ajax4,
							_props$ajax4$swal;

						var type =
							((_props$ajax2 = props.ajax) === null ||
							_props$ajax2 === void 0
								? void 0
								: (_props$ajax2$swal = _props$ajax2.swal) ===
										null || _props$ajax2$swal === void 0
								? void 0
								: _props$ajax2$swal.icon) || "success";
						var message =
							((_props$ajax3 = props.ajax) === null ||
							_props$ajax3 === void 0
								? void 0
								: (_props$ajax3$swal = _props$ajax3.swal) ===
										null || _props$ajax3$swal === void 0
								? void 0
								: _props$ajax3$swal.text) || "Complete";
						props.context.alerts.toast(type, message, {
							autoClose:
								(_props$ajax4 = props.ajax) === null ||
								_props$ajax4 === void 0
									? void 0
									: (_props$ajax4$swal =
											_props$ajax4.swal) === null ||
									  _props$ajax4$swal === void 0
									? void 0
									: _props$ajax4$swal.autoClose,
						});
					}
				})
				["catch"](function (err) {
					var _props$ajax5;

					console.error("Error In Button Called", props.name, err);
					setIsLoading(false); //TODO: need to be fixed.

					props.onChange({
						target: {
							type: "button",
							name: props.name,
							value: false,
						},
					});

					if (
						!(
							(_props$ajax5 = props.ajax) !== null &&
							_props$ajax5 !== void 0 &&
							_props$ajax5.hideSwal
						)
					) {
						props.context.alerts.toast(
							"error",
							(err === null || err === void 0
								? void 0
								: err.message) || "Something went wrong."
						);
					}
				});
		}

		useTrigger(props);
	};

	if (props !== null && props !== void 0 && props.href) {
		return createElement(
			"a",
			{
				href:
					(props === null || props === void 0
						? void 0
						: props.href) === -1
						? props === null || props === void 0
							? void 0
							: props.value
						: props === null || props === void 0
						? void 0
						: props.href,
				target:
					props === null || props === void 0 ? void 0 : props.target,
				className: classNames$1(
					"wprf-control wprf-button wprf-href-btn",
					props === null || props === void 0 ? void 0 : props.classes
				),
			},
			props === null || props === void 0 ? void 0 : props.text
		);
	}

	if (props !== null && props !== void 0 && props.group) {
		var allFields = props.fields.map(function (item, index) {
			var parentIndex = [].concat(_toConsumableArray(props.parentIndex), [
				"fields",
				index,
			]);
			return createElement(
				Field$1,
				_extends$2(
					{
						key: item.name,
					},
					item,
					{
						parentIndex: parentIndex,
					}
				)
			);
		});
		return createElement(
			"div",
			{
				className: "wprf-control wprf-button-group wprf-flex",
			},
			allFields
		);
	}

	return createElement(
		Fragment,
		null,
		createElement(
			"button",
			_extends$2({}, validProps, {
				name: props.name,
				disabled: isLoading,
				onClick:
					(_props$onClick =
						props === null || props === void 0
							? void 0
							: props.onClick) !== null &&
					_props$onClick !== void 0
						? _props$onClick
						: handleClick,
				className: classNames$1(
					"wprf-control wprf-button wprf-btn",
					props === null || props === void 0 ? void 0 : props.classes
				),
			}),
			isObject(
				props === null || props === void 0 ? void 0 : props.text
			) &&
				props !== null &&
				props !== void 0 &&
				props.ajax
				? isLoading
					? props === null || props === void 0
						? void 0
						: (_props$text = props.text) === null ||
						  _props$text === void 0
						? void 0
						: _props$text.loading
					: props.value
					? props === null || props === void 0
						? void 0
						: (_props$text2 = props.text) === null ||
						  _props$text2 === void 0
						? void 0
						: _props$text2.saved
					: props === null || props === void 0
					? void 0
					: (_props$text3 = props.text) === null ||
					  _props$text3 === void 0
					? void 0
					: _props$text3.normal
				: props === null || props === void 0
				? void 0
				: props.text
		)
	);
};

var Button$1 = withLabel(Button);

var eligibleMessage = function eligibleMessage(props) {
	if (props !== null && props !== void 0 && props.messages) {
		for (var msg in props.messages) {
			var singleMessage = props.messages[msg];

			if (when(singleMessage.rules, props.context.values)) {
				return singleMessage;
			}
		}
	}

	return {
		message: props === null || props === void 0 ? void 0 : props.message,
		type: "normal",
	};
};

var Message = function Message(props) {
	var _eligibleMessage = eligibleMessage(props),
		html = _eligibleMessage.html,
		message = _eligibleMessage.message,
		_eligibleMessage$type = _eligibleMessage.type,
		type =
			_eligibleMessage$type === void 0
				? "warning"
				: _eligibleMessage$type;

	if (!message) {
		return createElement(Fragment, null);
	}

	return createElement(
		"div",
		{
			className: classNames$1(
				"wprf-control",
				"wprf-message",
				"wprf-".concat(type, "-message"),
				"wprf-".concat(props.name, "-message")
			),
		},
		html &&
			createElement("p", {
				dangerouslySetInnerHTML: {
					__html: message,
				},
			}),
		!html && createElement("p", null, message)
	);
};

var dist = {};

var SweetAlert$1 = {};

var SuccessIcon$1 = {};

var SweetAlertStyles = {};

Object.defineProperty(SweetAlertStyles, "__esModule", { value: true });
SweetAlertStyles.closeButton =
	SweetAlertStyles.inputErrorIconAfter =
	SweetAlertStyles.inputErrorIconBefore =
	SweetAlertStyles.inputErrorIconBeforeAfter =
	SweetAlertStyles.inputErrorIcon =
	SweetAlertStyles.exclamationIcon =
	SweetAlertStyles.validationMessage =
	SweetAlertStyles.button =
	SweetAlertStyles.iconCustom =
	SweetAlertStyles.iconSuccessLineLong =
	SweetAlertStyles.iconSuccessLineTip =
	SweetAlertStyles.iconSuccessLine =
	SweetAlertStyles.iconSuccessFix =
	SweetAlertStyles.iconSuccessPlaceholder =
	SweetAlertStyles.iconSuccessAfter =
	SweetAlertStyles.iconSuccessBefore =
	SweetAlertStyles.iconSuccessBeforeAfter =
	SweetAlertStyles.iconSuccess =
	SweetAlertStyles.iconInfoAfter =
	SweetAlertStyles.iconInfoBefore =
	SweetAlertStyles.iconInfo =
	SweetAlertStyles.iconWarningDot =
	SweetAlertStyles.iconWarningBody =
	SweetAlertStyles.iconWarning =
	SweetAlertStyles.iconErrorLineRight =
	SweetAlertStyles.iconErrorLineLeft =
	SweetAlertStyles.iconErrorLine =
	SweetAlertStyles.iconErrorX =
	SweetAlertStyles.iconError =
	SweetAlertStyles.icon =
	SweetAlertStyles.actions =
	SweetAlertStyles.contentContainer =
	SweetAlertStyles.title =
	SweetAlertStyles.sweetAlert =
	SweetAlertStyles.sweetAlertContainer =
	SweetAlertStyles.overlay =
		void 0;
SweetAlertStyles.overlay = {
	backgroundColor: "rgba(0, 0, 0, 0.4)",
	position: "fixed",
	left: 0,
	right: 0,
	top: 0,
	bottom: 0,
	zIndex: 5000,
};
SweetAlertStyles.sweetAlertContainer = {
	display: "flex",
	position: "fixed",
	top: 0,
	right: 0,
	left: 0,
	bottom: 0,
	flexDirection: "row",
	alignItems: "center",
	justifyContent: "center",
	padding: ".625em",
	overflowX: "hidden",
	overflowY: "auto",
	zIndex: 5400,
};
SweetAlertStyles.sweetAlert = {
	display: "flex",
	overflow: "hidden",
	backgroundColor: "#fff",
	outline: "none",
	width: "32em",
	padding: "1.25rem",
	margin: "auto",
	borderRadius: ".3125em",
	textAlign: "center",
	position: "relative",
	flexDirection: "column",
	justifyContent: "center",
	maxWidth: "100%",
	zIndex: 5600,
};
SweetAlertStyles.title = {
	position: "relative",
	maxWidth: "100%",
	margin: "0 0 .4em",
	padding: 0,
	fontSize: "1.875em",
	fontWeight: 600,
	textAlign: "center",
	textTransform: "none",
	wordWrap: "break-word",
};
SweetAlertStyles.contentContainer = {
	zIndex: 1,
	justifyContent: "center",
	margin: 0,
	padding: 0,
	fontSize: "1.125em",
	fontWeight: 300,
	lineHeight: "normal",
	textAlign: "center",
	wordWrap: "break-word",
};
SweetAlertStyles.actions = {
	display: "flex",
	zIndex: 1,
	flexWrap: "wrap",
	alignItems: "center",
	justifyContent: "center",
	width: "100%",
	margin: "1.25em auto 0",
};
SweetAlertStyles.icon = {
	width: 80,
	height: 80,
	borderWidth: 4,
	borderStyle: "solid",
	borderColor: "gray",
	borderRadius: "50%",
	margin: "20px auto",
	position: "relative",
	boxSizing: "content-box",
};
SweetAlertStyles.iconError = {
	borderColor: "#d43f3a",
	animation: "animateErrorIcon 0.5s",
};
SweetAlertStyles.iconErrorX = {
	position: "relative",
	display: "block",
	animation: "animateXMark 0.5s",
};
SweetAlertStyles.iconErrorLine = {
	position: "absolute",
	height: 5,
	width: 47,
	backgroundColor: "#d9534f",
	display: "block",
	top: 37,
	borderRadius: 2,
};
SweetAlertStyles.iconErrorLineLeft = {
	transform: "rotate(45deg)",
	left: 17,
};
SweetAlertStyles.iconErrorLineRight = {
	transform: "rotate(-45deg)",
	right: 16,
};
SweetAlertStyles.iconWarning = {
	borderColor: "#eea236",
	animation: "pulseWarning 0.75s infinite alternate",
};
SweetAlertStyles.iconWarningBody = {
	position: "absolute",
	width: 5,
	height: 47,
	left: "50%",
	top: 10,
	borderRadius: 2,
	marginLeft: -2,
	backgroundColor: "#f0ad4e",
	animation: "pulseWarningIns 0.75s infinite alternate",
};
SweetAlertStyles.iconWarningDot = {
	position: "absolute",
	width: 7,
	height: 7,
	borderRadius: "50%",
	marginLeft: -3,
	left: "50%",
	bottom: 10,
	backgroundColor: "#f0ad4e",
	animation: "pulseWarningIns 0.75s infinite alternate",
};
SweetAlertStyles.iconInfo = {
	borderColor: "#46b8da",
};
SweetAlertStyles.iconInfoBefore = {
	content: "",
	position: "absolute",
	width: 5,
	height: 29,
	left: "50%",
	bottom: 17,
	borderRadius: 2,
	marginLeft: -2,
	backgroundColor: "#5bc0de",
};
SweetAlertStyles.iconInfoAfter = {
	content: "",
	position: "absolute",
	width: 7,
	height: 7,
	borderRadius: "50%",
	marginLeft: -3,
	left: "50%",
	top: 19,
	backgroundColor: "#5bc0de",
};
SweetAlertStyles.iconSuccess = {
	borderColor: "#4cae4c",
};
SweetAlertStyles.iconSuccessBeforeAfter = {
	content: "",
	borderRadius: "50%",
	position: "absolute",
	width: 60,
	height: 120,
	background: "white",
	transform: "rotate(45deg)",
};
SweetAlertStyles.iconSuccessBefore = {
	borderRadius: "120px 0 0 120px",
	height: 100,
	top: -7,
	left: -33,
	transform: "rotate(-45deg)",
	transformOrigin: "60px 60px",
};
SweetAlertStyles.iconSuccessAfter = {
	borderRadius: "0 120px 120px 0",
	top: -11,
	left: 30,
	transform: "rotate(-45deg)",
	transformOrigin: "0px 60px",
	animation: "rotatePlaceholder 4.25s ease-in",
};
SweetAlertStyles.iconSuccessPlaceholder = {
	width: 80,
	height: 80,
	border: "4px solid rgba(92, 184, 92, 0.2)",
	borderRadius: "50%",
	boxSizing: "content-box",
	position: "absolute",
	left: -4,
	top: -4,
	zIndex: 2,
};
SweetAlertStyles.iconSuccessFix = {
	width: 5,
	height: 90,
	backgroundColor: "#fff",
	position: "absolute",
	left: 28,
	top: 8,
	zIndex: 1,
	transform: "rotate(-45deg)",
};
SweetAlertStyles.iconSuccessLine = {
	height: 5,
	backgroundColor: "#5cb85c",
	display: "block",
	borderRadius: 2,
	position: "absolute",
	zIndex: 2,
};
SweetAlertStyles.iconSuccessLineTip = {
	width: 25,
	left: 14,
	top: 46,
	transform: "rotate(45deg)",
	animation: "animateSuccessTip 0.75s",
};
SweetAlertStyles.iconSuccessLineLong = {
	width: 47,
	right: 8,
	top: 38,
	transform: "rotate(-45deg)",
	animation: "animateSuccessLong 0.75s",
};
SweetAlertStyles.iconCustom = {
	backgroundSize: "contain",
	borderRadius: 0,
	border: "none",
	backgroundPosition: "center center",
	backgroundRepeat: "no-repeat",
};
SweetAlertStyles.button = {
	marginRight: 8,
};
SweetAlertStyles.validationMessage = {
	display: "block",
	backgroundColor: "#f1f1f1",
	marginLeft: "-1.25rem",
	marginRight: "-1.25rem",
	marginTop: 20,
	overflow: "hidden",
	padding: 10,
	maxHeight: 100,
	transition: "padding 0.25s, max-height 0.25s",
	color: "#797979",
	fontSize: 16,
	textAlign: "center",
	fontWeight: 300,
};
SweetAlertStyles.exclamationIcon = {
	display: "inline-block",
	width: 24,
	height: 24,
	borderRadius: "50%",
	backgroundColor: "#ea7d7d",
	color: "white",
	lineHeight: "24px",
	textAlign: "center",
	marginRight: 5,
};
SweetAlertStyles.inputErrorIcon = {
	position: "absolute",
	top: 8,
	right: 8,
	width: 20,
	height: 20,
	transformOrigin: "50% 50%",
	transition: "all 0.1s",
	opacity: 1,
	transform: "scale(1)",
};
SweetAlertStyles.inputErrorIconBeforeAfter = {
	content: "",
	width: 20,
	height: 6,
	backgroundColor: "#f06e57",
	borderRadius: 3,
	position: "absolute",
	top: "50%",
	marginTop: -4,
	left: "50%",
	marginLeft: -9,
};
SweetAlertStyles.inputErrorIconBefore = {
	transform: "rotate(-45deg)",
};
SweetAlertStyles.inputErrorIconAfter = {
	transform: "rotate(45deg)",
};
SweetAlertStyles.closeButton = {
	position: "absolute",
	right: 4,
	top: -2,
	fontSize: 25,
	fontWeight: 900,
	color: "rgb(113, 113, 113)",
	zIndex: 1,
	cursor: "pointer",
};

var __createBinding$8 =
	(commonjsGlobal && commonjsGlobal.__createBinding) ||
	(Object.create
		? function (o, m, k, k2) {
				if (k2 === undefined) k2 = k;
				Object.defineProperty(o, k2, {
					enumerable: true,
					get: function () {
						return m[k];
					},
				});
		  }
		: function (o, m, k, k2) {
				if (k2 === undefined) k2 = k;
				o[k2] = m[k];
		  });
var __setModuleDefault$8 =
	(commonjsGlobal && commonjsGlobal.__setModuleDefault) ||
	(Object.create
		? function (o, v) {
				Object.defineProperty(o, "default", {
					enumerable: true,
					value: v,
				});
		  }
		: function (o, v) {
				o["default"] = v;
		  });
var __importStar$8 =
	(commonjsGlobal && commonjsGlobal.__importStar) ||
	function (mod) {
		if (mod && mod.__esModule) return mod;
		var result = {};
		if (mod != null)
			for (var k in mod)
				if (k !== "default" && Object.hasOwnProperty.call(mod, k))
					__createBinding$8(result, mod, k);
		__setModuleDefault$8(result, mod);
		return result;
	};
var __importDefault$d =
	(commonjsGlobal && commonjsGlobal.__importDefault) ||
	function (mod) {
		return mod && mod.__esModule ? mod : { default: mod };
	};
Object.defineProperty(SuccessIcon$1, "__esModule", { value: true });
var react_1$b = __importDefault$d(React);
var styles$8 = __importStar$8(SweetAlertStyles);
var SuccessIcon = function () {
	return react_1$b.default.createElement(
		"div",
		{ style: Object.assign({}, styles$8.icon, styles$8.iconSuccess) },
		react_1$b.default.createElement("div", {
			style: Object.assign(
				{},
				styles$8.iconSuccessBeforeAfter,
				styles$8.iconSuccessBefore
			),
		}),
		react_1$b.default.createElement("span", {
			style: Object.assign(
				{},
				styles$8.iconSuccessLine,
				styles$8.iconSuccessLineTip
			),
		}),
		react_1$b.default.createElement("span", {
			style: Object.assign(
				{},
				styles$8.iconSuccessLine,
				styles$8.iconSuccessLineLong
			),
		}),
		react_1$b.default.createElement("div", {
			style: styles$8.iconSuccessPlaceholder,
		}),
		react_1$b.default.createElement("div", {
			style: styles$8.iconSuccessFix,
		}),
		react_1$b.default.createElement("div", {
			style: Object.assign(
				{},
				styles$8.iconSuccessBeforeAfter,
				styles$8.iconSuccessAfter
			),
		})
	);
};
SuccessIcon$1.default = SuccessIcon;

var ErrorIcon$1 = {};

var __createBinding$7 =
	(commonjsGlobal && commonjsGlobal.__createBinding) ||
	(Object.create
		? function (o, m, k, k2) {
				if (k2 === undefined) k2 = k;
				Object.defineProperty(o, k2, {
					enumerable: true,
					get: function () {
						return m[k];
					},
				});
		  }
		: function (o, m, k, k2) {
				if (k2 === undefined) k2 = k;
				o[k2] = m[k];
		  });
var __setModuleDefault$7 =
	(commonjsGlobal && commonjsGlobal.__setModuleDefault) ||
	(Object.create
		? function (o, v) {
				Object.defineProperty(o, "default", {
					enumerable: true,
					value: v,
				});
		  }
		: function (o, v) {
				o["default"] = v;
		  });
var __importStar$7 =
	(commonjsGlobal && commonjsGlobal.__importStar) ||
	function (mod) {
		if (mod && mod.__esModule) return mod;
		var result = {};
		if (mod != null)
			for (var k in mod)
				if (k !== "default" && Object.hasOwnProperty.call(mod, k))
					__createBinding$7(result, mod, k);
		__setModuleDefault$7(result, mod);
		return result;
	};
var __importDefault$c =
	(commonjsGlobal && commonjsGlobal.__importDefault) ||
	function (mod) {
		return mod && mod.__esModule ? mod : { default: mod };
	};
Object.defineProperty(ErrorIcon$1, "__esModule", { value: true });
var react_1$a = __importDefault$c(React);
var styles$7 = __importStar$7(SweetAlertStyles);
var ErrorIcon = function () {
	return react_1$a.default.createElement(
		"div",
		{ style: Object.assign({}, styles$7.icon, styles$7.iconError) },
		react_1$a.default.createElement(
			"span",
			{ style: styles$7.iconErrorX },
			react_1$a.default.createElement("span", {
				style: Object.assign(
					{},
					styles$7.iconErrorLine,
					styles$7.iconErrorLineLeft
				),
			}),
			react_1$a.default.createElement("span", {
				style: Object.assign(
					{},
					styles$7.iconErrorLine,
					styles$7.iconErrorLineRight
				),
			})
		)
	);
};
ErrorIcon$1.default = ErrorIcon;

var InfoIcon$1 = {};

var __createBinding$6 =
	(commonjsGlobal && commonjsGlobal.__createBinding) ||
	(Object.create
		? function (o, m, k, k2) {
				if (k2 === undefined) k2 = k;
				Object.defineProperty(o, k2, {
					enumerable: true,
					get: function () {
						return m[k];
					},
				});
		  }
		: function (o, m, k, k2) {
				if (k2 === undefined) k2 = k;
				o[k2] = m[k];
		  });
var __setModuleDefault$6 =
	(commonjsGlobal && commonjsGlobal.__setModuleDefault) ||
	(Object.create
		? function (o, v) {
				Object.defineProperty(o, "default", {
					enumerable: true,
					value: v,
				});
		  }
		: function (o, v) {
				o["default"] = v;
		  });
var __importStar$6 =
	(commonjsGlobal && commonjsGlobal.__importStar) ||
	function (mod) {
		if (mod && mod.__esModule) return mod;
		var result = {};
		if (mod != null)
			for (var k in mod)
				if (k !== "default" && Object.hasOwnProperty.call(mod, k))
					__createBinding$6(result, mod, k);
		__setModuleDefault$6(result, mod);
		return result;
	};
var __importDefault$b =
	(commonjsGlobal && commonjsGlobal.__importDefault) ||
	function (mod) {
		return mod && mod.__esModule ? mod : { default: mod };
	};
Object.defineProperty(InfoIcon$1, "__esModule", { value: true });
var react_1$9 = __importDefault$b(React);
var styles$6 = __importStar$6(SweetAlertStyles);
var InfoIcon = function () {
	return react_1$9.default.createElement(
		"div",
		{ style: Object.assign({}, styles$6.icon, styles$6.iconInfo) },
		react_1$9.default.createElement("div", {
			style: styles$6.iconInfoBefore,
		}),
		react_1$9.default.createElement("div", {
			style: styles$6.iconInfoAfter,
		})
	);
};
InfoIcon$1.default = InfoIcon;

var WarningIcon = {};

var __createBinding$5 =
	(commonjsGlobal && commonjsGlobal.__createBinding) ||
	(Object.create
		? function (o, m, k, k2) {
				if (k2 === undefined) k2 = k;
				Object.defineProperty(o, k2, {
					enumerable: true,
					get: function () {
						return m[k];
					},
				});
		  }
		: function (o, m, k, k2) {
				if (k2 === undefined) k2 = k;
				o[k2] = m[k];
		  });
var __setModuleDefault$5 =
	(commonjsGlobal && commonjsGlobal.__setModuleDefault) ||
	(Object.create
		? function (o, v) {
				Object.defineProperty(o, "default", {
					enumerable: true,
					value: v,
				});
		  }
		: function (o, v) {
				o["default"] = v;
		  });
var __importStar$5 =
	(commonjsGlobal && commonjsGlobal.__importStar) ||
	function (mod) {
		if (mod && mod.__esModule) return mod;
		var result = {};
		if (mod != null)
			for (var k in mod)
				if (k !== "default" && Object.hasOwnProperty.call(mod, k))
					__createBinding$5(result, mod, k);
		__setModuleDefault$5(result, mod);
		return result;
	};
var __importDefault$a =
	(commonjsGlobal && commonjsGlobal.__importDefault) ||
	function (mod) {
		return mod && mod.__esModule ? mod : { default: mod };
	};
Object.defineProperty(WarningIcon, "__esModule", { value: true });
var react_1$8 = __importDefault$a(React);
var styles$5 = __importStar$5(SweetAlertStyles);
WarningIcon.default = function () {
	return react_1$8.default.createElement(
		"div",
		{ style: Object.assign({}, styles$5.icon, styles$5.iconWarning) },
		react_1$8.default.createElement("span", {
			style: styles$5.iconWarningBody,
		}),
		react_1$8.default.createElement("span", {
			style: styles$5.iconWarningDot,
		})
	);
};

var CustomIcon$1 = {};

var __createBinding$4 =
	(commonjsGlobal && commonjsGlobal.__createBinding) ||
	(Object.create
		? function (o, m, k, k2) {
				if (k2 === undefined) k2 = k;
				Object.defineProperty(o, k2, {
					enumerable: true,
					get: function () {
						return m[k];
					},
				});
		  }
		: function (o, m, k, k2) {
				if (k2 === undefined) k2 = k;
				o[k2] = m[k];
		  });
var __setModuleDefault$4 =
	(commonjsGlobal && commonjsGlobal.__setModuleDefault) ||
	(Object.create
		? function (o, v) {
				Object.defineProperty(o, "default", {
					enumerable: true,
					value: v,
				});
		  }
		: function (o, v) {
				o["default"] = v;
		  });
var __importStar$4 =
	(commonjsGlobal && commonjsGlobal.__importStar) ||
	function (mod) {
		if (mod && mod.__esModule) return mod;
		var result = {};
		if (mod != null)
			for (var k in mod)
				if (k !== "default" && Object.hasOwnProperty.call(mod, k))
					__createBinding$4(result, mod, k);
		__setModuleDefault$4(result, mod);
		return result;
	};
var __importDefault$9 =
	(commonjsGlobal && commonjsGlobal.__importDefault) ||
	function (mod) {
		return mod && mod.__esModule ? mod : { default: mod };
	};
Object.defineProperty(CustomIcon$1, "__esModule", { value: true });
var react_1$7 = __importDefault$9(React);
var styles$4 = __importStar$4(SweetAlertStyles);
var defaultStyle = Object.assign({}, styles$4.icon, styles$4.iconCustom);
var CustomIcon = function (_a) {
	var iconUrl = _a.iconUrl;
	var backgroundImage = "url(" + iconUrl;
	var style = Object.assign({}, defaultStyle, {
		backgroundImage: backgroundImage,
	});
	return react_1$7.default.createElement("div", { style: style });
};
CustomIcon$1.default = CustomIcon;

var Buttons$1 = {};

var __extends$3 =
	(commonjsGlobal && commonjsGlobal.__extends) ||
	(function () {
		var extendStatics = function (d, b) {
			extendStatics =
				Object.setPrototypeOf ||
				({ __proto__: [] } instanceof Array &&
					function (d, b) {
						d.__proto__ = b;
					}) ||
				function (d, b) {
					for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
				};
			return extendStatics(d, b);
		};
		return function (d, b) {
			extendStatics(d, b);
			function __() {
				this.constructor = d;
			}
			d.prototype =
				b === null
					? Object.create(b)
					: ((__.prototype = b.prototype), new __());
		};
	})();
var __createBinding$3 =
	(commonjsGlobal && commonjsGlobal.__createBinding) ||
	(Object.create
		? function (o, m, k, k2) {
				if (k2 === undefined) k2 = k;
				Object.defineProperty(o, k2, {
					enumerable: true,
					get: function () {
						return m[k];
					},
				});
		  }
		: function (o, m, k, k2) {
				if (k2 === undefined) k2 = k;
				o[k2] = m[k];
		  });
var __setModuleDefault$3 =
	(commonjsGlobal && commonjsGlobal.__setModuleDefault) ||
	(Object.create
		? function (o, v) {
				Object.defineProperty(o, "default", {
					enumerable: true,
					value: v,
				});
		  }
		: function (o, v) {
				o["default"] = v;
		  });
var __importStar$3 =
	(commonjsGlobal && commonjsGlobal.__importStar) ||
	function (mod) {
		if (mod && mod.__esModule) return mod;
		var result = {};
		if (mod != null)
			for (var k in mod)
				if (k !== "default" && Object.hasOwnProperty.call(mod, k))
					__createBinding$3(result, mod, k);
		__setModuleDefault$3(result, mod);
		return result;
	};
var __importDefault$8 =
	(commonjsGlobal && commonjsGlobal.__importDefault) ||
	function (mod) {
		return mod && mod.__esModule ? mod : { default: mod };
	};
Object.defineProperty(Buttons$1, "__esModule", { value: true });
var react_1$6 = __importDefault$8(React);
var styles$3 = __importStar$3(SweetAlertStyles);
var SweetAlertStyles_1$3 = SweetAlertStyles;
var Buttons = /** @class */ (function (_super) {
	__extends$3(Buttons, _super);
	function Buttons() {
		var _this = (_super !== null && _super.apply(this, arguments)) || this;
		_this.buttonStyles = {};
		_this.confirmButtonElement = null;
		_this.cancelButtonElement = null;
		_this.setConfirmButtonElementRef = function (element) {
			_this.confirmButtonElement = element;
		};
		_this.setCancelButtonElementRef = function (element) {
			_this.cancelButtonElement = element;
		};
		_this.getButtonStyle = function (bsStyle) {
			if (bsStyle === "error") bsStyle = "danger";
			if (_this.buttonStyles[bsStyle] == null) {
				var style = Buttons.styles[bsStyle] || Buttons.styles.default;
				_this.buttonStyles[bsStyle] = {
					borderColor: "" + style.borderColor,
					boxShadow:
						"inset 0 1px 1px rgba(0,0,0,.075), 0 0 8px " +
						style.shadowColor,
				};
			}
			return _this.buttonStyles[bsStyle];
		};
		return _this;
	}
	Buttons.prototype.componentDidMount = function () {
		this.focusButton();
	};
	Buttons.prototype.componentDidUpdate = function (prevProps) {
		var _this = this;
		// when displaying back to back alerts React will treat this
		// as an update to the same alert. this causes componentDidMount
		// to not be called for the subsequent alerts. i hope to find a better
		// way to handle this in the future, but for now i'm checking if the
		// title, type, or button text has changed
		if (
			prevProps.type !== this.props.type ||
			prevProps.confirmBtnText !== this.props.confirmBtnText ||
			prevProps.title !== this.props.title
		) {
			setTimeout(function () {
				return _this.focusButton();
			}, 0);
		}
	};
	Buttons.prototype.focusButton = function () {
		if (this.props.focusCancelBtn && this.cancelButtonElement) {
			try {
				this.cancelButtonElement.focus();
			} catch (e) {
				// whoops
			}
		} else if (this.props.focusConfirmBtn && this.confirmButtonElement) {
			try {
				this.confirmButtonElement.focus();
			} catch (e) {
				// whoops
			}
		}
	};
	Buttons.prototype.confirmButtonRender = function () {
		var _this = this;
		if (!this.props.showConfirm) return false;
		var confirmBtnBsStyle =
			this.props.confirmBtnBsStyle === "error"
				? "danger"
				: this.props.confirmBtnBsStyle;
		var confirmButtonStyle = Object.assign(
			{},
			styles$3.button,
			this.getButtonStyle(confirmBtnBsStyle),
			this.props.confirmBtnStyle || {}
		);
		/**
		 * These buttons are <a> anchor tags because for some reason React is triggering click events on <button>
		 * elements when an enter key event is fired from an input field in the alert.
		 * Please do not change this back to any other type of element.
		 */
		return react_1$6.default.createElement(
			"a",
			{
				ref: this.setConfirmButtonElementRef,
				href: "#",
				style: confirmButtonStyle,
				className:
					"btn btn-" +
					this.props.btnSize +
					" btn-" +
					confirmBtnBsStyle +
					" " +
					this.props.confirmBtnCssClass +
					" " +
					(this.props.disabled ? "disabled" : ""),
				onClick: function (e) {
					e.stopPropagation();
					e.preventDefault();
					if (!_this.props.disabled) {
						_this.props.onConfirm();
					}
				},
			},
			this.props.confirmBtnText
		);
	};
	Buttons.prototype.cancelButtonRender = function () {
		var _this = this;
		if (!this.props.showCancel) return false;
		var cancelBtnBsStyle =
			this.props.cancelBtnBsStyle === "error"
				? "danger"
				: this.props.cancelBtnBsStyle;
		var cancelButtonStyle = Object.assign(
			{},
			styles$3.button,
			this.props.cancelBtnStyle || {}
		);
		/**
		 * These buttons are <a> anchor tags because for some reason React is triggering click events on <button>
		 * elements when an enter key event is fired from an input field in the alert.
		 * Please do not change this back to any other type of element.
		 */
		return react_1$6.default.createElement(
			"a",
			{
				ref: this.setCancelButtonElementRef,
				href: "#",
				style: cancelButtonStyle,
				className:
					"btn btn-" +
					this.props.btnSize +
					" btn-" +
					cancelBtnBsStyle +
					" " +
					this.props.cancelBtnCssClass,
				onClick: function (e) {
					e.stopPropagation();
					e.preventDefault();
					_this.props.onCancel();
				},
			},
			this.props.cancelBtnText
		);
	};
	Buttons.prototype.render = function () {
		if (!this.props.showConfirm && !this.props.showCancel) {
			return false;
		}
		return react_1$6.default.createElement(
			"p",
			{ style: SweetAlertStyles_1$3.actions },
			this.props.customButtons
				? this.props.customButtons
				: react_1$6.default.createElement(
						react_1$6.default.Fragment,
						null,
						!this.props.reverseButtons
							? react_1$6.default.createElement(
									react_1$6.default.Fragment,
									null,
									this.cancelButtonRender(),
									this.confirmButtonRender()
							  )
							: react_1$6.default.createElement(
									react_1$6.default.Fragment,
									null,
									this.confirmButtonRender(),
									this.cancelButtonRender()
							  )
				  )
		);
	};
	Buttons.defaultProps = {
		confirmBtnText: "OK",
		confirmBtnBsStyle: "primary",
		confirmBtnCssClass: "",
		confirmBtnStyle: {},
		cancelBtnText: "Cancel",
		cancelBtnBsStyle: "link",
		cancelBtnCssClass: "",
		cancelBtnStyle: {},
		focusConfirmBtn: true,
		focusCancelBtn: false,
		showConfirm: true,
		showCancel: false,
		reverseButtons: false,
		btnSize: "lg",
	};
	Buttons.styles = {
		primary: {
			borderColor: "#286090",
			shadowColor: "rgb(165, 202, 234)",
		},
		success: {
			borderColor: "#4cae4c",
			shadowColor: "rgba(76, 174, 76, 0.6)",
		},
		info: {
			borderColor: "#46b8da",
			shadowColor: "rgba(70, 184, 218, 0.6)",
		},
		danger: {
			borderColor: "#d43f3a",
			shadowColor: "rgba(212, 63, 58, 0.6)",
		},
		warning: {
			borderColor: "#eea236",
			shadowColor: "rgba(238, 162, 54, 0.6)",
		},
		default: {
			borderColor: "#cccccc",
			shadowColor: "rgba(204, 204, 204, 0.6)",
		},
		secondary: {
			borderColor: "#cccccc",
			shadowColor: "rgba(204, 204, 204, 0.6)",
		},
	};
	return Buttons;
})(react_1$6.default.Component);
Buttons$1.default = Buttons;

var Input$1 = {};

var __extends$2 =
	(commonjsGlobal && commonjsGlobal.__extends) ||
	(function () {
		var extendStatics = function (d, b) {
			extendStatics =
				Object.setPrototypeOf ||
				({ __proto__: [] } instanceof Array &&
					function (d, b) {
						d.__proto__ = b;
					}) ||
				function (d, b) {
					for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
				};
			return extendStatics(d, b);
		};
		return function (d, b) {
			extendStatics(d, b);
			function __() {
				this.constructor = d;
			}
			d.prototype =
				b === null
					? Object.create(b)
					: ((__.prototype = b.prototype), new __());
		};
	})();
var __createBinding$2 =
	(commonjsGlobal && commonjsGlobal.__createBinding) ||
	(Object.create
		? function (o, m, k, k2) {
				if (k2 === undefined) k2 = k;
				Object.defineProperty(o, k2, {
					enumerable: true,
					get: function () {
						return m[k];
					},
				});
		  }
		: function (o, m, k, k2) {
				if (k2 === undefined) k2 = k;
				o[k2] = m[k];
		  });
var __setModuleDefault$2 =
	(commonjsGlobal && commonjsGlobal.__setModuleDefault) ||
	(Object.create
		? function (o, v) {
				Object.defineProperty(o, "default", {
					enumerable: true,
					value: v,
				});
		  }
		: function (o, v) {
				o["default"] = v;
		  });
var __importStar$2 =
	(commonjsGlobal && commonjsGlobal.__importStar) ||
	function (mod) {
		if (mod && mod.__esModule) return mod;
		var result = {};
		if (mod != null)
			for (var k in mod)
				if (k !== "default" && Object.hasOwnProperty.call(mod, k))
					__createBinding$2(result, mod, k);
		__setModuleDefault$2(result, mod);
		return result;
	};
var __importDefault$7 =
	(commonjsGlobal && commonjsGlobal.__importDefault) ||
	function (mod) {
		return mod && mod.__esModule ? mod : { default: mod };
	};
Object.defineProperty(Input$1, "__esModule", { value: true });
var react_1$5 = __importDefault$7(React);
var styles$2 = __importStar$2(SweetAlertStyles);
var Input = /** @class */ (function (_super) {
	__extends$2(Input, _super);
	function Input() {
		var _this = (_super !== null && _super.apply(this, arguments)) || this;
		_this.inputElement = null;
		_this.setInputElementRef = function (element) {
			_this.inputElement = element;
		};
		return _this;
	}
	Input.prototype.componentDidMount = function () {
		if (this.props.type === "input") {
			try {
				this.inputElement.focus();
			} catch (e) {
				// whoops
			}
		}
	};
	Input.prototype.render = function () {
		var _this = this;
		return react_1$5.default.createElement(
			"div",
			{ style: { position: "relative" } },
			this.props.inputType === "textarea"
				? react_1$5.default.createElement("textarea", {
						ref: this.setInputElementRef,
						rows: 4,
						className: "form-control",
						value: this.props.inputValue || "",
						onChange: function (e) {
							return _this.props.onChangeInput(e);
						},
						onKeyDown: function (e) {
							return _this.props.onInputKeyDown(e);
						},
						placeholder: this.props.placeholder,
				  })
				: react_1$5.default.createElement("input", {
						type: this.props.inputType,
						ref: this.setInputElementRef,
						className: "form-control",
						value: this.props.inputValue || "",
						onChange: function (e) {
							return _this.props.onChangeInput(e);
						},
						onKeyDown: function (e) {
							return _this.props.onInputKeyDown(e);
						},
						placeholder: this.props.placeholder,
				  }),
			this.props.showValidationMessage &&
				react_1$5.default.createElement(
					"div",
					{ style: styles$2.inputErrorIcon },
					react_1$5.default.createElement("div", {
						style: Object.assign(
							{},
							styles$2.inputErrorIconBeforeAfter,
							styles$2.inputErrorIconBefore
						),
					}),
					react_1$5.default.createElement("div", {
						style: Object.assign(
							{},
							styles$2.inputErrorIconBeforeAfter,
							styles$2.inputErrorIconAfter
						),
					})
				)
		);
	};
	return Input;
})(react_1$5.default.Component);
Input$1.default = Input;

var ValidationMessage$1 = {};

var __createBinding$1 =
	(commonjsGlobal && commonjsGlobal.__createBinding) ||
	(Object.create
		? function (o, m, k, k2) {
				if (k2 === undefined) k2 = k;
				Object.defineProperty(o, k2, {
					enumerable: true,
					get: function () {
						return m[k];
					},
				});
		  }
		: function (o, m, k, k2) {
				if (k2 === undefined) k2 = k;
				o[k2] = m[k];
		  });
var __setModuleDefault$1 =
	(commonjsGlobal && commonjsGlobal.__setModuleDefault) ||
	(Object.create
		? function (o, v) {
				Object.defineProperty(o, "default", {
					enumerable: true,
					value: v,
				});
		  }
		: function (o, v) {
				o["default"] = v;
		  });
var __importStar$1 =
	(commonjsGlobal && commonjsGlobal.__importStar) ||
	function (mod) {
		if (mod && mod.__esModule) return mod;
		var result = {};
		if (mod != null)
			for (var k in mod)
				if (k !== "default" && Object.hasOwnProperty.call(mod, k))
					__createBinding$1(result, mod, k);
		__setModuleDefault$1(result, mod);
		return result;
	};
var __importDefault$6 =
	(commonjsGlobal && commonjsGlobal.__importDefault) ||
	function (mod) {
		return mod && mod.__esModule ? mod : { default: mod };
	};
Object.defineProperty(ValidationMessage$1, "__esModule", { value: true });
var react_1$4 = __importDefault$6(React);
var styles$1 = __importStar$1(SweetAlertStyles);
var defaultMessage = "Please enter a response!";
var emailMessage = "Please enter a valid email!";
var ValidationMessage = function (_a) {
	var validationMsg = _a.validationMsg,
		inputType = _a.inputType;
	var message =
		validationMsg ||
		(inputType === "email" ? emailMessage : defaultMessage);
	return react_1$4.default.createElement(
		"div",
		{ style: styles$1.validationMessage },
		react_1$4.default.createElement(
			"div",
			{ style: styles$1.exclamationIcon },
			"!"
		),
		message
	);
};
ValidationMessage$1.default = ValidationMessage;

var Title$1 = {};

var __importDefault$5 =
	(commonjsGlobal && commonjsGlobal.__importDefault) ||
	function (mod) {
		return mod && mod.__esModule ? mod : { default: mod };
	};
Object.defineProperty(Title$1, "__esModule", { value: true });
var react_1$3 = __importDefault$5(React);
var SweetAlertStyles_1$2 = SweetAlertStyles;
var Title = function (_a) {
	var children = _a.children;
	return react_1$3.default.createElement(
		"h2",
		{ style: SweetAlertStyles_1$2.title },
		children
	);
};
Title$1.default = Title;

var Content$2 = {};

var __importDefault$4 =
	(commonjsGlobal && commonjsGlobal.__importDefault) ||
	function (mod) {
		return mod && mod.__esModule ? mod : { default: mod };
	};
Object.defineProperty(Content$2, "__esModule", { value: true });
var react_1$2 = __importDefault$4(React);
var SweetAlertStyles_1$1 = SweetAlertStyles;
var Content$1 = function (_a) {
	var children = _a.children;
	return react_1$2.default.createElement(
		"div",
		{ style: SweetAlertStyles_1$1.contentContainer },
		children
	);
};
Content$2.default = Content$1;

var Overlay$1 = {};

var __extends$1 =
	(commonjsGlobal && commonjsGlobal.__extends) ||
	(function () {
		var extendStatics = function (d, b) {
			extendStatics =
				Object.setPrototypeOf ||
				({ __proto__: [] } instanceof Array &&
					function (d, b) {
						d.__proto__ = b;
					}) ||
				function (d, b) {
					for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
				};
			return extendStatics(d, b);
		};
		return function (d, b) {
			extendStatics(d, b);
			function __() {
				this.constructor = d;
			}
			d.prototype =
				b === null
					? Object.create(b)
					: ((__.prototype = b.prototype), new __());
		};
	})();
var __assign$1 =
	(commonjsGlobal && commonjsGlobal.__assign) ||
	function () {
		__assign$1 =
			Object.assign ||
			function (t) {
				for (var s, i = 1, n = arguments.length; i < n; i++) {
					s = arguments[i];
					for (var p in s)
						if (Object.prototype.hasOwnProperty.call(s, p))
							t[p] = s[p];
				}
				return t;
			};
		return __assign$1.apply(this, arguments);
	};
var __importDefault$3 =
	(commonjsGlobal && commonjsGlobal.__importDefault) ||
	function (mod) {
		return mod && mod.__esModule ? mod : { default: mod };
	};
Object.defineProperty(Overlay$1, "__esModule", { value: true });
var react_1$1 = __importDefault$3(React);
var SweetAlertStyles_1 = SweetAlertStyles;
var Overlay = /** @class */ (function (_super) {
	__extends$1(Overlay, _super);
	function Overlay() {
		var _this = (_super !== null && _super.apply(this, arguments)) || this;
		_this.overlayElement = null;
		_this.setOverlayElementRef = function (element) {
			_this.overlayElement = element;
		};
		return _this;
	}
	Overlay.prototype.componentDidMount = function () {
		if (this.overlayElement) {
			this.overlayElement.scrollTop = 0;
		}
	};
	Overlay.prototype.render = function () {
		var _a = this.props,
			show = _a.show,
			onClick = _a.onClick,
			onKeyDown = _a.onKeyDown,
			children = _a.children;
		return show
			? react_1$1.default.createElement(
					"div",
					{
						ref: this.setOverlayElementRef,
						style: __assign$1(
							__assign$1({}, SweetAlertStyles_1.overlay),
							SweetAlertStyles_1.sweetAlertContainer
						),
						onClick: function (e) {
							return onClick(e);
						},
						tabIndex: 0,
						onKeyDown: function (e) {
							return onKeyDown(e);
						},
					},
					children
			  )
			: react_1$1.default.createElement(
					"div",
					{
						style: SweetAlertStyles_1.sweetAlertContainer,
						tabIndex: 0,
						onKeyDown: function (e) {
							return onKeyDown(e);
						},
					},
					children
			  );
	};
	return Overlay;
})(react_1$1.default.Component);
Overlay$1.default = Overlay;

var patterns = {};

Object.defineProperty(patterns, "__esModule", { value: true });
patterns.emailRegex = patterns.defaultRegex = void 0;
patterns.defaultRegex = /^.+$/;
// tslint:disable-next-line:max-line-length
patterns.emailRegex =
	/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

var propTypes = {};

var __importDefault$2 =
	(commonjsGlobal && commonjsGlobal.__importDefault) ||
	function (mod) {
		return mod && mod.__esModule ? mod : { default: mod };
	};
Object.defineProperty(propTypes, "__esModule", { value: true });
propTypes.SWEET_ALERT_PROP_TYPES = void 0;
var prop_types_1$1 = __importDefault$2(propTypes$1.exports);
propTypes.SWEET_ALERT_PROP_TYPES = {
	type: prop_types_1$1.default.oneOf([
		"default",
		"info",
		"success",
		"warning",
		"danger",
		"error",
		"input",
		"custom",
		"controlled",
	]),
	// shortcut props for type
	info: prop_types_1$1.default.bool,
	success: prop_types_1$1.default.bool,
	warning: prop_types_1$1.default.bool,
	danger: prop_types_1$1.default.bool,
	error: prop_types_1$1.default.bool,
	input: prop_types_1$1.default.bool,
	custom: prop_types_1$1.default.bool,
	controlled: prop_types_1$1.default.bool,
	title: prop_types_1$1.default.oneOfType([
		prop_types_1$1.default.node,
		prop_types_1$1.default.string,
	]).isRequired,
	onCancel: prop_types_1$1.default.func,
	onConfirm: prop_types_1$1.default.func.isRequired,
	confirmBtnText: prop_types_1$1.default.oneOfType([
		prop_types_1$1.default.node,
		prop_types_1$1.default.string,
	]),
	confirmBtnBsStyle: prop_types_1$1.default.string,
	confirmBtnCssClass: prop_types_1$1.default.string,
	confirmBtnStyle: prop_types_1$1.default.object,
	cancelBtnText: prop_types_1$1.default.oneOfType([
		prop_types_1$1.default.node,
		prop_types_1$1.default.string,
	]),
	cancelBtnBsStyle: prop_types_1$1.default.string,
	cancelBtnCssClass: prop_types_1$1.default.string,
	cancelBtnStyle: prop_types_1$1.default.object,
	btnSize: prop_types_1$1.default.string,
	customIcon: prop_types_1$1.default.oneOfType([
		prop_types_1$1.default.node,
		prop_types_1$1.default.string,
	]),
	show: prop_types_1$1.default.bool,
	required: prop_types_1$1.default.bool,
	placeholder: prop_types_1$1.default.string,
	validationMsg: prop_types_1$1.default.string,
	validationRegex: prop_types_1$1.default.object,
	defaultValue: prop_types_1$1.default.oneOfType([
		prop_types_1$1.default.number,
		prop_types_1$1.default.string,
	]),
	inputType: prop_types_1$1.default.string,
	style: prop_types_1$1.default.object,
	closeBtnStyle: prop_types_1$1.default.object,
	customClass: prop_types_1$1.default.string,
	showConfirm: prop_types_1$1.default.bool,
	showCancel: prop_types_1$1.default.bool,
	showCloseButton: prop_types_1$1.default.bool,
	allowEscape: prop_types_1$1.default.bool,
	closeOnClickOutside: prop_types_1$1.default.bool,
	hideOverlay: prop_types_1$1.default.bool,
	disabled: prop_types_1$1.default.bool,
	focusConfirmBtn: prop_types_1$1.default.bool,
	focusCancelBtn: prop_types_1$1.default.bool,
	beforeMount: prop_types_1$1.default.func,
	afterMount: prop_types_1$1.default.func,
	beforeUpdate: prop_types_1$1.default.func,
	afterUpdate: prop_types_1$1.default.func,
	beforeUnmount: prop_types_1$1.default.func,
	timeout: prop_types_1$1.default.number,
	openAnim: prop_types_1$1.default.any,
	closeAnim: prop_types_1$1.default.any,
	reverseButtons: prop_types_1$1.default.bool,
	customButtons: prop_types_1$1.default.node,
	dependencies: prop_types_1$1.default.arrayOf(prop_types_1$1.default.any),
};

var defaultProps = {};

Object.defineProperty(defaultProps, "__esModule", { value: true });
defaultProps.SWEET_ALERT_DEFAULT_PROPS = void 0;
defaultProps.SWEET_ALERT_DEFAULT_PROPS = {
	allowEscape: true,
	closeOnClickOutside: true,
	inputType: "text",
	customClass: "",
	validationMsg: null,
	validationRegex: null,
	hideOverlay: false,
	required: true,
	disabled: false,
	focusConfirmBtn: true,
	focusCancelBtn: false,
	showCloseButton: false,
	confirmBtnBsStyle: "primary",
	cancelBtnBsStyle: "link",
	beforeMount: function () {},
	afterMount: function () {},
	beforeUpdate: null,
	afterUpdate: function () {},
	beforeUnmount: function () {},
	style: {},
	closeBtnStyle: {},
	timeout: 0,
	openAnim: { name: "showSweetAlert", duration: 300 },
	closeAnim: false,
	reverseButtons: false,
	dependencies: [],
};

var __extends =
	(commonjsGlobal && commonjsGlobal.__extends) ||
	(function () {
		var extendStatics = function (d, b) {
			extendStatics =
				Object.setPrototypeOf ||
				({ __proto__: [] } instanceof Array &&
					function (d, b) {
						d.__proto__ = b;
					}) ||
				function (d, b) {
					for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
				};
			return extendStatics(d, b);
		};
		return function (d, b) {
			extendStatics(d, b);
			function __() {
				this.constructor = d;
			}
			d.prototype =
				b === null
					? Object.create(b)
					: ((__.prototype = b.prototype), new __());
		};
	})();
var __assign =
	(commonjsGlobal && commonjsGlobal.__assign) ||
	function () {
		__assign =
			Object.assign ||
			function (t) {
				for (var s, i = 1, n = arguments.length; i < n; i++) {
					s = arguments[i];
					for (var p in s)
						if (Object.prototype.hasOwnProperty.call(s, p))
							t[p] = s[p];
				}
				return t;
			};
		return __assign.apply(this, arguments);
	};
var __createBinding =
	(commonjsGlobal && commonjsGlobal.__createBinding) ||
	(Object.create
		? function (o, m, k, k2) {
				if (k2 === undefined) k2 = k;
				Object.defineProperty(o, k2, {
					enumerable: true,
					get: function () {
						return m[k];
					},
				});
		  }
		: function (o, m, k, k2) {
				if (k2 === undefined) k2 = k;
				o[k2] = m[k];
		  });
var __setModuleDefault =
	(commonjsGlobal && commonjsGlobal.__setModuleDefault) ||
	(Object.create
		? function (o, v) {
				Object.defineProperty(o, "default", {
					enumerable: true,
					value: v,
				});
		  }
		: function (o, v) {
				o["default"] = v;
		  });
var __importStar =
	(commonjsGlobal && commonjsGlobal.__importStar) ||
	function (mod) {
		if (mod && mod.__esModule) return mod;
		var result = {};
		if (mod != null)
			for (var k in mod)
				if (k !== "default" && Object.hasOwnProperty.call(mod, k))
					__createBinding(result, mod, k);
		__setModuleDefault(result, mod);
		return result;
	};
var __spreadArrays =
	(commonjsGlobal && commonjsGlobal.__spreadArrays) ||
	function () {
		for (var s = 0, i = 0, il = arguments.length; i < il; i++)
			s += arguments[i].length;
		for (var r = Array(s), k = 0, i = 0; i < il; i++)
			for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
				r[k] = a[j];
		return r;
	};
var __importDefault$1 =
	(commonjsGlobal && commonjsGlobal.__importDefault) ||
	function (mod) {
		return mod && mod.__esModule ? mod : { default: mod };
	};
Object.defineProperty(SweetAlert$1, "__esModule", { value: true });
// third-party
var react_1 = __importDefault$1(React);
// components
var SuccessIcon_1 = __importDefault$1(SuccessIcon$1);
var ErrorIcon_1 = __importDefault$1(ErrorIcon$1);
var InfoIcon_1 = __importDefault$1(InfoIcon$1);
var WarningIcon_1 = __importDefault$1(WarningIcon);
var CustomIcon_1 = __importDefault$1(CustomIcon$1);
var Buttons_1 = __importDefault$1(Buttons$1);
var Input_1 = __importDefault$1(Input$1);
var ValidationMessage_1 = __importDefault$1(ValidationMessage$1);
var Title_1 = __importDefault$1(Title$1);
var Content_1 = __importDefault$1(Content$2);
var Overlay_1 = __importDefault$1(Overlay$1);
// other
var styles = __importStar(SweetAlertStyles);
var Patterns = __importStar(patterns);
var prop_types_1 = propTypes;
var default_props_1 = defaultProps;
var SWEET_ALERT_DEFAULT_STYLES = styles.sweetAlert;
var _resetting = {};
var debugLogger = function () {
	var args = [];
	for (var _i = 0; _i < arguments.length; _i++) {
		args[_i] = arguments[_i];
	}
	// uncomment the next line to get some debugging logs.
	// console.log(...args);
};
var SweetAlert = /** @class */ (function (_super) {
	__extends(SweetAlert, _super);
	function SweetAlert(props) {
		var _this = _super.call(this, props) || this;
		_this.inputElement = null;
		_this.unsupportedProp = function (oldProp, message) {
			try {
				console.warn(
					"react-bootstrap-sweetalert: Unsupported prop '" +
						oldProp +
						"'. Please " +
						message
				);
			} catch (e) {
				// do nothing
			}
		};
		_this.focusInput = function () {
			debugLogger("inputElement", _this.inputElement);
			if (_this.inputElement) {
				debugLogger("inputElement trying to focus", _this.inputElement);
				try {
					_this.inputElement.focus();
				} catch (e) {
					debugLogger("inputElement focus error", e);
					// whoops
				}
			}
		};
		_this.getIcon = function () {
			switch (_this.state.type) {
				case "danger":
				case "error":
					return react_1.default.createElement(
						ErrorIcon_1.default,
						null
					);
				case "warning":
					return react_1.default.createElement(
						WarningIcon_1.default,
						null
					);
				case "info":
					return react_1.default.createElement(
						InfoIcon_1.default,
						null
					);
				case "success":
					return react_1.default.createElement(
						SuccessIcon_1.default,
						null
					);
				case "custom":
					if (_this.props.customIcon) {
						if (typeof _this.props.customIcon == "string") {
							return react_1.default.createElement(
								CustomIcon_1.default,
								{ iconUrl: _this.props.customIcon }
							);
						}
						return _this.props.customIcon;
					}
					return null;
				default:
					return null;
			}
		};
		_this.onChangeInput = function (e) {
			var target = e.target;
			_this.setState({
				inputValue: target.value,
				showValidationMessage: false,
			});
		};
		_this.isValidInput = function () {
			if (!_this.props.required) {
				return true;
			}
			var regex =
				_this.props.validationRegex ||
				(_this.props.inputType === "email"
					? Patterns.emailRegex
					: Patterns.defaultRegex);
			return regex.test(_this.state.inputValue);
		};
		_this.isDisabled = function () {
			return _this.props.onCancel && _this.props.disabled;
		};
		_this.onAlertClose = function (callback) {
			_resetting[_this.state.id] = true;
			debugLogger("onAlertClose resetting state");
			_this.setState(
				__assign(__assign({}, SweetAlert.getDefaultState()), {
					id: _this.state.id,
				}),
				function () {
					_resetting[_this.state.id] = false;
					callback();
				}
			);
		};
		_this.beforeCloseAlert = function (closingAction, callback) {
			debugLogger("in beforeCloseAlert: setting show to false");
			_this.setState(
				{ show: false, closingAction: closingAction },
				function () {
					debugLogger("state updated", _this.state.show);
					if (!_this.state.show) {
						debugLogger("invoking callback");
						callback();
					}
				}
			);
		};
		_this.onConfirm = function (handleCloseAnimations) {
			if (handleCloseAnimations === void 0) {
				handleCloseAnimations = true;
			}
			if (_this.isDisabled()) {
				return;
			}
			// if this is an input alert, then we will send the input value to the props.onConfirm function
			var isInput = _this.state.type === "input";
			var inputValue = _this.state.inputValue;
			// if this is a controlled alert, then we will send the dependencies value to the props.onConfirm function
			var isControlled = _this.state.type === "controlled";
			var dependencies = __spreadArrays(_this.state.dependencies);
			if (isInput && !_this.isValidInput()) {
				_this.setState({
					showValidationMessage: true,
				});
				return;
			}
			var confirm = function () {
				debugLogger("in confirm callback");
				if (isInput) {
					_this.onAlertClose(function () {
						_this.props.onConfirm(inputValue);
					});
				} else if (isControlled) {
					_this.onAlertClose(function () {
						_this.props.onConfirm(dependencies);
					});
				} else {
					_this.onAlertClose(function () {
						return _this.props.onConfirm();
					});
				}
			};
			if (handleCloseAnimations) {
				debugLogger("calling beforeCloseAlert");
				_this.beforeCloseAlert("confirm", function () {
					return confirm();
				});
			} else {
				confirm();
			}
		};
		_this.onCancel = function (handleCloseAnimations) {
			if (handleCloseAnimations === void 0) {
				handleCloseAnimations = true;
			}
			var cancel = function () {
				_this.onAlertClose(function () {
					if (_this.props.onCancel) {
						_this.props.onCancel();
					}
				});
			};
			if (handleCloseAnimations) {
				_this.beforeCloseAlert("cancel", function () {
					return cancel();
				});
			} else {
				cancel();
			}
		};
		_this.onInputKeyDown = function (e) {
			if (e.keyCode == 13) {
				e.stopPropagation();
				_this.onConfirm();
			}
		};
		_this.onKeyDown = function (e) {
			if (e.keyCode == 27) {
				if (_this.props.allowEscape && _this.props.onCancel) {
					e.stopPropagation();
					_this.onCancel();
				}
			}
		};
		_this.onClickInside = function (e) {
			e.stopPropagation();
		};
		_this.onClickOutside = function () {
			if (_this.props.closeOnClickOutside && _this.props.onCancel) {
				_this.onCancel();
			}
		};
		_this.setAutoFocusInputRef = function (element) {
			_this.inputElement = element;
		};
		_this.getComposedStyle = function () {
			return Object.assign(
				{},
				SWEET_ALERT_DEFAULT_STYLES,
				_this.props.style,
				{ animation: _this.state.animation }
			);
		};
		_this.getAlertContent = function () {
			// Support for render props for content of alert
			if (typeof _this.props.children === "function") {
				var renderProps = {
					onEnterKeyDownConfirm: function (event) {
						if (event.key === "Enter") {
							event.preventDefault();
							event.stopPropagation();
							_this.onConfirm();
						}
					},
					confirm: function () {
						return _this.onConfirm();
					},
					cancel: function () {
						return _this.onCancel();
					},
					setAutoFocusInputRef:
						_this.setAutoFocusInputRef.bind(_this),
				};
				return _this.props.children(renderProps);
			}
			return _this.props.children;
		};
		_this.getCloseButton = function () {
			if (!_this.props.showCloseButton || !_this.props.onCancel) {
				return null;
			}
			return react_1.default.createElement(
				"span",
				{
					className: "btn",
					style: Object.assign(
						{},
						styles.closeButton,
						_this.props.closeBtnStyle
					),
					onClick: function () {
						return _this.onCancel();
					},
				},
				"x"
			);
		};
		_this.getInputField = function () {
			if (_this.state.type !== "input") {
				return null;
			}
			return react_1.default.createElement(
				Input_1.default,
				__assign({}, _this.props, _this.state, {
					type: _this.state.type,
					onInputKeyDown: _this.onInputKeyDown,
					onChangeInput: _this.onChangeInput,
				})
			);
		};
		_this.getValidationMessage = function () {
			if (!_this.state.showValidationMessage) {
				return null;
			}
			return react_1.default.createElement(
				ValidationMessage_1.default,
				__assign({}, _this.props)
			);
		};
		_this.getButtons = function () {
			return react_1.default.createElement(
				Buttons_1.default,
				__assign({}, _this.props, {
					type: _this.state.type,
					onConfirm: _this.onConfirm,
					onCancel: _this.onCancel,
					focusConfirmBtn: _this.state.focusConfirmBtn,
					focusCancelBtn: _this.state.focusCancelBtn,
					disabled: _this.isDisabled(),
				})
			);
		};
		_this.getInjectedStyles = function () {
			return react_1.default.createElement(
				react_1.default.Fragment,
				null,
				react_1.default.createElement("style", {
					type: "text/css",
					dangerouslySetInnerHTML: {
						__html: "\n                body.sweetalert-overflow-hidden {\n                  overflow: hidden;\n                }\n                body .sweet-alert button {\n                  outline: none !important;\n                }\n              ",
					},
				}),
				react_1.default.createElement(
					"style",
					{ type: "text/css" },
					"@-webkit-keyframes showSweetAlert {  0% {    transform: scale(0.7);    -webkit-transform: scale(0.7);  }  45% {    transform: scale(1.05);    -webkit-transform: scale(1.05);  }  80% {    transform: scale(0.95);    -webkit-tranform: scale(0.95);  }  100% {    transform: scale(1);    -webkit-transform: scale(1);  }}@keyframes showSweetAlert {  0% {    transform: scale(0.7);    -webkit-transform: scale(0.7);  }  45% {    transform: scale(1.05);    -webkit-transform: scale(1.05);  }  80% {    transform: scale(0.95);    -webkit-tranform: scale(0.95);  }  100% {    transform: scale(1);    -webkit-transform: scale(1);  }}@-webkit-keyframes hideSweetAlert {  0% {    transform: scale(1);    -webkit-transform: scale(1);  }  100% {    transform: scale(0.4);    -webkit-transform: scale(0.4);  }}@keyframes hideSweetAlert {  0% {    transform: scale(1);    -webkit-transform: scale(1);  }  100% {    transform: scale(0.4);    -webkit-transform: scale(0.4);  }}@-webkit-keyframes animateSuccessTip {  0% {    width: 0;    left: 1px;    top: 19px;  }  54% {    width: 0;    left: 1px;    top: 19px;  }  70% {    width: 50px;    left: -8px;    top: 37px;  }  84% {    width: 17px;    left: 21px;    top: 48px;  }  100% {    width: 25px;    left: 14px;    top: 45px;  }}@keyframes animateSuccessTip {  0% {    width: 0;    left: 1px;    top: 19px;  }  54% {    width: 0;    left: 1px;    top: 19px;  }  70% {    width: 50px;    left: -8px;    top: 37px;  }  84% {    width: 17px;    left: 21px;    top: 48px;  }  100% {    width: 25px;    left: 14px;    top: 45px;  }}@-webkit-keyframes animateSuccessLong {  0% {    width: 0;    right: 46px;    top: 54px;  }  65% {    width: 0;    right: 46px;    top: 54px;  }  84% {    width: 55px;    right: 0px;    top: 35px;  }  100% {    width: 47px;    right: 8px;    top: 38px;  }}@keyframes animateSuccessLong {  0% {    width: 0;    right: 46px;    top: 54px;  }  65% {    width: 0;    right: 46px;    top: 54px;  }  84% {    width: 55px;    right: 0px;    top: 35px;  }  100% {    width: 47px;    right: 8px;    top: 38px;  }}@-webkit-keyframes rotatePlaceholder {  0% {    transform: rotate(-45deg);    -webkit-transform: rotate(-45deg);  }  5% {    transform: rotate(-45deg);    -webkit-transform: rotate(-45deg);  }  12% {    transform: rotate(-405deg);    -webkit-transform: rotate(-405deg);  }  100% {    transform: rotate(-405deg);    -webkit-transform: rotate(-405deg);  }}@keyframes rotatePlaceholder {  0% {    transform: rotate(-45deg);    -webkit-transform: rotate(-45deg);  }  5% {    transform: rotate(-45deg);    -webkit-transform: rotate(-45deg);  }  12% {    transform: rotate(-405deg);    -webkit-transform: rotate(-405deg);  }  100% {    transform: rotate(-405deg);    -webkit-transform: rotate(-405deg);  }}@-webkit-keyframes animateErrorIcon {  0% {    transform: rotateX(100deg);    -webkit-transform: rotateX(100deg);    opacity: 0;  }  100% {    transform: rotateX(0deg);    -webkit-transform: rotateX(0deg);    opacity: 1;  }}@keyframes animateErrorIcon {  0% {    transform: rotateX(100deg);    -webkit-transform: rotateX(100deg);    opacity: 0;  }  100% {    transform: rotateX(0deg);    -webkit-transform: rotateX(0deg);    opacity: 1;  }}@-webkit-keyframes animateXMark {  0% {    transform: scale(0.4);    -webkit-transform: scale(0.4);    margin-top: 26px;    opacity: 0;  }  50% {    transform: scale(0.4);    -webkit-transform: scale(0.4);    margin-top: 26px;    opacity: 0;  }  80% {    transform: scale(1.15);    -webkit-transform: scale(1.15);    margin-top: -6px;  }  100% {    transform: scale(1);    -webkit-transform: scale(1);    margin-top: 0;    opacity: 1;  }}@keyframes animateXMark {  0% {    transform: scale(0.4);    -webkit-transform: scale(0.4);    margin-top: 26px;    opacity: 0;  }  50% {    transform: scale(0.4);    -webkit-transform: scale(0.4);    margin-top: 26px;    opacity: 0;  }  80% {    transform: scale(1.15);    -webkit-transform: scale(1.15);    margin-top: -6px;  }  100% {    transform: scale(1);    -webkit-transform: scale(1);    margin-top: 0;    opacity: 1;  }}@-webkit-keyframes pulseWarning {  0% {    border-color: #F8D486;  }  100% {    border-color: #F8BB86;  }}@keyframes pulseWarning {  0% {    border-color: #F8D486;  }  100% {    border-color: #F8BB86;  }}@-webkit-keyframes pulseWarningIns {  0% {    background-color: #F8D486;  }  100% {    background-color: #F8BB86;  }}@keyframes pulseWarningIns {  0% {    background-color: #F8D486;  }  100% {    background-color: #F8BB86;  }}"
				)
			);
		};
		if (_this.props.beforeUpdate) {
			_this.unsupportedProp("beforeUpdate", "use props.afterUpdate");
		}
		var newState = Object.assign(SweetAlert.getDefaultState(), {
			hideTimeoutHandlerFunc: _this.hideTimeoutHandler.bind(_this),
		});
		if (_this.props.defaultValue != null) {
			newState.inputValue = _this.props.defaultValue;
		}
		_this.state = newState;
		_this.props.beforeMount();
		return _this;
	}
	SweetAlert.prototype.componentDidMount = function () {
		document.body.classList.add("sweetalert-overflow-hidden");
		this.focusInput();
		if (this.props.afterMount) {
			this.props.afterMount();
		}
	};
	SweetAlert.generateId = function () {
		return (
			"" +
			Date.now() +
			Math.ceil(Math.random() * 10000000000) +
			Math.ceil(Math.random() * 10000000000)
		);
	};
	SweetAlert.getDefaultState = function () {
		return {
			id: SweetAlert.generateId(),
			show: true,
			focusConfirmBtn: true,
			focusCancelBtn: false,
			inputValue: "",
			showValidationMessage: false,
			timer: null,
			animation: "",
			prevTimeout: 0,
			closingAction: null,
			dependencies: [],
		};
	};
	SweetAlert.getDerivedStateFromProps = function (nextProps, nextState) {
		if (_resetting[nextState.id]) {
			return {};
		}
		var newState = {};
		var typeChanged =
			nextState.type !== SweetAlert.getTypeFromProps(nextProps);
		var dependenciesChanged =
			nextState.dependencies !== nextProps.dependencies;
		var timeoutChanged = nextState.prevTimeout !== nextProps.timeout;
		// if the type of the alert changed, or the dependencies changed, then update the state from props
		if (typeChanged || dependenciesChanged) {
			newState = __assign(
				__assign({}, newState),
				SweetAlert.getStateFromProps(nextProps)
			);
		}
		// if the state is changing, or the timeout changed, then reset the timeout timer
		if (JSON.stringify(newState) !== "{}" || timeoutChanged) {
			newState = __assign(
				__assign({}, newState),
				SweetAlert.handleTimeout(nextProps, nextState.timer)
			);
		}
		// return the partially updated state
		return __assign(
			__assign({}, newState),
			SweetAlert.handleAnimState(
				nextProps,
				nextState,
				nextState.hideTimeoutHandlerFunc
			)
		);
	};
	SweetAlert.prototype.componentDidUpdate = function (prevProps, prevState) {
		if (this.props.beforeUpdate) {
			this.props.beforeUpdate(prevProps, prevState);
		}
		if (!prevState.show && this.state.show) {
			this.focusInput();
		}
		this.props.afterUpdate(this.props, this.state);
	};
	SweetAlert.prototype.componentWillUnmount = function () {
		document.body.classList.remove("sweetalert-overflow-hidden");
		if (this.state.timer) {
			clearTimeout(this.state.timer);
		}
		if (this.props.beforeUnmount) {
			this.props.beforeUnmount();
		}
	};
	SweetAlert.prototype.hideTimeoutHandler = function (time) {
		var _this = this;
		setTimeout(function () {
			var closingAction = _this.state.closingAction;
			/**
			 * Removing the closing action (shouldn't trigger another animation timeout)
			 */
			_this.setState({ show: false, closingAction: null }, function () {
				// handle the action that was started before the closing animation was started
				switch (closingAction) {
					case "confirm":
						_this.onConfirm(false);
						break;
					case "cancel":
						_this.onCancel(false);
						break;
				}
			});
		}, time);
	};
	SweetAlert.handleTimeout = function (props, currentTimer) {
		if (currentTimer) {
			clearTimeout(currentTimer);
		}
		if (props.timeout && props.timeout > 0) {
			var timer = setTimeout(function () {
				return props.onConfirm();
			}, props.timeout);
			return { timer: timer, prevTimeout: props.timeout };
		}
		return null;
	};
	SweetAlert.isAnimation = function (animProp) {
		return animProp && typeof animProp !== "boolean";
	};
	SweetAlert.animationFromProp = function (animProp) {
		return animProp.name + " " + animProp.duration + "ms";
	};
	SweetAlert.handleAnimState = function (props, state, hideTimeout) {
		var userDefinedShow = typeof props.show === "boolean";
		var show =
			userDefinedShow && !state.closingAction ? props.show : state.show;
		var animation = "";
		if (show) {
			if (props.openAnim) {
				if (SweetAlert.isAnimation(props.openAnim)) {
					animation = SweetAlert.animationFromProp(props.openAnim);
				} else if (
					SweetAlert.isAnimation(SweetAlert.defaultProps.openAnim)
				) {
					animation = SweetAlert.animationFromProp(
						SweetAlert.defaultProps.openAnim
					);
				}
			}
		} else if (state.closingAction && props.closeAnim) {
			var animProp = void 0;
			if (SweetAlert.isAnimation(props.closeAnim)) {
				animProp = props.closeAnim;
			} else if (
				SweetAlert.isAnimation(SweetAlert.defaultProps.closeAnim)
			) {
				animProp = SweetAlert.defaultProps.closeAnim;
			}
			if (animProp) {
				animation = SweetAlert.animationFromProp(animProp);
				hideTimeout(animProp.duration);
				show = true;
			}
		}
		return { show: show, animation: animation };
	};
	SweetAlert.prototype.render = function () {
		if (!this.state.show) {
			return null;
		}
		return react_1.default.createElement(
			"div",
			null,
			this.getInjectedStyles(),
			react_1.default.createElement(
				Overlay_1.default,
				{
					show: !this.props.hideOverlay,
					onClick: this.onClickOutside,
					onKeyDown: this.onKeyDown,
				},
				react_1.default.createElement(
					"div",
					{
						style: this.getComposedStyle(),
						tabIndex: 0,
						onKeyDown: this.onKeyDown,
						onClick: this.onClickInside,
						className: "sweet-alert " + this.props.customClass,
					},
					this.getCloseButton(),
					this.getIcon(),
					react_1.default.createElement(
						Title_1.default,
						null,
						this.props.title
					),
					react_1.default.createElement(
						Content_1.default,
						null,
						this.getAlertContent()
					),
					this.getInputField(),
					this.getValidationMessage(),
					this.getButtons()
				)
			)
		);
	};
	SweetAlert.propTypes = prop_types_1.SWEET_ALERT_PROP_TYPES;
	SweetAlert.defaultProps = default_props_1.SWEET_ALERT_DEFAULT_PROPS;
	SweetAlert.SuccessIcon = SuccessIcon_1.default;
	SweetAlert.ErrorIcon = ErrorIcon_1.default;
	SweetAlert.InfoIcon = InfoIcon_1.default;
	SweetAlert.WarningIcon = WarningIcon_1.default;
	SweetAlert.CustomIcon = CustomIcon_1.default;
	SweetAlert.Buttons = Buttons_1.default;
	SweetAlert.Input = Input_1.default;
	SweetAlert.ValidationMessage = ValidationMessage_1.default;
	SweetAlert.Title = Title_1.default;
	SweetAlert.Content = Content_1.default;
	SweetAlert.getStateFromProps = function (props) {
		var type = SweetAlert.getTypeFromProps(props);
		return {
			type: type,
			focusConfirmBtn: props.focusConfirmBtn && type !== "input",
			focusCancelBtn: props.focusCancelBtn && type !== "input",
			dependencies: props.dependencies,
		};
	};
	SweetAlert.getTypeFromProps = function (props) {
		if (props.type) return props.type;
		if (props.secondary) return "secondary";
		if (props.info) return "info";
		if (props.success) return "success";
		if (props.warning) return "warning";
		if (props.danger || props.error) return "danger";
		if (props.input) return "input";
		if (props.custom) return "custom";
		return "default";
	};
	return SweetAlert;
})(react_1.default.Component);
SweetAlert$1.default = SweetAlert;

var __importDefault =
	(commonjsGlobal && commonjsGlobal.__importDefault) ||
	function (mod) {
		return mod && mod.__esModule ? mod : { default: mod };
	};
Object.defineProperty(dist, "__esModule", { value: true });
var SweetAlert_1 = __importDefault(SweetAlert$1);
var _default = (dist.default = SweetAlert_1.default);

var Modal = function Modal(props) {
	var _props$body;

	if (
		(props === null || props === void 0 ? void 0 : props.body) ==
			undefined ||
		(props === null || props === void 0 ? void 0 : props.button) ==
			undefined
	) {
		throw new Error("Modal needs button/body with it.");
	}

	var _useState = useState(false),
		_useState2 = _slicedToArray(_useState, 2),
		isOpen = _useState2[0],
		setOpen = _useState2[1];

	var _useState3 = useState(false),
		_useState4 = _slicedToArray(_useState3, 2),
		isLoading = _useState4[0];
	_useState4[1];

	var openModal = function openModal() {
		return setOpen(true);
	};

	var closeModal = function closeModal() {
		return setOpen(false);
	};

	var onConfirm = useCallback(function () {}, []);
	return createElement(
		"div",
		{
			className: "wprf-control wprf-modal",
			id: "wprf-modal-".concat(props.name),
		},
		createElement(
			GenericField,
			_extends$2(
				{
					type: "button",
				},
				props === null || props === void 0 ? void 0 : props.button,
				{
					onClick: openModal,
				}
			)
		),
		isOpen &&
			createElement(
				_default,
				{
					customClass: "wprf-modal-inner",
					style: {
						maxWidth: "900px",
						width: "100%",
						overflowY: "scroll",
						margin: "50px auto",
					},
					closeBtnStyle: {
						top: "5px",
						right: "5px",
						color: "#f78c8c",
						fontSize: "18px",
						border: "1px solid #f78c8c",
						borderRadius: "50%",
						width: "30px",
						height: "30px",
						display: "inline-flex",
						alignItems: "center",
						justifyContent: "center",
					},
					title: createElement(ModalHeader, {
						content:
							props === null || props === void 0
								? void 0
								: (_props$body = props.body) === null ||
								  _props$body === void 0
								? void 0
								: _props$body.header,
					}),
					onConfirm: onConfirm,
					showConfirm: false,
					showCloseButton: true,
					closeOnClickOutside: true,
					onCancel: closeModal,
					afterUpdate: function afterUpdate() {
						if (
							props !== null &&
							props !== void 0 &&
							props.cancel
						) {
							var _props$context$values;

							if (
								(_props$context$values =
									props.context.values) !== null &&
								_props$context$values !== void 0 &&
								_props$context$values[props.cancel]
							) {
								closeModal();
							}
						}
					},
				},
				createElement(
					ModalContent,
					_extends$2({}, props, {
						isLoading: isLoading,
						closeModal: closeModal,
						context: props.context,
						onConfirm: onConfirm,
					})
				)
			)
	);
};

var Test = function Test() {
	return createElement("div", null, createElement("h1", null, "Test"));
};

var AdvancedTemplate = function AdvancedTemplate(props) {
	var _field2, _field2$;

	var builderContext = useBuilderContext();
	var editor = useRef();

	var _useState = useState(EditorState.createEmpty()),
		_useState2 = _slicedToArray(_useState, 2),
		editorState = _useState2[0],
		setEditorState = _useState2[1];

	var _useState3 = useState([]),
		_useState4 = _slicedToArray(_useState3, 2),
		templateOptions = _useState4[0],
		setTemplateOptions = _useState4[1];

	var getField = function getField(arr, name) {
		if (arr.length) {
			var _arr$find;

			return (_arr$find = arr.find(function (field) {
				return field.name == name;
			})) === null || _arr$find === void 0
				? void 0
				: _arr$find.fields;
		}

		return [];
	};

	var field = getField(builderContext.tabs, "content_tab");
	field = getField(field, "content");
	field = getField(field, "notification-template");
	useEffect(function () {
		if (props.value) {
			var _htmlToDraft = htmlToDraft(props.value),
				contentBlocks = _htmlToDraft.contentBlocks,
				entityMap = _htmlToDraft.entityMap;

			var contentState = ContentState.createFromBlockArray(
				contentBlocks,
				entityMap
			);

			var _editorState = EditorState.createWithContent(contentState);

			setEditorState(_editorState);
		} // notification-template
		// console.log(builderContext.tabs[2].fields[0].fields);

		var field = getField(builderContext.tabs, "content_tab");
		field = getField(field, "content");
		field = getField(field, "notification-template");
		var templateIndex = props.parentIndex;
		templateIndex = [].concat(_toConsumableArray(templateIndex), [
			templateIndex.pop() - 1,
		]);
		field[0].menuOpen = true;
		builderContext.setFormField(templateIndex, field);
		var options = field
			.filter(function (f) {
				return f === null || f === void 0 ? void 0 : f.options;
			})
			.map(function (f) {
				return f === null || f === void 0 ? void 0 : f.options;
			})
			.flat();
		setTemplateOptions(options);
	}, []);
	useEffect(
		function () {
			var _field, _field$, _field$$options;

			if (
				((_field = field) === null || _field === void 0
					? void 0
					: (_field$ = _field[0]) === null || _field$ === void 0
					? void 0
					: (_field$$options = _field$.options) === null ||
					  _field$$options === void 0
					? void 0
					: _field$$options.length) > 0
			) {
				var options = field
					.filter(function (f) {
						return f === null || f === void 0 ? void 0 : f.options;
					})
					.map(function (f) {
						return f === null || f === void 0 ? void 0 : f.options;
					})
					.flat();
				setTemplateOptions(options);
			}
		},
		[
			(_field2 = field) === null || _field2 === void 0
				? void 0
				: (_field2$ = _field2[0]) === null || _field2$ === void 0
				? void 0
				: _field2$.options,
		]
	);
	useEffect(
		function () {
			var tempValue = draftToHtml(
				convertToRaw(editorState.getCurrentContent())
			);
			props.onChange({
				target: {
					type: "advanced-template",
					value: tempValue,
					name: props.name,
				},
			});
		},
		[editorState]
	);

	var handleBeforeInput = function handleBeforeInput(
		chars,
		editorState,
		eventTimeStamp
	) {
		var raw = convertToRaw(editorState.getCurrentContent());

		if (raw.blocks.length > 3) {
			return "handled";
		}
	};

	var handleReturn = function handleReturn(e, editorState) {
		var raw = convertToRaw(editorState.getCurrentContent());

		if (raw.blocks.length >= 3) {
			e.preventDefault();
			e.stopPropagation();
			return "handled";
		}
	};

	var handlePastedText = function handlePastedText(text, html, editorState) {
		var raw = convertToRaw(editorState.getCurrentContent());
		var editorLine = raw.blocks.length;
		var clipboardLine = text.split(/\r\n|\r|\n/).length;

		if (editorLine + clipboardLine > 3) {
			return true;
		}
	};

	var clicked = function clicked(value) {
		var contentState = editorState.getCurrentContent();
		var sectionState = editorState.getSelection();
		var nextContentState;
		var nextEditorState = EditorState.createEmpty();

		if (sectionState.isCollapsed()) {
			nextContentState = Modifier.insertText(
				contentState,
				sectionState,
				"{{".concat(value, "}}")
			);
		} else {
			nextContentState = Modifier.replaceText(
				contentState,
				sectionState,
				"{{".concat(value, "}}")
			);
		}

		nextEditorState = EditorState.push(
			editorState,
			nextContentState,
			"insert-fragment"
		);
		setEditorState(nextEditorState);
		setTimeout(function () {
			editor.current.editor.focus();
		}, 300);
	};

	useEffect(
		function () {
			var _builderContext$saved;

			if (
				!(
					(_builderContext$saved = builderContext.savedValues) !==
						null &&
					_builderContext$saved !== void 0 &&
					_builderContext$saved["advanced_template"]
				)
			) {
				var tmpl = applyFilters(
					"nx_adv_template_default",
					builderContext.values
				);

				var _htmlToDraft2 = htmlToDraft(
						tmpl
							.map(function (val) {
								return "<p>".concat(val, "</p>");
							})
							.join("\r\n")
					),
					contentBlocks = _htmlToDraft2.contentBlocks,
					entityMap = _htmlToDraft2.entityMap;

				var contentState = ContentState.createFromBlockArray(
					contentBlocks,
					entityMap
				);

				var _editorState2 = EditorState.createWithContent(contentState);

				setEditorState(_editorState2);
			}
		},
		[
			builderContext.values.themes,
			builderContext.values["notification-template"],
		]
	);
	return createElement(
		Fragment,
		null,
		createElement(Editor$2, {
			ref: editor,
			toolbar: toolbarOptions,
			editorState: editorState,
			toolbarClassName: "wprf-editor-toolbar",
			wrapperClassName: "wprf-editor wprf-control",
			editorClassName: "wprf-editor-main",
			onEditorStateChange: setEditorState,
			handleBeforeInput: handleBeforeInput,
			handleReturn: handleReturn,
			handlePastedText: handlePastedText,
		}),
		createElement(
			"div",
			{
				className: "template-options",
			},
			"Variables:",
			builderContext
				.eligibleOptions(templateOptions)
				.map(function (val, i) {
					if (
						val.value != "tag_custom" &&
						val.value != "select_a_tag"
					) {
						var tag = val.value.replace("tag_", "");
						return createElement(
							React.Fragment,
							{
								key: i,
							},
							createElement(
								"span",
								{
									className: "button button-secondary",
									"data-value": val.label,
									onClick: function onClick() {
										return clicked(tag);
									},
								},
								"{{".concat(tag, "}}")
							),
							" "
						);
					}
				})
		)
	);
};

var InnerContent = function InnerContent(_ref) {
	var fields = _ref.fields,
		parentIndex = _ref.parentIndex,
		context = _ref.context;

	var _useState = useState([]),
		_useState2 = _slicedToArray(_useState, 2),
		_fields = _useState2[0],
		setFields = _useState2[1];

	var _useState3 = useState([]),
		_useState4 = _slicedToArray(_useState3, 2),
		fieldViews = _useState4[0],
		setFieldViews = _useState4[1]; // Fields Sorting

	useEffect(function () {
		var newFields = sortingFields(fields);
		context.setFormField([parentIndex, "fields"], newFields);
		setFields(newFields);
	}, []);
	useEffect(
		function () {
			if (isArray(_fields) && _fields.length > 0) {
				var allFields = _fields.map(function (item, index) {
					var pIndex = [parentIndex, "fields", index];

					if (item.type === "section") {
						return createElement(
							GenericField,
							_extends$2(
								{
									key: "input-"
										.concat(item.name, "-")
										.concat(index),
								},
								item,
								{
									parentIndex: pIndex,
								}
							)
						);
					} else {
						return createElement(
							Field$1,
							_extends$2(
								{
									key: "input-"
										.concat(item.name, "-")
										.concat(index),
								},
								item,
								{
									parentIndex: pIndex,
								}
							)
						);
					}
				});

				setFieldViews(allFields);
			}
		},
		[_fields]
	);
	return createElement(Fragment, null, fieldViews);
};

var _excluded$1 = ["label"];

var Submit = function Submit(_ref) {
	var _ref$label = _ref.label,
		label = _ref$label === void 0 ? "Save Changes" : _ref$label;
	_objectWithoutProperties$1(_ref, _excluded$1);

	var context = useBuilderContext();
	var handleSubmit = useCallback(
		function (event) {
			var _context$submit;

			if (
				(_context$submit = context.submit) !== null &&
				_context$submit !== void 0 &&
				_context$submit.onSubmit
			) {
				context.submit.onSubmit(event, context);
				return;
			} // console.log('on submit wprf.');
		},
		[context]
	);
	return createElement(
		"div",
		{
			className: "wprf-submit wprf-control",
		},
		createElement(
			Button$2,
			{
				className: "wprf-submit-button",
				onClick: handleSubmit,
			},
			label
		)
	);
};

var SteppedButton = function SteppedButton(props) {
	var _useState = useState(undefined),
		_useState2 = _slicedToArray(_useState, 2),
		nextTab = _useState2[0],
		setNextTab = _useState2[1];

	var _useState3 = useState(undefined),
		_useState4 = _slicedToArray(_useState3, 2),
		prevTab = _useState4[0],
		setPrevTab = _useState4[1];

	var builderContext = useBuilderContext();
	useEffect(
		function () {
			var tabIds = props.tabs.map(function (tab) {
				return tab.id;
			});
			var currentTabIndex = tabIds.findIndex(function (tab) {
				return tab === builderContext.config.active;
			});

			if (currentTabIndex != -1) {
				setPrevTab(tabIds[currentTabIndex - 1]);
			}

			if (currentTabIndex <= tabIds.length) {
				setNextTab(tabIds[currentTabIndex + 1]);
			}
		},
		[builderContext.config.active, props.tabs]
	);
	return createElement(
		"div",
		{
			className: "wprf-stepped-button",
		},
		Object.keys(props.config.buttons).map(function (button, index) {
			var _props$config$buttons,
				_props$config$buttons2,
				_props$config$buttons3;

			return createElement(
				React.Fragment,
				{
					key: "button_".concat(button, "_").concat(index),
				},
				((button === "next" && nextTab !== undefined) ||
					(button === "prev" && prevTab !== undefined)) &&
					createElement(
						Button$2,
						{
							className: "wprf-btn wprf-step-btn-".concat(button),
							onClick: function onClick() {
								return builderContext.setActiveTab(
									button === "next" ? nextTab : prevTab
								);
							},
						},
						props.config.buttons[button]
					),
				nextTab == undefined &&
					((_props$config$buttons = props.config.buttons) === null ||
					_props$config$buttons === void 0
						? void 0
						: (_props$config$buttons2 =
								_props$config$buttons[button]) === null ||
						  _props$config$buttons2 === void 0
						? void 0
						: _props$config$buttons2.type) &&
					createElement(
						Field$1,
						(_props$config$buttons3 = props.config.buttons) ===
							null || _props$config$buttons3 === void 0
							? void 0
							: _props$config$buttons3[button]
					)
			);
		})
	);
};

var SteppedButton$1 = /*#__PURE__*/ React.memo(SteppedButton);

var _excluded = ["tabs", "active", "submit", "config"];

var Content = function Content(_ref) {
	var _builderContext$value,
		_builderContext$value2,
		_builderContext$value3,
		_config$step,
		_config$step2,
		_submit$show;

	var tabs = _ref.tabs,
		active = _ref.active,
		submit = _ref.submit,
		config = _ref.config,
		rest = _objectWithoutProperties$1(_ref, _excluded);

	if (tabs === undefined) {
		throw new Error("There are no #tabs args defined in props.");
	}

	var builderContext = useBuilderContext();

	if (!isArray(tabs)) {
		throw new Error("Not an array.");
	}

	var _useState = useState([]),
		_useState2 = _slicedToArray(_useState, 2),
		tabsFields = _useState2[0],
		setTabsFields = _useState2[1];

	useEffect(
		function () {
			var filteredTabs = tabs.filter(function (tab) {
				return isVisible(
					builderContext === null || builderContext === void 0
						? void 0
						: builderContext.values,
					tab
				);
			});
			setTabsFields(filteredTabs);
		},
		[
			tabs,
			builderContext === null || builderContext === void 0
				? void 0
				: (_builderContext$value = builderContext.values) === null ||
				  _builderContext$value === void 0
				? void 0
				: _builderContext$value.source,
		]
	);
	return createElement(
		"div",
		{
			className: classNames$1(
				"wprf-tab-content-wrapper",
				builderContext === null || builderContext === void 0
					? void 0
					: (_builderContext$value2 = builderContext.values) ===
							null || _builderContext$value2 === void 0
					? void 0
					: _builderContext$value2.source,
				builderContext === null || builderContext === void 0
					? void 0
					: (_builderContext$value3 = builderContext.values) ===
							null || _builderContext$value3 === void 0
					? void 0
					: _builderContext$value3.themes
			),
		},
		createElement(
			"div",
			{
				className: "wprf-tab-flex",
			},
			createElement(
				"div",
				{
					className: "wprf-tab-contents",
				},
				tabs.map(function (tab, index) {
					var _config$title;

					if (
						!isVisible(
							builderContext === null || builderContext === void 0
								? void 0
								: builderContext.values,
							tab
						)
					) {
						return "";
					}

					var componentClasses = classNames$1(
						"wprf-tab-content",
						"wprf-tab-".concat(
							tab === null || tab === void 0 ? void 0 : tab.id
						),
						{
							"wprf-active": active === tab.id,
						}
					);
					return createElement(
						"div",
						{
							id:
								tab === null || tab === void 0
									? void 0
									: tab.id,
							className: componentClasses,
							key:
								tab === null || tab === void 0
									? void 0
									: tab.id,
						},
						(tab === null || tab === void 0 ? void 0 : tab.label) &&
							((_config$title =
								config === null || config === void 0
									? void 0
									: config.title) !== null &&
							_config$title !== void 0
								? _config$title
								: true) &&
							createElement("h4", null, tab.label),
						createElement(InnerContent, {
							context: builderContext,
							fields:
								tab === null || tab === void 0
									? void 0
									: tab.fields,
							parentIndex: index,
						})
					);
				})
			),
			applyFilters("wprf_tab_content", "", rest)
		),
		(config === null || config === void 0
			? void 0
			: (_config$step = config.step) === null || _config$step === void 0
			? void 0
			: _config$step.show) &&
			createElement(SteppedButton$1, {
				tabs: tabsFields,
				config:
					(_config$step2 = config.step) !== null &&
					_config$step2 !== void 0
						? _config$step2
						: {},
			}),
		((_submit$show =
			submit === null || submit === void 0 ? void 0 : submit.show) !==
			null && _submit$show !== void 0
			? _submit$show
			: true) &&
			(submit !== null && submit !== void 0 && submit.rules
				? when(
						submit === null || submit === void 0
							? void 0
							: submit.rules,
						{
							config: config,
						}
				  )
				: true) &&
			createElement(Submit, submit)
	);
};

var Tab = function Tab(props) {
	// const builderContextState = useBuilder(props);
	var builderContext = useBuilderContext();

	var _useState = useState(props.config.active),
		_useState2 = _slicedToArray(_useState, 2),
		activeTab = _useState2[0],
		setActiveTab = _useState2[1];

	useEffect(
		function () {
			setActiveTab(builderContext.config.active);
		},
		[builderContext.config.active]
	);
	useEffect(
		function () {
			builderContext.setActiveTab(activeTab);
		},
		[activeTab]
	);
	return createElement(
		Fragment,
		null,
		createElement(Menu$1, {
			active: activeTab,
			setActive: function setActive(tabId) {
				return setActiveTab(tabId);
			},
			tabs: builderContext.tabs,
			config: props.config,
			context: builderContext,
		}),
		createElement(
			Content,
			_extends$2({}, props, {
				tabs: builderContext.tabs,
				active: activeTab,
				submit:
					props === null || props === void 0 ? void 0 : props.submit,
				config: props.config,
			})
		)
	);
};

registerStore("formbuilder", store);

var FormBuilder = function FormBuilder(props) {
	var _props$config;

	var componentClasses = classNames$1(
		"wp-react-form wprf-tabs-wrapper",
		props === null || props === void 0 ? void 0 : props.className,
		{
			"wprf-tab-menu-as-sidebar":
				(_props$config = props.config) === null ||
				_props$config === void 0
					? void 0
					: _props$config.sidebar,
		}
	);
	return createElement(
		"div",
		{
			className: componentClasses,
		},
		createElement(Tab, props)
	);
};

export {
	Action,
	AdvancedTemplate,
	BuilderConsumer,
	BuilderProvider,
	Button$1 as Button,
	ColorPicker$1 as ColorPicker,
	Column,
	Date$1 as Date,
	Editor$1 as Editor,
	Field$1 as Field,
	FormBuilder,
	GenericField,
	GenericInput,
	Group$2 as Group,
	Image,
	Input$4 as Input,
	Label,
	Media$1 as Media,
	Message,
	Modal,
	ObjectFilter,
	Radio,
	Repeater,
	Row,
	Section$1 as Section,
	Select$1 as Select,
	Slider,
	SweetAlert$2 as SweetAlert,
	Test,
	Textarea$1 as Textarea,
	Toggle,
	_extends$1 as _extends,
	builderReducer,
	executeChange,
	getIn,
	getSelectedValues,
	getStoreData,
	getTime,
	hitAAJX,
	isArray,
	isEmptyObj,
	isExists,
	isFunction,
	isNumber,
	isObject,
	isString,
	isVisible,
	merge$1 as merge,
	objectWithoutPropertiesLoose,
	processAjaxData,
	setIn,
	setStoreData,
	sortingFields,
	triggerDefaults,
	useBuilder,
	useBuilderContext,
	useDefaults,
	validFieldProps,
	when,
	withLabel,
	withProps,
	withState,
	wpFetch,
};
